%"struct.node::node_module" = type { i32, i32, i8*, i8*, void (%"class.v8::Object"*, %"class.v8::Value"*, i8*)*, void (%"class.v8::Object"*, %"class.v8::Value"*, %"class.v8::Context"*, i8*)*, i8*, i8*, %"struct.node::node_module"* }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.node::fs::FileHandle" = type { %"class.node::AsyncWrap", %"class.node::StreamBase", i32, i8, i8, i64, i64, i8, %"class.std::unique_ptr.309" }
%"class.node::AsyncWrap" = type { %"class.node::BaseObject", i32, double, double }
%"class.node::BaseObject" = type { %"class.node::MemoryRetainer", %"class.v8::Persistent.318", %"class.node::Environment"* }
%"class.node::MemoryRetainer" = type { i32 (...)** }
%"class.v8::Persistent.318" = type { %"class.v8::PersistentBase.319" }
%"class.v8::PersistentBase.319" = type { %"class.v8::Object"* }
%"class.node::StreamBase" = type { %"class.node::StreamResource", %"class.node::Environment"*, %"class.node::EmitToJSStreamListener" }
%"class.node::StreamResource" = type { i32 (...)**, %"class.node::StreamListener"*, i64, i64 }
%"class.node::StreamListener" = type { i32 (...)**, %"class.node::StreamResource"*, %"class.node::StreamListener"* }
%"class.node::EmitToJSStreamListener" = type { %"class.node::ReportWritesToJSStreamListener" }
%"class.node::ReportWritesToJSStreamListener" = type { %"class.node::StreamListener" }
%"class.std::unique_ptr.309" = type { %"class.std::__uniq_ptr_impl.310" }
%"class.std::__uniq_ptr_impl.310" = type { %"class.std::tuple.311" }
%"class.std::tuple.311" = type { %"struct.std::_Tuple_impl.312" }
%"struct.std::_Tuple_impl.312" = type { %"struct.std::_Head_base.317" }
%"struct.std::_Head_base.317" = type { %"class.node::fs::FileHandleReadWrap"* }
%"class.node::fs::FileHandleReadWrap" = type { %"class.node::ReqWrap", %"class.node::fs::FileHandle"*, %struct.uv_buf_t }
%"class.node::ReqWrap" = type { %"class.node::AsyncWrap", %"class.node::ListNode.320", void ()*, %struct.uv_fs_s }
%"class.node::ListNode.320" = type { %"class.node::ListNode.320"*, %"class.node::ListNode.320"* }
%struct.uv_fs_s = type { i8*, i32, [6 x i8*], i32, %struct.uv_loop_s*, void (%struct.uv_fs_s*)*, i64, i8*, i8*, %struct.uv_stat_t, i8*, i32, i32, i32, i32, %struct.uv_buf_t*, i64, i32, i32, double, double, %struct.uv__work, [4 x %struct.uv_buf_t] }
%struct.uv_loop_s = type { i8*, i32, [2 x i8*], %union.anon, i32, i64, i32, [2 x i8*], [2 x i8*], %struct.uv__io_s**, i32, i32, [2 x i8*], %union.pthread_mutex_t, %struct.uv_async_s, %union.pthread_rwlock_t, %struct.uv_handle_s*, [2 x i8*], [2 x i8*], [2 x i8*], [2 x i8*], [2 x i8*], void ()*, %struct.uv__io_s, i32, %struct.anon, i64, i64, [2 x i32], %struct.uv__io_s, %struct.uv_signal_s, i32, %struct.uv__io_s, i8*, i32 }
%union.anon = type { [2 x i8*] }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.uv_async_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.80, %struct.uv_handle_s*, i32, void (%struct.uv_async_s*)*, [2 x i8*], i32 }
%union.anon.80 = type { [4 x i8*] }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%struct.uv_handle_s = type { i8*, %struct.uv_loop_s*, i32, {}*, [2 x i8*], %union.anon.79, %struct.uv_handle_s*, i32 }
%union.anon.79 = type { [4 x i8*] }
%struct.anon = type { i8*, i32 }
%struct.uv_signal_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.81, %struct.uv_handle_s*, i32, void (%struct.uv_signal_s*, i32)*, i32, %struct.anon.82, i32, i32 }
%union.anon.81 = type { [4 x i8*] }
%struct.anon.82 = type { %struct.uv_signal_s*, %struct.uv_signal_s*, %struct.uv_signal_s*, i32 }
%struct.uv__io_s = type { void (%struct.uv_loop_s*, %struct.uv__io_s*, i32)*, [2 x i8*], [2 x i8*], i32, i32, i32 }
%struct.uv_stat_t = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.uv_timespec_t, %struct.uv_timespec_t, %struct.uv_timespec_t, %struct.uv_timespec_t }
%struct.uv_timespec_t = type { i64, i64 }
%struct.uv__work = type { void (%struct.uv__work*)*, void (%struct.uv__work*, i32)*, %struct.uv_loop_s*, [2 x i8*] }
%struct.uv_buf_t = type { i8*, i64 }
%"class.node::Environment" = type { %"class.std::unordered_multimap", %"class.std::unordered_map", %"class.std::unordered_map.23", %"class.std::unordered_map.37", %"class.v8::Isolate"*, %"class.node::IsolateData"*, %"class.node::tracing::AgentWriterHandle"*, %struct.uv_timer_s, %struct.uv_check_s, %struct.uv_idle_s, %struct.uv_prepare_s, %struct.uv_check_s, i8, %"class.node::Environment::AsyncHooks", %"class.node::Environment::ImmediateInfo", %"class.node::Environment::TickInfo", i64, i8, i8, i8, i8, i64, %"class.std::vector.196", %"class.std::shared_ptr.83", i32, i32, %"class.node::AliasedBuffer.188", i32, [4 x i8], %"class.node::AliasedBuffer.192", %"class.std::unique_ptr.201", %"class.std::unique_ptr.210", %"class.std::unordered_map.219", i8, i64, %"class.std::unordered_set.233", %"class.std::unique_ptr.253", %"class.node::ListHead", %"class.node::ListHead.284", %"class.std::__cxx11::list.286", i32, i32, double*, double*, i8*, i8, %"class.std::unique_ptr.291", [42 x i8], [6 x i8], %"class.node::AliasedBuffer", %"class.node::AliasedBuffer.300", %"class.std::vector.304", %"class.node::worker::Worker"*, %"class.std::__cxx11::list.370", %"class.std::__cxx11::list.370", %"class.std::vector.375", %"class.std::vector.381", %"class.std::unordered_set.395", i64, %"class.v8::Persistent.411", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.318", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.413", %"class.v8::Persistent.413", %"class.v8::Persistent.318", %"class.v8::Persistent.415", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.417", %"class.v8::Persistent.417", %"class.v8::Persistent.417", %"class.v8::Persistent.417", %"class.v8::Persistent.419", %"class.v8::Persistent.413", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.417", %"class.v8::Persistent.417", %"class.v8::Persistent.417", %"class.v8::Persistent", %"class.v8::Persistent.318", %"class.v8::Persistent.413", %"class.v8::Persistent.318", %"class.v8::Persistent.413", %"class.v8::Persistent.413", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.318", %"class.v8::Persistent", %"class.v8::Persistent.417", %"class.v8::Persistent", %"class.v8::Persistent.413", %"class.v8::Persistent.413", %"class.v8::Persistent", %"class.v8::Persistent.413", %"class.v8::Persistent.417", %"class.v8::Persistent.413", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.413", %"class.v8::Persistent", %"class.v8::Persistent", %"class.v8::Persistent.417" }
%"class.std::unordered_multimap" = type { %"class.std::_Hashtable" }
%"class.std::_Hashtable" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Hash_node_base" = type { %"struct.std::__detail::_Hash_node_base"* }
%"struct.std::__detail::_Prime_rehash_policy" = type { float, i64 }
%"class.std::unordered_map" = type { %"class.std::_Hashtable.4" }
%"class.std::_Hashtable.4" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unordered_map.23" = type { %"class.std::_Hashtable.24" }
%"class.std::_Hashtable.24" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unordered_map.37" = type { %"class.std::_Hashtable.38" }
%"class.std::_Hashtable.38" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.v8::Isolate" = type { i8 }
%"class.node::IsolateData" = type { %"class.std::unordered_map.57", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal", %"class.v8::Eternal.77", %"class.v8::Eternal.77", %"class.v8::Eternal.77", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Eternal.78", %"class.v8::Isolate"*, %struct.uv_loop_s*, i32*, %"class.node::MultiIsolatePlatform"*, %"class.std::shared_ptr" }
%"class.std::unordered_map.57" = type { %"class.std::_Hashtable.58" }
%"class.std::_Hashtable.58" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.v8::Eternal" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.v8::Eternal.77" = type { %"class.v8::Symbol"* }
%"class.v8::Symbol" = type { i8 }
%"class.v8::Eternal.78" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.node::MultiIsolatePlatform" = type { %"class.v8::Platform" }
%"class.v8::Platform" = type { i32 (...)** }
%"class.std::shared_ptr" = type { %"class.std::__shared_ptr" }
%"class.std::__shared_ptr" = type { %"class.node::PerIsolateOptions"*, %"class.std::__shared_count" }
%"class.node::PerIsolateOptions" = type <{ %"class.node::Options", %"class.std::shared_ptr.83", i8, [7 x i8] }>
%"class.node::Options" = type { i32 (...)** }
%"class.std::__shared_count" = type { %"class.std::_Sp_counted_base"* }
%"class.std::_Sp_counted_base" = type { i32 (...)**, i32, i32 }
%"class.node::tracing::AgentWriterHandle" = type <{ %"class.node::tracing::Agent"*, i32, [4 x i8] }>
%"class.node::tracing::Agent" = type { i64, %struct.uv_loop_s, i8, i32, %"class.std::unordered_map.96", %"class.std::unordered_map.110", %"class.std::unique_ptr", %"class.node::MutexBase", %"class.node::ConditionVariableBase", %struct.uv_async_s, %"class.std::set", %"class.std::__cxx11::list" }
%"class.std::unordered_map.96" = type { %"class.std::_Hashtable.97" }
%"class.std::_Hashtable.97" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unordered_map.110" = type { %"class.std::_Hashtable.111" }
%"class.std::_Hashtable.111" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unique_ptr" = type { %"class.std::__uniq_ptr_impl" }
%"class.std::__uniq_ptr_impl" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.125" }
%"struct.std::_Head_base.125" = type { %"class.node::tracing::TracingController"* }
%"class.node::tracing::TracingController" = type { %"class.v8::platform::tracing::TracingController.base", [4 x i8] }
%"class.v8::platform::tracing::TracingController.base" = type <{ %"class.v8::TracingController", %"class.std::unique_ptr.126", %"class.std::unique_ptr.135", %"class.std::unique_ptr.144", %"class.std::unordered_set", i32 }>
%"class.v8::TracingController" = type { i32 (...)** }
%"class.std::unique_ptr.126" = type { %"class.std::__uniq_ptr_impl.127" }
%"class.std::__uniq_ptr_impl.127" = type { %"class.std::tuple.128" }
%"class.std::tuple.128" = type { %"struct.std::_Tuple_impl.129" }
%"struct.std::_Tuple_impl.129" = type { %"struct.std::_Head_base.134" }
%"struct.std::_Head_base.134" = type { %"class.v8::platform::tracing::TraceBuffer"* }
%"class.v8::platform::tracing::TraceBuffer" = type { i32 (...)** }
%"class.std::unique_ptr.135" = type { %"class.std::__uniq_ptr_impl.136" }
%"class.std::__uniq_ptr_impl.136" = type { %"class.std::tuple.137" }
%"class.std::tuple.137" = type { %"struct.std::_Tuple_impl.138" }
%"struct.std::_Tuple_impl.138" = type { %"struct.std::_Head_base.143" }
%"struct.std::_Head_base.143" = type { %"class.v8::platform::tracing::TraceConfig"* }
%"class.v8::platform::tracing::TraceConfig" = type { i32, i8, %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon.92 }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon.92 = type { i64, [8 x i8] }
%"class.std::unique_ptr.144" = type { %"class.std::__uniq_ptr_impl.145" }
%"class.std::__uniq_ptr_impl.145" = type { %"class.std::tuple.146" }
%"class.std::tuple.146" = type { %"struct.std::_Tuple_impl.147" }
%"struct.std::_Tuple_impl.147" = type { %"struct.std::_Head_base.152" }
%"struct.std::_Head_base.152" = type { %"class.v8::base::Mutex"* }
%"class.v8::base::Mutex" = type opaque
%"class.std::unordered_set" = type { %"class.std::_Hashtable.153" }
%"class.std::_Hashtable.153" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.node::MutexBase" = type { %union.pthread_mutex_t }
%"class.node::ConditionVariableBase" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.173, %union.anon.175, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.173 = type { i64 }
%union.anon.175 = type { i64 }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<node::tracing::AsyncTraceWriter *, node::tracing::AsyncTraceWriter *, std::_Identity<node::tracing::AsyncTraceWriter *>, std::less<node::tracing::AsyncTraceWriter *>, std::allocator<node::tracing::AsyncTraceWriter *> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<node::tracing::AsyncTraceWriter *, node::tracing::AsyncTraceWriter *, std::_Identity<node::tracing::AsyncTraceWriter *>, std::less<node::tracing::AsyncTraceWriter *>, std::allocator<node::tracing::AsyncTraceWriter *> >::_Rb_tree_impl" = type { %"struct.std::_Rb_tree_key_compare", %"struct.std::_Rb_tree_header" }
%"struct.std::_Rb_tree_key_compare" = type { %"struct.std::less" }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_header" = type { %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<std::unique_ptr<v8::platform::tracing::TraceObject, std::default_delete<v8::platform::tracing::TraceObject> >, std::allocator<std::unique_ptr<v8::platform::tracing::TraceObject, std::default_delete<v8::platform::tracing::TraceObject> > > >::_List_impl" }
%"struct.std::__cxx11::_List_base<std::unique_ptr<v8::platform::tracing::TraceObject, std::default_delete<v8::platform::tracing::TraceObject> >, std::allocator<std::unique_ptr<v8::platform::tracing::TraceObject, std::default_delete<v8::platform::tracing::TraceObject> > > >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"* }
%struct.uv_timer_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.184, %struct.uv_handle_s*, i32, void (%struct.uv_timer_s*)*, [3 x i8*], i64, i64, i64 }
%union.anon.184 = type { [4 x i8*] }
%struct.uv_idle_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.186, %struct.uv_handle_s*, i32, void (%struct.uv_idle_s*)*, [2 x i8*] }
%union.anon.186 = type { [4 x i8*] }
%struct.uv_prepare_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.187, %struct.uv_handle_s*, i32, void (%struct.uv_prepare_s*)*, [2 x i8*] }
%union.anon.187 = type { [4 x i8*] }
%struct.uv_check_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.185, %struct.uv_handle_s*, i32, void (%struct.uv_check_s*)*, [2 x i8*] }
%union.anon.185 = type { [4 x i8*] }
%"class.node::Environment::AsyncHooks" = type { [41 x %"class.v8::Eternal.78"], %"class.node::Environment"*, %"class.node::AliasedBuffer", %"class.node::AliasedBuffer.188", %"class.node::AliasedBuffer" }
%"class.node::Environment::ImmediateInfo" = type { %"class.node::AliasedBuffer.188" }
%"class.node::Environment::TickInfo" = type { %"class.node::AliasedBuffer.192" }
%"class.std::vector.196" = type { %"struct.std::_Vector_base.197" }
%"struct.std::_Vector_base.197" = type { %"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double> >::_Vector_impl" = type { double*, double*, double* }
%"class.std::shared_ptr.83" = type { %"class.std::__shared_ptr.84" }
%"class.std::__shared_ptr.84" = type { %"class.node::EnvironmentOptions"*, %"class.std::__shared_count" }
%"class.node::EnvironmentOptions" = type { %"class.node::Options", %"class.std::shared_ptr.86", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__cxx11::basic_string", i8, i8, i8, i8, %"class.std::__cxx11::basic_string", i8, i8, %"class.std::__cxx11::basic_string", i8, i8, %"class.std::vector", %"class.std::vector" }
%"class.std::shared_ptr.86" = type { %"class.std::__shared_ptr.87" }
%"class.std::__shared_ptr.87" = type { %"class.node::DebugOptions"*, %"class.std::__shared_count" }
%"class.node::DebugOptions" = type { %"class.node::Options", i8, i8, i8, i8, [4 x i8], %"struct.node::HostPort" }
%"struct.node::HostPort" = type <{ %"class.std::__cxx11::basic_string", i32, [4 x i8] }>
%"class.node::AliasedBuffer.188" = type <{ %"class.v8::Isolate"*, i64, i64, i32*, %"class.v8::Global.189", i8, [7 x i8] }>
%"class.v8::Global.189" = type { %"class.v8::PersistentBase.190" }
%"class.v8::PersistentBase.190" = type { %"class.v8::Uint32Array"* }
%"class.v8::Uint32Array" = type { i8 }
%"class.node::AliasedBuffer.192" = type <{ %"class.v8::Isolate"*, i64, i64, i8*, %"class.v8::Global.193", i8, [7 x i8] }>
%"class.v8::Global.193" = type { %"class.v8::PersistentBase.194" }
%"class.v8::PersistentBase.194" = type { %"class.v8::Uint8Array"* }
%"class.v8::Uint8Array" = type { i8 }
%"class.std::unique_ptr.201" = type { %"class.std::__uniq_ptr_impl.202" }
%"class.std::__uniq_ptr_impl.202" = type { %"class.std::tuple.203" }
%"class.std::tuple.203" = type { %"struct.std::_Tuple_impl.204" }
%"struct.std::_Tuple_impl.204" = type { %"struct.std::_Head_base.209" }
%"struct.std::_Head_base.209" = type { %"class.node::Environment::TrackingTraceStateObserver"* }
%"class.node::Environment::TrackingTraceStateObserver" = type { %"class.v8::TracingController::TraceStateObserver", %"class.node::Environment"* }
%"class.v8::TracingController::TraceStateObserver" = type { i32 (...)** }
%"class.std::unique_ptr.210" = type { %"class.std::__uniq_ptr_impl.211" }
%"class.std::__uniq_ptr_impl.211" = type { %"class.std::tuple.212" }
%"class.std::tuple.212" = type { %"struct.std::_Tuple_impl.213" }
%"struct.std::_Tuple_impl.213" = type { %"struct.std::_Head_base.218" }
%"struct.std::_Head_base.218" = type { %"class.node::performance::performance_state"* }
%"class.node::performance::performance_state" = type { %"class.node::AliasedBuffer.192", %"class.node::AliasedBuffer", %"class.node::AliasedBuffer.188" }
%"class.std::unordered_map.219" = type { %"class.std::_Hashtable.220" }
%"class.std::_Hashtable.220" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unordered_set.233" = type { %"class.std::_Hashtable.234" }
%"class.std::_Hashtable.234" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unique_ptr.253" = type { %"class.std::__uniq_ptr_impl.254" }
%"class.std::__uniq_ptr_impl.254" = type { %"class.std::tuple.255" }
%"class.std::tuple.255" = type { %"struct.std::_Tuple_impl.256" }
%"struct.std::_Tuple_impl.256" = type { %"struct.std::_Head_base.261" }
%"struct.std::_Head_base.261" = type { %"class.node::inspector::Agent"* }
%"class.node::inspector::Agent" = type { %"class.node::Environment"*, %"class.std::shared_ptr.262", %"class.std::unique_ptr.265", %"class.std::unique_ptr.274", %"class.std::__cxx11::basic_string", %"class.std::shared_ptr.86", i8, i8, %"class.v8::Persistent", %"class.v8::Persistent" }
%"class.std::shared_ptr.262" = type { %"class.std::__shared_ptr.263" }
%"class.std::__shared_ptr.263" = type { %"class.node::inspector::NodeInspectorClient"*, %"class.std::__shared_count" }
%"class.node::inspector::NodeInspectorClient" = type opaque
%"class.std::unique_ptr.265" = type { %"class.std::__uniq_ptr_impl.266" }
%"class.std::__uniq_ptr_impl.266" = type { %"class.std::tuple.267" }
%"class.std::tuple.267" = type { %"struct.std::_Tuple_impl.268" }
%"struct.std::_Tuple_impl.268" = type { %"struct.std::_Head_base.273" }
%"struct.std::_Head_base.273" = type { %"class.node::inspector::InspectorIo"* }
%"class.node::inspector::InspectorIo" = type opaque
%"class.std::unique_ptr.274" = type { %"class.std::__uniq_ptr_impl.275" }
%"class.std::__uniq_ptr_impl.275" = type { %"class.std::tuple.276" }
%"class.std::tuple.276" = type { %"struct.std::_Tuple_impl.277" }
%"struct.std::_Tuple_impl.277" = type { %"struct.std::_Head_base.282" }
%"struct.std::_Head_base.282" = type { %"class.node::inspector::ParentInspectorHandle"* }
%"class.node::inspector::ParentInspectorHandle" = type opaque
%"class.node::ListHead" = type { %"class.node::ListNode" }
%"class.node::ListNode" = type { %"class.node::ListNode"*, %"class.node::ListNode"* }
%"class.node::ListHead.284" = type { %"class.node::ListNode.285" }
%"class.node::ListNode.285" = type { %"class.node::ListNode.285"*, %"class.node::ListNode.285"* }
%"class.std::__cxx11::list.286" = type { %"class.std::__cxx11::_List_base.287" }
%"class.std::__cxx11::_List_base.287" = type { %"struct.std::__cxx11::_List_base<node::Environment::HandleCleanup, std::allocator<node::Environment::HandleCleanup> >::_List_impl" }
%"struct.std::__cxx11::_List_base<node::Environment::HandleCleanup, std::allocator<node::Environment::HandleCleanup> >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"class.std::unique_ptr.291" = type { %"class.std::__uniq_ptr_impl.292" }
%"class.std::__uniq_ptr_impl.292" = type { %"class.std::tuple.293" }
%"class.std::tuple.293" = type { %"struct.std::_Tuple_impl.294" }
%"struct.std::_Tuple_impl.294" = type { %"struct.std::_Head_base.299" }
%"struct.std::_Head_base.299" = type { %"class.node::http2::Http2State"* }
%"class.node::http2::Http2State" = type { %"class.node::AliasedBuffer.192", %"class.node::AliasedBuffer", %"class.node::AliasedBuffer", %"class.node::AliasedBuffer", %"class.node::AliasedBuffer", %"class.node::AliasedBuffer.188", %"class.node::AliasedBuffer.188", %"class.node::AliasedBuffer.188" }
%"class.node::AliasedBuffer" = type <{ %"class.v8::Isolate"*, i64, i64, double*, %"class.v8::Global", i8, [7 x i8] }>
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Float64Array"* }
%"class.v8::Float64Array" = type { i8 }
%"class.node::AliasedBuffer.300" = type <{ %"class.v8::Isolate"*, i64, i64, i64*, %"class.v8::Global.301", i8, [7 x i8] }>
%"class.v8::Global.301" = type { %"class.v8::PersistentBase.302" }
%"class.v8::PersistentBase.302" = type { %"class.v8::BigUint64Array"* }
%"class.v8::BigUint64Array" = type { i8 }
%"class.std::vector.304" = type { %"struct.std::_Vector_base.305" }
%"struct.std::_Vector_base.305" = type { %"struct.std::_Vector_base<std::unique_ptr<node::fs::FileHandleReadWrap, std::default_delete<node::fs::FileHandleReadWrap> >, std::allocator<std::unique_ptr<node::fs::FileHandleReadWrap, std::default_delete<node::fs::FileHandleReadWrap> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<node::fs::FileHandleReadWrap, std::default_delete<node::fs::FileHandleReadWrap> >, std::allocator<std::unique_ptr<node::fs::FileHandleReadWrap, std::default_delete<node::fs::FileHandleReadWrap> > > >::_Vector_impl" = type { %"class.std::unique_ptr.309"*, %"class.std::unique_ptr.309"*, %"class.std::unique_ptr.309"* }
%"class.node::worker::Worker" = type { %"class.node::AsyncWrap", %struct.uv_loop_s, %"class.std::unique_ptr.321", %"class.std::unique_ptr.328", %"class.std::__cxx11::basic_string", %"class.v8::Isolate"*, %"class.std::unique_ptr.336", i64, %"class.node::MutexBase", %"class.std::unique_ptr.344", i8, %"class.node::MutexBase", i8, i8, i32, i64, %"class.std::unique_ptr.353", %"class.node::worker::MessagePort"*, %"class.node::worker::MessagePort"* }
%"class.std::unique_ptr.321" = type { %"class.std::__uniq_ptr_impl.322" }
%"class.std::__uniq_ptr_impl.322" = type { %"class.std::tuple.323" }
%"class.std::tuple.323" = type { %"struct.std::_Tuple_impl.324" }
%"struct.std::_Tuple_impl.324" = type { %"struct.std::_Head_base.327" }
%"struct.std::_Head_base.327" = type { %"class.node::IsolateData"* }
%"class.std::unique_ptr.328" = type { %"class.std::__uniq_ptr_impl.329" }
%"class.std::__uniq_ptr_impl.329" = type { %"class.std::tuple.330" }
%"class.std::tuple.330" = type { %"struct.std::_Tuple_impl.331" }
%"struct.std::_Tuple_impl.331" = type { %"struct.std::_Head_base.335" }
%"struct.std::_Head_base.335" = type { %"class.node::Environment"* }
%"class.std::unique_ptr.336" = type { %"class.std::__uniq_ptr_impl.337" }
%"class.std::__uniq_ptr_impl.337" = type { %"class.std::tuple.338" }
%"class.std::tuple.338" = type { %"struct.std::_Tuple_impl.339" }
%"struct.std::_Tuple_impl.339" = type { %"struct.std::_Head_base.343" }
%"struct.std::_Head_base.343" = type { %"class.node::ArrayBufferAllocator"* }
%"class.node::ArrayBufferAllocator" = type <{ %"class.v8::ArrayBuffer::Allocator", i32, [4 x i8] }>
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::unique_ptr.344" = type { %"class.std::__uniq_ptr_impl.345" }
%"class.std::__uniq_ptr_impl.345" = type { %"class.std::tuple.346" }
%"class.std::tuple.346" = type { %"struct.std::_Tuple_impl.347" }
%"struct.std::_Tuple_impl.347" = type { %"struct.std::_Head_base.352" }
%"struct.std::_Head_base.352" = type { %struct.uv_async_s* }
%"class.std::unique_ptr.353" = type { %"class.std::__uniq_ptr_impl.354" }
%"class.std::__uniq_ptr_impl.354" = type { %"class.std::tuple.355" }
%"class.std::tuple.355" = type { %"struct.std::_Tuple_impl.356" }
%"struct.std::_Tuple_impl.356" = type { %"struct.std::_Head_base.361" }
%"struct.std::_Head_base.361" = type { %"class.node::worker::MessagePortData"* }
%"class.node::worker::MessagePortData" = type { %"class.node::MemoryRetainer", %"class.node::MutexBase", i8, %"class.std::__cxx11::list.362", %"class.node::worker::MessagePort"*, %"class.std::shared_ptr.367", %"class.node::worker::MessagePortData"* }
%"class.std::__cxx11::list.362" = type { %"class.std::__cxx11::_List_base.363" }
%"class.std::__cxx11::_List_base.363" = type { %"struct.std::__cxx11::_List_base<node::worker::Message, std::allocator<node::worker::Message> >::_List_impl" }
%"struct.std::__cxx11::_List_base<node::worker::Message, std::allocator<node::worker::Message> >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"class.std::shared_ptr.367" = type { %"class.std::__shared_ptr.368" }
%"class.std::__shared_ptr.368" = type { %"class.node::MutexBase"*, %"class.std::__shared_count" }
%"class.node::worker::MessagePort" = type <{ %"class.node::HandleWrap", %"class.std::unique_ptr.353", i8, [7 x i8] }>
%"class.node::HandleWrap" = type { %"class.node::AsyncWrap", %"class.node::ListNode", i32, %struct.uv_handle_s* }
%"class.std::__cxx11::list.370" = type { %"class.std::__cxx11::_List_base.371" }
%"class.std::__cxx11::_List_base.371" = type { %"struct.std::__cxx11::_List_base<node::Environment::ExitCallback, std::allocator<node::Environment::ExitCallback> >::_List_impl" }
%"struct.std::__cxx11::_List_base<node::Environment::ExitCallback, std::allocator<node::Environment::ExitCallback> >::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"class.std::vector.375" = type { %"struct.std::_Vector_base.376" }
%"struct.std::_Vector_base.376" = type { %"struct.std::_Vector_base<node::Environment::PromiseHookCallback, std::allocator<node::Environment::PromiseHookCallback> >::_Vector_impl" }
%"struct.std::_Vector_base<node::Environment::PromiseHookCallback, std::allocator<node::Environment::PromiseHookCallback> >::_Vector_impl" = type { %"struct.node::Environment::PromiseHookCallback"*, %"struct.node::Environment::PromiseHookCallback"*, %"struct.node::Environment::PromiseHookCallback"* }
%"struct.node::Environment::PromiseHookCallback" = type { void (i32, %"class.v8::Promise"*, %"class.v8::Value"*, i8*)*, i8*, i64 }
%"class.v8::Promise" = type { i8 }
%"class.std::vector.381" = type { %"struct.std::_Vector_base.382" }
%"struct.std::_Vector_base.382" = type { %"struct.std::_Vector_base<node::Environment::NativeImmediateCallback, std::allocator<node::Environment::NativeImmediateCallback> >::_Vector_impl" }
%"struct.std::_Vector_base<node::Environment::NativeImmediateCallback, std::allocator<node::Environment::NativeImmediateCallback> >::_Vector_impl" = type { %"struct.node::Environment::NativeImmediateCallback"*, %"struct.node::Environment::NativeImmediateCallback"*, %"struct.node::Environment::NativeImmediateCallback"* }
%"struct.node::Environment::NativeImmediateCallback" = type <{ void (%"class.node::Environment"*, i8*)*, i8*, %"class.std::unique_ptr.386", i8, [7 x i8] }>
%"class.std::unique_ptr.386" = type { %"class.std::__uniq_ptr_impl.387" }
%"class.std::__uniq_ptr_impl.387" = type { %"class.std::tuple.388" }
%"class.std::tuple.388" = type { %"struct.std::_Tuple_impl.389" }
%"struct.std::_Tuple_impl.389" = type { %"struct.std::_Head_base.394" }
%"struct.std::_Head_base.394" = type { %"class.v8::Persistent.318"* }
%"class.std::unordered_set.395" = type { %"class.std::_Hashtable.396" }
%"class.std::_Hashtable.396" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.v8::Persistent.411" = type { %"class.v8::PersistentBase.412" }
%"class.v8::PersistentBase.412" = type { %"class.v8::External"* }
%"class.v8::External" = type { i8 }
%"class.v8::Persistent.415" = type { %"class.v8::PersistentBase.416" }
%"class.v8::PersistentBase.416" = type { %"class.v8::Context"* }
%"class.v8::Persistent.419" = type { %"class.v8::PersistentBase.420" }
%"class.v8::PersistentBase.420" = type { %"class.v8::Symbol"* }
%"class.v8::Persistent.413" = type { %"class.v8::PersistentBase.414" }
%"class.v8::PersistentBase.414" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase.283" }
%"class.v8::PersistentBase.283" = type { %"class.v8::Function"* }
%"class.v8::Function" = type { i8 }
%"class.v8::Persistent.417" = type { %"class.v8::PersistentBase.418" }
%"class.v8::PersistentBase.418" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.node::fs::FSReqAfterScope" = type { %"class.node::fs::FSReqBase"*, %struct.uv_fs_s*, %"class.v8::HandleScope", %"class.v8::Context::Scope" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Object"**, %"class.v8::internal::Object"** }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::internal::Object" = type opaque
%"class.v8::Context::Scope" = type { %"class.v8::Local.423" }
%"class.v8::Local.423" = type { %"class.v8::Context"* }
%"class.node::fs::FSReqBase" = type { %"class.node::ReqWrap", %"class.std::unique_ptr.461", i32, i8, i8*, i8, %"class.node::MaybeStackBuffer" }
%"class.std::unique_ptr.461" = type { %"class.std::__uniq_ptr_impl.462" }
%"class.std::__uniq_ptr_impl.462" = type { %"class.std::tuple.463" }
%"class.std::tuple.463" = type { %"struct.std::_Tuple_impl.464" }
%"struct.std::_Tuple_impl.464" = type { %"struct.std::_Head_base.469" }
%"struct.std::_Head_base.469" = type { %"class.node::fs::FSContinuationData"* }
%"class.node::fs::FSContinuationData" = type { %"class.node::MemoryRetainer", %struct.uv_fs_s*, i32, %"class.std::vector", void (%struct.uv_fs_s*)* }
%"class.node::MaybeStackBuffer" = type { i64, i64, i8*, [64 x i8] }
%"class.node::ShutdownWrap" = type { %"class.node::StreamReq" }
%"class.node::StreamReq" = type { i32 (...)**, %"class.node::StreamBase"* }
%"class.node::WriteWrap" = type { %"class.node::StreamReq", i8*, i64 }
%"class.v8::WeakCallbackInfo.485" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Name" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ %"class.v8::internal::Object"**, %"class.v8::internal::Object"**, i32, [4 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.node::fs::FileHandle::CloseReq" = type { %"class.node::ReqWrap", %"class.v8::Persistent.429", %"class.v8::Persistent.431" }
%"class.v8::Persistent.429" = type { %"class.v8::PersistentBase.430" }
%"class.v8::PersistentBase.430" = type { %"class.v8::Promise"* }
%"class.v8::Persistent.431" = type { %"class.v8::PersistentBase.432" }
%"class.v8::PersistentBase.432" = type { %"class.v8::Value"* }
%"class.node::InternalCallbackScope" = type <{ %"class.node::Environment"*, %"struct.node::async_context", %"class.v8::Local.421", %"class.node::Environment::AsyncCallbackScope", i8, i8, i8, [5 x i8] }>
%"struct.node::async_context" = type { double, double }
%"class.v8::Local.421" = type { %"class.v8::Object"* }
%"class.node::Environment::AsyncCallbackScope" = type { %"class.node::Environment"* }
%"class.v8::Promise::Resolver" = type { i8 }
%"class.v8::EscapableHandleScope" = type { %"class.v8::HandleScope", %"class.v8::internal::Object"** }
%"class.node::MemoryTracker" = type { %"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, %"class.std::stack", %"class.std::unordered_map.439" }
%"class.v8::EmbedderGraph" = type { i32 (...)** }
%"class.std::stack" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<node::MemoryRetainerNode *, std::allocator<node::MemoryRetainerNode *> >::_Deque_impl" }
%"struct.std::_Deque_base<node::MemoryRetainerNode *, std::allocator<node::MemoryRetainerNode *> >::_Deque_impl" = type { %"class.node::MemoryRetainerNode"***, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"class.node::MemoryRetainerNode" = type { %"class.v8::EmbedderGraph::Node", %"class.node::MemoryRetainer"*, %"class.v8::EmbedderGraph::Node"*, i8, %"class.std::__cxx11::basic_string", i64 }
%"class.v8::EmbedderGraph::Node" = type { i32 (...)** }
%"struct.std::_Deque_iterator" = type { %"class.node::MemoryRetainerNode"**, %"class.node::MemoryRetainerNode"**, %"class.node::MemoryRetainerNode"**, %"class.node::MemoryRetainerNode"*** }
%"class.std::unordered_map.439" = type { %"class.std::_Hashtable.440" }
%"class.std::_Hashtable.440" = type { %"struct.std::__detail::_Hash_node_base"**, i64, %"struct.std::__detail::_Hash_node_base", i64, %"struct.std::__detail::_Prime_rehash_policy", %"struct.std::__detail::_Hash_node_base"* }
%"class.std::unique_ptr.522" = type { %"class.std::__uniq_ptr_impl.523" }
%"class.std::__uniq_ptr_impl.523" = type { %"class.std::tuple.524" }
%"class.std::tuple.524" = type { %"struct.std::_Tuple_impl.525" }
%"struct.std::_Tuple_impl.525" = type { %"struct.std::_Head_base.530" }
%"struct.std::_Head_base.530" = type { %"class.v8::EmbedderGraph::Node"* }
%"struct.std::__detail::_Hash_node" = type { %"struct.std::__detail::_Hash_node_value_base" }
%"struct.std::__detail::_Hash_node_value_base" = type { %"struct.std::__detail::_Hash_node_base", %"struct.__gnu_cxx::__aligned_buffer" }
%"struct.__gnu_cxx::__aligned_buffer" = type { %"union.std::aligned_storage<16, 8>::type" }
%"union.std::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"class.node::fs::FSReqCallback" = type { %"class.node::fs::FSReqBase" }
%"class.v8::Local.380" = type { %"class.v8::Value"* }
%struct.uv_dirent_s = type { i8*, i32 }
%"class.v8::Array" = type { i8 }
%"class.std::unique_ptr.549" = type { %"class.std::__uniq_ptr_impl.550" }
%"class.std::__uniq_ptr_impl.550" = type { %"class.std::tuple.551" }
%"class.std::tuple.551" = type { %"struct.std::_Tuple_impl.552" }
%"struct.std::_Tuple_impl.552" = type { %"struct.std::_Head_base.557" }
%"struct.std::_Head_base.557" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.node::BufferValue" = type { %"class.node::MaybeStackBuffer.473" }
%"class.node::MaybeStackBuffer.473" = type { i64, i64, i8*, [1024 x i8] }
%"class.node::fs::FSReqWrapSync" = type { %struct.uv_fs_s }
%"class.node::fs::FSReqPromise.547" = type { %"class.node::fs::FSReqBase", i8, [7 x i8], %"class.node::AliasedBuffer" }
%"class.v8::platform::tracing::TracingController" = type <{ %"class.v8::TracingController", %"class.std::unique_ptr.126", %"class.std::unique_ptr.135", %"class.std::unique_ptr.144", %"class.std::unordered_set", i32, [4 x i8] }>
%"class.node::fs::FSReqPromise" = type { %"class.node::fs::FSReqBase", i8, [7 x i8], %"class.node::AliasedBuffer.300" }
%"class.v8::Signature" = type { i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Data" = type { i8 }
%"class.node::stringsearch::Vector" = type <{ i8*, i64, i8, [7 x i8] }>
%"class.node::stringsearch::StringSearch" = type { %"class.node::stringsearch::StringSearchBase", %"class.node::stringsearch::Vector", { i64, i64 }, i64 }
%"class.node::stringsearch::StringSearchBase" = type { [256 x i32], [251 x i32], [251 x i32] }
%"class.node::Utf8Value" = type { %"class.node::MaybeStackBuffer.473" }
%"class.node::MaybeStackBuffer.575" = type { i64, i64, %struct.uv_buf_t*, [1024 x %struct.uv_buf_t] }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase" }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase" }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Number" = type { i8 }
%struct.uv_stream_s = type { i8*, %struct.uv_loop_s*, i32, void (%struct.uv_handle_s*)*, [2 x i8*], %union.anon.482, %struct.uv_handle_s*, i32, i64, void (%struct.uv_handle_s*, i64, %struct.uv_buf_t*)*, void (%struct.uv_stream_s*, i64, %struct.uv_buf_t*)*, %struct.uv_connect_s*, %struct.uv_shutdown_s*, %struct.uv__io_s, [2 x i8*], [2 x i8*], void (%struct.uv_stream_s*, i32)*, i32, i32, i8* }
%union.anon.482 = type { [4 x i8*] }
%struct.uv_connect_s = type { i8*, i32, [6 x i8*], void (%struct.uv_connect_s*, i32)*, %struct.uv_stream_s*, [2 x i8*] }
%struct.uv_shutdown_s = type { i8*, i32, [6 x i8*], %struct.uv_stream_s*, void (%struct.uv_shutdown_s*, i32)* }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, %"class.node::BaseObject"*, {}**, [2 x i8*] }
%class.anon.510 = type { i8 }
%"struct.std::__detail::_Map_base.449" = type { i8 }
%"struct.std::pair" = type { %"class.node::MemoryRetainer"*, %"class.node::MemoryRetainerNode"* }
%"class.node::SimpleShutdownWrap" = type { %"class.node::ShutdownWrap", %"class.node::ReqWrap" }
%"class.v8::ArrayBuffer" = type { i8 }
%"class.std::_Sp_counted_deleter" = type { %"class.std::_Sp_counted_base", %"class.std::_Sp_counted_deleter<nullptr_t, (lambda at ../src/node_file.cc:862:46), std::allocator<void>, __gnu_cxx::_S_atomic>::_Impl" }
%"class.std::_Sp_counted_deleter<nullptr_t, (lambda at ../src/node_file.cc:862:46), std::allocator<void>, __gnu_cxx::_S_atomic>::_Impl" = type { %"struct.std::_Sp_ebo_helper", i8* }
%"struct.std::_Sp_ebo_helper" = type { %class.anon.566 }
%class.anon.566 = type { i32, %struct.uv_loop_s* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.node::SimpleWriteWrap" = type { %"class.node::WriteWrap", %"class.node::AsyncWrap" }

; define i32 @_ZN4node2fs10FileHandle5CloseEv (%"class.node::fs::FileHandle"*) {
define i32 @_ZN4node2fs10FileHandle5CloseEv (%"class.node::fs::FileHandle"*) {

fake:
  %fake75 = alloca %"class.v8::Persistent.318"
  %fake48 = alloca %"class.node::Environment"
  br label %new83

new83:
  %new84 = bitcast %"class.v8::Persistent.318"* %fake75 to i8*
  call void @free(i8* %new84)
  %new86 = getelementptr inbounds %"class.node::Environment", %"class.node::Environment"* %fake48, i64 0, i32 14, i32 0, i32 3
;  store i32* null, i32 ** %new86
  %new87 = load i32*, i32** %new86
  %new88 = load i32, i32* %new87
  ret i32 %new88
  
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) 
declare void @fun(%"class.v8::internal::Object"**) 
declare void @llvm.lifetime.end.p0i8(i64, i8*) 