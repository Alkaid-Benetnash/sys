%threeWayMutRecursiveA_2 = alloca i32, align 4 
%threeWayMutRecursiveA_3 = alloca i32, align 4 
store  i32 %threeWayMutRecursiveA_0, i32* %threeWayMutRecursiveA_3, align 4 
%threeWayMutRecursiveA_4 = load  i32, i32* %threeWayMutRecursiveA_3, align 4 
%threeWayMutRecursiveA_5 = srem i32 %threeWayMutRecursiveA_4, 5 
%threeWayMutRecursiveA_6 = icmp eq i32 %threeWayMutRecursiveA_5, 0 
path-eq %threeWayMutRecursiveA_6 = bitcast i1 0 to i1 
%threeWayMutRecursiveA_10 = load  i32, i32* %threeWayMutRecursiveA_3, align 4 
%threeWayMutRecursiveA_11 = add  nsw i32 %threeWayMutRecursiveA_10, 1 
enter-call threeWayMutRecursiveB
%threeWayMutRecursiveB_0 = bitcast i32 %threeWayMutRecursiveA_11 to i32 
%threeWayMutRecursiveB_2 = alloca i32, align 4 
%threeWayMutRecursiveB_3 = alloca i32, align 4 
store  i32 %threeWayMutRecursiveB_0, i32* %threeWayMutRecursiveB_3, align 4 
%threeWayMutRecursiveB_4 = load  i32, i32* %threeWayMutRecursiveB_3, align 4 
%threeWayMutRecursiveB_5 = icmp sgt i32 %threeWayMutRecursiveB_4, 124 
path-eq %threeWayMutRecursiveB_5 = bitcast i1 0 to i1 
%threeWayMutRecursiveB_10 = load  i32, i32* %threeWayMutRecursiveB_3, align 4 
%threeWayMutRecursiveB_11 = add  nsw i32 %threeWayMutRecursiveB_10, 4 
enter-call threeWayMutRecursiveC
%threeWayMutRecursiveC_0 = bitcast i32 %threeWayMutRecursiveB_11 to i32 
%threeWayMutRecursiveC_2 = alloca i32, align 4 
store  i32 %threeWayMutRecursiveC_0, i32* %threeWayMutRecursiveC_2, align 4 
%threeWayMutRecursiveC_3 = load  i32, i32* %threeWayMutRecursiveC_2, align 4 
%threeWayMutRecursiveC_4 = add  nsw i32 %threeWayMutRecursiveC_3, 2 
enter-call threeWayMutRecursiveA
%threeWayMutRecursiveA_0_1 = bitcast i32 %threeWayMutRecursiveC_4 to i32 
%threeWayMutRecursiveA_2_1 = alloca i32, align 4 
%threeWayMutRecursiveA_3_1 = alloca i32, align 4 
store  i32 %threeWayMutRecursiveA_0_1, i32* %threeWayMutRecursiveA_3_1, align 4 
%threeWayMutRecursiveA_4_1 = load  i32, i32* %threeWayMutRecursiveA_3_1, align 4 
%threeWayMutRecursiveA_5_1 = srem i32 %threeWayMutRecursiveA_4_1, 5 
%threeWayMutRecursiveA_6_1 = icmp eq i32 %threeWayMutRecursiveA_5_1, 0 
path-eq %threeWayMutRecursiveA_6_1 = bitcast i1 0 to i1 
%threeWayMutRecursiveA_10_1 = load  i32, i32* %threeWayMutRecursiveA_3_1, align 4 
%threeWayMutRecursiveA_11_1 = add  nsw i32 %threeWayMutRecursiveA_10_1, 1 
enter-call threeWayMutRecursiveB
%threeWayMutRecursiveB_0_1 = bitcast i32 %threeWayMutRecursiveA_11_1 to i32 
%threeWayMutRecursiveB_2_1 = alloca i32, align 4 
%threeWayMutRecursiveB_3_1 = alloca i32, align 4 
store  i32 %threeWayMutRecursiveB_0_1, i32* %threeWayMutRecursiveB_3_1, align 4 
%threeWayMutRecursiveB_4_1 = load  i32, i32* %threeWayMutRecursiveB_3_1, align 4 
%threeWayMutRecursiveB_5_1 = icmp sgt i32 %threeWayMutRecursiveB_4_1, 124 
path-eq %threeWayMutRecursiveB_5_1 = bitcast i1 1 to i1 
%threeWayMutRecursiveB_7 = load  i32, i32* %threeWayMutRecursiveB_3_1, align 4 
%threeWayMutRecursiveB_8 = sub  nsw i32 %threeWayMutRecursiveB_7, 2 
store  i32 %threeWayMutRecursiveB_8, i32* %threeWayMutRecursiveB_2_1, align 4 
%threeWayMutRecursiveB_14 = load  i32, i32* %threeWayMutRecursiveB_2_1, align 4 
track-ops LocalReference (IntegerType {typeBits = 32}) (Name "threeWayMutRecursiveB_14")
%threeWayMutRecursiveA_12 = bitcast i32 %threeWayMutRecursiveB_14 to i32 
exit-call threeWayMutRecursiveA_12
store  i32 %threeWayMutRecursiveA_12, i32* %threeWayMutRecursiveA_2_1, align 4 
%threeWayMutRecursiveA_14 = load  i32, i32* %threeWayMutRecursiveA_2_1, align 4 
track-ops LocalReference (IntegerType {typeBits = 32}) (Name "threeWayMutRecursiveA_14")
%threeWayMutRecursiveC_5 = bitcast i32 %threeWayMutRecursiveA_14 to i32 
exit-call threeWayMutRecursiveC_5
track-ops LocalReference (IntegerType {typeBits = 32}) (Name "threeWayMutRecursiveC_5")
%threeWayMutRecursiveB_12 = bitcast i32 %threeWayMutRecursiveC_5 to i32 
exit-call threeWayMutRecursiveB_12
store  i32 %threeWayMutRecursiveB_12, i32* %threeWayMutRecursiveB_2, align 4 
%threeWayMutRecursiveB_14_1 = load  i32, i32* %threeWayMutRecursiveB_2, align 4 
track-ops LocalReference (IntegerType {typeBits = 32}) (Name "threeWayMutRecursiveB_14_1")
%threeWayMutRecursiveA_12_1 = bitcast i32 %threeWayMutRecursiveB_14_1 to i32 
exit-call threeWayMutRecursiveA_12_1
store  i32 %threeWayMutRecursiveA_12_1, i32* %threeWayMutRecursiveA_2, align 4 
%threeWayMutRecursiveA_14_1 = load  i32, i32* %threeWayMutRecursiveA_2, align 4 
track-ops LocalReference (IntegerType {typeBits = 32}) (Name "threeWayMutRecursiveA_14_1")
