; ModuleID = '../../third_party/icu/source/common/propsvec.cpp'
source_filename = "../../third_party/icu/source/common/propsvec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.UPropsVectors = type { i32*, i32, i32, i32, i32, i8 }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%struct.UPVecToUTrie2Context = type { %struct.UTrie2*, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UPropsVectors* @upvec_open_63(i32, i32* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %3)
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %42

; <label>:6:                                      ; preds = %2
  %7 = icmp slt i32 %0, 1
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %6
  store i32 1, i32* %1, align 4
  br label %42

; <label>:9:                                      ; preds = %6
  %10 = add nsw i32 %0, 2
  %11 = tail call noalias i8* @uprv_malloc_63(i64 32) #8
  %12 = bitcast i8* %11 to %struct.UPropsVectors*
  %13 = shl nsw i32 %10, 14
  %14 = sext i32 %13 to i64
  %15 = tail call noalias i8* @uprv_malloc_63(i64 %14) #8
  %16 = icmp eq i8* %11, null
  %17 = icmp eq i8* %15, null
  %18 = or i1 %16, %17
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %9
  tail call void @uprv_free_63(i8* %11) #9
  tail call void @uprv_free_63(i8* %15) #9
  store i32 7, i32* %1, align 4
  br label %42

; <label>:20:                                     ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 32, i1 false)
  %21 = bitcast i8* %11 to i32**
  %22 = bitcast i8* %11 to i8**
  store i8* %15, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %10, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 12
  %26 = bitcast i8* %25 to i32*
  store i32 4096, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %11, i64 16
  %28 = bitcast i8* %27 to i32*
  store i32 3, i32* %28, align 8
  %29 = load i32*, i32** %21, align 8
  %30 = bitcast i32* %29 to i8*
  %31 = mul i32 %10, 12
  %32 = sext i32 %31 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 %32, i1 false)
  store i32 0, i32* %29, align 4
  %33 = getelementptr inbounds i32, i32* %29, i64 1
  store i32 1114112, i32* %33, align 4
  %34 = sext i32 %10 to i64
  br label %35

; <label>:35:                                     ; preds = %35, %20
  %36 = phi i32* [ %29, %20 ], [ %38, %35 ]
  %37 = phi i32 [ 1114112, %20 ], [ %39, %35 ]
  %38 = getelementptr inbounds i32, i32* %36, i64 %34
  store i32 %37, i32* %38, align 4
  %39 = add nuw nsw i32 %37, 1
  %40 = getelementptr inbounds i32, i32* %38, i64 1
  store i32 %39, i32* %40, align 4
  %41 = icmp eq i32 %39, 1114114
  br i1 %41, label %42, label %35

; <label>:42:                                     ; preds = %35, %2, %19, %8
  %43 = phi %struct.UPropsVectors* [ null, %8 ], [ null, %19 ], [ null, %2 ], [ %12, %35 ]
  ret %struct.UPropsVectors* %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32) unnamed_addr #2 {
  %2 = icmp sgt i32 %0, 0
  %3 = zext i1 %2 to i8
  ret i8 %3
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_63(i64) local_unnamed_addr #3

declare void @uprv_free_63(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_close_63(%struct.UPropsVectors*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UPropsVectors* %0, null
  br i1 %2, label %7, label %3

; <label>:3:                                      ; preds = %1
  %4 = bitcast %struct.UPropsVectors* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @uprv_free_63(i8* %5) #9
  %6 = bitcast %struct.UPropsVectors* %0 to i8*
  tail call void @uprv_free_63(i8* %6) #9
  br label %7

; <label>:7:                                      ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_setValue_63(%struct.UPropsVectors*, i32, i32, i32, i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %8 = load i32, i32* %6, align 4
  %9 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %8)
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %177

; <label>:11:                                     ; preds = %7
  %12 = icmp eq %struct.UPropsVectors* %0, null
  %13 = icmp slt i32 %1, 0
  %14 = or i1 %12, %13
  br i1 %14, label %26, label %15

; <label>:15:                                     ; preds = %11
  %16 = icmp sgt i32 %1, %2
  %17 = icmp sgt i32 %2, 1114113
  %18 = or i1 %16, %17
  %19 = icmp slt i32 %3, 0
  %20 = or i1 %18, %19
  br i1 %20, label %26, label %21

; <label>:21:                                     ; preds = %15
  %22 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, -2
  %25 = icmp sgt i32 %24, %3
  br i1 %25, label %27, label %26

; <label>:26:                                     ; preds = %21, %15, %11
  store i32 1, i32* %6, align 4
  br label %177

; <label>:27:                                     ; preds = %21
  %28 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

; <label>:31:                                     ; preds = %27
  store i32 30, i32* %6, align 4
  br label %177

; <label>:32:                                     ; preds = %27
  %33 = add nsw i32 %2, 1
  %34 = add nsw i32 %3, 2
  %35 = and i32 %5, %4
  %36 = tail call fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nonnull %0, i32 %1)
  %37 = tail call fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nonnull %0, i32 %2)
  %38 = load i32, i32* %36, align 4
  %39 = icmp eq i32 %38, %1
  br i1 %39, label %46, label %40

; <label>:40:                                     ; preds = %32
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds i32, i32* %36, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, %5
  %45 = icmp ne i32 %35, %44
  br label %46

; <label>:46:                                     ; preds = %32, %40
  %47 = phi i1 [ false, %32 ], [ %45, %40 ]
  %48 = getelementptr inbounds i32, i32* %37, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %33, %49
  br i1 %50, label %57, label %51

; <label>:51:                                     ; preds = %46
  %52 = sext i32 %34 to i64
  %53 = getelementptr inbounds i32, i32* %37, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, %5
  %56 = icmp ne i32 %35, %55
  br label %57

; <label>:57:                                     ; preds = %46, %51
  %58 = phi i1 [ false, %46 ], [ %56, %51 ]
  %59 = or i1 %47, %58
  br i1 %59, label %60, label %150

; <label>:60:                                     ; preds = %57
  %61 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = zext i1 %47 to i32
  %64 = zext i1 %58 to i32
  %65 = add nuw nsw i32 %64, %63
  %66 = add i32 %65, %62
  %67 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %66, %68
  br i1 %69, label %70, label %100

; <label>:70:                                     ; preds = %60
  %71 = icmp slt i32 %68, 65536
  br i1 %71, label %75, label %72

; <label>:72:                                     ; preds = %70
  %73 = icmp slt i32 %68, 1114114
  br i1 %73, label %75, label %74

; <label>:74:                                     ; preds = %72
  store i32 5, i32* %6, align 4
  br label %177

; <label>:75:                                     ; preds = %72, %70
  %76 = phi i32 [ 65536, %70 ], [ 1114114, %72 ]
  %77 = shl i32 %23, 2
  %78 = mul i32 %77, %76
  %79 = sext i32 %78 to i64
  %80 = tail call noalias i8* @uprv_malloc_63(i64 %79) #8
  %81 = bitcast i8* %80 to i32*
  %82 = icmp eq i8* %80, null
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %75
  store i32 7, i32* %6, align 4
  br label %177

; <label>:84:                                     ; preds = %75
  %85 = bitcast %struct.UPropsVectors* %0 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = sext i32 %62 to i64
  %88 = sext i32 %23 to i64
  %89 = shl nsw i64 %88, 2
  %90 = mul i64 %89, %87
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %80, i8* align 4 %86, i64 %90, i1 false)
  %91 = ptrtoint i32* %36 to i64
  %92 = ptrtoint i8* %86 to i64
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 2
  %95 = getelementptr inbounds i32, i32* %81, i64 %94
  %96 = ptrtoint i32* %37 to i64
  %97 = sub i64 %96, %92
  %98 = ashr exact i64 %97, 2
  %99 = getelementptr inbounds i32, i32* %81, i64 %98
  tail call void @uprv_free_63(i8* %86) #9
  store i8* %80, i8** %85, align 8
  store i32 %76, i32* %67, align 4
  br label %100

; <label>:100:                                    ; preds = %84, %60
  %101 = phi i32* [ %99, %84 ], [ %37, %60 ]
  %102 = phi i32* [ %95, %84 ], [ %36, %60 ]
  %103 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = mul nsw i32 %62, %23
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = sext i32 %23 to i64
  %109 = getelementptr inbounds i32, i32* %101, i64 %108
  %110 = ptrtoint i32* %107 to i64
  %111 = ptrtoint i32* %109 to i64
  %112 = sub i64 %110, %111
  %113 = lshr exact i64 %112, 2
  %114 = trunc i64 %113 to i32
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %127

; <label>:116:                                    ; preds = %100
  %117 = select i1 %47, i32 2, i32 1
  %118 = add nuw nsw i32 %117, %64
  %119 = mul nsw i32 %118, %23
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i32, i32* %101, i64 %120
  %122 = bitcast i32* %121 to i8*
  %123 = bitcast i32* %109 to i8*
  %124 = shl i64 %112, 32
  %125 = ashr exact i64 %124, 32
  %126 = and i64 %125, -4
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %122, i8* align 4 %123, i64 %126, i1 false)
  br label %127

; <label>:127:                                    ; preds = %116, %100
  store i32 %66, i32* %61, align 8
  br i1 %47, label %128, label %141

; <label>:128:                                    ; preds = %127
  %129 = ptrtoint i32* %101 to i64
  %130 = ptrtoint i32* %102 to i64
  %131 = sub i64 %129, %130
  %132 = lshr exact i64 %131, 2
  %133 = trunc i64 %132 to i32
  %134 = add i32 %23, %133
  %135 = getelementptr inbounds i32, i32* %102, i64 %108
  %136 = bitcast i32* %135 to i8*
  %137 = bitcast i32* %102 to i8*
  %138 = sext i32 %134 to i64
  %139 = shl nsw i64 %138, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 %139, i1 false)
  store i32 %1, i32* %135, align 4
  %140 = getelementptr inbounds i32, i32* %102, i64 1
  store i32 %1, i32* %140, align 4
  br label %141

; <label>:141:                                    ; preds = %128, %127
  %142 = phi i32* [ %109, %128 ], [ %101, %127 ]
  %143 = phi i32* [ %135, %128 ], [ %102, %127 ]
  br i1 %58, label %144, label %150

; <label>:144:                                    ; preds = %141
  %145 = getelementptr inbounds i32, i32* %142, i64 %108
  %146 = bitcast i32* %145 to i8*
  %147 = bitcast i32* %142 to i8*
  %148 = shl nsw i64 %108, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %146, i8* align 4 %147, i64 %148, i1 false)
  store i32 %33, i32* %145, align 4
  %149 = getelementptr inbounds i32, i32* %142, i64 1
  store i32 %33, i32* %149, align 4
  br label %150

; <label>:150:                                    ; preds = %141, %144, %57
  %151 = phi i32* [ %37, %57 ], [ %142, %144 ], [ %142, %141 ]
  %152 = phi i32* [ %36, %57 ], [ %143, %144 ], [ %143, %141 ]
  %153 = bitcast %struct.UPropsVectors* %0 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = ptrtoint i32* %151 to i64
  %156 = sub i64 %155, %154
  %157 = ashr exact i64 %156, 2
  %158 = sext i32 %23 to i64
  %159 = sdiv i64 %157, %158
  %160 = trunc i64 %159 to i32
  %161 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 4
  store i32 %160, i32* %161, align 4
  %162 = sext i32 %34 to i64
  %163 = getelementptr inbounds i32, i32* %152, i64 %162
  %164 = getelementptr inbounds i32, i32* %151, i64 %162
  %165 = xor i32 %5, -1
  %166 = load i32, i32* %163, align 4
  %167 = and i32 %166, %165
  %168 = or i32 %167, %35
  store i32 %168, i32* %163, align 4
  %169 = icmp eq i32* %152, %151
  br i1 %169, label %177, label %170

; <label>:170:                                    ; preds = %150, %170
  %171 = phi i32* [ %172, %170 ], [ %163, %150 ]
  %172 = getelementptr inbounds i32, i32* %171, i64 %158
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, %165
  %175 = or i32 %174, %35
  store i32 %175, i32* %172, align 4
  %176 = icmp eq i32* %172, %164
  br i1 %176, label %177, label %170

; <label>:177:                                    ; preds = %170, %150, %74, %83, %7, %31, %26
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define internal fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nocapture, i32) unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = mul nsw i32 %8, %4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %10, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %49, label %16

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds i32, i32* %13, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %81, label %20

; <label>:20:                                     ; preds = %16
  %21 = sext i32 %4 to i64
  %22 = getelementptr inbounds i32, i32* %13, i64 %21
  %23 = getelementptr inbounds i32, i32* %22, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %26, label %28

; <label>:26:                                     ; preds = %20
  %27 = add nsw i32 %8, 1
  store i32 %27, i32* %7, align 4
  br label %81

; <label>:28:                                     ; preds = %20
  %29 = getelementptr inbounds i32, i32* %22, i64 %21
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, %1
  br i1 %32, label %33, label %35

; <label>:33:                                     ; preds = %28
  %34 = add nsw i32 %8, 2
  store i32 %34, i32* %7, align 4
  br label %81

; <label>:35:                                     ; preds = %28
  %36 = sub nsw i32 %1, %31
  %37 = icmp slt i32 %36, 10
  br i1 %37, label %38, label %54

; <label>:38:                                     ; preds = %35
  %39 = add nsw i32 %8, 2
  br label %40

; <label>:40:                                     ; preds = %40, %38
  %41 = phi i32* [ %29, %38 ], [ %44, %40 ]
  %42 = phi i32 [ %39, %38 ], [ %43, %40 ]
  %43 = add nsw i32 %42, 1
  %44 = getelementptr inbounds i32, i32* %41, i64 %21
  %45 = getelementptr inbounds i32, i32* %44, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, %1
  br i1 %47, label %48, label %40

; <label>:48:                                     ; preds = %40
  store i32 %43, i32* %7, align 4
  br label %81

; <label>:49:                                     ; preds = %2
  %50 = getelementptr inbounds i32, i32* %10, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, %1
  br i1 %52, label %53, label %54

; <label>:53:                                     ; preds = %49
  store i32 0, i32* %7, align 4
  br label %81

; <label>:54:                                     ; preds = %49, %35
  %55 = icmp sgt i32 %6, 1
  br i1 %55, label %56, label %76

; <label>:56:                                     ; preds = %54, %71
  %57 = phi i32 [ %73, %71 ], [ %6, %54 ]
  %58 = phi i32 [ %72, %71 ], [ 0, %54 ]
  %59 = add nsw i32 %57, %58
  %60 = sdiv i32 %59, 2
  %61 = mul nsw i32 %60, %4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %10, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, %1
  br i1 %65, label %71, label %66

; <label>:66:                                     ; preds = %56
  %67 = getelementptr inbounds i32, i32* %63, i64 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, %1
  br i1 %69, label %70, label %71

; <label>:70:                                     ; preds = %66
  store i32 %60, i32* %7, align 4
  br label %81

; <label>:71:                                     ; preds = %66, %56
  %72 = phi i32 [ %58, %56 ], [ %60, %66 ]
  %73 = phi i32 [ %60, %56 ], [ %57, %66 ]
  %74 = add nsw i32 %73, -1
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %56, label %76

; <label>:76:                                     ; preds = %71, %54
  %77 = phi i32 [ 0, %54 ], [ %72, %71 ]
  store i32 %77, i32* %7, align 4
  %78 = mul nsw i32 %77, %4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %10, i64 %79
  br label %81

; <label>:81:                                     ; preds = %16, %76, %70, %53, %48, %33, %26
  %82 = phi i32* [ %22, %26 ], [ %29, %33 ], [ %44, %48 ], [ %63, %70 ], [ %80, %76 ], [ %10, %53 ], [ %13, %16 ]
  ret i32* %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #1

; Function Attrs: norecurse nounwind ssp uwtable
define hidden i32 @upvec_getValue_63(%struct.UPropsVectors* nocapture, i32, i32) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8
  %6 = icmp ne i8 %5, 0
  %7 = icmp ugt i32 %1, 1114113
  %8 = or i1 %7, %6
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %22, label %11

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, -2
  %15 = icmp sgt i32 %14, %2
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %11
  %17 = tail call fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nonnull %0, i32 %1)
  %18 = add nsw i32 %2, 2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  br label %22

; <label>:22:                                     ; preds = %3, %11, %16
  %23 = phi i32 [ %21, %16 ], [ 0, %11 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: norecurse nounwind ssp uwtable
define hidden i32* @upvec_getRow_63(%struct.UPropsVectors* nocapture readonly, i32, i32*, i32*) local_unnamed_addr #5 {
  %5 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8
  %7 = icmp ne i8 %6, 0
  %8 = icmp slt i32 %1, 0
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %14, label %33

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = mul nsw i32 %16, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = icmp eq i32* %2, null
  br i1 %22, label %25, label %23

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* %21, align 4
  store i32 %24, i32* %2, align 4
  br label %25

; <label>:25:                                     ; preds = %14, %23
  %26 = icmp eq i32* %3, null
  br i1 %26, label %31, label %27

; <label>:27:                                     ; preds = %25
  %28 = getelementptr inbounds i32, i32* %21, i64 1
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %3, align 4
  br label %31

; <label>:31:                                     ; preds = %25, %27
  %32 = getelementptr inbounds i32, i32* %21, i64 2
  br label %33

; <label>:33:                                     ; preds = %4, %10, %31
  %34 = phi i32* [ %32, %31 ], [ null, %10 ], [ null, %4 ]
  ret i32* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_compact_63(%struct.UPropsVectors*, void (i8*, i32, i32, i32, i32*, i32, i32*)*, i8*, i32*) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %5)
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %128

; <label>:8:                                      ; preds = %4
  %9 = icmp eq void (i8*, i32, i32, i32, i32*, i32, i32*)* %1, null
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %8
  store i32 1, i32* %3, align 4
  br label %128

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %128

; <label>:15:                                     ; preds = %11
  store i8 1, i8* %12, align 8
  %16 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, -2
  %21 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %22 = bitcast %struct.UPropsVectors* %0 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = shl nsw i32 %19, 2
  %25 = bitcast %struct.UPropsVectors* %0 to i8*
  tail call void @uprv_sortArray_63(i8* %23, i32 %17, i32 %24, i32 (i8*, i8*, i8*)* nonnull @_ZL17upvec_compareRowsPKvS0_S0_, i8* %25, i8 signext 0, i32* nonnull %3) #9
  %26 = load i32, i32* %3, align 4
  %27 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %26)
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %128

; <label>:29:                                     ; preds = %15
  %30 = load i32*, i32** %21, align 8
  %31 = sub i32 2, %19
  %32 = icmp sgt i32 %17, 0
  br i1 %32, label %33, label %66

; <label>:33:                                     ; preds = %29
  %34 = sext i32 %20 to i64
  %35 = sub nsw i64 0, %34
  %36 = shl nsw i32 %20, 2
  %37 = sext i32 %36 to i64
  %38 = sext i32 %19 to i64
  br label %39

; <label>:39:                                     ; preds = %33, %62
  %40 = phi i32* [ %30, %33 ], [ %63, %62 ]
  %41 = phi i32 [ %31, %33 ], [ %55, %62 ]
  %42 = phi i32 [ 0, %33 ], [ %64, %62 ]
  %43 = load i32, i32* %40, align 4
  %44 = icmp slt i32 %41, 0
  br i1 %44, label %52, label %45

; <label>:45:                                     ; preds = %39
  %46 = getelementptr inbounds i32, i32* %40, i64 2
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i32, i32* %40, i64 %35
  %49 = bitcast i32* %48 to i8*
  %50 = tail call i32 @memcmp(i8* nonnull %47, i8* %49, i64 %37) #10
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

; <label>:52:                                     ; preds = %45, %39
  %53 = add nsw i32 %41, %20
  br label %54

; <label>:54:                                     ; preds = %45, %52
  %55 = phi i32 [ %53, %52 ], [ %41, %45 ]
  %56 = icmp sgt i32 %43, 1114111
  br i1 %56, label %57, label %62

; <label>:57:                                     ; preds = %54
  %58 = getelementptr inbounds i32, i32* %40, i64 2
  tail call void %1(i8* %2, i32 %43, i32 %43, i32 %55, i32* nonnull %58, i32 %20, i32* %3) #9
  %59 = load i32, i32* %3, align 4
  %60 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %59)
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %128

; <label>:62:                                     ; preds = %57, %54
  %63 = getelementptr inbounds i32, i32* %40, i64 %38
  %64 = add nuw nsw i32 %42, 1
  %65 = icmp slt i32 %64, %17
  br i1 %65, label %39, label %66

; <label>:66:                                     ; preds = %62, %29
  %67 = phi i32 [ %31, %29 ], [ %55, %62 ]
  %68 = phi i32* [ %30, %29 ], [ %63, %62 ]
  %69 = add nsw i32 %67, %20
  %70 = sext i32 %20 to i64
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %68, i64 %71
  tail call void %1(i8* %2, i32 2097152, i32 2097152, i32 %69, i32* %72, i32 %20, i32* %3) #9
  %73 = load i32, i32* %3, align 4
  %74 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %73)
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %128

; <label>:76:                                     ; preds = %66
  %77 = icmp sgt i32 %17, 0
  br i1 %77, label %78, label %124

; <label>:78:                                     ; preds = %76
  %79 = load i32*, i32** %21, align 8
  %80 = shl nsw i64 %70, 2
  %81 = shl nsw i32 %20, 2
  %82 = sext i32 %81 to i64
  %83 = sext i32 %19 to i64
  br label %84

; <label>:84:                                     ; preds = %78, %120
  %85 = phi i32* [ %79, %78 ], [ %121, %120 ]
  %86 = phi i32 [ %31, %78 ], [ %110, %120 ]
  %87 = phi i32 [ 0, %78 ], [ %122, %120 ]
  %88 = load i32, i32* %85, align 4
  %89 = getelementptr inbounds i32, i32* %85, i64 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %86, 0
  br i1 %91, label %101, label %92

; <label>:92:                                     ; preds = %84
  %93 = getelementptr inbounds i32, i32* %85, i64 2
  %94 = bitcast i32* %93 to i8*
  %95 = load i32*, i32** %21, align 8
  %96 = sext i32 %86 to i64
  %97 = getelementptr inbounds i32, i32* %95, i64 %96
  %98 = bitcast i32* %97 to i8*
  %99 = tail call i32 @memcmp(i8* nonnull %94, i8* %98, i64 %82) #10
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %109, label %101

; <label>:101:                                    ; preds = %92, %84
  %102 = add nsw i32 %86, %20
  %103 = load i32*, i32** %21, align 8
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds i32, i32* %103, i64 %104
  %106 = bitcast i32* %105 to i8*
  %107 = getelementptr inbounds i32, i32* %85, i64 2
  %108 = bitcast i32* %107 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %106, i8* nonnull align 4 %108, i64 %80, i1 false)
  br label %109

; <label>:109:                                    ; preds = %92, %101
  %110 = phi i32 [ %102, %101 ], [ %86, %92 ]
  %111 = icmp slt i32 %88, 1114112
  br i1 %111, label %112, label %120

; <label>:112:                                    ; preds = %109
  %113 = add nsw i32 %90, -1
  %114 = load i32*, i32** %21, align 8
  %115 = sext i32 %110 to i64
  %116 = getelementptr inbounds i32, i32* %114, i64 %115
  tail call void %1(i8* %2, i32 %88, i32 %113, i32 %110, i32* %116, i32 %20, i32* %3) #9
  %117 = load i32, i32* %3, align 4
  %118 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %117)
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %128

; <label>:120:                                    ; preds = %112, %109
  %121 = getelementptr inbounds i32, i32* %85, i64 %83
  %122 = add nuw nsw i32 %87, 1
  %123 = icmp slt i32 %122, %17
  br i1 %123, label %84, label %124

; <label>:124:                                    ; preds = %120, %76
  %125 = phi i32 [ %31, %76 ], [ %110, %120 ]
  %126 = sdiv i32 %125, %20
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %16, align 8
  br label %128

; <label>:128:                                    ; preds = %57, %112, %66, %15, %11, %4, %124, %10
  ret void
}

declare void @uprv_sortArray_63(i8*, i32, i32, i32 (i8*, i8*, i8*)*, i8*, i8 signext, i32*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZL17upvec_compareRowsPKvS0_S0_(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #6 {
  %4 = bitcast i8* %1 to i32*
  %5 = bitcast i8* %2 to i32*
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  br label %9

; <label>:9:                                      ; preds = %21, %3
  %10 = phi i32 [ 2, %3 ], [ %24, %21 ]
  %11 = phi i32 [ %8, %3 ], [ %25, %21 ]
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds i32, i32* %4, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %5, i64 %12
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %21, label %18

; <label>:18:                                     ; preds = %9
  %19 = icmp ult i32 %14, %16
  %20 = select i1 %19, i32 -1, i32 1
  br label %27

; <label>:21:                                     ; preds = %9
  %22 = add nsw i32 %10, 1
  %23 = icmp eq i32 %22, %8
  %24 = select i1 %23, i32 0, i32 %22
  %25 = add nsw i32 %11, -1
  %26 = icmp sgt i32 %11, 1
  br i1 %26, label %9, label %27

; <label>:27:                                     ; preds = %21, %18
  %28 = phi i32 [ %20, %18 ], [ 0, %21 ]
  ret i32 %28
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: norecurse nounwind ssp uwtable
define hidden i32* @upvec_getArray_63(%struct.UPropsVectors* nocapture readonly, i32*, i32*) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %21, label %7

; <label>:7:                                      ; preds = %3
  %8 = icmp eq i32* %1, null
  br i1 %8, label %12, label %9

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %1, align 4
  br label %12

; <label>:12:                                     ; preds = %7, %9
  %13 = icmp eq i32* %2, null
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -2
  store i32 %17, i32* %2, align 4
  br label %18

; <label>:18:                                     ; preds = %12, %14
  %19 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %20 = load i32*, i32** %19, align 8
  br label %21

; <label>:21:                                     ; preds = %3, %18
  %22 = phi i32* [ %20, %18 ], [ null, %3 ]
  ret i32* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i32* @upvec_cloneArray_63(%struct.UPropsVectors* nocapture readonly, i32*, i32*, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = tail call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %5)
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %37

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %8
  store i32 1, i32* %3, align 4
  br label %37

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, -2
  %19 = shl i32 %15, 2
  %20 = mul i32 %19, %18
  %21 = sext i32 %20 to i64
  %22 = tail call noalias i8* @uprv_malloc_63(i64 %21) #8
  %23 = bitcast i8* %22 to i32*
  %24 = icmp eq i8* %22, null
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %13
  store i32 7, i32* %3, align 4
  br label %37

; <label>:26:                                     ; preds = %13
  %27 = bitcast %struct.UPropsVectors* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 %28, i64 %21, i1 false)
  %29 = icmp eq i32* %1, null
  br i1 %29, label %32, label %30

; <label>:30:                                     ; preds = %26
  %31 = load i32, i32* %14, align 8
  store i32 %31, i32* %1, align 4
  br label %32

; <label>:32:                                     ; preds = %26, %30
  %33 = icmp eq i32* %2, null
  br i1 %33, label %37, label %34

; <label>:34:                                     ; preds = %32
  %35 = load i32, i32* %16, align 8
  %36 = add nsw i32 %35, -2
  store i32 %36, i32* %2, align 4
  br label %37

; <label>:37:                                     ; preds = %34, %32, %4, %25, %12
  %38 = phi i32* [ null, %25 ], [ null, %12 ], [ null, %4 ], [ %23, %32 ], [ %23, %34 ]
  ret i32* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @upvec_compactToUTrie2WithRowIndexes_63(%struct.UPropsVectors*, i32*) local_unnamed_addr #0 {
  %3 = alloca %struct.UPVecToUTrie2Context, align 8
  %4 = bitcast %struct.UPVecToUTrie2Context* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false)
  call void @upvec_compact_63(%struct.UPropsVectors* %0, void (i8*, i32, i32, i32, i32*, i32, i32*)* nonnull @upvec_compactToUTrie2Handler_63, i8* nonnull %4, i32* %1)
  %5 = getelementptr inbounds %struct.UPVecToUTrie2Context, %struct.UPVecToUTrie2Context* %3, i64 0, i32 0
  %6 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  call void @utrie2_freeze_63(%struct.UTrie2* %6, i32 0, i32* %1) #9
  %7 = load i32, i32* %1, align 4
  %8 = call fastcc signext i8 @_ZL9U_FAILURE10UErrorCode(i32 %7)
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

; <label>:10:                                     ; preds = %2
  %11 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  call void @utrie2_close_63(%struct.UTrie2* %11) #9
  store %struct.UTrie2* null, %struct.UTrie2** %5, align 8
  br label %12

; <label>:12:                                     ; preds = %2, %10
  %13 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #9
  ret %struct.UTrie2* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_compactToUTrie2Handler_63(i8* nocapture, i32, i32, i32, i32* nocapture readnone, i32, i32*) #0 {
  %8 = icmp slt i32 %1, 1114112
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %7
  %10 = bitcast i8* %0 to %struct.UTrie2**
  %11 = load %struct.UTrie2*, %struct.UTrie2** %10, align 8
  tail call void @utrie2_setRange32_63(%struct.UTrie2* %11, i32 %1, i32 %2, i32 %3, i8 signext 1, i32* %6) #9
  br label %33

; <label>:12:                                     ; preds = %7
  switch i32 %1, label %33 [
    i32 1114112, label %13
    i32 1114113, label %16
    i32 2097152, label %19
  ]

; <label>:13:                                     ; preds = %12
  %14 = getelementptr inbounds i8, i8* %0, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %3, i32* %15, align 8
  br label %33

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds i8, i8* %0, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 %3, i32* %18, align 4
  br label %33

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds i8, i8* %0, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 %3, i32* %21, align 8
  %22 = icmp sgt i32 %3, 65535
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %19
  store i32 8, i32* %6, align 4
  br label %33

; <label>:24:                                     ; preds = %19
  %25 = getelementptr inbounds i8, i8* %0, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds i8, i8* %0, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = tail call %struct.UTrie2* @utrie2_open_63(i32 %27, i32 %30, i32* %6) #9
  %32 = bitcast i8* %0 to %struct.UTrie2**
  store %struct.UTrie2* %31, %struct.UTrie2** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %13, %16, %24, %23, %12, %9
  ret void
}

declare void @utrie2_freeze_63(%struct.UTrie2*, i32, i32*) local_unnamed_addr #4

declare void @utrie2_close_63(%struct.UTrie2*) local_unnamed_addr #4

declare void @utrie2_setRange32_63(%struct.UTrie2*, i32, i32, i32, i8 signext, i32*) local_unnamed_addr #4

declare %struct.UTrie2* @utrie2_open_63(i32, i32, i32*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
