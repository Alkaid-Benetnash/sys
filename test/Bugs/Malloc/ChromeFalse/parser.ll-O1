; ModuleID = '../../third_party/ffmpeg/libavcodec/parser.c'
source_filename = "../../third_party/ffmpeg/libavcodec/parser.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)* }
%struct.AVOption = type opaque
%struct.AVOptionRanges = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal** }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type { i8*, i8* }
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type { i32, i32, i32, %struct.AVFrame*, %struct.FramePool*, i8*, %struct.DecodeSimpleContext, %struct.DecodeFilterContext, %struct.AVPacket*, i8*, i32, i8*, i32, i8*, i32, %struct.AVPacket*, i32, %struct.AVFrame*, i32, i32, i32, i64, i64, %struct.AVFrame*, i32, i32, i32 }
%struct.FramePool = type { [4 x %struct.AVBufferPool*], i32, i32, i32, [8 x i32], [4 x i32], i32, i32, i32 }
%struct.AVBufferPool = type opaque
%struct.DecodeSimpleContext = type { %struct.AVPacket*, %struct.AVFrame* }
%struct.DecodeFilterContext = type { %struct.AVBSFContext**, i32 }
%struct.AVBSFContext = type { %struct.AVClass*, %struct.AVBitStreamFilter*, %struct.AVBSFInternal*, i8*, %struct.AVCodecParameters*, %struct.AVCodecParameters*, %struct.AVRational, %struct.AVRational }
%struct.AVBitStreamFilter = type { i8*, i32*, %struct.AVClass*, i32, i32 (%struct.AVBSFContext*)*, i32 (%struct.AVBSFContext*, %struct.AVPacket*)*, void (%struct.AVBSFContext*)*, void (%struct.AVBSFContext*)* }
%struct.AVBSFInternal = type opaque
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.ParseContext = type { i8*, i32, i32, i32, i32, i32, i32, i32, i64 }

@.str = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"index > -0x20000000\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"../../third_party/ffmpeg/libavcodec/parser.c\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"Failed to reallocate parser buffer to %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"next >= 0 || pc->buffer\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.AVCodecParserContext* @av_parser_init(i32) local_unnamed_addr #0 {
  %2 = alloca i8*, align 8
  %3 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #5
  store i8* null, i8** %2, align 8
  %4 = icmp eq i32 %0, 0
  br i1 %4, label %67, label %5

; <label>:5:                                      ; preds = %1, %24
  %6 = call %struct.AVCodecParser* @av_parser_iterate(i8** nonnull %2) #5
  %7 = icmp eq %struct.AVCodecParser* %6, null
  br i1 %7, label %67, label %8

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 0, i64 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %0
  br i1 %11, label %28, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %0
  br i1 %15, label %28, label %16

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 0, i64 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, %0
  br i1 %19, label %28, label %20

; <label>:20:                                     ; preds = %16
  %21 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 0, i64 3
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, %0
  br i1 %23, label %28, label %24

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 0, i64 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %0
  br i1 %27, label %28, label %5

; <label>:28:                                     ; preds = %8, %12, %16, %20, %24
  %29 = call noalias i8* @av_mallocz(i64 352) #5
  %30 = bitcast i8* %29 to %struct.AVCodecParserContext*
  %31 = icmp eq i8* %29, null
  br i1 %31, label %66, label %32

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds i8, i8* %29, i64 8
  %34 = bitcast i8* %33 to %struct.AVCodecParser**
  store %struct.AVCodecParser* %6, %struct.AVCodecParser** %34, align 8
  %35 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = call noalias i8* @av_mallocz(i64 %37) #5
  %39 = bitcast i8* %29 to i8**
  store i8* %38, i8** %39, align 8
  %40 = icmp eq i8* %38, null
  br i1 %40, label %65, label %41

; <label>:41:                                     ; preds = %32
  %42 = getelementptr inbounds i8, i8* %29, i64 80
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %29, i64 40
  %45 = bitcast i8* %44 to i32*
  store i32 1, i32* %45, align 8
  %46 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %6, i64 0, i32 2
  %47 = load i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*)** %46, align 8
  %48 = icmp eq i32 (%struct.AVCodecParserContext*)* %47, null
  br i1 %48, label %52, label %49

; <label>:49:                                     ; preds = %41
  %50 = call i32 %47(%struct.AVCodecParserContext* nonnull %30) #5
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %65

; <label>:52:                                     ; preds = %49, %41
  %53 = getelementptr inbounds i8, i8* %29, i64 232
  %54 = bitcast i8* %53 to i32*
  store i32 -1, i32* %54, align 8
  %55 = getelementptr inbounds i8, i8* %29, i64 240
  %56 = bitcast i8* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %29, i64 248
  %58 = bitcast i8* %57 to i32*
  store i32 -2147483648, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %29, i64 252
  %60 = bitcast i8* %59 to i32*
  store i32 -2147483648, i32* %60, align 4
  %61 = getelementptr inbounds i8, i8* %29, i64 256
  %62 = bitcast i8* %61 to i32*
  store i32 -2147483648, i32* %62, align 8
  %63 = getelementptr inbounds i8, i8* %29, i64 344
  %64 = bitcast i8* %63 to i32*
  store i32 -1, i32* %64, align 8
  br label %67

; <label>:65:                                     ; preds = %32, %49
  call void @av_freep(i8* nonnull %29) #5
  br label %66

; <label>:66:                                     ; preds = %28, %65
  call void @av_free(i8* %29) #5
  br label %67

; <label>:67:                                     ; preds = %5, %1, %66, %52
  %68 = phi %struct.AVCodecParserContext* [ null, %66 ], [ %30, %52 ], [ null, %1 ], [ null, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #5
  ret %struct.AVCodecParserContext* %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

declare %struct.AVCodecParser* @av_parser_iterate(i8**) local_unnamed_addr #2

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #2

declare void @av_freep(i8*) local_unnamed_addr #2

declare void @av_free(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: norecurse nounwind ssp uwtable
define hidden void @ff_fetch_timestamp(%struct.AVCodecParserContext* nocapture, i32, i32, i32) local_unnamed_addr #3 {
  %5 = icmp ne i32 %3, 0
  br i1 %5, label %11, label %6

; <label>:6:                                      ; preds = %4
  %7 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 7
  store i64 -9223372036854775808, i64* %7, align 8
  %8 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 8
  store i64 -9223372036854775808, i64* %8, align 8
  %9 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 25
  store i64 -1, i64* %9, align 8
  %10 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 17
  store i64 0, i64* %10, align 8
  br label %11

; <label>:11:                                     ; preds = %6, %4
  %12 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 3
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 2
  %15 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 4
  %16 = icmp eq i32 %2, 0
  %17 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 8
  %18 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 7
  %19 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 25
  %20 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 4
  %21 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 17
  br label %22

; <label>:22:                                     ; preds = %11, %61
  %23 = phi i64 [ 0, %11 ], [ %62, %61 ]
  %24 = load i64, i64* %12, align 8
  %25 = add nsw i64 %24, %13
  %26 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 13, i64 %23
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %25, %27
  br i1 %28, label %61, label %29

; <label>:29:                                     ; preds = %22
  %30 = load i64, i64* %14, align 8
  %31 = icmp slt i64 %30, %27
  br i1 %31, label %37, label %32

; <label>:32:                                     ; preds = %29
  %33 = icmp eq i64 %30, 0
  br i1 %33, label %34, label %61

; <label>:34:                                     ; preds = %32
  %35 = load i64, i64* %15, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %61

; <label>:37:                                     ; preds = %34, %29
  %38 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 18, i64 %23
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %61, label %41

; <label>:41:                                     ; preds = %37
  br i1 %5, label %42, label %46

; <label>:42:                                     ; preds = %41
  %43 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 15, i64 %23
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, -9223372036854775808
  br i1 %45, label %56, label %46

; <label>:46:                                     ; preds = %42, %41
  %47 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 15, i64 %23
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %17, align 8
  %49 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 14, i64 %23
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %18, align 8
  %51 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 24, i64 %23
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %19, align 8
  %53 = load i64, i64* %20, align 8
  %54 = load i64, i64* %26, align 8
  %55 = sub nsw i64 %53, %54
  store i64 %55, i64* %21, align 8
  br label %56

; <label>:56:                                     ; preds = %42, %46
  br i1 %16, label %58, label %57

; <label>:57:                                     ; preds = %56
  store i64 9223372036854775807, i64* %26, align 8
  br label %58

; <label>:58:                                     ; preds = %56, %57
  %59 = load i64, i64* %38, align 8
  %60 = icmp slt i64 %25, %59
  br i1 %60, label %64, label %61

; <label>:61:                                     ; preds = %37, %34, %32, %22, %58
  %62 = add nuw nsw i64 %23, 1
  %63 = icmp ult i64 %62, 4
  br i1 %63, label %22, label %64

; <label>:64:                                     ; preds = %58, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_parser_parse2(%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32, i64, i64, i64) local_unnamed_addr #0 {
  %10 = alloca [64 x i8], align 16
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #5
  %12 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %20

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 3
  store i64 %8, i64* %17, align 8
  %18 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 4
  store i64 %8, i64* %18, align 8
  %19 = or i32 %13, 4
  store i32 %19, i32* %12, align 8
  br label %20

; <label>:20:                                     ; preds = %9, %16
  %21 = icmp eq i32 %5, 0
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 64, i1 false)
  br label %43

; <label>:23:                                     ; preds = %20
  %24 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = sext i32 %5 to i64
  %27 = add nsw i64 %25, %26
  %28 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 12
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 18, i64 %30
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %27, %32
  br i1 %33, label %43, label %34

; <label>:34:                                     ; preds = %23
  %35 = add nsw i32 %29, 1
  %36 = and i32 %35, 3
  store i32 %36, i32* %28, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 13, i64 %37
  store i64 %25, i64* %38, align 8
  %39 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 18, i64 %37
  store i64 %27, i64* %39, align 8
  %40 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 14, i64 %37
  store i64 %6, i64* %40, align 8
  %41 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 15, i64 %37
  store i64 %7, i64* %41, align 8
  %42 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 24, i64 %37
  store i64 %8, i64* %42, align 8
  br label %43

; <label>:43:                                     ; preds = %23, %34, %22
  %44 = phi i8* [ %11, %22 ], [ %4, %34 ], [ %4, %23 ]
  %45 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 11
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %58, label %48

; <label>:48:                                     ; preds = %43
  store i32 0, i32* %45, align 8
  %49 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 7
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 9
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 8
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 10
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 25
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 26
  store i64 %56, i64* %57, align 8
  tail call void @ff_fetch_timestamp(%struct.AVCodecParserContext* nonnull %0, i32 0, i32 0, i32 0)
  br label %58

; <label>:58:                                     ; preds = %43, %48
  %59 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 1
  %60 = load %struct.AVCodecParser*, %struct.AVCodecParser** %59, align 8
  %61 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %60, i64 0, i32 3
  %62 = load i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)** %61, align 8
  %63 = call i32 %62(%struct.AVCodecParserContext* nonnull %0, %struct.AVCodecContext* %1, i8** %2, i32* %3, i8* %44, i32 %5) #5
  %64 = icmp sgt i32 %63, -536870912
  br i1 %64, label %66, label %65

; <label>:65:                                     ; preds = %58
  call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i32 168) #5
  call void @abort() #6
  unreachable

; <label>:66:                                     ; preds = %58
  %67 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %79

; <label>:70:                                     ; preds = %66
  %71 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 28
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %79, label %74

; <label>:74:                                     ; preds = %70
  %75 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 81
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

; <label>:78:                                     ; preds = %74
  store i32 %72, i32* %75, align 4
  br label %79

; <label>:79:                                     ; preds = %70, %74, %78, %66
  %80 = load i32, i32* %3, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %90, label %82

; <label>:82:                                     ; preds = %79
  %83 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 4
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 2
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 3
  %87 = load i64, i64* %86, align 8
  %88 = sext i32 %63 to i64
  %89 = add nsw i64 %87, %88
  store i64 %89, i64* %83, align 8
  store i32 1, i32* %45, align 8
  br label %90

; <label>:90:                                     ; preds = %79, %82
  %91 = icmp sgt i32 %63, 0
  %92 = select i1 %91, i32 %63, i32 0
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 3
  %95 = load i64, i64* %94, align 8
  %96 = add nsw i64 %95, %93
  store i64 %96, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #5
  ret i32 %92
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_parser_change(%struct.AVCodecParserContext* readonly, %struct.AVCodecContext*, i8** nocapture, i32* nocapture, i8*, i32, i32) local_unnamed_addr #0 {
  %8 = icmp eq %struct.AVCodecParserContext* %0, null
  br i1 %8, label %30, label %9

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 1
  %11 = load %struct.AVCodecParser*, %struct.AVCodecParser** %10, align 8
  %12 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %11, i64 0, i32 5
  %13 = load i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)** %12, align 8
  %14 = icmp eq i32 (%struct.AVCodecContext*, i8*, i32)* %13, null
  br i1 %14, label %30, label %15

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 13
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 4194304
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %25

; <label>:20:                                     ; preds = %15
  %21 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 14
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

; <label>:25:                                     ; preds = %20, %15
  %26 = tail call i32 %13(%struct.AVCodecContext* nonnull %1, i8* %4, i32 %5) #5
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %4, i64 %27
  %29 = sub nsw i32 %5, %26
  br label %30

; <label>:30:                                     ; preds = %20, %9, %7, %25
  %31 = phi i32 [ %29, %25 ], [ %5, %20 ], [ %5, %9 ], [ %5, %7 ]
  %32 = phi i8* [ %28, %25 ], [ %4, %20 ], [ %4, %9 ], [ %4, %7 ]
  store i8* %32, i8** %2, align 8
  store i32 %31, i32* %3, align 4
  %33 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 15
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ne i8* %34, null
  %36 = icmp ne i32 %6, 0
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %58

; <label>:38:                                     ; preds = %30
  %39 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 14
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %58, label %43

; <label>:43:                                     ; preds = %38
  %44 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %1, i64 0, i32 16
  %45 = load i32, i32* %44, align 8
  %46 = add nsw i32 %45, %31
  store i32 %46, i32* %3, align 4
  %47 = add nsw i32 %46, 64
  %48 = sext i32 %47 to i64
  %49 = tail call noalias i8* @av_malloc(i64 %48) #5
  store i8* %49, i8** %2, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %58, label %51

; <label>:51:                                     ; preds = %43
  %52 = load i8*, i8** %33, align 8
  %53 = load i32, i32* %44, align 8
  %54 = sext i32 %53 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 %52, i64 %54, i1 false)
  %55 = getelementptr inbounds i8, i8* %49, i64 %54
  %56 = add nsw i32 %31, 64
  %57 = sext i32 %56 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %55, i8* align 1 %32, i64 %57, i1 false)
  br label %58

; <label>:58:                                     ; preds = %30, %38, %51, %43
  %59 = phi i32 [ 1, %51 ], [ -12, %43 ], [ 0, %38 ], [ 0, %30 ]
  ret i32 %59
}

declare noalias i8* @av_malloc(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av_parser_close(%struct.AVCodecParserContext*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.AVCodecParserContext* %0, null
  br i1 %2, label %12, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 1
  %5 = load %struct.AVCodecParser*, %struct.AVCodecParser** %4, align 8
  %6 = getelementptr inbounds %struct.AVCodecParser, %struct.AVCodecParser* %5, i64 0, i32 4
  %7 = load void (%struct.AVCodecParserContext*)*, void (%struct.AVCodecParserContext*)** %6, align 8
  %8 = icmp eq void (%struct.AVCodecParserContext*)* %7, null
  br i1 %8, label %10, label %9

; <label>:9:                                      ; preds = %3
  tail call void %7(%struct.AVCodecParserContext* nonnull %0) #5
  br label %10

; <label>:10:                                     ; preds = %3, %9
  %11 = bitcast %struct.AVCodecParserContext* %0 to i8*
  tail call void @av_freep(i8* %11) #5
  tail call void @av_free(i8* %11) #5
  br label %12

; <label>:12:                                     ; preds = %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_combine_frame(%struct.ParseContext*, i32, i8** nocapture, i32* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %26

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 0
  %10 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 7
  %11 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 1
  br label %12

; <label>:12:                                     ; preds = %8, %12
  %13 = load i8*, i8** %9, align 8
  %14 = load i32, i32* %10, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %10, align 8
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = load i32, i32* %11, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %11, align 8
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds i8, i8* %13, i64 %21
  store i8 %18, i8* %22, align 1
  %23 = load i32, i32* %5, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %5, align 4
  %25 = icmp sgt i32 %23, 1
  br i1 %25, label %12, label %26

; <label>:26:                                     ; preds = %12, %4
  %27 = load i32, i32* %3, align 4
  %28 = icmp eq i32 %27, 0
  %29 = icmp eq i32 %1, -100
  %30 = and i1 %29, %28
  %31 = select i1 %30, i32 0, i32 %1
  %32 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 2
  store i32 %33, i32* %34, align 4
  %35 = icmp eq i32 %31, -100
  br i1 %35, label %36, label %64

; <label>:36:                                     ; preds = %26
  %37 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 3
  %40 = load i32, i32* %3, align 4
  %41 = add i32 %33, 64
  %42 = add i32 %41, %40
  %43 = sext i32 %42 to i64
  %44 = tail call i8* @av_fast_realloc(i8* %38, i32* nonnull %39, i64 %43) #5
  %45 = icmp eq i8* %44, null
  br i1 %45, label %46, label %51

; <label>:46:                                     ; preds = %36
  %47 = load i32, i32* %3, align 4
  %48 = load i32, i32* %32, align 8
  %49 = add i32 %47, 64
  %50 = add i32 %49, %48
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 %50) #5
  br label %61

; <label>:51:                                     ; preds = %36
  store i8* %44, i8** %37, align 8
  %52 = load i32, i32* %32, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %44, i64 %53
  %55 = load i8*, i8** %2, align 8
  %56 = load i32, i32* %3, align 4
  %57 = sext i32 %56 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 %55, i64 %57, i1 false)
  %58 = load i32, i32* %3, align 4
  %59 = load i32, i32* %32, align 8
  %60 = add nsw i32 %59, %58
  br label %61

; <label>:61:                                     ; preds = %51, %46
  %62 = phi i32 [ 0, %46 ], [ %60, %51 ]
  %63 = phi i32 [ -12, %46 ], [ -1, %51 ]
  store i32 %62, i32* %32, align 8
  br label %129

; <label>:64:                                     ; preds = %26
  %65 = icmp sgt i32 %31, -1
  br i1 %65, label %71, label %66

; <label>:66:                                     ; preds = %64
  %67 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = icmp eq i8* %68, null
  br i1 %69, label %70, label %71

; <label>:70:                                     ; preds = %66
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0), i32 271) #5
  tail call void @abort() #6
  unreachable

; <label>:71:                                     ; preds = %66, %64
  %72 = add nsw i32 %31, %33
  %73 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 7
  store i32 %72, i32* %73, align 8
  store i32 %72, i32* %3, align 4
  %74 = load i32, i32* %32, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %102, label %76

; <label>:76:                                     ; preds = %71
  %77 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 3
  %80 = add i32 %31, 64
  %81 = add i32 %80, %74
  %82 = sext i32 %81 to i64
  %83 = tail call i8* @av_fast_realloc(i8* %78, i32* nonnull %79, i64 %82) #5
  %84 = icmp eq i8* %83, null
  br i1 %84, label %85, label %89

; <label>:85:                                     ; preds = %76
  %86 = load i32, i32* %32, align 8
  %87 = add i32 %31, 64
  %88 = add i32 %87, %86
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i32 %88) #5
  store i32 0, i32* %32, align 8
  store i32 0, i32* %73, align 8
  br label %129

; <label>:89:                                     ; preds = %76
  store i8* %83, i8** %77, align 8
  %90 = icmp sgt i32 %31, -64
  br i1 %90, label %91, label %98

; <label>:91:                                     ; preds = %89
  %92 = load i32, i32* %32, align 8
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %83, i64 %93
  %95 = load i8*, i8** %2, align 8
  %96 = add nsw i32 %31, 64
  %97 = sext i32 %96 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %94, i8* align 1 %95, i64 %97, i1 false)
  br label %98

; <label>:98:                                     ; preds = %91, %89
  store i32 0, i32* %32, align 8
  %99 = bitcast %struct.ParseContext* %0 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast i8** %2 to i64*
  store i64 %100, i64* %101, align 8
  br label %102

; <label>:102:                                    ; preds = %98, %71
  %103 = icmp slt i32 %31, 0
  br i1 %103, label %104, label %129

; <label>:104:                                    ; preds = %102
  %105 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 4
  %106 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 0
  %107 = getelementptr inbounds %struct.ParseContext, %struct.ParseContext* %0, i64 0, i32 8
  br label %108

; <label>:108:                                    ; preds = %104, %108
  %109 = phi i32 [ %31, %104 ], [ %127, %108 ]
  %110 = load i32, i32* %105, align 4
  %111 = shl i32 %110, 8
  %112 = load i8*, i8** %106, align 8
  %113 = load i32, i32* %34, align 4
  %114 = add nsw i32 %113, %109
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %112, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = or i32 %111, %118
  store i32 %119, i32* %105, align 4
  %120 = load i64, i64* %107, align 8
  %121 = shl i64 %120, 8
  %122 = load i8, i8* %116, align 1
  %123 = zext i8 %122 to i64
  %124 = or i64 %121, %123
  store i64 %124, i64* %107, align 8
  %125 = load i32, i32* %5, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %5, align 4
  %127 = add nsw i32 %109, 1
  %128 = icmp slt i32 %109, -1
  br i1 %128, label %108, label %129

; <label>:129:                                    ; preds = %108, %102, %85, %61
  %130 = phi i32 [ %63, %61 ], [ -12, %85 ], [ 0, %102 ], [ 0, %108 ]
  ret i32 %130
}

declare i8* @av_fast_realloc(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_parse_close(%struct.AVCodecParserContext* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVCodecParserContext, %struct.AVCodecParserContext* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  tail call void @av_freep(i8* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_mpeg4video_split(%struct.AVCodecContext* nocapture readnone, i8*, i32) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  store i32 -1, i32* %4, align 4
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  br label %8

; <label>:8:                                      ; preds = %11, %3
  %9 = phi i8* [ %1, %3 ], [ %12, %11 ]
  %10 = icmp ult i8* %9, %7
  br i1 %10, label %11, label %20

; <label>:11:                                     ; preds = %8
  %12 = call i8* @avpriv_find_start_code(i8* %9, i8* %7, i32* nonnull %4) #5
  %13 = load i32, i32* %4, align 4
  switch i32 %13, label %8 [
    i32 438, label %14
    i32 435, label %14
  ]

; <label>:14:                                     ; preds = %11, %11
  %15 = getelementptr inbounds i8, i8* %12, i64 -4
  %16 = ptrtoint i8* %15 to i64
  %17 = ptrtoint i8* %1 to i64
  %18 = sub i64 %16, %17
  %19 = trunc i64 %18 to i32
  br label %20

; <label>:20:                                     ; preds = %8, %14
  %21 = phi i32 [ %19, %14 ], [ 0, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  ret i32 %21
}

declare i8* @avpriv_find_start_code(i8*, i8*, i32*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
