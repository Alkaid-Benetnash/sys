; ModuleID = '../../third_party/skia/src/core/SkScan_AAAPath.cpp'
source_filename = "../../third_party/skia/src/core/SkScan_AAAPath.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.MaskAdditiveBlitter = type <{ %class.AdditiveBlitter, %class.SkBlitter*, %struct.SkMask, %struct.SkIRect, [258 x i32], i8*, i32, [4 x i8] }>
%class.AdditiveBlitter = type { %class.SkBlitter }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%struct.SkMask = type { i8*, %struct.SkIRect, i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.RunBasedAdditiveBlitter = type <{ %class.AdditiveBlitter, %class.SkBlitter*, i32, i32, i32, i32, i32, [4 x i8], i8*, i32, [4 x i8], %class.SkAlphaRuns, i32, [4 x i8] }>
%class.SkAlphaRuns = type { i16*, i8* }
%class.SafeRLEAdditiveBlitter = type { %class.RunBasedAdditiveBlitter.base, [4 x i8] }
%class.RunBasedAdditiveBlitter.base = type <{ %class.AdditiveBlitter, %class.SkBlitter*, i32, i32, i32, i32, i32, [4 x i8], i8*, i32, [4 x i8], %class.SkAlphaRuns, i32 }>
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.8", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %struct.SkPoint*, i8*, i32, i32, i64, %class.SkTDArray, i32, [4 x i8], %class.SkMutex, %class.SkTDArray.5, i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%class.SkTDArray = type { float*, i32, i32 }
%class.SkMutex = type { %class.SkBaseMutex }
%class.SkBaseMutex = type { %class.SkBaseSemaphore }
%class.SkBaseSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkBaseSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.SkBaseSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.5 = type { %"class.SkPathRef::GenIDChangeListener"**, i32, i32 }
%"class.SkPathRef::GenIDChangeListener" = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.6", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { i8 }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { i8 }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { i8 }
%class.SkAnalyticEdgeBuilder = type { %class.SkEdgeBuilder }
%class.SkEdgeBuilder = type { i32 (...)**, i8**, %class.SkTDArray.12, %class.SkSTArenaAlloc }
%class.SkTDArray.12 = type { i8**, i32, i32 }
%class.SkSTArenaAlloc = type { %class.SkArenaAlloc, [512 x i8] }
%class.SkArenaAlloc = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32 }
%struct.SkAnalyticEdge = type { %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkAnalyticQuadraticEdge = type { %struct.SkAnalyticEdge, %struct.SkQuadraticEdge, i32, i32 }
%struct.SkQuadraticEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.SkEdge = type { %struct.SkEdge*, %struct.SkEdge*, i32, i32, i32, i32, i8, i8, i8, i8 }
%struct.SkAnalyticCubicEdge = type <{ %struct.SkAnalyticEdge, %struct.SkCubicEdge, i32, [4 x i8] }>
%struct.SkCubicEdge = type { %struct.SkEdge, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%class.SkCoverageDeltaList = type <{ %class.SkArenaAlloc*, %struct.SkCoverageDelta**, i8*, i32*, i32*, %struct.SkIRect, %struct.SkAntiRect, i8, [3 x i8] }>
%struct.SkCoverageDelta = type { i32, i32 }
%struct.SkAntiRect = type { i32, i32, i32, i32, i8, i8 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.sk_sp.10, %struct.SkISize, i32, i32 }
%class.sk_sp.10 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.11, i32, i32, i32, [7 x float], [9 x float], [7 x float], [9 x float], %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.11 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }

$_ZN19MaskAdditiveBlitterD2Ev = comdat any

$_ZN19MaskAdditiveBlitterD0Ev = comdat any

$_ZN15AdditiveBlitter5blitHEiii = comdat any

$_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN19MaskAdditiveBlitter14getRealBlitterEb = comdat any

$_ZN19MaskAdditiveBlitter8getWidthEv = comdat any

$_ZN19MaskAdditiveBlitter18flush_if_y_changedEii = comdat any

$_ZN15AdditiveBlitter5blitVEiiih = comdat any

$_ZN15AdditiveBlitter8blitRectEiiii = comdat any

$_ZN15AdditiveBlitter12blitAntiRectEiiiihh = comdat any

$_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii = comdat any

$_ZN22SafeRLEAdditiveBlitterD0Ev = comdat any

$_ZN13SkEdgeBuilderD2Ev = comdat any

$_ZN13SkEdgeBuilderD0Ev = comdat any

$_Z12SkTIntroSortIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEviPT_S5_T0_ = comdat any

$_Z18SkTHeapSort_SiftUpIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEvPT_mmT0_ = comdat any

$_ZTV13SkEdgeBuilder = comdat any

@_ZTV19MaskAdditiveBlitter = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.MaskAdditiveBlitter*)* @_ZN19MaskAdditiveBlitterD2Ev to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*)* @_ZN19MaskAdditiveBlitterD0Ev to i8*), i8* bitcast (void (%class.SkBlitter*, %class.SkCoverageDeltaList*, %struct.SkIRect*, i1, i1, i1)* @_ZN9SkBlitter18blitCoverageDeltasEP19SkCoverageDeltaListRK7SkIRectbbb to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32)* @_ZN15AdditiveBlitter5blitHEiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i8*, i16*)* @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)* @_ZN19MaskAdditiveBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)* @_ZN19MaskAdditiveBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN19MaskAdditiveBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (%class.SkBlitter* (%class.MaskAdditiveBlitter*, i1)* @_ZN19MaskAdditiveBlitter14getRealBlitterEb to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i8*, i32)* @_ZN19MaskAdditiveBlitter9blitAntiHEiiPKhi to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i8)* @_ZN19MaskAdditiveBlitter9blitAntiHEiih to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)* @_ZN19MaskAdditiveBlitter9blitAntiHEiiih to i8*), i8* bitcast (i32 (%class.MaskAdditiveBlitter*)* @_ZN19MaskAdditiveBlitter8getWidthEv to i8*), i8* bitcast (void (%class.MaskAdditiveBlitter*, i32, i32)* @_ZN19MaskAdditiveBlitter18flush_if_y_changedEii to i8*)] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/src/core/SkScan_AAAPath.cpp\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"%s:%d: fatal error: \22%s\22\0A\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"Don't use this; directly add alphas to the mask.\00", align 1
@_ZTV23RunBasedAdditiveBlitter = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD2Ev to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD0Ev to i8*), i8* bitcast (void (%class.SkBlitter*, %class.SkCoverageDeltaList*, %struct.SkIRect*, i1, i1, i1)* @_ZN9SkBlitter18blitCoverageDeltasEP19SkCoverageDeltaListRK7SkIRectbbb to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32)* @_ZN15AdditiveBlitter5blitHEiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i8*, i16*)* @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i8)* @_ZN15AdditiveBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32)* @_ZN15AdditiveBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN15AdditiveBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (%class.SkBlitter* (%class.RunBasedAdditiveBlitter*, i1)* @_ZN23RunBasedAdditiveBlitter14getRealBlitterEb to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32, i8*, i32)* @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiPKhi to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32, i8)* @_ZN23RunBasedAdditiveBlitter9blitAntiHEiih to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32, i32, i8)* @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiih to i8*), i8* bitcast (i32 (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitter8getWidthEv to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32)* @_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii to i8*)] }, align 8
@_ZTV22SafeRLEAdditiveBlitter = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD2Ev to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*)* @_ZN22SafeRLEAdditiveBlitterD0Ev to i8*), i8* bitcast (void (%class.SkBlitter*, %class.SkCoverageDeltaList*, %struct.SkIRect*, i1, i1, i1)* @_ZN9SkBlitter18blitCoverageDeltasEP19SkCoverageDeltaListRK7SkIRectbbb to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32)* @_ZN15AdditiveBlitter5blitHEiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i8*, i16*)* @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i8)* @_ZN15AdditiveBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32)* @_ZN15AdditiveBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.AdditiveBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN15AdditiveBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkBlitter*, i32*)* @_ZN9SkBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*), i8* bitcast (%class.SkBlitter* (%class.RunBasedAdditiveBlitter*, i1)* @_ZN23RunBasedAdditiveBlitter14getRealBlitterEb to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*, i32, i32, i8*, i32)* @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiPKhi to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*, i32, i32, i8)* @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiih to i8*), i8* bitcast (void (%class.SafeRLEAdditiveBlitter*, i32, i32, i32, i8)* @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiih to i8*), i8* bitcast (i32 (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitter8getWidthEv to i8*), i8* bitcast (void (%class.RunBasedAdditiveBlitter*, i32, i32)* @_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii to i8*)] }, align 8
@_ZTV21SkAnalyticEdgeBuilder = external unnamed_addr constant { [11 x i8*] }
@_ZTV13SkEdgeBuilder = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD2Ev to i8*), i8* bitcast (void (%class.SkEdgeBuilder*)* @_ZN13SkEdgeBuilderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

@_ZN19MaskAdditiveBlitterC1EP9SkBlitterRK7SkIRectS4_b = hidden unnamed_addr alias void (%class.MaskAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1), void (%class.MaskAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1)* @_ZN19MaskAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b
@_ZN23RunBasedAdditiveBlitterC1EP9SkBlitterRK7SkIRectS4_b = hidden unnamed_addr alias void (%class.RunBasedAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1), void (%class.RunBasedAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect*, %struct.SkIRect*, i1)* @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b
@_ZN23RunBasedAdditiveBlitterD1Ev = hidden unnamed_addr alias void (%class.RunBasedAdditiveBlitter*), void (%class.RunBasedAdditiveBlitter*)* @_ZN23RunBasedAdditiveBlitterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.MaskAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %class.SkAutoMalloc* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %10, align 8
  %11 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 4, i64 0
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 1
  store i8* %13, i8** %9, align 8
  %14 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1
  %15 = bitcast %struct.SkIRect* %14 to i8*
  %16 = bitcast %struct.SkIRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 4 %16, i64 16, i1 false)
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sub i32 %18, %20
  %22 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 3
  store i32 1, i32* %23, align 4
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, -1
  %27 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3
  %30 = bitcast %struct.SkIRect* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 4 %16, i64 16, i1 false)
  %31 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %29, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %32, %34
  br i1 %35, label %36, label %77

; <label>:36:                                     ; preds = %5
  %37 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %38, %40
  br i1 %41, label %42, label %77

; <label>:42:                                     ; preds = %36
  %43 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %44, %46
  br i1 %47, label %48, label %77

; <label>:48:                                     ; preds = %42
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp sgt i32 %50, %52
  br i1 %53, label %54, label %77

; <label>:54:                                     ; preds = %48
  %55 = icmp slt i32 %34, %46
  %56 = select i1 %55, i32 %46, i32 %34
  %57 = icmp slt i32 %40, %52
  %58 = select i1 %57, i32 %52, i32 %40
  %59 = icmp sgt i32 %32, %44
  %60 = select i1 %59, i32 %44, i32 %32
  %61 = icmp sgt i32 %38, %50
  %62 = select i1 %61, i32 %50, i32 %38
  %63 = sext i32 %60 to i64
  %64 = sext i32 %56 to i64
  %65 = sub nsw i64 %63, %64
  %66 = sext i32 %62 to i64
  %67 = sext i32 %58 to i64
  %68 = sub nsw i64 %66, %67
  %69 = icmp slt i64 %65, 1
  %70 = icmp slt i64 %68, 1
  %71 = or i1 %69, %70
  br i1 %71, label %77, label %72

; <label>:72:                                     ; preds = %54
  %73 = or i64 %68, %65
  %74 = add nsw i64 %73, 2147483648
  %75 = icmp ugt i64 %74, 4294967295
  br i1 %75, label %77, label %76

; <label>:76:                                     ; preds = %72
  store i32 %56, i32* %33, align 4
  store i32 %58, i32* %39, align 4
  store i32 %60, i32* %31, align 4
  store i32 %62, i32* %37, align 4
  br label %78

; <label>:77:                                     ; preds = %48, %36, %72, %54, %5, %42
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 0, i64 16, i1 false) #12
  br label %78

; <label>:78:                                     ; preds = %76, %77
  %79 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = sub i32 %80, %82
  %84 = mul i32 %83, %21
  %85 = add i32 %84, 2
  %86 = zext i32 %85 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 %86, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter9blitAntiHEiiPKhi(%class.MaskAdditiveBlitter* nocapture readnone, i32, i32, i8* nocapture readnone, i32) unnamed_addr #0 align 2 {
  tail call void (i8*, i32, i1, i8*, ...) @_Z17SkDebugf_FileLinePKcibS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 239, i1 zeroext false, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #12
  tail call void @_Z17sk_abort_no_printv() #12
  ret void
}

declare void @_Z17SkDebugf_FileLinePKcibS0_z(i8*, i32, i1 zeroext, i8*, ...) local_unnamed_addr #2

declare void @_Z17sk_abort_no_printv() local_unnamed_addr #2

; Function Attrs: norecurse nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter9blitAntiHEiih(%class.MaskAdditiveBlitter* nocapture, i32, i32, i8 zeroext) unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %8, label %11

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %10 = load i8*, i8** %9, align 8
  br label %28

; <label>:11:                                     ; preds = %4
  store i32 %2, i32* %5, align 8
  %12 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %2, %15
  %17 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = mul i32 %16, %18
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = sub nsw i64 0, %24
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %26, i8** %27, align 8
  br label %28

; <label>:28:                                     ; preds = %8, %11
  %29 = phi i8* [ %10, %8 ], [ %26, %11 ]
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = zext i8 %3 to i32
  %35 = add nuw nsw i32 %33, %34
  %36 = lshr i32 %35, 8
  %37 = sub nsw i32 %35, %36
  %38 = trunc i32 %37 to i8
  store i8 %38, i8* %31, align 1
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter9blitAntiHEiiih(%class.MaskAdditiveBlitter* nocapture, i32, i32, i32, i8 zeroext) unnamed_addr #3 align 2 {
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %11 = load i8*, i8** %10, align 8
  br label %29

; <label>:12:                                     ; preds = %5
  store i32 %2, i32* %6, align 8
  %13 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %2, %16
  %18 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = mul i32 %17, %19
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, i8* %22, i64 %26
  %28 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %27, i8** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %9, %12
  %30 = phi i8* [ %11, %9 ], [ %27, %12 ]
  %31 = icmp sgt i32 %3, 0
  br i1 %31, label %32, label %93

; <label>:32:                                     ; preds = %29
  %33 = zext i8 %4 to i32
  %34 = sext i32 %1 to i64
  %35 = zext i32 %3 to i64
  %36 = icmp ult i32 %3, 16
  br i1 %36, label %37, label %39

; <label>:37:                                     ; preds = %91, %32
  %38 = phi i64 [ 0, %32 ], [ %40, %91 ]
  br label %94

; <label>:39:                                     ; preds = %32
  %40 = and i64 %35, 4294967280
  %41 = insertelement <16 x i32> undef, i32 %33, i32 0
  %42 = shufflevector <16 x i32> %41, <16 x i32> undef, <16 x i32> zeroinitializer
  %43 = add nsw i64 %40, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %43, 0
  br i1 %47, label %77, label %48

; <label>:48:                                     ; preds = %39
  %49 = sub nsw i64 %45, %46
  br label %50

; <label>:50:                                     ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %74, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %75, %50 ]
  %53 = add nsw i64 %51, %34
  %54 = getelementptr inbounds i8, i8* %30, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = zext <16 x i8> %56 to <16 x i32>
  %58 = add nuw nsw <16 x i32> %42, %57
  %59 = lshr <16 x i32> %58, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %60 = sub nsw <16 x i32> %58, %59
  %61 = trunc <16 x i32> %60 to <16 x i8>
  %62 = bitcast i8* %54 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %62, align 1
  %63 = or i64 %51, 16
  %64 = add nsw i64 %63, %34
  %65 = getelementptr inbounds i8, i8* %30, i64 %64
  %66 = bitcast i8* %65 to <16 x i8>*
  %67 = load <16 x i8>, <16 x i8>* %66, align 1
  %68 = zext <16 x i8> %67 to <16 x i32>
  %69 = add nuw nsw <16 x i32> %42, %68
  %70 = lshr <16 x i32> %69, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %71 = sub nsw <16 x i32> %69, %70
  %72 = trunc <16 x i32> %71 to <16 x i8>
  %73 = bitcast i8* %65 to <16 x i8>*
  store <16 x i8> %72, <16 x i8>* %73, align 1
  %74 = add i64 %51, 32
  %75 = add i64 %52, -2
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %50, !llvm.loop !2

; <label>:77:                                     ; preds = %50, %39
  %78 = phi i64 [ 0, %39 ], [ %74, %50 ]
  %79 = icmp eq i64 %46, 0
  br i1 %79, label %91, label %80

; <label>:80:                                     ; preds = %77
  %81 = add nsw i64 %78, %34
  %82 = getelementptr inbounds i8, i8* %30, i64 %81
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1
  %85 = zext <16 x i8> %84 to <16 x i32>
  %86 = add nuw nsw <16 x i32> %42, %85
  %87 = lshr <16 x i32> %86, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %88 = sub nsw <16 x i32> %86, %87
  %89 = trunc <16 x i32> %88 to <16 x i8>
  %90 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %89, <16 x i8>* %90, align 1
  br label %91

; <label>:91:                                     ; preds = %77, %80
  %92 = icmp eq i64 %40, %35
  br i1 %92, label %93, label %37

; <label>:93:                                     ; preds = %94, %91, %29
  ret void

; <label>:94:                                     ; preds = %37, %94
  %95 = phi i64 [ %104, %94 ], [ %38, %37 ]
  %96 = add nsw i64 %95, %34
  %97 = getelementptr inbounds i8, i8* %30, i64 %96
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = add nuw nsw i32 %99, %33
  %101 = lshr i32 %100, 8
  %102 = sub nsw i32 %100, %101
  %103 = trunc i32 %102 to i8
  store i8 %103, i8* %97, align 1
  %104 = add nuw nsw i64 %95, 1
  %105 = icmp eq i64 %104, %35
  br i1 %105, label %93, label %94, !llvm.loop !4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: norecurse nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter5blitVEiiih(%class.MaskAdditiveBlitter* nocapture, i32, i32, i32, i8 zeroext) unnamed_addr #3 align 2 {
  %6 = icmp eq i8 %4, 0
  br i1 %6, label %75, label %7

; <label>:7:                                      ; preds = %5
  %8 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %2
  br i1 %10, label %11, label %14

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %13 = load i8*, i8** %12, align 8
  br label %31

; <label>:14:                                     ; preds = %7
  store i32 %2, i32* %8, align 8
  %15 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 %2, %18
  %20 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = mul i32 %19, %21
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %16, i64 %23
  %25 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = sext i32 %26 to i64
  %28 = sub nsw i64 0, %27
  %29 = getelementptr inbounds i8, i8* %24, i64 %28
  %30 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %29, i8** %30, align 8
  br label %31

; <label>:31:                                     ; preds = %11, %14
  %32 = phi i8* [ %13, %11 ], [ %29, %14 ]
  %33 = icmp sgt i32 %3, 0
  br i1 %33, label %34, label %75

; <label>:34:                                     ; preds = %31
  %35 = sext i32 %1 to i64
  %36 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %37 = add i32 %3, -1
  %38 = and i32 %3, 3
  %39 = icmp ult i32 %37, 3
  br i1 %39, label %63, label %40

; <label>:40:                                     ; preds = %34
  %41 = sub i32 %3, %38
  br label %42

; <label>:42:                                     ; preds = %42, %40
  %43 = phi i8* [ %32, %40 ], [ %60, %42 ]
  %44 = phi i32 [ %41, %40 ], [ %61, %42 ]
  %45 = getelementptr inbounds i8, i8* %43, i64 %35
  store i8 %4, i8* %45, align 1
  %46 = load i32, i32* %36, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %43, i64 %47
  %49 = getelementptr inbounds i8, i8* %48, i64 %35
  store i8 %4, i8* %49, align 1
  %50 = load i32, i32* %36, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %48, i64 %51
  %53 = getelementptr inbounds i8, i8* %52, i64 %35
  store i8 %4, i8* %53, align 1
  %54 = load i32, i32* %36, align 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 %35
  store i8 %4, i8* %57, align 1
  %58 = load i32, i32* %36, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %56, i64 %59
  %61 = add i32 %44, -4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %42

; <label>:63:                                     ; preds = %42, %34
  %64 = phi i8* [ %32, %34 ], [ %60, %42 ]
  %65 = icmp eq i32 %38, 0
  br i1 %65, label %75, label %66

; <label>:66:                                     ; preds = %63, %66
  %67 = phi i8* [ %72, %66 ], [ %64, %63 ]
  %68 = phi i32 [ %73, %66 ], [ %38, %63 ]
  %69 = getelementptr inbounds i8, i8* %67, i64 %35
  store i8 %4, i8* %69, align 1
  %70 = load i32, i32* %36, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %67, i64 %71
  %73 = add i32 %68, -1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %66, !llvm.loop !6

; <label>:75:                                     ; preds = %63, %66, %31, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter8blitRectEiiii(%class.MaskAdditiveBlitter* nocapture, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  %11 = load i8*, i8** %10, align 8
  br label %29

; <label>:12:                                     ; preds = %5
  store i32 %2, i32* %6, align 8
  %13 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = sub nsw i32 %2, %16
  %18 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = mul i32 %17, %19
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %14, i64 %21
  %23 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, i8* %22, i64 %26
  %28 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 5
  store i8* %27, i8** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %9, %12
  %30 = phi i8* [ %11, %9 ], [ %27, %12 ]
  %31 = icmp sgt i32 %4, 0
  br i1 %31, label %32, label %53

; <label>:32:                                     ; preds = %29
  %33 = sext i32 %1 to i64
  %34 = sext i32 %3 to i64
  %35 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2, i32 2
  %36 = add i32 %4, -1
  %37 = and i32 %4, 7
  %38 = icmp ult i32 %36, 7
  br i1 %38, label %41, label %39

; <label>:39:                                     ; preds = %32
  %40 = sub i32 %4, %37
  br label %54

; <label>:41:                                     ; preds = %54, %32
  %42 = phi i8* [ %30, %32 ], [ %88, %54 ]
  %43 = icmp eq i32 %37, 0
  br i1 %43, label %53, label %44

; <label>:44:                                     ; preds = %41, %44
  %45 = phi i8* [ %50, %44 ], [ %42, %41 ]
  %46 = phi i32 [ %51, %44 ], [ %37, %41 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 -1, i64 %34, i1 false)
  %48 = load i32, i32* %35, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %45, i64 %49
  %51 = add i32 %46, -1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %44, !llvm.loop !8

; <label>:53:                                     ; preds = %41, %44, %29
  ret void

; <label>:54:                                     ; preds = %54, %39
  %55 = phi i8* [ %30, %39 ], [ %88, %54 ]
  %56 = phi i32 [ %40, %39 ], [ %89, %54 ]
  %57 = getelementptr inbounds i8, i8* %55, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 -1, i64 %34, i1 false)
  %58 = load i32, i32* %35, align 8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %55, i64 %59
  %61 = getelementptr inbounds i8, i8* %60, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %61, i8 -1, i64 %34, i1 false)
  %62 = load i32, i32* %35, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = getelementptr inbounds i8, i8* %64, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 -1, i64 %34, i1 false)
  %66 = load i32, i32* %35, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  %69 = getelementptr inbounds i8, i8* %68, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 -1, i64 %34, i1 false)
  %70 = load i32, i32* %35, align 8
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %68, i64 %71
  %73 = getelementptr inbounds i8, i8* %72, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %73, i8 -1, i64 %34, i1 false)
  %74 = load i32, i32* %35, align 8
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %72, i64 %75
  %77 = getelementptr inbounds i8, i8* %76, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %77, i8 -1, i64 %34, i1 false)
  %78 = load i32, i32* %35, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = getelementptr inbounds i8, i8* %80, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %81, i8 -1, i64 %34, i1 false)
  %82 = load i32, i32* %35, align 8
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %80, i64 %83
  %85 = getelementptr inbounds i8, i8* %84, i64 %33
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -1, i64 %34, i1 false)
  %86 = load i32, i32* %35, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = add i32 %56, -8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %41, label %54
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19MaskAdditiveBlitter12blitAntiRectEiiiihh(%class.MaskAdditiveBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 align 2 {
  %8 = bitcast %class.MaskAdditiveBlitter* %0 to void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)***
  %9 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)**, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*** %8, align 8
  %10 = getelementptr inbounds void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %9, i64 5
  %11 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %10, align 8
  tail call void %11(%class.MaskAdditiveBlitter* %0, i32 %1, i32 %2, i32 %4, i8 zeroext %5) #12
  %12 = add nsw i32 %1, 1
  %13 = add nsw i32 %12, %3
  %14 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)**, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*** %8, align 8
  %15 = getelementptr inbounds void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %14, i64 5
  %16 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i8)** %15, align 8
  tail call void %16(%class.MaskAdditiveBlitter* %0, i32 %13, i32 %2, i32 %4, i8 zeroext %6) #12
  %17 = bitcast %class.MaskAdditiveBlitter* %0 to void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)***
  %18 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)**, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)*** %17, align 8
  %19 = getelementptr inbounds void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)** %18, i64 6
  %20 = load void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)*, void (%class.MaskAdditiveBlitter*, i32, i32, i32, i32)** %19, align 8
  tail call void %20(%class.MaskAdditiveBlitter* %0, i32 %12, i32 %2, i32 %3, i32 %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.RunBasedAdditiveBlitter*, %class.SkBlitter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %class.SkAutoMalloc* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %9, align 8
  br i1 %4, label %10, label %17

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  br label %64

; <label>:17:                                     ; preds = %5
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %19, %21
  br i1 %22, label %23, label %63

; <label>:23:                                     ; preds = %17
  %24 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %25, %27
  br i1 %28, label %29, label %63

; <label>:29:                                     ; preds = %23
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %31, %33
  br i1 %34, label %35, label %63

; <label>:35:                                     ; preds = %29
  %36 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %37, %39
  br i1 %40, label %41, label %63

; <label>:41:                                     ; preds = %35
  %42 = icmp slt i32 %21, %33
  %43 = select i1 %42, i32 %33, i32 %21
  %44 = icmp slt i32 %27, %39
  %45 = select i1 %44, i32 %39, i32 %27
  %46 = icmp sgt i32 %19, %31
  %47 = select i1 %46, i32 %31, i32 %19
  %48 = icmp sgt i32 %25, %37
  %49 = select i1 %48, i32 %37, i32 %25
  %50 = sext i32 %47 to i64
  %51 = sext i32 %43 to i64
  %52 = sub nsw i64 %50, %51
  %53 = sext i32 %49 to i64
  %54 = sext i32 %45 to i64
  %55 = sub nsw i64 %53, %54
  %56 = icmp slt i64 %52, 1
  %57 = icmp slt i64 %55, 1
  %58 = or i1 %56, %57
  br i1 %58, label %63, label %59

; <label>:59:                                     ; preds = %41
  %60 = or i64 %55, %52
  %61 = add nsw i64 %60, 2147483648
  %62 = icmp ugt i64 %61, 4294967295
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %35, %23, %59, %41, %17, %29
  br label %64

; <label>:64:                                     ; preds = %59, %63, %10
  %65 = phi i32 [ %16, %10 ], [ 0, %63 ], [ %47, %59 ]
  %66 = phi i32 [ %14, %10 ], [ 0, %63 ], [ %45, %59 ]
  %67 = phi i32 [ %12, %10 ], [ 0, %63 ], [ %43, %59 ]
  %68 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  store i32 %67, i32* %68, align 8
  %69 = sub nsw i32 %65, %67
  %70 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  store i32 %66, i32* %71, align 4
  %72 = add nsw i32 %66, -1
  %73 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  store i32 %72, i32* %73, align 8
  %74 = bitcast %class.SkBlitter* %1 to i32 (%class.SkBlitter*)***
  %75 = load i32 (%class.SkBlitter*)**, i32 (%class.SkBlitter*)*** %74, align 8
  %76 = getelementptr inbounds i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %75, i64 13
  %77 = load i32 (%class.SkBlitter*)*, i32 (%class.SkBlitter*)** %76, align 8
  %78 = tail call i32 %77(%class.SkBlitter* %1) #12
  %79 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  store i32 %78, i32* %79, align 8
  %80 = load i32, i32* %70, align 4
  %81 = add nsw i32 %80, 1
  %82 = add nsw i32 %80, 2
  %83 = sdiv i32 %82, 2
  %84 = add nsw i32 %81, %83
  %85 = shl i32 %78, 1
  %86 = mul i32 %85, %84
  %87 = sext i32 %86 to i64
  %88 = bitcast %class.SkBlitter* %1 to i8* (%class.SkBlitter*, i64)***
  %89 = load i8* (%class.SkBlitter*, i64)**, i8* (%class.SkBlitter*, i64)*** %88, align 8
  %90 = getelementptr inbounds i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %89, i64 14
  %91 = load i8* (%class.SkBlitter*, i64)*, i8* (%class.SkBlitter*, i64)** %90, align 8
  %92 = tail call i8* %91(%class.SkBlitter* %1, i64 %87) #12
  %93 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %95 = load i32, i32* %70, align 4
  store i32 0, i32* %94, align 8
  %96 = bitcast i8* %92 to i16*
  %97 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %98 = bitcast %class.SkAlphaRuns* %97 to i8**
  store i8* %92, i8** %98, align 8
  %99 = sext i32 %95 to i64
  %100 = getelementptr inbounds i16, i16* %96, i64 %99
  %101 = getelementptr inbounds i16, i16* %100, i64 1
  %102 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %103 = bitcast i8** %102 to i16**
  store i16* %101, i16** %103, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %97, i32 %95) #12
  %104 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %104, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitterD0Ev(%class.RunBasedAdditiveBlitter*) unnamed_addr #0 align 2 {
  tail call void @_ZN23RunBasedAdditiveBlitterD2Ev(%class.RunBasedAdditiveBlitter* %0) #12
  %2 = bitcast %class.RunBasedAdditiveBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkBlitter* @_ZN23RunBasedAdditiveBlitter14getRealBlitterEb(%class.RunBasedAdditiveBlitter* nocapture readonly, i1 zeroext) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  ret %class.SkBlitter* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiPKhi(%class.RunBasedAdditiveBlitter*, i32, i32, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %92, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %7, %11
  br i1 %12, label %91, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %15 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %14, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 0
  %19 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %20 = load i8*, i8** %19, align 8
  br i1 %18, label %21, label %32

; <label>:21:                                     ; preds = %32, %13
  %22 = phi i16* [ %16, %13 ], [ %42, %32 ]
  %23 = phi i8* [ %20, %13 ], [ %51, %32 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %52

; <label>:26:                                     ; preds = %21
  %27 = load i16, i16* %22, align 2
  %28 = sext i16 %27 to i64
  %29 = getelementptr inbounds i16, i16* %22, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %88, label %52

; <label>:32:                                     ; preds = %13, %32
  %33 = phi i8* [ %51, %32 ], [ %20, %13 ]
  %34 = phi i64 [ %47, %32 ], [ 0, %13 ]
  %35 = phi i32 [ %46, %32 ], [ 0, %13 ]
  %36 = getelementptr inbounds i8, i8* %33, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = icmp ugt i8 %37, -9
  %39 = icmp ult i8 %37, 8
  %40 = select i1 %39, i8 0, i8 %37
  %41 = select i1 %38, i8 -1, i8 %40
  store i8 %41, i8* %36, align 1
  %42 = load i16*, i16** %15, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %34
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = add nsw i32 %35, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %42, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  %51 = load i8*, i8** %19, align 8
  br i1 %50, label %21, label %32

; <label>:52:                                     ; preds = %26, %21
  %53 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %54 = load %class.SkBlitter*, %class.SkBlitter** %53, align 8
  %55 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = load i32, i32* %6, align 8
  %58 = bitcast %class.SkBlitter* %54 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %59 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, i64 4
  %61 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %60, align 8
  tail call void %61(%class.SkBlitter* %54, i32 %56, i32 %57, i8* %23, i16* %22) #12
  %62 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 1
  %65 = add nsw i32 %63, 2
  %66 = sdiv i32 %65, 2
  %67 = add nsw i32 %64, %66
  %68 = shl i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  %73 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  %74 = load i32, i32* %73, align 8
  %75 = srem i32 %72, %74
  store i32 %75, i32* %70, align 8
  %76 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  %77 = load i8*, i8** %76, align 8
  %78 = sext i32 %75 to i64
  %79 = mul nsw i64 %69, %78
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = bitcast i8* %80 to i16*
  %82 = bitcast %class.SkAlphaRuns* %14 to i8**
  store i8* %80, i8** %82, align 8
  %83 = sext i32 %63 to i64
  %84 = getelementptr inbounds i16, i16* %81, i64 %83
  %85 = getelementptr inbounds i16, i16* %84, i64 1
  %86 = bitcast i8** %19 to i16**
  store i16* %85, i16** %86, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %14, i32 %63) #12
  %87 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %52, %26
  %89 = load i32, i32* %10, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %6, align 8
  br label %91

; <label>:91:                                     ; preds = %9, %88
  store i32 %2, i32* %6, align 8
  br label %92

; <label>:92:                                     ; preds = %5, %91
  %93 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = sub nsw i32 %1, %94
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %97, label %102

; <label>:97:                                     ; preds = %92
  %98 = add nsw i32 %95, %4
  %99 = sext i32 %95 to i64
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds i8, i8* %3, i64 %100
  br label %102

; <label>:102:                                    ; preds = %97, %92
  %103 = phi i32 [ %98, %97 ], [ %4, %92 ]
  %104 = phi i32 [ 0, %97 ], [ %95, %92 ]
  %105 = phi i8* [ %101, %97 ], [ %3, %92 ]
  %106 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = sub nsw i32 %107, %104
  %109 = icmp slt i32 %103, %108
  %110 = select i1 %109, i32 %103, i32 %108
  %111 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  %112 = load i32, i32* %111, align 8
  %113 = icmp slt i32 %104, %112
  br i1 %113, label %114, label %115

; <label>:114:                                    ; preds = %102
  store i32 0, i32* %111, align 8
  br label %115

; <label>:115:                                    ; preds = %114, %102
  %116 = phi i32 [ 0, %114 ], [ %112, %102 ]
  %117 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 0
  %118 = load i16*, i16** %117, align 8
  %119 = sext i32 %116 to i64
  %120 = getelementptr inbounds i16, i16* %118, i64 %119
  %121 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 %119
  %124 = sub nsw i32 %104, %116
  %125 = icmp eq i32 %110, 0
  br i1 %125, label %126, label %127

; <label>:126:                                    ; preds = %115
  store i32 %116, i32* %111, align 8
  br label %260

; <label>:127:                                    ; preds = %115
  %128 = sext i32 %124 to i64
  %129 = getelementptr inbounds i16, i16* %120, i64 %128
  %130 = getelementptr inbounds i8, i8* %123, i64 %128
  %131 = icmp sgt i32 %124, 0
  br i1 %131, label %132, label %152

; <label>:132:                                    ; preds = %127, %146
  %133 = phi i32 [ %150, %146 ], [ %124, %127 ]
  %134 = phi i8* [ %149, %146 ], [ %123, %127 ]
  %135 = phi i16* [ %148, %146 ], [ %120, %127 ]
  %136 = load i16, i16* %135, align 2
  %137 = sext i16 %136 to i32
  %138 = icmp slt i32 %133, %137
  br i1 %138, label %139, label %146

; <label>:139:                                    ; preds = %132
  %140 = load i8, i8* %134, align 1
  %141 = sext i32 %133 to i64
  %142 = getelementptr inbounds i8, i8* %134, i64 %141
  store i8 %140, i8* %142, align 1
  %143 = trunc i32 %133 to i16
  store i16 %143, i16* %135, align 2
  %144 = sub i16 %136, %143
  %145 = getelementptr inbounds i16, i16* %135, i64 %141
  store i16 %144, i16* %145, align 2
  br label %152

; <label>:146:                                    ; preds = %132
  %147 = sext i16 %136 to i64
  %148 = getelementptr inbounds i16, i16* %135, i64 %147
  %149 = getelementptr inbounds i8, i8* %134, i64 %147
  %150 = sub nsw i32 %133, %137
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %132, label %152

; <label>:152:                                    ; preds = %146, %139, %127
  %153 = load i16, i16* %129, align 2
  %154 = sext i16 %153 to i32
  %155 = icmp slt i32 %110, %154
  br i1 %155, label %156, label %168

; <label>:156:                                    ; preds = %176, %152
  %157 = phi i32 [ %110, %152 ], [ %174, %176 ]
  %158 = phi i8* [ %130, %152 ], [ %179, %176 ]
  %159 = phi i16* [ %129, %152 ], [ %178, %176 ]
  %160 = phi i16 [ %153, %152 ], [ %180, %176 ]
  %161 = load i8, i8* %158, align 1
  %162 = sext i32 %157 to i64
  %163 = getelementptr inbounds i8, i8* %158, i64 %162
  store i8 %161, i8* %163, align 1
  %164 = trunc i32 %157 to i16
  store i16 %164, i16* %159, align 2
  %165 = sub i16 %160, %164
  %166 = getelementptr inbounds i16, i16* %159, i64 %162
  store i16 %165, i16* %166, align 2
  br label %167

; <label>:167:                                    ; preds = %168, %156
  br label %183

; <label>:168:                                    ; preds = %152, %176
  %169 = phi i32 [ %181, %176 ], [ %154, %152 ]
  %170 = phi i16 [ %180, %176 ], [ %153, %152 ]
  %171 = phi i16* [ %178, %176 ], [ %129, %152 ]
  %172 = phi i8* [ %179, %176 ], [ %130, %152 ]
  %173 = phi i32 [ %174, %176 ], [ %110, %152 ]
  %174 = sub nsw i32 %173, %169
  %175 = icmp slt i32 %174, 1
  br i1 %175, label %167, label %176

; <label>:176:                                    ; preds = %168
  %177 = sext i16 %170 to i64
  %178 = getelementptr inbounds i16, i16* %171, i64 %177
  %179 = getelementptr inbounds i8, i8* %172, i64 %177
  %180 = load i16, i16* %178, align 2
  %181 = sext i16 %180 to i32
  %182 = icmp slt i32 %174, %181
  br i1 %182, label %156, label %168

; <label>:183:                                    ; preds = %167, %183
  %184 = phi i16* [ %191, %183 ], [ %129, %167 ]
  %185 = phi i8* [ %190, %183 ], [ %130, %167 ]
  %186 = phi i32 [ %192, %183 ], [ %110, %167 ]
  %187 = load i16, i16* %184, align 2
  %188 = sext i16 %187 to i32
  %189 = sext i16 %187 to i64
  %190 = getelementptr inbounds i8, i8* %185, i64 %189
  %191 = getelementptr inbounds i16, i16* %184, i64 %189
  %192 = sub nsw i32 %186, %188
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %183, label %194

; <label>:194:                                    ; preds = %183
  %195 = bitcast i8** %121 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = ptrtoint i8* %190 to i64
  %198 = sub i64 %197, %196
  %199 = trunc i64 %198 to i32
  store i32 %199, i32* %111, align 8
  %200 = icmp sgt i32 %110, 0
  br i1 %200, label %201, label %260

; <label>:201:                                    ; preds = %194
  %202 = load i16*, i16** %117, align 8
  br label %203

; <label>:203:                                    ; preds = %201, %221
  %204 = phi i16* [ %202, %201 ], [ %223, %221 ]
  %205 = phi i32 [ 0, %201 ], [ %227, %221 ]
  %206 = add nsw i32 %205, %104
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i16, i16* %204, i64 %207
  %209 = load i16, i16* %208, align 2
  %210 = icmp sgt i16 %209, 1
  br i1 %210, label %229, label %221

; <label>:211:                                    ; preds = %221
  br i1 %200, label %212, label %260

; <label>:212:                                    ; preds = %211
  %213 = sext i32 %104 to i64
  %214 = sext i32 %110 to i64
  %215 = and i64 %214, 1
  %216 = icmp eq i32 %110, 1
  br i1 %216, label %244, label %217

; <label>:217:                                    ; preds = %212
  %218 = sub nsw i64 %214, %215
  br label %261

; <label>:219:                                    ; preds = %229
  %220 = getelementptr inbounds i16, i16* %239, i64 %207
  br label %221

; <label>:221:                                    ; preds = %219, %203
  %222 = phi i16* [ %208, %203 ], [ %220, %219 ]
  store i16 1, i16* %222, align 2
  %223 = load i16*, i16** %117, align 8
  %224 = getelementptr inbounds i16, i16* %223, i64 %207
  %225 = load i16, i16* %224, align 2
  %226 = sext i16 %225 to i32
  %227 = add nsw i32 %205, %226
  %228 = icmp slt i32 %227, %110
  br i1 %228, label %203, label %211

; <label>:229:                                    ; preds = %203, %229
  %230 = phi i64 [ %238, %229 ], [ 1, %203 ]
  %231 = phi i16* [ %239, %229 ], [ %204, %203 ]
  %232 = add nsw i64 %230, %207
  %233 = getelementptr inbounds i16, i16* %231, i64 %232
  store i16 1, i16* %233, align 2
  %234 = load i8*, i8** %121, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 %207
  %236 = load i8, i8* %235, align 1
  %237 = getelementptr inbounds i8, i8* %234, i64 %232
  store i8 %236, i8* %237, align 1
  %238 = add nuw nsw i64 %230, 1
  %239 = load i16*, i16** %117, align 8
  %240 = getelementptr inbounds i16, i16* %239, i64 %207
  %241 = load i16, i16* %240, align 2
  %242 = sext i16 %241 to i64
  %243 = icmp slt i64 %238, %242
  br i1 %243, label %229, label %219

; <label>:244:                                    ; preds = %261, %212
  %245 = phi i64 [ 0, %212 ], [ %289, %261 ]
  %246 = icmp eq i64 %215, 0
  br i1 %246, label %260, label %247

; <label>:247:                                    ; preds = %244
  %248 = load i8*, i8** %121, align 8
  %249 = add nuw nsw i64 %245, %213
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  %251 = getelementptr inbounds i8, i8* %105, i64 %245
  %252 = load i8, i8* %251, align 1
  %253 = load i8, i8* %250, align 1
  %254 = zext i8 %253 to i32
  %255 = zext i8 %252 to i32
  %256 = add nuw nsw i32 %254, %255
  %257 = lshr i32 %256, 8
  %258 = sub nsw i32 %256, %257
  %259 = trunc i32 %258 to i8
  store i8 %259, i8* %250, align 1
  br label %260

; <label>:260:                                    ; preds = %247, %244, %194, %126, %211
  ret void

; <label>:261:                                    ; preds = %261, %217
  %262 = phi i64 [ 0, %217 ], [ %289, %261 ]
  %263 = phi i64 [ %218, %217 ], [ %290, %261 ]
  %264 = load i8*, i8** %121, align 8
  %265 = add nuw nsw i64 %262, %213
  %266 = getelementptr inbounds i8, i8* %264, i64 %265
  %267 = getelementptr inbounds i8, i8* %105, i64 %262
  %268 = load i8, i8* %267, align 1
  %269 = load i8, i8* %266, align 1
  %270 = zext i8 %269 to i32
  %271 = zext i8 %268 to i32
  %272 = add nuw nsw i32 %270, %271
  %273 = lshr i32 %272, 8
  %274 = sub nsw i32 %272, %273
  %275 = trunc i32 %274 to i8
  store i8 %275, i8* %266, align 1
  %276 = or i64 %262, 1
  %277 = load i8*, i8** %121, align 8
  %278 = add nuw nsw i64 %276, %213
  %279 = getelementptr inbounds i8, i8* %277, i64 %278
  %280 = getelementptr inbounds i8, i8* %105, i64 %276
  %281 = load i8, i8* %280, align 1
  %282 = load i8, i8* %279, align 1
  %283 = zext i8 %282 to i32
  %284 = zext i8 %281 to i32
  %285 = add nuw nsw i32 %283, %284
  %286 = lshr i32 %285, 8
  %287 = sub nsw i32 %285, %286
  %288 = trunc i32 %287 to i8
  store i8 %288, i8* %279, align 1
  %289 = add nuw nsw i64 %262, 2
  %290 = add i64 %263, -2
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %244, label %261
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitter9blitAntiHEiih(%class.RunBasedAdditiveBlitter*, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %91, label %8

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %6, %10
  br i1 %11, label %90, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %14 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %13, i64 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  %18 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %19 = load i8*, i8** %18, align 8
  br i1 %17, label %20, label %31

; <label>:20:                                     ; preds = %31, %12
  %21 = phi i16* [ %15, %12 ], [ %41, %31 ]
  %22 = phi i8* [ %19, %12 ], [ %50, %31 ]
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %51

; <label>:25:                                     ; preds = %20
  %26 = load i16, i16* %21, align 2
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds i16, i16* %21, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %87, label %51

; <label>:31:                                     ; preds = %12, %31
  %32 = phi i8* [ %50, %31 ], [ %19, %12 ]
  %33 = phi i64 [ %46, %31 ], [ 0, %12 ]
  %34 = phi i32 [ %45, %31 ], [ 0, %12 ]
  %35 = getelementptr inbounds i8, i8* %32, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = icmp ugt i8 %36, -9
  %38 = icmp ult i8 %36, 8
  %39 = select i1 %38, i8 0, i8 %36
  %40 = select i1 %37, i8 -1, i8 %39
  store i8 %40, i8* %35, align 1
  %41 = load i16*, i16** %14, align 8
  %42 = getelementptr inbounds i16, i16* %41, i64 %33
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %34, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %41, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 0
  %50 = load i8*, i8** %18, align 8
  br i1 %49, label %20, label %31

; <label>:51:                                     ; preds = %25, %20
  %52 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %53 = load %class.SkBlitter*, %class.SkBlitter** %52, align 8
  %54 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = load i32, i32* %5, align 8
  %57 = bitcast %class.SkBlitter* %53 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %58 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %58, i64 4
  %60 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, align 8
  tail call void %60(%class.SkBlitter* %53, i32 %55, i32 %56, i8* %22, i16* %21) #12
  %61 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, 1
  %64 = add nsw i32 %62, 2
  %65 = sdiv i32 %64, 2
  %66 = add nsw i32 %63, %65
  %67 = shl i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  %72 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = srem i32 %71, %73
  store i32 %74, i32* %69, align 8
  %75 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  %76 = load i8*, i8** %75, align 8
  %77 = sext i32 %74 to i64
  %78 = mul nsw i64 %68, %77
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = bitcast i8* %79 to i16*
  %81 = bitcast %class.SkAlphaRuns* %13 to i8**
  store i8* %79, i8** %81, align 8
  %82 = sext i32 %62 to i64
  %83 = getelementptr inbounds i16, i16* %80, i64 %82
  %84 = getelementptr inbounds i16, i16* %83, i64 1
  %85 = bitcast i8** %18 to i16**
  store i16* %84, i16** %85, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %13, i32 %62) #12
  %86 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %86, align 8
  br label %87

; <label>:87:                                     ; preds = %51, %25
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %5, align 8
  br label %90

; <label>:90:                                     ; preds = %8, %87
  store i32 %2, i32* %5, align 8
  br label %91

; <label>:91:                                     ; preds = %4, %90
  %92 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %93 = load i32, i32* %92, align 8
  %94 = sub nsw i32 %1, %93
  %95 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  %96 = load i32, i32* %95, align 8
  %97 = icmp slt i32 %94, %96
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %91
  store i32 0, i32* %95, align 8
  br label %99

; <label>:99:                                     ; preds = %98, %91
  %100 = phi i32 [ 0, %98 ], [ %96, %91 ]
  %101 = icmp sgt i32 %94, -1
  br i1 %101, label %102, label %195

; <label>:102:                                    ; preds = %99
  %103 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %94, %104
  br i1 %105, label %106, label %195

; <label>:106:                                    ; preds = %102
  %107 = zext i8 %3 to i32
  %108 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 0
  %109 = load i16*, i16** %108, align 8
  %110 = sext i32 %100 to i64
  %111 = getelementptr inbounds i16, i16* %109, i64 %110
  %112 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %113 = load i8*, i8** %112, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %110
  %115 = sub nsw i32 %94, %100
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i16, i16* %111, i64 %116
  %118 = getelementptr inbounds i8, i8* %114, i64 %116
  %119 = icmp sgt i32 %115, 0
  br i1 %119, label %120, label %140

; <label>:120:                                    ; preds = %106, %134
  %121 = phi i32 [ %138, %134 ], [ %115, %106 ]
  %122 = phi i8* [ %137, %134 ], [ %114, %106 ]
  %123 = phi i16* [ %136, %134 ], [ %111, %106 ]
  %124 = load i16, i16* %123, align 2
  %125 = sext i16 %124 to i32
  %126 = icmp slt i32 %121, %125
  br i1 %126, label %127, label %134

; <label>:127:                                    ; preds = %120
  %128 = load i8, i8* %122, align 1
  %129 = sext i32 %121 to i64
  %130 = getelementptr inbounds i8, i8* %122, i64 %129
  store i8 %128, i8* %130, align 1
  %131 = trunc i32 %121 to i16
  store i16 %131, i16* %123, align 2
  %132 = sub i16 %124, %131
  %133 = getelementptr inbounds i16, i16* %123, i64 %129
  store i16 %132, i16* %133, align 2
  br label %140

; <label>:134:                                    ; preds = %120
  %135 = sext i16 %124 to i64
  %136 = getelementptr inbounds i16, i16* %123, i64 %135
  %137 = getelementptr inbounds i8, i8* %122, i64 %135
  %138 = sub nsw i32 %121, %125
  %139 = icmp sgt i32 %138, 0
  br i1 %139, label %120, label %140

; <label>:140:                                    ; preds = %134, %127, %106
  %141 = load i16, i16* %117, align 2
  %142 = icmp sgt i16 %141, 1
  br i1 %142, label %145, label %143

; <label>:143:                                    ; preds = %140
  %144 = sext i16 %141 to i32
  br label %157

; <label>:145:                                    ; preds = %165, %140
  %146 = phi i32 [ 1, %140 ], [ %163, %165 ]
  %147 = phi i8* [ %118, %140 ], [ %168, %165 ]
  %148 = phi i16* [ %117, %140 ], [ %167, %165 ]
  %149 = phi i16 [ %141, %140 ], [ %169, %165 ]
  %150 = load i8, i8* %147, align 1
  %151 = sext i32 %146 to i64
  %152 = getelementptr inbounds i8, i8* %147, i64 %151
  store i8 %150, i8* %152, align 1
  %153 = trunc i32 %146 to i16
  store i16 %153, i16* %148, align 2
  %154 = sub i16 %149, %153
  %155 = getelementptr inbounds i16, i16* %148, i64 %151
  store i16 %154, i16* %155, align 2
  br label %156

; <label>:156:                                    ; preds = %157, %145
  br label %172

; <label>:157:                                    ; preds = %143, %165
  %158 = phi i32 [ %170, %165 ], [ %144, %143 ]
  %159 = phi i16 [ %169, %165 ], [ %141, %143 ]
  %160 = phi i16* [ %167, %165 ], [ %117, %143 ]
  %161 = phi i8* [ %168, %165 ], [ %118, %143 ]
  %162 = phi i32 [ %163, %165 ], [ 1, %143 ]
  %163 = sub nsw i32 %162, %158
  %164 = icmp slt i32 %163, 1
  br i1 %164, label %156, label %165

; <label>:165:                                    ; preds = %157
  %166 = sext i16 %159 to i64
  %167 = getelementptr inbounds i16, i16* %160, i64 %166
  %168 = getelementptr inbounds i8, i8* %161, i64 %166
  %169 = load i16, i16* %167, align 2
  %170 = sext i16 %169 to i32
  %171 = icmp slt i32 %163, %170
  br i1 %171, label %145, label %157

; <label>:172:                                    ; preds = %156, %172
  %173 = phi i16* [ %186, %172 ], [ %117, %156 ]
  %174 = phi i8* [ %185, %172 ], [ %118, %156 ]
  %175 = phi i32 [ %187, %172 ], [ 1, %156 ]
  %176 = load i8, i8* %174, align 1
  %177 = zext i8 %176 to i32
  %178 = add nuw nsw i32 %177, %107
  %179 = lshr i32 %178, 8
  %180 = sub nsw i32 %178, %179
  %181 = trunc i32 %180 to i8
  store i8 %181, i8* %174, align 1
  %182 = load i16, i16* %173, align 2
  %183 = sext i16 %182 to i32
  %184 = sext i16 %182 to i64
  %185 = getelementptr inbounds i8, i8* %174, i64 %184
  %186 = getelementptr inbounds i16, i16* %173, i64 %184
  %187 = sub nsw i32 %175, %183
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %172, label %189

; <label>:189:                                    ; preds = %172
  %190 = bitcast i8** %112 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = ptrtoint i8* %185 to i64
  %193 = sub i64 %192, %191
  %194 = trunc i64 %193 to i32
  store i32 %194, i32* %95, align 8
  br label %195

; <label>:195:                                    ; preds = %99, %189, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitter9blitAntiHEiiih(%class.RunBasedAdditiveBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %92, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %7, %11
  br i1 %12, label %91, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %15 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %14, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 0
  %19 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %20 = load i8*, i8** %19, align 8
  br i1 %18, label %21, label %32

; <label>:21:                                     ; preds = %32, %13
  %22 = phi i16* [ %16, %13 ], [ %42, %32 ]
  %23 = phi i8* [ %20, %13 ], [ %51, %32 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %52

; <label>:26:                                     ; preds = %21
  %27 = load i16, i16* %22, align 2
  %28 = sext i16 %27 to i64
  %29 = getelementptr inbounds i16, i16* %22, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %88, label %52

; <label>:32:                                     ; preds = %13, %32
  %33 = phi i8* [ %51, %32 ], [ %20, %13 ]
  %34 = phi i64 [ %47, %32 ], [ 0, %13 ]
  %35 = phi i32 [ %46, %32 ], [ 0, %13 ]
  %36 = getelementptr inbounds i8, i8* %33, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = icmp ugt i8 %37, -9
  %39 = icmp ult i8 %37, 8
  %40 = select i1 %39, i8 0, i8 %37
  %41 = select i1 %38, i8 -1, i8 %40
  store i8 %41, i8* %36, align 1
  %42 = load i16*, i16** %15, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %34
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = add nsw i32 %35, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %42, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  %51 = load i8*, i8** %19, align 8
  br i1 %50, label %21, label %32

; <label>:52:                                     ; preds = %26, %21
  %53 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %54 = load %class.SkBlitter*, %class.SkBlitter** %53, align 8
  %55 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = load i32, i32* %6, align 8
  %58 = bitcast %class.SkBlitter* %54 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %59 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, i64 4
  %61 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %60, align 8
  tail call void %61(%class.SkBlitter* %54, i32 %56, i32 %57, i8* %23, i16* %22) #12
  %62 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 1
  %65 = add nsw i32 %63, 2
  %66 = sdiv i32 %65, 2
  %67 = add nsw i32 %64, %66
  %68 = shl i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  %73 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  %74 = load i32, i32* %73, align 8
  %75 = srem i32 %72, %74
  store i32 %75, i32* %70, align 8
  %76 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  %77 = load i8*, i8** %76, align 8
  %78 = sext i32 %75 to i64
  %79 = mul nsw i64 %69, %78
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = bitcast i8* %80 to i16*
  %82 = bitcast %class.SkAlphaRuns* %14 to i8**
  store i8* %80, i8** %82, align 8
  %83 = sext i32 %63 to i64
  %84 = getelementptr inbounds i16, i16* %81, i64 %83
  %85 = getelementptr inbounds i16, i16* %84, i64 1
  %86 = bitcast i8** %19 to i16**
  store i16* %85, i16** %86, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %14, i32 %63) #12
  %87 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %52, %26
  %89 = load i32, i32* %10, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %6, align 8
  br label %91

; <label>:91:                                     ; preds = %9, %88
  store i32 %2, i32* %6, align 8
  br label %92

; <label>:92:                                     ; preds = %5, %91
  %93 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = sub nsw i32 %1, %94
  %96 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  %97 = load i32, i32* %96, align 8
  %98 = icmp slt i32 %95, %97
  br i1 %98, label %99, label %100

; <label>:99:                                     ; preds = %92
  store i32 0, i32* %96, align 8
  br label %100

; <label>:100:                                    ; preds = %99, %92
  %101 = phi i32 [ 0, %99 ], [ %97, %92 ]
  %102 = icmp sgt i32 %95, -1
  br i1 %102, label %103, label %203

; <label>:103:                                    ; preds = %100
  %104 = add nsw i32 %95, %3
  %105 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %104, %106
  br i1 %107, label %203, label %108

; <label>:108:                                    ; preds = %103
  %109 = zext i8 %4 to i32
  %110 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 0
  %111 = load i16*, i16** %110, align 8
  %112 = sext i32 %101 to i64
  %113 = getelementptr inbounds i16, i16* %111, i64 %112
  %114 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %112
  %117 = sub nsw i32 %95, %101
  %118 = icmp eq i32 %3, 0
  br i1 %118, label %119, label %121

; <label>:119:                                    ; preds = %108
  %120 = ptrtoint i8* %115 to i64
  br label %197

; <label>:121:                                    ; preds = %108
  %122 = sext i32 %117 to i64
  %123 = getelementptr inbounds i16, i16* %113, i64 %122
  %124 = getelementptr inbounds i8, i8* %116, i64 %122
  %125 = icmp sgt i32 %117, 0
  br i1 %125, label %126, label %146

; <label>:126:                                    ; preds = %121, %140
  %127 = phi i32 [ %144, %140 ], [ %117, %121 ]
  %128 = phi i8* [ %143, %140 ], [ %116, %121 ]
  %129 = phi i16* [ %142, %140 ], [ %113, %121 ]
  %130 = load i16, i16* %129, align 2
  %131 = sext i16 %130 to i32
  %132 = icmp slt i32 %127, %131
  br i1 %132, label %133, label %140

; <label>:133:                                    ; preds = %126
  %134 = load i8, i8* %128, align 1
  %135 = sext i32 %127 to i64
  %136 = getelementptr inbounds i8, i8* %128, i64 %135
  store i8 %134, i8* %136, align 1
  %137 = trunc i32 %127 to i16
  store i16 %137, i16* %129, align 2
  %138 = sub i16 %130, %137
  %139 = getelementptr inbounds i16, i16* %129, i64 %135
  store i16 %138, i16* %139, align 2
  br label %146

; <label>:140:                                    ; preds = %126
  %141 = sext i16 %130 to i64
  %142 = getelementptr inbounds i16, i16* %129, i64 %141
  %143 = getelementptr inbounds i8, i8* %128, i64 %141
  %144 = sub nsw i32 %127, %131
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %126, label %146

; <label>:146:                                    ; preds = %140, %133, %121
  %147 = load i16, i16* %123, align 2
  %148 = sext i16 %147 to i32
  %149 = icmp sgt i32 %148, %3
  br i1 %149, label %150, label %162

; <label>:150:                                    ; preds = %170, %146
  %151 = phi i32 [ %3, %146 ], [ %168, %170 ]
  %152 = phi i8* [ %124, %146 ], [ %173, %170 ]
  %153 = phi i16* [ %123, %146 ], [ %172, %170 ]
  %154 = phi i16 [ %147, %146 ], [ %174, %170 ]
  %155 = load i8, i8* %152, align 1
  %156 = sext i32 %151 to i64
  %157 = getelementptr inbounds i8, i8* %152, i64 %156
  store i8 %155, i8* %157, align 1
  %158 = trunc i32 %151 to i16
  store i16 %158, i16* %153, align 2
  %159 = sub i16 %154, %158
  %160 = getelementptr inbounds i16, i16* %153, i64 %156
  store i16 %159, i16* %160, align 2
  br label %161

; <label>:161:                                    ; preds = %162, %150
  br label %177

; <label>:162:                                    ; preds = %146, %170
  %163 = phi i32 [ %175, %170 ], [ %148, %146 ]
  %164 = phi i16 [ %174, %170 ], [ %147, %146 ]
  %165 = phi i16* [ %172, %170 ], [ %123, %146 ]
  %166 = phi i8* [ %173, %170 ], [ %124, %146 ]
  %167 = phi i32 [ %168, %170 ], [ %3, %146 ]
  %168 = sub nsw i32 %167, %163
  %169 = icmp slt i32 %168, 1
  br i1 %169, label %161, label %170

; <label>:170:                                    ; preds = %162
  %171 = sext i16 %164 to i64
  %172 = getelementptr inbounds i16, i16* %165, i64 %171
  %173 = getelementptr inbounds i8, i8* %166, i64 %171
  %174 = load i16, i16* %172, align 2
  %175 = sext i16 %174 to i32
  %176 = icmp slt i32 %168, %175
  br i1 %176, label %150, label %162

; <label>:177:                                    ; preds = %161, %177
  %178 = phi i16* [ %191, %177 ], [ %123, %161 ]
  %179 = phi i8* [ %190, %177 ], [ %124, %161 ]
  %180 = phi i32 [ %192, %177 ], [ %3, %161 ]
  %181 = load i8, i8* %179, align 1
  %182 = zext i8 %181 to i32
  %183 = add nuw nsw i32 %182, %109
  %184 = lshr i32 %183, 8
  %185 = sub nsw i32 %183, %184
  %186 = trunc i32 %185 to i8
  store i8 %186, i8* %179, align 1
  %187 = load i16, i16* %178, align 2
  %188 = sext i16 %187 to i32
  %189 = sext i16 %187 to i64
  %190 = getelementptr inbounds i8, i8* %179, i64 %189
  %191 = getelementptr inbounds i16, i16* %178, i64 %189
  %192 = sub nsw i32 %180, %188
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %177, label %194

; <label>:194:                                    ; preds = %177
  %195 = bitcast i8** %114 to i64*
  %196 = load i64, i64* %195, align 8
  br label %197

; <label>:197:                                    ; preds = %119, %194
  %198 = phi i64 [ %120, %119 ], [ %196, %194 ]
  %199 = phi i8* [ %116, %119 ], [ %190, %194 ]
  %200 = ptrtoint i8* %199 to i64
  %201 = sub i64 %200, %198
  %202 = trunc i64 %201 to i32
  store i32 %202, i32* %96, align 8
  br label %203

; <label>:203:                                    ; preds = %103, %100, %197
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN23RunBasedAdditiveBlitter8getWidthEv(%class.RunBasedAdditiveBlitter* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiPKhi(%class.SafeRLEAdditiveBlitter*, i32, i32, i8* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %92, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %7, %11
  br i1 %12, label %91, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11
  %15 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %14, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 0
  %19 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %20 = load i8*, i8** %19, align 8
  br i1 %18, label %21, label %32

; <label>:21:                                     ; preds = %32, %13
  %22 = phi i16* [ %16, %13 ], [ %42, %32 ]
  %23 = phi i8* [ %20, %13 ], [ %51, %32 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %52

; <label>:26:                                     ; preds = %21
  %27 = load i16, i16* %22, align 2
  %28 = sext i16 %27 to i64
  %29 = getelementptr inbounds i16, i16* %22, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %88, label %52

; <label>:32:                                     ; preds = %13, %32
  %33 = phi i8* [ %51, %32 ], [ %20, %13 ]
  %34 = phi i64 [ %47, %32 ], [ 0, %13 ]
  %35 = phi i32 [ %46, %32 ], [ 0, %13 ]
  %36 = getelementptr inbounds i8, i8* %33, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = icmp ugt i8 %37, -9
  %39 = icmp ult i8 %37, 8
  %40 = select i1 %39, i8 0, i8 %37
  %41 = select i1 %38, i8 -1, i8 %40
  store i8 %41, i8* %36, align 1
  %42 = load i16*, i16** %15, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %34
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = add nsw i32 %35, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %42, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  %51 = load i8*, i8** %19, align 8
  br i1 %50, label %21, label %32

; <label>:52:                                     ; preds = %26, %21
  %53 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 1
  %54 = load %class.SkBlitter*, %class.SkBlitter** %53, align 8
  %55 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = load i32, i32* %6, align 8
  %58 = bitcast %class.SkBlitter* %54 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %59 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, i64 4
  %61 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %60, align 8
  tail call void %61(%class.SkBlitter* %54, i32 %56, i32 %57, i8* %23, i16* %22) #12
  %62 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 1
  %65 = add nsw i32 %63, 2
  %66 = sdiv i32 %65, 2
  %67 = add nsw i32 %64, %66
  %68 = shl i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 9
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  %73 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 6
  %74 = load i32, i32* %73, align 8
  %75 = srem i32 %72, %74
  store i32 %75, i32* %70, align 8
  %76 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 8
  %77 = load i8*, i8** %76, align 8
  %78 = sext i32 %75 to i64
  %79 = mul nsw i64 %69, %78
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = bitcast i8* %80 to i16*
  %82 = bitcast %class.SkAlphaRuns* %14 to i8**
  store i8* %80, i8** %82, align 8
  %83 = sext i32 %63 to i64
  %84 = getelementptr inbounds i16, i16* %81, i64 %83
  %85 = getelementptr inbounds i16, i16* %84, i64 1
  %86 = bitcast i8** %19 to i16**
  store i16* %85, i16** %86, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %14, i32 %63) #12
  %87 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  store i32 0, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %52, %26
  %89 = load i32, i32* %10, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %6, align 8
  br label %91

; <label>:91:                                     ; preds = %9, %88
  store i32 %2, i32* %6, align 8
  br label %92

; <label>:92:                                     ; preds = %5, %91
  %93 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = sub nsw i32 %1, %94
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %97, label %102

; <label>:97:                                     ; preds = %92
  %98 = add nsw i32 %95, %4
  %99 = sext i32 %95 to i64
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds i8, i8* %3, i64 %100
  br label %102

; <label>:102:                                    ; preds = %97, %92
  %103 = phi i32 [ %98, %97 ], [ %4, %92 ]
  %104 = phi i32 [ 0, %97 ], [ %95, %92 ]
  %105 = phi i8* [ %101, %97 ], [ %3, %92 ]
  %106 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = sub nsw i32 %107, %104
  %109 = icmp slt i32 %103, %108
  %110 = select i1 %109, i32 %103, i32 %108
  %111 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  %112 = load i32, i32* %111, align 8
  %113 = icmp slt i32 %104, %112
  br i1 %113, label %114, label %115

; <label>:114:                                    ; preds = %102
  store i32 0, i32* %111, align 8
  br label %115

; <label>:115:                                    ; preds = %114, %102
  %116 = phi i32 [ 0, %114 ], [ %112, %102 ]
  %117 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 0
  %118 = load i16*, i16** %117, align 8
  %119 = sext i32 %116 to i64
  %120 = getelementptr inbounds i16, i16* %118, i64 %119
  %121 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 %119
  %124 = sub nsw i32 %104, %116
  %125 = icmp eq i32 %110, 0
  br i1 %125, label %126, label %127

; <label>:126:                                    ; preds = %115
  store i32 %116, i32* %111, align 8
  br label %260

; <label>:127:                                    ; preds = %115
  %128 = sext i32 %124 to i64
  %129 = getelementptr inbounds i16, i16* %120, i64 %128
  %130 = getelementptr inbounds i8, i8* %123, i64 %128
  %131 = icmp sgt i32 %124, 0
  br i1 %131, label %132, label %152

; <label>:132:                                    ; preds = %127, %146
  %133 = phi i32 [ %150, %146 ], [ %124, %127 ]
  %134 = phi i8* [ %149, %146 ], [ %123, %127 ]
  %135 = phi i16* [ %148, %146 ], [ %120, %127 ]
  %136 = load i16, i16* %135, align 2
  %137 = sext i16 %136 to i32
  %138 = icmp slt i32 %133, %137
  br i1 %138, label %139, label %146

; <label>:139:                                    ; preds = %132
  %140 = load i8, i8* %134, align 1
  %141 = sext i32 %133 to i64
  %142 = getelementptr inbounds i8, i8* %134, i64 %141
  store i8 %140, i8* %142, align 1
  %143 = trunc i32 %133 to i16
  store i16 %143, i16* %135, align 2
  %144 = sub i16 %136, %143
  %145 = getelementptr inbounds i16, i16* %135, i64 %141
  store i16 %144, i16* %145, align 2
  br label %152

; <label>:146:                                    ; preds = %132
  %147 = sext i16 %136 to i64
  %148 = getelementptr inbounds i16, i16* %135, i64 %147
  %149 = getelementptr inbounds i8, i8* %134, i64 %147
  %150 = sub nsw i32 %133, %137
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %132, label %152

; <label>:152:                                    ; preds = %146, %139, %127
  %153 = load i16, i16* %129, align 2
  %154 = sext i16 %153 to i32
  %155 = icmp slt i32 %110, %154
  br i1 %155, label %156, label %168

; <label>:156:                                    ; preds = %176, %152
  %157 = phi i32 [ %110, %152 ], [ %174, %176 ]
  %158 = phi i8* [ %130, %152 ], [ %179, %176 ]
  %159 = phi i16* [ %129, %152 ], [ %178, %176 ]
  %160 = phi i16 [ %153, %152 ], [ %180, %176 ]
  %161 = load i8, i8* %158, align 1
  %162 = sext i32 %157 to i64
  %163 = getelementptr inbounds i8, i8* %158, i64 %162
  store i8 %161, i8* %163, align 1
  %164 = trunc i32 %157 to i16
  store i16 %164, i16* %159, align 2
  %165 = sub i16 %160, %164
  %166 = getelementptr inbounds i16, i16* %159, i64 %162
  store i16 %165, i16* %166, align 2
  br label %167

; <label>:167:                                    ; preds = %168, %156
  br label %183

; <label>:168:                                    ; preds = %152, %176
  %169 = phi i32 [ %181, %176 ], [ %154, %152 ]
  %170 = phi i16 [ %180, %176 ], [ %153, %152 ]
  %171 = phi i16* [ %178, %176 ], [ %129, %152 ]
  %172 = phi i8* [ %179, %176 ], [ %130, %152 ]
  %173 = phi i32 [ %174, %176 ], [ %110, %152 ]
  %174 = sub nsw i32 %173, %169
  %175 = icmp slt i32 %174, 1
  br i1 %175, label %167, label %176

; <label>:176:                                    ; preds = %168
  %177 = sext i16 %170 to i64
  %178 = getelementptr inbounds i16, i16* %171, i64 %177
  %179 = getelementptr inbounds i8, i8* %172, i64 %177
  %180 = load i16, i16* %178, align 2
  %181 = sext i16 %180 to i32
  %182 = icmp slt i32 %174, %181
  br i1 %182, label %156, label %168

; <label>:183:                                    ; preds = %167, %183
  %184 = phi i16* [ %191, %183 ], [ %129, %167 ]
  %185 = phi i8* [ %190, %183 ], [ %130, %167 ]
  %186 = phi i32 [ %192, %183 ], [ %110, %167 ]
  %187 = load i16, i16* %184, align 2
  %188 = sext i16 %187 to i32
  %189 = sext i16 %187 to i64
  %190 = getelementptr inbounds i8, i8* %185, i64 %189
  %191 = getelementptr inbounds i16, i16* %184, i64 %189
  %192 = sub nsw i32 %186, %188
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %183, label %194

; <label>:194:                                    ; preds = %183
  %195 = bitcast i8** %121 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = ptrtoint i8* %190 to i64
  %198 = sub i64 %197, %196
  %199 = trunc i64 %198 to i32
  store i32 %199, i32* %111, align 8
  %200 = icmp sgt i32 %110, 0
  br i1 %200, label %201, label %260

; <label>:201:                                    ; preds = %194
  %202 = load i16*, i16** %117, align 8
  br label %203

; <label>:203:                                    ; preds = %201, %221
  %204 = phi i16* [ %202, %201 ], [ %223, %221 ]
  %205 = phi i32 [ 0, %201 ], [ %227, %221 ]
  %206 = add nsw i32 %205, %104
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds i16, i16* %204, i64 %207
  %209 = load i16, i16* %208, align 2
  %210 = icmp sgt i16 %209, 1
  br i1 %210, label %229, label %221

; <label>:211:                                    ; preds = %221
  br i1 %200, label %212, label %260

; <label>:212:                                    ; preds = %211
  %213 = sext i32 %104 to i64
  %214 = sext i32 %110 to i64
  %215 = and i64 %214, 1
  %216 = icmp eq i32 %110, 1
  br i1 %216, label %244, label %217

; <label>:217:                                    ; preds = %212
  %218 = sub nsw i64 %214, %215
  br label %261

; <label>:219:                                    ; preds = %229
  %220 = getelementptr inbounds i16, i16* %239, i64 %207
  br label %221

; <label>:221:                                    ; preds = %219, %203
  %222 = phi i16* [ %208, %203 ], [ %220, %219 ]
  store i16 1, i16* %222, align 2
  %223 = load i16*, i16** %117, align 8
  %224 = getelementptr inbounds i16, i16* %223, i64 %207
  %225 = load i16, i16* %224, align 2
  %226 = sext i16 %225 to i32
  %227 = add nsw i32 %205, %226
  %228 = icmp slt i32 %227, %110
  br i1 %228, label %203, label %211

; <label>:229:                                    ; preds = %203, %229
  %230 = phi i64 [ %238, %229 ], [ 1, %203 ]
  %231 = phi i16* [ %239, %229 ], [ %204, %203 ]
  %232 = add nsw i64 %230, %207
  %233 = getelementptr inbounds i16, i16* %231, i64 %232
  store i16 1, i16* %233, align 2
  %234 = load i8*, i8** %121, align 8
  %235 = getelementptr inbounds i8, i8* %234, i64 %207
  %236 = load i8, i8* %235, align 1
  %237 = getelementptr inbounds i8, i8* %234, i64 %232
  store i8 %236, i8* %237, align 1
  %238 = add nuw nsw i64 %230, 1
  %239 = load i16*, i16** %117, align 8
  %240 = getelementptr inbounds i16, i16* %239, i64 %207
  %241 = load i16, i16* %240, align 2
  %242 = sext i16 %241 to i64
  %243 = icmp slt i64 %238, %242
  br i1 %243, label %229, label %219

; <label>:244:                                    ; preds = %261, %212
  %245 = phi i64 [ 0, %212 ], [ %289, %261 ]
  %246 = icmp eq i64 %215, 0
  br i1 %246, label %260, label %247

; <label>:247:                                    ; preds = %244
  %248 = load i8*, i8** %121, align 8
  %249 = add nuw nsw i64 %245, %213
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  %251 = getelementptr inbounds i8, i8* %105, i64 %245
  %252 = load i8, i8* %251, align 1
  %253 = load i8, i8* %250, align 1
  %254 = zext i8 %253 to i32
  %255 = zext i8 %252 to i32
  %256 = add nuw nsw i32 %254, %255
  %257 = icmp ult i32 %256, 255
  %258 = select i1 %257, i32 %256, i32 255
  %259 = trunc i32 %258 to i8
  store i8 %259, i8* %250, align 1
  br label %260

; <label>:260:                                    ; preds = %247, %244, %194, %126, %211
  ret void

; <label>:261:                                    ; preds = %261, %217
  %262 = phi i64 [ 0, %217 ], [ %289, %261 ]
  %263 = phi i64 [ %218, %217 ], [ %290, %261 ]
  %264 = load i8*, i8** %121, align 8
  %265 = add nuw nsw i64 %262, %213
  %266 = getelementptr inbounds i8, i8* %264, i64 %265
  %267 = getelementptr inbounds i8, i8* %105, i64 %262
  %268 = load i8, i8* %267, align 1
  %269 = load i8, i8* %266, align 1
  %270 = zext i8 %269 to i32
  %271 = zext i8 %268 to i32
  %272 = add nuw nsw i32 %270, %271
  %273 = icmp ult i32 %272, 255
  %274 = select i1 %273, i32 %272, i32 255
  %275 = trunc i32 %274 to i8
  store i8 %275, i8* %266, align 1
  %276 = or i64 %262, 1
  %277 = load i8*, i8** %121, align 8
  %278 = add nuw nsw i64 %276, %213
  %279 = getelementptr inbounds i8, i8* %277, i64 %278
  %280 = getelementptr inbounds i8, i8* %105, i64 %276
  %281 = load i8, i8* %280, align 1
  %282 = load i8, i8* %279, align 1
  %283 = zext i8 %282 to i32
  %284 = zext i8 %281 to i32
  %285 = add nuw nsw i32 %283, %284
  %286 = icmp ult i32 %285, 255
  %287 = select i1 %286, i32 %285, i32 255
  %288 = trunc i32 %287 to i8
  store i8 %288, i8* %279, align 1
  %289 = add nuw nsw i64 %262, 2
  %290 = add i64 %263, -2
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %244, label %261
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiih(%class.SafeRLEAdditiveBlitter*, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %91, label %8

; <label>:8:                                      ; preds = %4
  %9 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %6, %10
  br i1 %11, label %90, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11
  %14 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %13, i64 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  %18 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %19 = load i8*, i8** %18, align 8
  br i1 %17, label %20, label %31

; <label>:20:                                     ; preds = %31, %12
  %21 = phi i16* [ %15, %12 ], [ %41, %31 ]
  %22 = phi i8* [ %19, %12 ], [ %50, %31 ]
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %51

; <label>:25:                                     ; preds = %20
  %26 = load i16, i16* %21, align 2
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds i16, i16* %21, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %87, label %51

; <label>:31:                                     ; preds = %12, %31
  %32 = phi i8* [ %50, %31 ], [ %19, %12 ]
  %33 = phi i64 [ %46, %31 ], [ 0, %12 ]
  %34 = phi i32 [ %45, %31 ], [ 0, %12 ]
  %35 = getelementptr inbounds i8, i8* %32, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = icmp ugt i8 %36, -9
  %38 = icmp ult i8 %36, 8
  %39 = select i1 %38, i8 0, i8 %36
  %40 = select i1 %37, i8 -1, i8 %39
  store i8 %40, i8* %35, align 1
  %41 = load i16*, i16** %14, align 8
  %42 = getelementptr inbounds i16, i16* %41, i64 %33
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %34, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %41, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 0
  %50 = load i8*, i8** %18, align 8
  br i1 %49, label %20, label %31

; <label>:51:                                     ; preds = %25, %20
  %52 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 1
  %53 = load %class.SkBlitter*, %class.SkBlitter** %52, align 8
  %54 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = load i32, i32* %5, align 8
  %57 = bitcast %class.SkBlitter* %53 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %58 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %58, i64 4
  %60 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, align 8
  tail call void %60(%class.SkBlitter* %53, i32 %55, i32 %56, i8* %22, i16* %21) #12
  %61 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, 1
  %64 = add nsw i32 %62, 2
  %65 = sdiv i32 %64, 2
  %66 = add nsw i32 %63, %65
  %67 = shl i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  %72 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = srem i32 %71, %73
  store i32 %74, i32* %69, align 8
  %75 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 8
  %76 = load i8*, i8** %75, align 8
  %77 = sext i32 %74 to i64
  %78 = mul nsw i64 %68, %77
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = bitcast i8* %79 to i16*
  %81 = bitcast %class.SkAlphaRuns* %13 to i8**
  store i8* %79, i8** %81, align 8
  %82 = sext i32 %62 to i64
  %83 = getelementptr inbounds i16, i16* %80, i64 %82
  %84 = getelementptr inbounds i16, i16* %83, i64 1
  %85 = bitcast i8** %18 to i16**
  store i16* %84, i16** %85, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %13, i32 %62) #12
  %86 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  store i32 0, i32* %86, align 8
  br label %87

; <label>:87:                                     ; preds = %51, %25
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %5, align 8
  br label %90

; <label>:90:                                     ; preds = %8, %87
  store i32 %2, i32* %5, align 8
  br label %91

; <label>:91:                                     ; preds = %4, %90
  %92 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %93 = load i32, i32* %92, align 8
  %94 = sub nsw i32 %1, %93
  %95 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  %96 = load i32, i32* %95, align 8
  %97 = icmp slt i32 %94, %96
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %91
  store i32 0, i32* %95, align 8
  br label %99

; <label>:99:                                     ; preds = %98, %91
  %100 = phi i32 [ 0, %98 ], [ %96, %91 ]
  %101 = icmp sgt i32 %94, -1
  br i1 %101, label %102, label %198

; <label>:102:                                    ; preds = %99
  %103 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %94, %104
  br i1 %105, label %106, label %198

; <label>:106:                                    ; preds = %102
  %107 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 0
  %108 = load i16*, i16** %107, align 8
  %109 = sext i32 %100 to i64
  %110 = getelementptr inbounds i16, i16* %108, i64 %109
  %111 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %112 = load i8*, i8** %111, align 8
  %113 = getelementptr inbounds i8, i8* %112, i64 %109
  %114 = sub nsw i32 %94, %100
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i16, i16* %110, i64 %115
  %117 = getelementptr inbounds i8, i8* %113, i64 %115
  %118 = icmp sgt i32 %114, 0
  br i1 %118, label %119, label %139

; <label>:119:                                    ; preds = %106, %133
  %120 = phi i32 [ %137, %133 ], [ %114, %106 ]
  %121 = phi i8* [ %136, %133 ], [ %113, %106 ]
  %122 = phi i16* [ %135, %133 ], [ %110, %106 ]
  %123 = load i16, i16* %122, align 2
  %124 = sext i16 %123 to i32
  %125 = icmp slt i32 %120, %124
  br i1 %125, label %126, label %133

; <label>:126:                                    ; preds = %119
  %127 = load i8, i8* %121, align 1
  %128 = sext i32 %120 to i64
  %129 = getelementptr inbounds i8, i8* %121, i64 %128
  store i8 %127, i8* %129, align 1
  %130 = trunc i32 %120 to i16
  store i16 %130, i16* %122, align 2
  %131 = sub i16 %123, %130
  %132 = getelementptr inbounds i16, i16* %122, i64 %128
  store i16 %131, i16* %132, align 2
  br label %139

; <label>:133:                                    ; preds = %119
  %134 = sext i16 %123 to i64
  %135 = getelementptr inbounds i16, i16* %122, i64 %134
  %136 = getelementptr inbounds i8, i8* %121, i64 %134
  %137 = sub nsw i32 %120, %124
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %119, label %139

; <label>:139:                                    ; preds = %133, %126, %106
  %140 = load i16, i16* %116, align 2
  %141 = icmp sgt i16 %140, 1
  br i1 %141, label %144, label %142

; <label>:142:                                    ; preds = %139
  %143 = sext i16 %140 to i32
  br label %156

; <label>:144:                                    ; preds = %164, %139
  %145 = phi i32 [ 1, %139 ], [ %162, %164 ]
  %146 = phi i8* [ %117, %139 ], [ %167, %164 ]
  %147 = phi i16* [ %116, %139 ], [ %166, %164 ]
  %148 = phi i16 [ %140, %139 ], [ %168, %164 ]
  %149 = load i8, i8* %146, align 1
  %150 = sext i32 %145 to i64
  %151 = getelementptr inbounds i8, i8* %146, i64 %150
  store i8 %149, i8* %151, align 1
  %152 = trunc i32 %145 to i16
  store i16 %152, i16* %147, align 2
  %153 = sub i16 %148, %152
  %154 = getelementptr inbounds i16, i16* %147, i64 %150
  store i16 %153, i16* %154, align 2
  br label %155

; <label>:155:                                    ; preds = %156, %144
  br label %171

; <label>:156:                                    ; preds = %142, %164
  %157 = phi i32 [ %169, %164 ], [ %143, %142 ]
  %158 = phi i16 [ %168, %164 ], [ %140, %142 ]
  %159 = phi i16* [ %166, %164 ], [ %116, %142 ]
  %160 = phi i8* [ %167, %164 ], [ %117, %142 ]
  %161 = phi i32 [ %162, %164 ], [ 1, %142 ]
  %162 = sub nsw i32 %161, %157
  %163 = icmp slt i32 %162, 1
  br i1 %163, label %155, label %164

; <label>:164:                                    ; preds = %156
  %165 = sext i16 %158 to i64
  %166 = getelementptr inbounds i16, i16* %159, i64 %165
  %167 = getelementptr inbounds i8, i8* %160, i64 %165
  %168 = load i16, i16* %166, align 2
  %169 = sext i16 %168 to i32
  %170 = icmp slt i32 %162, %169
  br i1 %170, label %144, label %156

; <label>:171:                                    ; preds = %155, %171
  %172 = phi i16* [ %179, %171 ], [ %116, %155 ]
  %173 = phi i8* [ %178, %171 ], [ %117, %155 ]
  %174 = phi i32 [ %180, %171 ], [ 1, %155 ]
  %175 = load i16, i16* %172, align 2
  %176 = sext i16 %175 to i32
  %177 = sext i16 %175 to i64
  %178 = getelementptr inbounds i8, i8* %173, i64 %177
  %179 = getelementptr inbounds i16, i16* %172, i64 %177
  %180 = sub nsw i32 %174, %176
  %181 = icmp sgt i32 %180, 0
  br i1 %181, label %171, label %182

; <label>:182:                                    ; preds = %171
  %183 = bitcast i8** %111 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = ptrtoint i8* %178 to i64
  %186 = sub i64 %185, %184
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %95, align 8
  %188 = inttoptr i64 %184 to i8*
  %189 = sext i32 %94 to i64
  %190 = getelementptr inbounds i8, i8* %188, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = zext i8 %3 to i32
  %194 = add nuw nsw i32 %192, %193
  %195 = icmp ult i32 %194, 255
  %196 = select i1 %195, i32 %194, i32 255
  %197 = trunc i32 %196 to i8
  store i8 %197, i8* %190, align 1
  br label %198

; <label>:198:                                    ; preds = %99, %182, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SafeRLEAdditiveBlitter9blitAntiHEiiih(%class.SafeRLEAdditiveBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %2
  br i1 %8, label %92, label %9

; <label>:9:                                      ; preds = %5
  %10 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %7, %11
  br i1 %12, label %91, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11
  %15 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %14, i64 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = load i16, i16* %16, align 2
  %18 = icmp eq i16 %17, 0
  %19 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %20 = load i8*, i8** %19, align 8
  br i1 %18, label %21, label %32

; <label>:21:                                     ; preds = %32, %13
  %22 = phi i16* [ %16, %13 ], [ %42, %32 ]
  %23 = phi i8* [ %20, %13 ], [ %51, %32 ]
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %52

; <label>:26:                                     ; preds = %21
  %27 = load i16, i16* %22, align 2
  %28 = sext i16 %27 to i64
  %29 = getelementptr inbounds i16, i16* %22, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %88, label %52

; <label>:32:                                     ; preds = %13, %32
  %33 = phi i8* [ %51, %32 ], [ %20, %13 ]
  %34 = phi i64 [ %47, %32 ], [ 0, %13 ]
  %35 = phi i32 [ %46, %32 ], [ 0, %13 ]
  %36 = getelementptr inbounds i8, i8* %33, i64 %34
  %37 = load i8, i8* %36, align 1
  %38 = icmp ugt i8 %37, -9
  %39 = icmp ult i8 %37, 8
  %40 = select i1 %39, i8 0, i8 %37
  %41 = select i1 %38, i8 -1, i8 %40
  store i8 %41, i8* %36, align 1
  %42 = load i16*, i16** %15, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %34
  %44 = load i16, i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = add nsw i32 %35, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i16, i16* %42, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 0
  %51 = load i8*, i8** %19, align 8
  br i1 %50, label %21, label %32

; <label>:52:                                     ; preds = %26, %21
  %53 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 1
  %54 = load %class.SkBlitter*, %class.SkBlitter** %53, align 8
  %55 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %56 = load i32, i32* %55, align 8
  %57 = load i32, i32* %6, align 8
  %58 = bitcast %class.SkBlitter* %54 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %59 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %58, align 8
  %60 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, i64 4
  %61 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %60, align 8
  tail call void %61(%class.SkBlitter* %54, i32 %56, i32 %57, i8* %23, i16* %22) #12
  %62 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = add nsw i32 %63, 1
  %65 = add nsw i32 %63, 2
  %66 = sdiv i32 %65, 2
  %67 = add nsw i32 %64, %66
  %68 = shl i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 9
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, 1
  %73 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 6
  %74 = load i32, i32* %73, align 8
  %75 = srem i32 %72, %74
  store i32 %75, i32* %70, align 8
  %76 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 8
  %77 = load i8*, i8** %76, align 8
  %78 = sext i32 %75 to i64
  %79 = mul nsw i64 %69, %78
  %80 = getelementptr inbounds i8, i8* %77, i64 %79
  %81 = bitcast i8* %80 to i16*
  %82 = bitcast %class.SkAlphaRuns* %14 to i8**
  store i8* %80, i8** %82, align 8
  %83 = sext i32 %63 to i64
  %84 = getelementptr inbounds i16, i16* %81, i64 %83
  %85 = getelementptr inbounds i16, i16* %84, i64 1
  %86 = bitcast i8** %19 to i16**
  store i16* %85, i16** %86, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %14, i32 %63) #12
  %87 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  store i32 0, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %52, %26
  %89 = load i32, i32* %10, align 4
  %90 = add nsw i32 %89, -1
  store i32 %90, i32* %6, align 8
  br label %91

; <label>:91:                                     ; preds = %9, %88
  store i32 %2, i32* %6, align 8
  br label %92

; <label>:92:                                     ; preds = %5, %91
  %93 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 4
  %94 = load i32, i32* %93, align 8
  %95 = sub nsw i32 %1, %94
  %96 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 12
  %97 = load i32, i32* %96, align 8
  %98 = icmp slt i32 %95, %97
  br i1 %98, label %99, label %100

; <label>:99:                                     ; preds = %92
  store i32 0, i32* %96, align 8
  br label %100

; <label>:100:                                    ; preds = %99, %92
  %101 = phi i32 [ 0, %99 ], [ %97, %92 ]
  %102 = icmp sgt i32 %95, -1
  br i1 %102, label %103, label %227

; <label>:103:                                    ; preds = %100
  %104 = add nsw i32 %95, %3
  %105 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %104, %106
  br i1 %107, label %227, label %108

; <label>:108:                                    ; preds = %103
  %109 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 0
  %110 = load i16*, i16** %109, align 8
  %111 = sext i32 %101 to i64
  %112 = getelementptr inbounds i16, i16* %110, i64 %111
  %113 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %0, i64 0, i32 0, i32 11, i32 1
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %111
  %116 = sub nsw i32 %95, %101
  %117 = icmp eq i32 %3, 0
  br i1 %117, label %118, label %119

; <label>:118:                                    ; preds = %108
  store i32 %101, i32* %96, align 8
  br label %227

; <label>:119:                                    ; preds = %108
  %120 = sext i32 %116 to i64
  %121 = getelementptr inbounds i16, i16* %112, i64 %120
  %122 = getelementptr inbounds i8, i8* %115, i64 %120
  %123 = icmp sgt i32 %116, 0
  br i1 %123, label %124, label %144

; <label>:124:                                    ; preds = %119, %138
  %125 = phi i32 [ %142, %138 ], [ %116, %119 ]
  %126 = phi i8* [ %141, %138 ], [ %115, %119 ]
  %127 = phi i16* [ %140, %138 ], [ %112, %119 ]
  %128 = load i16, i16* %127, align 2
  %129 = sext i16 %128 to i32
  %130 = icmp slt i32 %125, %129
  br i1 %130, label %131, label %138

; <label>:131:                                    ; preds = %124
  %132 = load i8, i8* %126, align 1
  %133 = sext i32 %125 to i64
  %134 = getelementptr inbounds i8, i8* %126, i64 %133
  store i8 %132, i8* %134, align 1
  %135 = trunc i32 %125 to i16
  store i16 %135, i16* %127, align 2
  %136 = sub i16 %128, %135
  %137 = getelementptr inbounds i16, i16* %127, i64 %133
  store i16 %136, i16* %137, align 2
  br label %144

; <label>:138:                                    ; preds = %124
  %139 = sext i16 %128 to i64
  %140 = getelementptr inbounds i16, i16* %127, i64 %139
  %141 = getelementptr inbounds i8, i8* %126, i64 %139
  %142 = sub nsw i32 %125, %129
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %124, label %144

; <label>:144:                                    ; preds = %138, %131, %119
  %145 = load i16, i16* %121, align 2
  %146 = sext i16 %145 to i32
  %147 = icmp sgt i32 %146, %3
  br i1 %147, label %148, label %160

; <label>:148:                                    ; preds = %168, %144
  %149 = phi i32 [ %3, %144 ], [ %166, %168 ]
  %150 = phi i8* [ %122, %144 ], [ %171, %168 ]
  %151 = phi i16* [ %121, %144 ], [ %170, %168 ]
  %152 = phi i16 [ %145, %144 ], [ %172, %168 ]
  %153 = load i8, i8* %150, align 1
  %154 = sext i32 %149 to i64
  %155 = getelementptr inbounds i8, i8* %150, i64 %154
  store i8 %153, i8* %155, align 1
  %156 = trunc i32 %149 to i16
  store i16 %156, i16* %151, align 2
  %157 = sub i16 %152, %156
  %158 = getelementptr inbounds i16, i16* %151, i64 %154
  store i16 %157, i16* %158, align 2
  br label %159

; <label>:159:                                    ; preds = %160, %148
  br label %175

; <label>:160:                                    ; preds = %144, %168
  %161 = phi i32 [ %173, %168 ], [ %146, %144 ]
  %162 = phi i16 [ %172, %168 ], [ %145, %144 ]
  %163 = phi i16* [ %170, %168 ], [ %121, %144 ]
  %164 = phi i8* [ %171, %168 ], [ %122, %144 ]
  %165 = phi i32 [ %166, %168 ], [ %3, %144 ]
  %166 = sub nsw i32 %165, %161
  %167 = icmp slt i32 %166, 1
  br i1 %167, label %159, label %168

; <label>:168:                                    ; preds = %160
  %169 = sext i16 %162 to i64
  %170 = getelementptr inbounds i16, i16* %163, i64 %169
  %171 = getelementptr inbounds i8, i8* %164, i64 %169
  %172 = load i16, i16* %170, align 2
  %173 = sext i16 %172 to i32
  %174 = icmp slt i32 %166, %173
  br i1 %174, label %148, label %160

; <label>:175:                                    ; preds = %159, %175
  %176 = phi i16* [ %183, %175 ], [ %121, %159 ]
  %177 = phi i8* [ %182, %175 ], [ %122, %159 ]
  %178 = phi i32 [ %184, %175 ], [ %3, %159 ]
  %179 = load i16, i16* %176, align 2
  %180 = sext i16 %179 to i32
  %181 = sext i16 %179 to i64
  %182 = getelementptr inbounds i8, i8* %177, i64 %181
  %183 = getelementptr inbounds i16, i16* %176, i64 %181
  %184 = sub nsw i32 %178, %180
  %185 = icmp sgt i32 %184, 0
  br i1 %185, label %175, label %186

; <label>:186:                                    ; preds = %175
  %187 = bitcast i8** %113 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = ptrtoint i8* %182 to i64
  %190 = sub i64 %189, %188
  %191 = trunc i64 %190 to i32
  store i32 %191, i32* %96, align 8
  %192 = icmp sgt i32 %3, 0
  br i1 %192, label %193, label %227

; <label>:193:                                    ; preds = %186
  %194 = inttoptr i64 %188 to i8*
  %195 = zext i8 %4 to i32
  %196 = sext i32 %95 to i64
  %197 = getelementptr inbounds i8, i8* %194, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = add nuw nsw i32 %199, %195
  %201 = icmp ult i32 %200, 255
  %202 = select i1 %201, i32 %200, i32 255
  %203 = trunc i32 %202 to i8
  store i8 %203, i8* %197, align 1
  %204 = load i16*, i16** %109, align 8
  %205 = getelementptr inbounds i16, i16* %204, i64 %196
  %206 = load i16, i16* %205, align 2
  %207 = sext i16 %206 to i32
  %208 = add nsw i32 %95, %207
  %209 = icmp slt i32 %208, %104
  br i1 %209, label %210, label %227

; <label>:210:                                    ; preds = %193, %210
  %211 = phi i32 [ %225, %210 ], [ %208, %193 ]
  %212 = load i8*, i8** %113, align 8
  %213 = sext i32 %211 to i64
  %214 = getelementptr inbounds i8, i8* %212, i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = add nuw nsw i32 %216, %195
  %218 = icmp ult i32 %217, 255
  %219 = select i1 %218, i32 %217, i32 255
  %220 = trunc i32 %219 to i8
  store i8 %220, i8* %214, align 1
  %221 = load i16*, i16** %109, align 8
  %222 = getelementptr inbounds i16, i16* %221, i64 %213
  %223 = load i16, i16* %222, align 2
  %224 = sext i16 %223 to i32
  %225 = add nsw i32 %211, %224
  %226 = icmp slt i32 %225, %104
  br i1 %226, label %210, label %227

; <label>:227:                                    ; preds = %210, %193, %118, %186, %103, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkScan11AAAFillPathERK6SkPathP9SkBlitterRK7SkIRectS7_b(%class.SkPath* dereferenceable(16), %class.SkBlitter*, %struct.SkIRect* nocapture readonly dereferenceable(16), %struct.SkIRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkAnalyticEdgeBuilder, align 8
  %7 = alloca %struct.SkAnalyticEdge, align 8
  %8 = alloca %struct.SkAnalyticEdge, align 8
  %9 = alloca %class.SkAnalyticEdgeBuilder, align 8
  %10 = alloca %struct.SkAnalyticEdge, align 8
  %11 = alloca %struct.SkAnalyticEdge, align 8
  %12 = alloca %struct.SkRect, align 4
  %13 = alloca { <2 x float>, <2 x float> }, align 8
  %14 = alloca %class.SkAnalyticEdgeBuilder, align 8
  %15 = alloca %struct.SkAnalyticEdge, align 8
  %16 = alloca %struct.SkAnalyticEdge, align 8
  %17 = alloca %class.MaskAdditiveBlitter, align 8
  %18 = alloca %class.RunBasedAdditiveBlitter, align 8
  %19 = alloca %class.SafeRLEAdditiveBlitter, align 8
  %20 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sext i32 %24 to i64
  %26 = sub nsw i64 %22, %25
  %27 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = sub nsw i64 %29, %32
  %34 = icmp slt i64 %26, 1
  %35 = icmp slt i64 %33, 1
  %36 = or i1 %34, %35
  br i1 %36, label %72, label %37

; <label>:37:                                     ; preds = %5
  %38 = or i64 %33, %26
  %39 = add nsw i64 %38, 2147483648
  %40 = icmp ugt i64 %39, 4294967295
  br i1 %40, label %72, label %41

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = sub nsw i64 %44, %47
  %49 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = sub nsw i64 %51, %54
  %56 = icmp slt i64 %48, 1
  %57 = icmp slt i64 %55, 1
  %58 = or i1 %56, %57
  br i1 %58, label %72, label %59

; <label>:59:                                     ; preds = %41
  %60 = or i64 %55, %48
  %61 = add nsw i64 %60, 2147483648
  %62 = icmp ugt i64 %61, 4294967295
  %63 = icmp sgt i32 %46, %24
  %64 = or i1 %63, %62
  %65 = icmp sgt i32 %53, %31
  %66 = or i1 %65, %64
  %67 = icmp slt i32 %43, %21
  %68 = or i1 %67, %66
  %69 = icmp sge i32 %50, %28
  %70 = xor i1 %68, true
  %71 = and i1 %69, %70
  br label %72

; <label>:72:                                     ; preds = %5, %37, %41, %59
  %73 = phi i1 [ %71, %59 ], [ false, %41 ], [ false, %37 ], [ false, %5 ]
  %74 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %75 = load i8, i8* %74, align 2
  %76 = and i8 %75, 2
  %77 = icmp ne i8 %76, 0
  %78 = sub i32 %21, %24
  %79 = icmp sgt i32 %78, 32
  br i1 %79, label %2963, label %80

; <label>:80:                                     ; preds = %72
  %81 = add nsw i32 %78, 3
  %82 = and i32 %81, -4
  %83 = sext i32 %82 to i64
  %84 = sub i32 %28, %31
  %85 = sext i32 %84 to i64
  %86 = mul nsw i64 %85, %83
  %87 = icmp sgt i64 %86, 1024
  %88 = or i1 %87, %77
  %89 = or i1 %88, %4
  br i1 %89, label %2963, label %90

; <label>:90:                                     ; preds = %80
  %91 = bitcast %struct.SkRect* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #12
  %92 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbPNS_9DirectionE(%class.SkPath* nonnull %0, %struct.SkRect* nonnull %12, i8* null, i32* null) #12
  br i1 %92, label %93, label %136

; <label>:93:                                     ; preds = %90
  %94 = bitcast { <2 x float>, <2 x float> }* %13 to %struct.SkRect*
  %95 = bitcast { <2 x float>, <2 x float> }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #12
  %96 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = sitofp i32 %97 to float
  %99 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = sitofp i32 %100 to float
  %102 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = sitofp i32 %103 to float
  %105 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = sitofp i32 %106 to float
  %108 = insertelement <2 x float> undef, float %98, i32 0
  %109 = insertelement <2 x float> %108, float %101, i32 1
  %110 = insertelement <2 x float> undef, float %104, i32 0
  %111 = insertelement <2 x float> %110, float %107, i32 1
  %112 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 0
  store <2 x float> %109, <2 x float>* %112, align 8
  %113 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %13, i64 0, i32 1
  store <2 x float> %111, <2 x float>* %113, align 8
  %114 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %12, %struct.SkRect* nonnull dereferenceable(16) %94) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #12
  br i1 %114, label %115, label %135

; <label>:115:                                    ; preds = %93
  %116 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %12, i64 0, i32 0
  %117 = load float, float* %116, align 4
  %118 = call float @llvm.floor.f32(float %117) #12
  %119 = fcmp olt float %118, 0x41DFFFFFE0000000
  %120 = select i1 %119, float %118, float 0x41DFFFFFE0000000
  %121 = fcmp ogt float %120, 0xC1DFFFFFE0000000
  %122 = select i1 %121, float %120, float 0xC1DFFFFFE0000000
  %123 = fptosi float %122 to i32
  %124 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %12, i64 0, i32 2
  %125 = load float, float* %124, align 4
  %126 = call float @llvm.ceil.f32(float %125) #12
  %127 = fcmp olt float %126, 0x41DFFFFFE0000000
  %128 = select i1 %127, float %126, float 0x41DFFFFFE0000000
  %129 = fcmp ogt float %128, 0xC1DFFFFFE0000000
  %130 = select i1 %129, float %128, float 0xC1DFFFFFE0000000
  %131 = fptosi float %130 to i32
  %132 = sub i32 %131, %123
  %133 = icmp slt i32 %132, 3
  br i1 %133, label %136, label %134

; <label>:134:                                    ; preds = %115
  call void @_ZN9SkBlitter15blitFatAntiRectERK6SkRect(%class.SkBlitter* %1, %struct.SkRect* nonnull dereferenceable(16) %12) #12
  br label %135

; <label>:135:                                    ; preds = %93, %134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #12
  br label %7584

; <label>:136:                                    ; preds = %115, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #12
  %137 = bitcast %class.MaskAdditiveBlitter* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1128, i8* nonnull %137) #12
  %138 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 0, i32 0, i32 1
  %139 = bitcast %class.SkAutoMalloc* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 16, i1 false) #12
  %140 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2, i32 0
  %142 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 1
  store %class.SkBlitter* %1, %class.SkBlitter** %142, align 8
  %143 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 4, i64 0
  %144 = bitcast i32* %143 to i8*
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  store i8* %145, i8** %141, align 8
  %146 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2, i32 1
  %147 = bitcast %struct.SkIRect* %146 to i8*
  %148 = bitcast %struct.SkIRect* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %147, i8* nonnull align 4 %148, i64 16, i1 false) #12
  %149 = load i32, i32* %20, align 4
  %150 = load i32, i32* %23, align 4
  %151 = sub i32 %149, %150
  %152 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2, i32 2
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2, i32 3
  store i32 1, i32* %153, align 4
  %154 = load i32, i32* %30, align 4
  %155 = add nsw i32 %154, -1
  %156 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 6
  store i32 %155, i32* %156, align 8
  %157 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 5
  store i8* null, i8** %157, align 8
  %158 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 3
  %159 = bitcast %struct.SkIRect* %158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %159, i8* nonnull align 4 %148, i64 16, i1 false) #12
  %160 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 3, i32 2
  %161 = load i32, i32* %160, align 8
  %162 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %158, i64 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = icmp sgt i32 %161, %163
  br i1 %164, label %165, label %206

; <label>:165:                                    ; preds = %136
  %166 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 3, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 3, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = icmp sgt i32 %167, %169
  br i1 %170, label %171, label %206

; <label>:171:                                    ; preds = %165
  %172 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = icmp sgt i32 %173, %175
  br i1 %176, label %177, label %206

; <label>:177:                                    ; preds = %171
  %178 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = icmp sgt i32 %179, %181
  br i1 %182, label %183, label %206

; <label>:183:                                    ; preds = %177
  %184 = icmp slt i32 %163, %175
  %185 = select i1 %184, i32 %175, i32 %163
  %186 = icmp slt i32 %169, %181
  %187 = select i1 %186, i32 %181, i32 %169
  %188 = icmp sgt i32 %161, %173
  %189 = select i1 %188, i32 %173, i32 %161
  %190 = icmp sgt i32 %167, %179
  %191 = select i1 %190, i32 %179, i32 %167
  %192 = sext i32 %189 to i64
  %193 = sext i32 %185 to i64
  %194 = sub nsw i64 %192, %193
  %195 = sext i32 %191 to i64
  %196 = sext i32 %187 to i64
  %197 = sub nsw i64 %195, %196
  %198 = icmp slt i64 %194, 1
  %199 = icmp slt i64 %197, 1
  %200 = or i1 %198, %199
  br i1 %200, label %206, label %201

; <label>:201:                                    ; preds = %183
  %202 = or i64 %197, %194
  %203 = add nsw i64 %202, 2147483648
  %204 = icmp ugt i64 %203, 4294967295
  br i1 %204, label %206, label %205

; <label>:205:                                    ; preds = %201
  store i32 %185, i32* %162, align 8
  store i32 %187, i32* %168, align 4
  store i32 %189, i32* %160, align 8
  store i32 %191, i32* %166, align 4
  br label %211

; <label>:206:                                    ; preds = %201, %183, %177, %171, %165, %136
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 0, i64 16, i1 false) #12
  %207 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %208 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %209 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %210 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  br label %211

; <label>:211:                                    ; preds = %205, %206
  %212 = phi i32* [ %178, %205 ], [ %210, %206 ]
  %213 = phi i32* [ %172, %205 ], [ %209, %206 ]
  %214 = phi i32* [ %180, %205 ], [ %208, %206 ]
  %215 = phi i32* [ %174, %205 ], [ %207, %206 ]
  %216 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2, i32 1, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2, i32 1, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = sub i32 %217, %219
  %221 = mul i32 %220, %151
  %222 = add i32 %221, 2
  %223 = zext i32 %222 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 0, i64 %223, i1 false) #12
  %224 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 0
  %225 = load i32, i32* %27, align 4
  %226 = bitcast %class.SkAnalyticEdgeBuilder* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %226) #12
  %227 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  %228 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %9, i64 0, i32 0, i32 1
  %229 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %9, i64 0, i32 0, i32 3, i32 0
  %230 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %9, i64 0, i32 0, i32 3, i32 1, i64 0
  %231 = bitcast i8*** %228 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 0, i64 24, i1 false) #12
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* nonnull %229, i8* nonnull %230, i64 512, i64 512) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV21SkAnalyticEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  %232 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %9, i64 0, i32 0
  %233 = select i1 %73, %struct.SkIRect* null, %struct.SkIRect* %3
  %234 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %232, %class.SkPath* nonnull dereferenceable(16) %0, %struct.SkIRect* %233) #12
  %235 = bitcast i8*** %228 to %struct.SkAnalyticEdge***
  %236 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %235, align 8
  %237 = load i32, i32* %215, align 4
  %238 = load i32, i32* %214, align 4
  %239 = load i32, i32* %213, align 4
  %240 = load i32, i32* %212, align 4
  %241 = icmp eq i32 %234, 0
  br i1 %241, label %242, label %276

; <label>:242:                                    ; preds = %211
  %243 = load i8, i8* %74, align 2
  %244 = and i8 %243, 2
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %2952, label %246

; <label>:246:                                    ; preds = %242
  %247 = icmp slt i32 %238, %154
  %248 = select i1 %247, i32 %154, i32 %238
  %249 = icmp sgt i32 %240, %225
  %250 = select i1 %249, i32 %225, i32 %240
  %251 = sext i32 %239 to i64
  %252 = sext i32 %237 to i64
  %253 = sub nsw i64 %251, %252
  %254 = sext i32 %250 to i64
  %255 = sext i32 %248 to i64
  %256 = sub nsw i64 %254, %255
  %257 = icmp slt i64 %253, 1
  %258 = icmp slt i64 %256, 1
  %259 = or i1 %257, %258
  br i1 %259, label %2952, label %260

; <label>:260:                                    ; preds = %246
  %261 = or i64 %256, %253
  %262 = add nsw i64 %261, 2147483648
  %263 = icmp ugt i64 %262, 4294967295
  br i1 %263, label %2952, label %264

; <label>:264:                                    ; preds = %260
  %265 = bitcast %class.MaskAdditiveBlitter* %17 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %266 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %265, align 8
  %267 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %266, i64 15
  %268 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %267, align 8
  %269 = call %class.SkBlitter* %268(%class.AdditiveBlitter* nonnull %224, i1 zeroext false) #12
  %270 = sub i32 %239, %237
  %271 = sub i32 %250, %248
  %272 = bitcast %class.SkBlitter* %269 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %273 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %272, align 8
  %274 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %273, i64 6
  %275 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %274, align 8
  call void %275(%class.SkBlitter* %269, i32 %237, i32 %248, i32 %270, i32 %271) #12
  br label %2952

; <label>:276:                                    ; preds = %211
  %277 = bitcast %struct.SkAnalyticEdge* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %277) #12
  %278 = bitcast %struct.SkAnalyticEdge* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %278) #12
  %279 = sext i32 %234 to i64
  %280 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %279
  %281 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %280, i64 -1
  %282 = icmp ugt %struct.SkAnalyticEdge** %281, %236
  br i1 %282, label %283, label %293

; <label>:283:                                    ; preds = %276
  %284 = ptrtoint %struct.SkAnalyticEdge** %281 to i64
  %285 = ptrtoint %struct.SkAnalyticEdge** %236 to i64
  %286 = sub i64 %284, %285
  %287 = lshr exact i64 %286, 3
  %288 = trunc i64 %287 to i32
  %289 = add i32 %288, -1
  %290 = call i32 @llvm.ctlz.i32(i32 %289, i1 false) #12, !range !9
  %291 = shl nuw nsw i32 %290, 1
  %292 = sub nsw i32 64, %291
  call void @_Z12SkTIntroSortIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEviPT_S5_T0_(i32 %292, %struct.SkAnalyticEdge** %236, %struct.SkAnalyticEdge** nonnull %281) #12
  br label %293

; <label>:293:                                    ; preds = %283, %276
  %294 = icmp sgt i32 %234, 1
  br i1 %294, label %295, label %350

; <label>:295:                                    ; preds = %293
  %296 = and i32 %234, 1
  %297 = xor i32 %296, 1
  %298 = icmp eq i32 %234, 2
  br i1 %298, label %334, label %299

; <label>:299:                                    ; preds = %295
  %300 = zext i32 %297 to i64
  %301 = zext i32 %234 to i64
  %302 = xor i64 %300, -1
  %303 = add nsw i64 %302, %301
  br label %304

; <label>:304:                                    ; preds = %304, %299
  %305 = phi i64 [ 1, %299 ], [ %331, %304 ]
  %306 = phi i64 [ %303, %299 ], [ %332, %304 ]
  %307 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %305
  %308 = bitcast %struct.SkAnalyticEdge** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = add nsw i64 %305, -1
  %311 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %310
  %312 = bitcast %struct.SkAnalyticEdge** %311 to i64**
  %313 = load i64*, i64** %312, align 8
  store i64 %309, i64* %313, align 8
  %314 = bitcast %struct.SkAnalyticEdge** %311 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %307, align 8
  %317 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %316, i64 0, i32 1
  %318 = bitcast %struct.SkAnalyticEdge** %317 to i64*
  store i64 %315, i64* %318, align 8
  %319 = add nuw nsw i64 %305, 1
  %320 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %319
  %321 = bitcast %struct.SkAnalyticEdge** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %305
  %324 = bitcast %struct.SkAnalyticEdge** %323 to i64**
  %325 = load i64*, i64** %324, align 8
  store i64 %322, i64* %325, align 8
  %326 = bitcast %struct.SkAnalyticEdge** %323 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %320, align 8
  %329 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %328, i64 0, i32 1
  %330 = bitcast %struct.SkAnalyticEdge** %329 to i64*
  store i64 %327, i64* %330, align 8
  %331 = add nuw nsw i64 %305, 2
  %332 = add i64 %306, -2
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %304

; <label>:334:                                    ; preds = %304, %295
  %335 = phi i64 [ 1, %295 ], [ %331, %304 ]
  %336 = icmp eq i32 %297, 0
  br i1 %336, label %350, label %337

; <label>:337:                                    ; preds = %334
  %338 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %335
  %339 = bitcast %struct.SkAnalyticEdge** %338 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = add nsw i64 %335, -1
  %342 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %341
  %343 = bitcast %struct.SkAnalyticEdge** %342 to i64**
  %344 = load i64*, i64** %343, align 8
  store i64 %340, i64* %344, align 8
  %345 = bitcast %struct.SkAnalyticEdge** %342 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %338, align 8
  %348 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %347, i64 0, i32 1
  %349 = bitcast %struct.SkAnalyticEdge** %348 to i64*
  store i64 %346, i64* %349, align 8
  br label %350

; <label>:350:                                    ; preds = %337, %334, %293
  %351 = add nsw i32 %234, -1
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, i64 %352
  %354 = bitcast %struct.SkAnalyticEdge** %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %236, align 8
  %357 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 1
  %358 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 0
  %359 = bitcast %struct.SkAnalyticEdge** %357 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %359, i8 0, i64 16, i1 false) #12
  store %struct.SkAnalyticEdge* %356, %struct.SkAnalyticEdge** %358, align 8
  %360 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 8
  store i32 -2147483647, i32* %360, align 4
  %361 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 7
  store i32 -2147483647, i32* %361, align 8
  %362 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 3
  store i32 -2147483647, i32* %362, align 8
  %363 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 4
  store i32 0, i32* %363, align 4
  %364 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 9
  store i32 2147483647, i32* %364, align 8
  %365 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %10, i64 0, i32 5
  store i32 -2147483647, i32* %365, align 8
  %366 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %356, i64 0, i32 1
  store %struct.SkAnalyticEdge* %10, %struct.SkAnalyticEdge** %366, align 8
  %367 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %367, align 8
  %368 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 1
  %369 = bitcast %struct.SkAnalyticEdge** %368 to i64*
  store i64 %355, i64* %369, align 8
  %370 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 0
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %370, align 8
  %371 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 8
  store i32 2147483647, i32* %371, align 4
  %372 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 7
  store i32 2147483647, i32* %372, align 8
  %373 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 3
  store i32 2147483647, i32* %373, align 8
  %374 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 4
  store i32 0, i32* %374, align 4
  %375 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 9
  store i32 2147483647, i32* %375, align 8
  %376 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 5
  store i32 2147483647, i32* %376, align 8
  %377 = inttoptr i64 %355 to %struct.SkAnalyticEdge*
  %378 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %377, i64 0, i32 0
  store %struct.SkAnalyticEdge* %11, %struct.SkAnalyticEdge** %378, align 8
  br i1 %73, label %386, label %379

; <label>:379:                                    ; preds = %350
  %380 = load i32, i32* %214, align 4
  %381 = icmp sgt i32 %380, %154
  %382 = select i1 %381, i32 %380, i32 %154
  %383 = load i32, i32* %212, align 4
  %384 = icmp slt i32 %383, %225
  %385 = select i1 %384, i32 %383, i32 %225
  br label %386

; <label>:386:                                    ; preds = %379, %350
  %387 = phi i32 [ %382, %379 ], [ %154, %350 ]
  %388 = phi i32 [ %385, %379 ], [ %225, %350 ]
  %389 = shl i32 %237, 16
  %390 = shl i32 %239, 16
  %391 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %392 = load %class.SkPathRef*, %class.SkPathRef** %391, align 8
  %393 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %392, i64 0, i32 13
  %394 = load i8, i8* %393, align 8
  %395 = icmp eq i8 %394, 0
  %396 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %392, i64 0, i32 1
  br i1 %395, label %405, label %397

; <label>:397:                                    ; preds = %386
  %398 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %392, i64 0, i32 3
  %399 = load %struct.SkPoint*, %struct.SkPoint** %398, align 8
  %400 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %392, i64 0, i32 6
  %401 = load i32, i32* %400, align 4
  %402 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* nonnull %396, %struct.SkPoint* %399, i32 %401) #12
  %403 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %392, i64 0, i32 14
  %404 = zext i1 %402 to i8
  store i8 %404, i8* %403, align 1
  store i8 0, i8* %393, align 8
  br label %405

; <label>:405:                                    ; preds = %397, %386
  %406 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %396, i64 0, i32 0
  %407 = load float, float* %406, align 4
  %408 = call float @llvm.floor.f32(float %407) #12
  %409 = fcmp olt float %408, 0x41DFFFFFE0000000
  %410 = select i1 %409, float %408, float 0x41DFFFFFE0000000
  %411 = fcmp ogt float %410, 0xC1DFFFFFE0000000
  %412 = select i1 %411, float %410, float 0xC1DFFFFFE0000000
  %413 = fptosi float %412 to i32
  %414 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %392, i64 0, i32 1, i32 2
  %415 = load float, float* %414, align 4
  %416 = call float @llvm.ceil.f32(float %415) #12
  %417 = fcmp olt float %416, 0x41DFFFFFE0000000
  %418 = select i1 %417, float %416, float 0x41DFFFFFE0000000
  %419 = fcmp ogt float %418, 0xC1DFFFFFE0000000
  %420 = select i1 %419, float %418, float 0xC1DFFFFFE0000000
  %421 = fptosi float %420 to i32
  %422 = shl i32 %413, 16
  %423 = icmp slt i32 %422, %389
  %424 = select i1 %423, i32 %389, i32 %422
  %425 = shl i32 %421, 16
  %426 = icmp slt i32 %390, %425
  %427 = select i1 %426, i32 %390, i32 %425
  %428 = load i8, i8* %74, align 2
  %429 = and i8 %428, 2
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %431, label %1734

; <label>:431:                                    ; preds = %405
  %432 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0
  %433 = load atomic i8, i8* %432 monotonic, align 1
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %435, label %437

; <label>:435:                                    ; preds = %431
  %436 = call zeroext i8 @_ZNK6SkPath20internalGetConvexityEv(%class.SkPath* nonnull %0) #12
  br label %437

; <label>:437:                                    ; preds = %435, %431
  %438 = phi i8 [ %436, %435 ], [ %433, %431 ]
  %439 = icmp eq i8 %438, 1
  %440 = and i1 %294, %439
  br i1 %440, label %441, label %1734

; <label>:441:                                    ; preds = %437
  %442 = bitcast %struct.SkAnalyticEdge* %10 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = inttoptr i64 %443 to %struct.SkAnalyticEdge*
  %445 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %444, i64 0, i32 0
  %446 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %445, align 8
  %447 = ptrtoint %struct.SkAnalyticEdge* %446 to i64
  %448 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %446, i64 0, i32 0
  %449 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %448, align 8
  %450 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %444, i64 0, i32 7
  %451 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %446, i64 0, i32 7
  %452 = load i32, i32* %451, align 4
  %453 = load i32, i32* %450, align 4
  %454 = icmp slt i32 %452, %453
  %455 = select i1 %454, i32 %453, i32 %452
  %456 = shl i32 %388, 16
  %457 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 1
  %458 = bitcast i64* %457 to i32*
  %459 = bitcast %class.MaskAdditiveBlitter* %17 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %460 = bitcast %class.MaskAdditiveBlitter* %17 to void (%class.AdditiveBlitter*, i32, i32)***
  %461 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %462 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %463 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 2, i32 0, i32 1
  %464 = bitcast %class.SkAutoMalloc* %463 to i32*
  %465 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 1, i32 0, i32 1, i32 1
  %466 = bitcast i64* %465 to i32*
  %467 = bitcast %class.MaskAdditiveBlitter* %17 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %468 = bitcast %class.MaskAdditiveBlitter* %17 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %469 = or i32 %424, 2048
  %470 = or i32 %427, 2048
  br label %471

; <label>:471:                                    ; preds = %1729, %441
  %472 = phi i64 [ %447, %441 ], [ %615, %1729 ]
  %473 = phi i64 [ %443, %441 ], [ %616, %1729 ]
  %474 = phi i32 [ %455, %441 ], [ %665, %1729 ]
  %475 = phi %struct.SkAnalyticEdge* [ %449, %441 ], [ %536, %1729 ]
  %476 = inttoptr i64 %473 to %struct.SkAnalyticEdge*
  %477 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %476, i64 0, i32 8
  %478 = load i32, i32* %477, align 4
  %479 = icmp sgt i32 %478, %474
  br i1 %479, label %482, label %490

; <label>:480:                                    ; preds = %504
  %481 = inttoptr i64 %505 to %struct.SkAnalyticEdge*
  br label %482

; <label>:482:                                    ; preds = %480, %471
  %483 = phi i64 [ %473, %471 ], [ %505, %480 ]
  %484 = phi %struct.SkAnalyticEdge* [ %475, %471 ], [ %506, %480 ]
  %485 = phi %struct.SkAnalyticEdge* [ %476, %471 ], [ %481, %480 ]
  %486 = inttoptr i64 %472 to %struct.SkAnalyticEdge*
  %487 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %486, i64 0, i32 8
  %488 = load i32, i32* %487, align 4
  %489 = icmp sgt i32 %488, %474
  br i1 %489, label %534, label %511

; <label>:490:                                    ; preds = %471, %504
  %491 = phi %struct.SkAnalyticEdge* [ %507, %504 ], [ %476, %471 ]
  %492 = phi %struct.SkAnalyticEdge* [ %506, %504 ], [ %475, %471 ]
  %493 = phi i64 [ %505, %504 ], [ %473, %471 ]
  %494 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %491, i32 %474, i1 zeroext true) #12
  br i1 %494, label %504, label %495

; <label>:495:                                    ; preds = %490
  %496 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %492, i64 0, i32 7
  %497 = load i32, i32* %496, align 8
  %498 = ashr i32 %497, 16
  %499 = icmp slt i32 %498, %388
  br i1 %499, label %500, label %2951

; <label>:500:                                    ; preds = %495
  %501 = ptrtoint %struct.SkAnalyticEdge* %492 to i64
  %502 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %492, i64 0, i32 0
  %503 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %502, align 8
  br label %504

; <label>:504:                                    ; preds = %500, %490
  %505 = phi i64 [ %493, %490 ], [ %501, %500 ]
  %506 = phi %struct.SkAnalyticEdge* [ %492, %490 ], [ %503, %500 ]
  %507 = inttoptr i64 %505 to %struct.SkAnalyticEdge*
  %508 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %507, i64 0, i32 8
  %509 = load i32, i32* %508, align 4
  %510 = icmp sgt i32 %509, %474
  br i1 %510, label %480, label %490

; <label>:511:                                    ; preds = %482, %525
  %512 = phi %struct.SkAnalyticEdge* [ %528, %525 ], [ %486, %482 ]
  %513 = phi %struct.SkAnalyticEdge* [ %527, %525 ], [ %484, %482 ]
  %514 = phi i64 [ %526, %525 ], [ %472, %482 ]
  %515 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %512, i32 %474, i1 zeroext true) #12
  br i1 %515, label %525, label %516

; <label>:516:                                    ; preds = %511
  %517 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %513, i64 0, i32 7
  %518 = load i32, i32* %517, align 8
  %519 = ashr i32 %518, 16
  %520 = icmp slt i32 %519, %388
  br i1 %520, label %521, label %2951

; <label>:521:                                    ; preds = %516
  %522 = ptrtoint %struct.SkAnalyticEdge* %513 to i64
  %523 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %513, i64 0, i32 0
  %524 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %523, align 8
  br label %525

; <label>:525:                                    ; preds = %521, %511
  %526 = phi i64 [ %514, %511 ], [ %522, %521 ]
  %527 = phi %struct.SkAnalyticEdge* [ %513, %511 ], [ %524, %521 ]
  %528 = inttoptr i64 %526 to %struct.SkAnalyticEdge*
  %529 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %528, i64 0, i32 8
  %530 = load i32, i32* %529, align 4
  %531 = icmp sgt i32 %530, %474
  br i1 %531, label %532, label %511

; <label>:532:                                    ; preds = %525
  %533 = inttoptr i64 %526 to %struct.SkAnalyticEdge*
  br label %534

; <label>:534:                                    ; preds = %532, %482
  %535 = phi i64 [ %472, %482 ], [ %526, %532 ]
  %536 = phi %struct.SkAnalyticEdge* [ %484, %482 ], [ %527, %532 ]
  %537 = phi %struct.SkAnalyticEdge* [ %486, %482 ], [ %533, %532 ]
  %538 = ashr i32 %474, 16
  %539 = icmp slt i32 %538, %388
  br i1 %539, label %540, label %2951

; <label>:540:                                    ; preds = %534
  %541 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 6
  %542 = load i32, i32* %541, align 4
  %543 = add nsw i32 %542, 65536
  %544 = icmp eq i32 %543, %474
  br i1 %544, label %545, label %551

; <label>:545:                                    ; preds = %540
  %546 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 3
  %547 = load i32, i32* %546, align 8
  %548 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 4
  %549 = load i32, i32* %548, align 4
  %550 = add nsw i32 %549, %547
  store i32 %550, i32* %546, align 8
  br label %568

; <label>:551:                                    ; preds = %540
  %552 = icmp eq i32 %542, %474
  br i1 %552, label %569, label %553

; <label>:553:                                    ; preds = %551
  %554 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 5
  %555 = load i32, i32* %554, align 8
  %556 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 4
  %557 = load i32, i32* %556, align 4
  %558 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 7
  %559 = load i32, i32* %558, align 8
  %560 = sub nsw i32 %474, %559
  %561 = sext i32 %557 to i64
  %562 = sext i32 %560 to i64
  %563 = mul nsw i64 %562, %561
  %564 = lshr i64 %563, 16
  %565 = trunc i64 %564 to i32
  %566 = add nsw i32 %555, %565
  %567 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 3
  store i32 %566, i32* %567, align 8
  br label %568

; <label>:568:                                    ; preds = %545, %553
  store i32 %474, i32* %541, align 4
  br label %569

; <label>:569:                                    ; preds = %568, %551
  %570 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 6
  %571 = load i32, i32* %570, align 4
  %572 = add nsw i32 %571, 65536
  %573 = icmp eq i32 %572, %474
  br i1 %573, label %574, label %580

; <label>:574:                                    ; preds = %569
  %575 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 3
  %576 = load i32, i32* %575, align 8
  %577 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 4
  %578 = load i32, i32* %577, align 4
  %579 = add nsw i32 %578, %576
  store i32 %579, i32* %575, align 8
  store i32 %474, i32* %570, align 4
  br label %600

; <label>:580:                                    ; preds = %569
  %581 = icmp eq i32 %571, %474
  br i1 %581, label %582, label %585

; <label>:582:                                    ; preds = %580
  %583 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 3
  %584 = load i32, i32* %583, align 8
  br label %600

; <label>:585:                                    ; preds = %580
  %586 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 5
  %587 = load i32, i32* %586, align 8
  %588 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 4
  %589 = load i32, i32* %588, align 4
  %590 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 7
  %591 = load i32, i32* %590, align 8
  %592 = sub nsw i32 %474, %591
  %593 = sext i32 %589 to i64
  %594 = sext i32 %592 to i64
  %595 = mul nsw i64 %594, %593
  %596 = lshr i64 %595, 16
  %597 = trunc i64 %596 to i32
  %598 = add nsw i32 %587, %597
  %599 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 3
  store i32 %598, i32* %599, align 8
  store i32 %474, i32* %570, align 4
  br label %600

; <label>:600:                                    ; preds = %585, %582, %574
  %601 = phi i32 [ %584, %582 ], [ %579, %574 ], [ %598, %585 ]
  %602 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 3
  %603 = load i32, i32* %602, align 8
  %604 = icmp sgt i32 %603, %601
  br i1 %604, label %613, label %605

; <label>:605:                                    ; preds = %600
  %606 = icmp eq i32 %603, %601
  br i1 %606, label %607, label %614

; <label>:607:                                    ; preds = %605
  %608 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %485, i64 0, i32 4
  %609 = load i32, i32* %608, align 4
  %610 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %537, i64 0, i32 4
  %611 = load i32, i32* %610, align 4
  %612 = icmp sgt i32 %609, %611
  br i1 %612, label %613, label %614

; <label>:613:                                    ; preds = %607, %600
  br label %614

; <label>:614:                                    ; preds = %613, %607, %605
  %615 = phi i64 [ %483, %613 ], [ %535, %607 ], [ %535, %605 ]
  %616 = phi i64 [ %535, %613 ], [ %483, %607 ], [ %483, %605 ]
  %617 = inttoptr i64 %616 to %struct.SkAnalyticEdge*
  %618 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 8
  %619 = load i32, i32* %618, align 4
  %620 = inttoptr i64 %615 to %struct.SkAnalyticEdge*
  %621 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 8
  %622 = load i32, i32* %621, align 4
  %623 = icmp sgt i32 %619, %622
  %624 = select i1 %623, i32 %622, i32 %619
  %625 = ptrtoint %struct.SkAnalyticEdge* %536 to i64
  %626 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %536, i64 0, i32 7
  %627 = load i32, i32* %626, align 8
  %628 = icmp slt i32 %627, %456
  br i1 %628, label %629, label %662

; <label>:629:                                    ; preds = %614
  %630 = add nsw i32 %619, 65536
  %631 = icmp slt i32 %630, %622
  br i1 %631, label %632, label %634

; <label>:632:                                    ; preds = %629
  %633 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %617, %struct.SkAnalyticEdge* nonnull %536) #12
  br i1 %633, label %659, label %662

; <label>:634:                                    ; preds = %629
  %635 = add nsw i32 %622, 65536
  %636 = icmp sgt i32 %619, %635
  br i1 %636, label %637, label %639

; <label>:637:                                    ; preds = %634
  %638 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %620, %struct.SkAnalyticEdge* nonnull %536) #12
  br i1 %638, label %659, label %662

; <label>:639:                                    ; preds = %634
  %640 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %536, i64 0, i32 0
  %641 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %640, align 8
  %642 = ptrtoint %struct.SkAnalyticEdge* %641 to i64
  %643 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %641, i64 0, i32 7
  %644 = load i32, i32* %643, align 8
  %645 = icmp slt i32 %644, %456
  br i1 %645, label %646, label %662

; <label>:646:                                    ; preds = %639
  %647 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %641, i64 0, i32 5
  %648 = load i32, i32* %647, align 8
  %649 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %536, i64 0, i32 5
  %650 = load i32, i32* %649, align 8
  %651 = icmp slt i32 %648, %650
  %652 = select i1 %651, i64 %642, i64 %625
  %653 = inttoptr i64 %652 to %struct.SkAnalyticEdge*
  %654 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %617, %struct.SkAnalyticEdge* %653) #12
  br i1 %654, label %655, label %662

; <label>:655:                                    ; preds = %646
  %656 = select i1 %651, i64 %625, i64 %642
  %657 = inttoptr i64 %656 to %struct.SkAnalyticEdge*
  %658 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %620, %struct.SkAnalyticEdge* %657) #12
  br i1 %658, label %659, label %662

; <label>:659:                                    ; preds = %655, %637, %632
  %660 = add nsw i32 %624, 65535
  %661 = and i32 %660, -65536
  br label %662

; <label>:662:                                    ; preds = %659, %655, %646, %639, %637, %632, %614
  %663 = phi i32 [ %661, %659 ], [ %624, %655 ], [ %624, %632 ], [ %624, %637 ], [ %624, %614 ], [ %624, %639 ], [ %624, %646 ]
  %664 = icmp sgt i32 %663, %456
  %665 = select i1 %664, i32 %456, i32 %663
  %666 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 3
  %667 = load i32, i32* %666, align 4
  %668 = icmp slt i32 %667, %424
  %669 = select i1 %668, i32 %424, i32 %667
  %670 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 4
  %671 = load i32, i32* %670, align 4
  %672 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 3
  %673 = load i32, i32* %672, align 4
  %674 = icmp sgt i32 %673, %427
  %675 = select i1 %674, i32 %427, i32 %673
  %676 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 4
  %677 = load i32, i32* %676, align 4
  %678 = or i32 %677, %671
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %871

; <label>:680:                                    ; preds = %662
  %681 = add nsw i32 %669, 65535
  %682 = ashr i32 %681, 16
  %683 = ashr i32 %675, 16
  %684 = and i32 %681, -65536
  %685 = sub nsw i32 %684, %669
  %686 = and i32 %675, 65535
  %687 = add nsw i32 %474, 65535
  %688 = ashr i32 %687, 16
  %689 = ashr i32 %665, 16
  %690 = and i32 %687, -65536
  %691 = sub nsw i32 %690, %474
  %692 = and i32 %665, 65535
  %693 = icmp slt i32 %689, %688
  %694 = or i32 %665, -65536
  %695 = select i1 %693, i32 0, i32 %692
  %696 = select i1 %693, i32 %694, i32 0
  %697 = add i32 %696, %691
  %698 = icmp slt i32 %683, %682
  %699 = icmp sgt i32 %697, 0
  br i1 %698, label %815, label %700

; <label>:700:                                    ; preds = %680
  br i1 %699, label %701, label %749

; <label>:701:                                    ; preds = %700
  %702 = icmp sgt i32 %685, 0
  br i1 %702, label %705, label %703

; <label>:703:                                    ; preds = %701
  %704 = add nsw i32 %688, -1
  br label %720

; <label>:705:                                    ; preds = %701
  %706 = add nsw i32 %682, -1
  %707 = add nsw i32 %688, -1
  %708 = sext i32 %697 to i64
  %709 = sext i32 %685 to i64
  %710 = mul nsw i64 %709, %708
  %711 = lshr i64 %710, 16
  %712 = trunc i64 %711 to i32
  %713 = mul nsw i32 %712, 255
  %714 = add nsw i32 %713, 32768
  %715 = lshr i32 %714, 16
  %716 = trunc i32 %715 to i8
  %717 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %468, align 8
  %718 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %717, i64 17
  %719 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %718, align 8
  call void %719(%class.AdditiveBlitter* nonnull %224, i32 %706, i32 %707, i8 zeroext %716) #12
  br label %720

; <label>:720:                                    ; preds = %705, %703
  %721 = phi i32 [ %704, %703 ], [ %707, %705 ]
  %722 = sub nsw i32 %683, %682
  %723 = mul nsw i32 %697, 255
  %724 = add nsw i32 %723, 32768
  %725 = lshr i32 %724, 16
  %726 = trunc i32 %725 to i8
  %727 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %459, align 8
  %728 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %727, i64 18
  %729 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %728, align 8
  call void %729(%class.AdditiveBlitter* nonnull %224, i32 %682, i32 %721, i32 %722, i8 zeroext %726) #12
  %730 = icmp eq i32 %686, 0
  br i1 %730, label %744, label %731

; <label>:731:                                    ; preds = %720
  %732 = sext i32 %697 to i64
  %733 = zext i32 %686 to i64
  %734 = mul nsw i64 %733, %732
  %735 = lshr i64 %734, 16
  %736 = trunc i64 %735 to i32
  %737 = mul nsw i32 %736, 255
  %738 = add nsw i32 %737, 32768
  %739 = lshr i32 %738, 16
  %740 = trunc i32 %739 to i8
  %741 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %468, align 8
  %742 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %741, i64 17
  %743 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %742, align 8
  call void %743(%class.AdditiveBlitter* nonnull %224, i32 %683, i32 %721, i8 zeroext %740) #12
  br label %744

; <label>:744:                                    ; preds = %731, %720
  %745 = add i32 %696, %690
  %746 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %460, align 8
  %747 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %746, i64 20
  %748 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %747, align 8
  call void %748(%class.AdditiveBlitter* nonnull %224, i32 %474, i32 %745) #12
  br label %749

; <label>:749:                                    ; preds = %744, %700
  %750 = icmp sgt i32 %689, %688
  br i1 %750, label %751, label %777

; <label>:751:                                    ; preds = %749
  %752 = icmp sle i32 %683, %682
  %753 = mul nsw i32 %685, 255
  %754 = add nsw i32 %753, 32768
  %755 = lshr i32 %754, 16
  %756 = mul nuw nsw i32 %686, 255
  %757 = add nuw nsw i32 %756, 32768
  %758 = lshr i32 %757, 16
  %759 = or i32 %755, %758
  %760 = trunc i32 %759 to i8
  %761 = icmp eq i8 %760, 0
  %762 = and i1 %752, %761
  br i1 %762, label %777, label %763

; <label>:763:                                    ; preds = %751
  %764 = trunc i32 %755 to i8
  %765 = trunc i32 %758 to i8
  %766 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %467, align 8
  %767 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %766, i64 15
  %768 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %767, align 8
  %769 = call %class.SkBlitter* %768(%class.AdditiveBlitter* nonnull %224, i1 zeroext false) #12
  %770 = add nsw i32 %682, -1
  %771 = sub nsw i32 %683, %682
  %772 = sub nsw i32 %689, %688
  %773 = bitcast %class.SkBlitter* %769 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %774 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %773, align 8
  %775 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %774, i64 7
  %776 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %775, align 8
  call void %776(%class.SkBlitter* %769, i32 %770, i32 %688, i32 %771, i32 %772, i8 zeroext %764, i8 zeroext %765) #12
  br label %777

; <label>:777:                                    ; preds = %763, %751, %749
  %778 = icmp eq i32 %695, 0
  br i1 %778, label %1729, label %779

; <label>:779:                                    ; preds = %777
  %780 = icmp sgt i32 %685, 0
  br i1 %780, label %781, label %795

; <label>:781:                                    ; preds = %779
  %782 = add nsw i32 %682, -1
  %783 = zext i32 %695 to i64
  %784 = sext i32 %685 to i64
  %785 = mul nsw i64 %784, %783
  %786 = lshr i64 %785, 16
  %787 = trunc i64 %786 to i32
  %788 = mul nsw i32 %787, 255
  %789 = add nsw i32 %788, 32768
  %790 = lshr i32 %789, 16
  %791 = trunc i32 %790 to i8
  %792 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %468, align 8
  %793 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %792, i64 17
  %794 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %793, align 8
  call void %794(%class.AdditiveBlitter* nonnull %224, i32 %782, i32 %689, i8 zeroext %791) #12
  br label %795

; <label>:795:                                    ; preds = %781, %779
  %796 = sub nsw i32 %683, %682
  %797 = mul nuw nsw i32 %695, 255
  %798 = add nuw nsw i32 %797, 32768
  %799 = lshr i32 %798, 16
  %800 = trunc i32 %799 to i8
  %801 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %459, align 8
  %802 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %801, i64 18
  %803 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %802, align 8
  call void %803(%class.AdditiveBlitter* nonnull %224, i32 %682, i32 %689, i32 %796, i8 zeroext %800) #12
  %804 = icmp eq i32 %686, 0
  br i1 %804, label %1729, label %805

; <label>:805:                                    ; preds = %795
  %806 = mul nuw i32 %686, %695
  %807 = lshr i32 %806, 16
  %808 = mul nuw nsw i32 %807, 255
  %809 = add nuw nsw i32 %808, 32768
  %810 = lshr i32 %809, 16
  %811 = trunc i32 %810 to i8
  %812 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %468, align 8
  %813 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %812, i64 17
  %814 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %813, align 8
  call void %814(%class.AdditiveBlitter* nonnull %224, i32 %683, i32 %689, i8 zeroext %811) #12
  br label %1729

; <label>:815:                                    ; preds = %680
  br i1 %699, label %816, label %836

; <label>:816:                                    ; preds = %815
  %817 = add nsw i32 %682, -1
  %818 = add nsw i32 %688, -1
  %819 = sub nsw i32 %675, %669
  %820 = sext i32 %697 to i64
  %821 = sext i32 %819 to i64
  %822 = mul nsw i64 %821, %820
  %823 = lshr i64 %822, 16
  %824 = trunc i64 %823 to i32
  %825 = mul nsw i32 %824, 255
  %826 = add nsw i32 %825, 32768
  %827 = lshr i32 %826, 16
  %828 = trunc i32 %827 to i8
  %829 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %459, align 8
  %830 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %829, i64 18
  %831 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %830, align 8
  call void %831(%class.AdditiveBlitter* nonnull %224, i32 %817, i32 %818, i32 1, i8 zeroext %828) #12
  %832 = add i32 %696, %690
  %833 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %460, align 8
  %834 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %833, i64 20
  %835 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %834, align 8
  call void %835(%class.AdditiveBlitter* nonnull %224, i32 %474, i32 %832) #12
  br label %836

; <label>:836:                                    ; preds = %816, %815
  %837 = icmp sgt i32 %689, %688
  br i1 %837, label %838, label %854

; <label>:838:                                    ; preds = %836
  %839 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %467, align 8
  %840 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %839, i64 15
  %841 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %840, align 8
  %842 = call %class.SkBlitter* %841(%class.AdditiveBlitter* nonnull %224, i1 zeroext false) #12
  %843 = add nsw i32 %682, -1
  %844 = sub nsw i32 %689, %688
  %845 = sub nsw i32 %675, %669
  %846 = mul nsw i32 %845, 255
  %847 = add nsw i32 %846, 32768
  %848 = lshr i32 %847, 16
  %849 = trunc i32 %848 to i8
  %850 = bitcast %class.SkBlitter* %842 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %851 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %850, align 8
  %852 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %851, i64 5
  %853 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %852, align 8
  call void %853(%class.SkBlitter* %842, i32 %843, i32 %688, i32 %844, i8 zeroext %849) #12
  br label %854

; <label>:854:                                    ; preds = %838, %836
  %855 = icmp eq i32 %695, 0
  br i1 %855, label %1729, label %856

; <label>:856:                                    ; preds = %854
  %857 = add nsw i32 %682, -1
  %858 = sub nsw i32 %675, %669
  %859 = zext i32 %695 to i64
  %860 = sext i32 %858 to i64
  %861 = mul nsw i64 %860, %859
  %862 = lshr i64 %861, 16
  %863 = trunc i64 %862 to i32
  %864 = mul nsw i32 %863, 255
  %865 = add nsw i32 %864, 32768
  %866 = lshr i32 %865, 16
  %867 = trunc i32 %866 to i8
  %868 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %459, align 8
  %869 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %868, i64 18
  %870 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %869, align 8
  call void %870(%class.AdditiveBlitter* nonnull %224, i32 %857, i32 %689, i32 1, i8 zeroext %867) #12
  br label %1729

; <label>:871:                                    ; preds = %662
  %872 = add nsw i32 %669, 2048
  %873 = add nsw i32 %675, 2048
  %874 = add nsw i32 %665, 65535
  %875 = ashr i32 %874, 16
  %876 = sub nsw i32 %875, %538
  %877 = load i32, i32* %458, align 8
  %878 = icmp eq i32 %877, %538
  br i1 %878, label %879, label %881

; <label>:879:                                    ; preds = %871
  %880 = load i8*, i8** %461, align 8
  br label %893

; <label>:881:                                    ; preds = %871
  store i32 %538, i32* %458, align 8
  %882 = load i8*, i8** %462, align 8
  %883 = load i32, i32* %218, align 4
  %884 = sub nsw i32 %538, %883
  %885 = load i32, i32* %464, align 8
  %886 = mul i32 %884, %885
  %887 = zext i32 %886 to i64
  %888 = getelementptr inbounds i8, i8* %882, i64 %887
  %889 = load i32, i32* %466, align 8
  %890 = sext i32 %889 to i64
  %891 = sub nsw i64 0, %890
  %892 = getelementptr inbounds i8, i8* %888, i64 %891
  store i8* %892, i8** %461, align 8
  br label %893

; <label>:893:                                    ; preds = %881, %879
  %894 = phi i8* [ %880, %879 ], [ %892, %881 ]
  %895 = icmp sgt i32 %876, 1
  br i1 %895, label %896, label %1432

; <label>:896:                                    ; preds = %893
  %897 = and i32 %474, -65536
  %898 = icmp eq i32 %897, %474
  br i1 %898, label %899, label %902

; <label>:899:                                    ; preds = %896
  %900 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 9
  %901 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 9
  br label %1175

; <label>:902:                                    ; preds = %896
  %903 = add nsw i32 %876, -1
  %904 = add nsw i32 %474, 65536
  %905 = and i32 %904, -65536
  %906 = sub nsw i32 %905, %474
  %907 = sext i32 %671 to i64
  %908 = sext i32 %906 to i64
  %909 = mul nsw i64 %907, %908
  %910 = lshr i64 %909, 16
  %911 = trunc i64 %910 to i32
  %912 = add nsw i32 %872, %911
  %913 = sext i32 %677 to i64
  %914 = mul nsw i64 %913, %908
  %915 = lshr i64 %914, 16
  %916 = trunc i64 %915 to i32
  %917 = add nsw i32 %873, %916
  %918 = and i32 %872, -4096
  %919 = and i32 %873, -4096
  %920 = and i32 %912, -4096
  %921 = and i32 %917, -4096
  %922 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 9
  %923 = load i32, i32* %922, align 8
  %924 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 9
  %925 = load i32, i32* %924, align 8
  %926 = mul nsw i32 %906, 255
  %927 = add nsw i32 %926, 32768
  %928 = lshr i32 %927, 16
  %929 = trunc i32 %928 to i8
  %930 = icmp sgt i32 %918, %919
  br i1 %930, label %1170, label %931

; <label>:931:                                    ; preds = %902
  %932 = icmp sgt i32 %920, %921
  br i1 %932, label %933, label %946

; <label>:933:                                    ; preds = %931
  %934 = icmp sgt i32 %918, %920
  %935 = select i1 %934, i32 %920, i32 %918
  %936 = select i1 %934, i32 %918, i32 %920
  %937 = icmp sgt i32 %919, %921
  %938 = select i1 %937, i32 %921, i32 %919
  %939 = select i1 %937, i32 %919, i32 %921
  %940 = icmp slt i32 %938, %935
  %941 = select i1 %940, i32 %935, i32 %938
  %942 = icmp slt i32 %936, %939
  %943 = select i1 %942, i32 %936, i32 %939
  %944 = add nsw i32 %941, %943
  %945 = ashr exact i32 %944, 1
  br label %946

; <label>:946:                                    ; preds = %933, %931
  %947 = phi i32 [ %945, %933 ], [ %920, %931 ]
  %948 = phi i32 [ %945, %933 ], [ %921, %931 ]
  %949 = icmp eq i32 %918, %919
  %950 = icmp eq i32 %947, %948
  %951 = and i1 %949, %950
  br i1 %951, label %1170, label %952

; <label>:952:                                    ; preds = %946
  %953 = icmp slt i32 %947, %918
  %954 = select i1 %953, i32 %947, i32 %918
  %955 = select i1 %953, i32 %918, i32 %947
  %956 = icmp slt i32 %948, %919
  %957 = select i1 %956, i32 %948, i32 %919
  %958 = select i1 %956, i32 %919, i32 %948
  %959 = add nsw i32 %955, 65535
  %960 = and i32 %959, -65536
  %961 = and i32 %957, -65536
  %962 = icmp slt i32 %961, %960
  br i1 %962, label %1169, label %963

; <label>:963:                                    ; preds = %952
  %964 = icmp sgt i32 %960, %954
  br i1 %964, label %965, label %1026

; <label>:965:                                    ; preds = %963
  %966 = sub nsw i32 %960, %954
  %967 = add nsw i32 %966, 65535
  %968 = ashr i32 %967, 16
  switch i32 %968, label %1025 [
    i32 1, label %969
    i32 2, label %990
  ]

; <label>:969:                                    ; preds = %965
  %970 = sub i32 %960, %955
  %971 = add nsw i32 %970, %966
  %972 = lshr i32 %971, 9
  %973 = ashr i32 %954, 16
  %974 = icmp eq i8 %929, -1
  %975 = sext i32 %973 to i64
  %976 = getelementptr inbounds i8, i8* %894, i64 %975
  br i1 %974, label %977, label %979

; <label>:977:                                    ; preds = %969
  %978 = trunc i32 %972 to i8
  store i8 %978, i8* %976, align 1
  br label %1026

; <label>:979:                                    ; preds = %969
  %980 = and i32 %972, 255
  %981 = and i32 %928, 255
  %982 = mul nuw nsw i32 %980, %981
  %983 = lshr i32 %982, 8
  %984 = load i8, i8* %976, align 1
  %985 = zext i8 %984 to i32
  %986 = add nuw nsw i32 %983, %985
  %987 = lshr i32 %986, 8
  %988 = sub nsw i32 %986, %987
  %989 = trunc i32 %988 to i8
  store i8 %989, i8* %976, align 1
  br label %1026

; <label>:990:                                    ; preds = %965
  %991 = sub i32 -65536, %954
  %992 = add i32 %960, %991
  %993 = sub i32 %955, %954
  %994 = sub i32 %993, %992
  %995 = ashr i32 %992, 11
  %996 = ashr i32 %923, 11
  %997 = mul i32 %995, %996
  %998 = mul i32 %997, %995
  %999 = lshr i32 %998, 8
  %1000 = ashr i32 %994, 11
  %1001 = mul i32 %1000, %996
  %1002 = mul i32 %1001, %1000
  %1003 = lshr i32 %1002, 8
  %1004 = sub nsw i32 %928, %1003
  %1005 = ashr i32 %954, 16
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds i8, i8* %894, i64 %1006
  %1008 = load i8, i8* %1007, align 1
  %1009 = zext i8 %1008 to i32
  %1010 = and i32 %999, 255
  %1011 = add nuw nsw i32 %1010, %1009
  %1012 = lshr i32 %1011, 8
  %1013 = sub nsw i32 %1011, %1012
  %1014 = trunc i32 %1013 to i8
  store i8 %1014, i8* %1007, align 1
  %1015 = add nsw i32 %1005, 1
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i8, i8* %894, i64 %1016
  %1018 = load i8, i8* %1017, align 1
  %1019 = zext i8 %1018 to i32
  %1020 = and i32 %1004, 255
  %1021 = add nuw nsw i32 %1020, %1019
  %1022 = lshr i32 %1021, 8
  %1023 = sub nsw i32 %1021, %1022
  %1024 = trunc i32 %1023 to i8
  store i8 %1024, i8* %1017, align 1
  br label %1026

; <label>:1025:                                   ; preds = %965
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %538, i32 %954, i32 %960, i32 %955, i32 %960, i32 %923, i32 2147483647, i8 zeroext %929, i8* %894, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1026

; <label>:1026:                                   ; preds = %1025, %990, %979, %977, %963
  %1027 = icmp sgt i32 %961, %960
  br i1 %1027, label %1028, label %1106

; <label>:1028:                                   ; preds = %1026
  %1029 = sub nsw i32 %961, %960
  %1030 = icmp sgt i32 %1029, 0
  br i1 %1030, label %1031, label %1106

; <label>:1031:                                   ; preds = %1028
  %1032 = lshr exact i32 %1029, 16
  %1033 = ashr i32 %959, 16
  %1034 = and i32 %928, 255
  %1035 = sext i32 %1033 to i64
  %1036 = zext i32 %1032 to i64
  %1037 = icmp ult i32 %1029, 1048576
  br i1 %1037, label %1092, label %1038

; <label>:1038:                                   ; preds = %1031
  %1039 = and i64 %1036, 65520
  %1040 = insertelement <16 x i32> undef, i32 %1034, i32 0
  %1041 = shufflevector <16 x i32> %1040, <16 x i32> undef, <16 x i32> zeroinitializer
  %1042 = add nsw i64 %1039, -16
  %1043 = lshr exact i64 %1042, 4
  %1044 = add nuw nsw i64 %1043, 1
  %1045 = and i64 %1044, 1
  %1046 = icmp eq i64 %1042, 0
  br i1 %1046, label %1076, label %1047

; <label>:1047:                                   ; preds = %1038
  %1048 = sub nsw i64 %1044, %1045
  br label %1049

; <label>:1049:                                   ; preds = %1049, %1047
  %1050 = phi i64 [ 0, %1047 ], [ %1073, %1049 ]
  %1051 = phi i64 [ %1048, %1047 ], [ %1074, %1049 ]
  %1052 = add nsw i64 %1050, %1035
  %1053 = getelementptr inbounds i8, i8* %894, i64 %1052
  %1054 = bitcast i8* %1053 to <16 x i8>*
  %1055 = load <16 x i8>, <16 x i8>* %1054, align 1
  %1056 = zext <16 x i8> %1055 to <16 x i32>
  %1057 = add nuw nsw <16 x i32> %1041, %1056
  %1058 = lshr <16 x i32> %1057, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1059 = sub nsw <16 x i32> %1057, %1058
  %1060 = trunc <16 x i32> %1059 to <16 x i8>
  %1061 = bitcast i8* %1053 to <16 x i8>*
  store <16 x i8> %1060, <16 x i8>* %1061, align 1
  %1062 = or i64 %1050, 16
  %1063 = add nsw i64 %1062, %1035
  %1064 = getelementptr inbounds i8, i8* %894, i64 %1063
  %1065 = bitcast i8* %1064 to <16 x i8>*
  %1066 = load <16 x i8>, <16 x i8>* %1065, align 1
  %1067 = zext <16 x i8> %1066 to <16 x i32>
  %1068 = add nuw nsw <16 x i32> %1041, %1067
  %1069 = lshr <16 x i32> %1068, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1070 = sub nsw <16 x i32> %1068, %1069
  %1071 = trunc <16 x i32> %1070 to <16 x i8>
  %1072 = bitcast i8* %1064 to <16 x i8>*
  store <16 x i8> %1071, <16 x i8>* %1072, align 1
  %1073 = add i64 %1050, 32
  %1074 = add i64 %1051, -2
  %1075 = icmp eq i64 %1074, 0
  br i1 %1075, label %1076, label %1049, !llvm.loop !10

; <label>:1076:                                   ; preds = %1049, %1038
  %1077 = phi i64 [ 0, %1038 ], [ %1073, %1049 ]
  %1078 = icmp eq i64 %1045, 0
  br i1 %1078, label %1090, label %1079

; <label>:1079:                                   ; preds = %1076
  %1080 = add nsw i64 %1077, %1035
  %1081 = getelementptr inbounds i8, i8* %894, i64 %1080
  %1082 = bitcast i8* %1081 to <16 x i8>*
  %1083 = load <16 x i8>, <16 x i8>* %1082, align 1
  %1084 = zext <16 x i8> %1083 to <16 x i32>
  %1085 = add nuw nsw <16 x i32> %1041, %1084
  %1086 = lshr <16 x i32> %1085, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1087 = sub nsw <16 x i32> %1085, %1086
  %1088 = trunc <16 x i32> %1087 to <16 x i8>
  %1089 = bitcast i8* %1081 to <16 x i8>*
  store <16 x i8> %1088, <16 x i8>* %1089, align 1
  br label %1090

; <label>:1090:                                   ; preds = %1076, %1079
  %1091 = icmp eq i64 %1039, %1036
  br i1 %1091, label %1106, label %1092

; <label>:1092:                                   ; preds = %1090, %1031
  %1093 = phi i64 [ 0, %1031 ], [ %1039, %1090 ]
  br label %1094

; <label>:1094:                                   ; preds = %1092, %1094
  %1095 = phi i64 [ %1104, %1094 ], [ %1093, %1092 ]
  %1096 = add nsw i64 %1095, %1035
  %1097 = getelementptr inbounds i8, i8* %894, i64 %1096
  %1098 = load i8, i8* %1097, align 1
  %1099 = zext i8 %1098 to i32
  %1100 = add nuw nsw i32 %1034, %1099
  %1101 = lshr i32 %1100, 8
  %1102 = sub nsw i32 %1100, %1101
  %1103 = trunc i32 %1102 to i8
  store i8 %1103, i8* %1097, align 1
  %1104 = add nuw nsw i64 %1095, 1
  %1105 = icmp eq i64 %1104, %1036
  br i1 %1105, label %1106, label %1094, !llvm.loop !11

; <label>:1106:                                   ; preds = %1094, %1090, %1028, %1026
  %1107 = icmp sgt i32 %958, %961
  br i1 %1107, label %1108, label %1170

; <label>:1108:                                   ; preds = %1106
  %1109 = sub nsw i32 %958, %961
  %1110 = add nsw i32 %1109, 65535
  %1111 = ashr i32 %1110, 16
  switch i32 %1111, label %1168 [
    i32 1, label %1112
    i32 2, label %1133
  ]

; <label>:1112:                                   ; preds = %1108
  %1113 = sub i32 %957, %961
  %1114 = add nsw i32 %1113, %1109
  %1115 = lshr i32 %1114, 9
  %1116 = ashr i32 %957, 16
  %1117 = icmp eq i8 %929, -1
  %1118 = sext i32 %1116 to i64
  %1119 = getelementptr inbounds i8, i8* %894, i64 %1118
  br i1 %1117, label %1120, label %1122

; <label>:1120:                                   ; preds = %1112
  %1121 = trunc i32 %1115 to i8
  store i8 %1121, i8* %1119, align 1
  br label %1170

; <label>:1122:                                   ; preds = %1112
  %1123 = and i32 %1115, 255
  %1124 = and i32 %928, 255
  %1125 = mul nuw nsw i32 %1123, %1124
  %1126 = lshr i32 %1125, 8
  %1127 = load i8, i8* %1119, align 1
  %1128 = zext i8 %1127 to i32
  %1129 = add nuw nsw i32 %1126, %1128
  %1130 = lshr i32 %1129, 8
  %1131 = sub nsw i32 %1129, %1130
  %1132 = trunc i32 %1131 to i8
  store i8 %1132, i8* %1119, align 1
  br label %1170

; <label>:1133:                                   ; preds = %1108
  %1134 = sub i32 65536, %957
  %1135 = add i32 %1134, %961
  %1136 = sub i32 %958, %957
  %1137 = sub i32 %1136, %1135
  %1138 = ashr i32 %1135, 11
  %1139 = ashr i32 %925, 11
  %1140 = mul i32 %1138, %1139
  %1141 = mul i32 %1140, %1138
  %1142 = lshr i32 %1141, 8
  %1143 = sub nsw i32 %928, %1142
  %1144 = ashr i32 %1137, 11
  %1145 = mul i32 %1144, %1139
  %1146 = mul i32 %1145, %1144
  %1147 = lshr i32 %1146, 8
  %1148 = ashr i32 %957, 16
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds i8, i8* %894, i64 %1149
  %1151 = load i8, i8* %1150, align 1
  %1152 = zext i8 %1151 to i32
  %1153 = and i32 %1143, 255
  %1154 = add nuw nsw i32 %1153, %1152
  %1155 = lshr i32 %1154, 8
  %1156 = sub nsw i32 %1154, %1155
  %1157 = trunc i32 %1156 to i8
  store i8 %1157, i8* %1150, align 1
  %1158 = add nsw i32 %1148, 1
  %1159 = sext i32 %1158 to i64
  %1160 = getelementptr inbounds i8, i8* %894, i64 %1159
  %1161 = load i8, i8* %1160, align 1
  %1162 = zext i8 %1161 to i32
  %1163 = and i32 %1147, 255
  %1164 = add nuw nsw i32 %1163, %1162
  %1165 = lshr i32 %1164, 8
  %1166 = sub nsw i32 %1164, %1165
  %1167 = trunc i32 %1166 to i8
  store i8 %1167, i8* %1160, align 1
  br label %1170

; <label>:1168:                                   ; preds = %1108
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %538, i32 %961, i32 %957, i32 %961, i32 %958, i32 2147483647, i32 %925, i8 zeroext %929, i8* %894, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1170

; <label>:1169:                                   ; preds = %952
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %538, i32 %954, i32 %957, i32 %955, i32 %958, i32 %923, i32 %925, i8 zeroext %929, i8* %894, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1170

; <label>:1170:                                   ; preds = %1169, %1168, %1133, %1122, %1120, %1106, %946, %902
  %1171 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %460, align 8
  %1172 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1171, i64 20
  %1173 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1172, align 8
  call void %1173(%class.AdditiveBlitter* nonnull %224, i32 %474, i32 %905) #12
  %1174 = icmp sgt i32 %876, 2
  br i1 %1174, label %1175, label %1432

; <label>:1175:                                   ; preds = %1170, %899
  %1176 = phi i32* [ %901, %899 ], [ %924, %1170 ]
  %1177 = phi i32* [ %900, %899 ], [ %922, %1170 ]
  %1178 = phi i32 [ %474, %899 ], [ %905, %1170 ]
  %1179 = phi i32 [ %872, %899 ], [ %912, %1170 ]
  %1180 = phi i32 [ %873, %899 ], [ %917, %1170 ]
  %1181 = phi i32 [ %876, %899 ], [ %903, %1170 ]
  br label %1182

; <label>:1182:                                   ; preds = %1427, %1175
  %1183 = phi i32 [ %1178, %1175 ], [ %1207, %1427 ]
  %1184 = phi i32 [ %1179, %1175 ], [ %1208, %1427 ]
  %1185 = phi i32 [ %1180, %1175 ], [ %1209, %1427 ]
  %1186 = phi i32 [ %1181, %1175 ], [ %1187, %1427 ]
  %1187 = add nsw i32 %1186, -1
  %1188 = ashr i32 %1183, 16
  %1189 = load i32, i32* %458, align 8
  %1190 = icmp eq i32 %1189, %1188
  br i1 %1190, label %1191, label %1193

; <label>:1191:                                   ; preds = %1182
  %1192 = load i8*, i8** %461, align 8
  br label %1205

; <label>:1193:                                   ; preds = %1182
  store i32 %1188, i32* %458, align 8
  %1194 = load i8*, i8** %462, align 8
  %1195 = load i32, i32* %218, align 4
  %1196 = sub nsw i32 %1188, %1195
  %1197 = load i32, i32* %464, align 8
  %1198 = mul i32 %1196, %1197
  %1199 = zext i32 %1198 to i64
  %1200 = getelementptr inbounds i8, i8* %1194, i64 %1199
  %1201 = load i32, i32* %466, align 8
  %1202 = sext i32 %1201 to i64
  %1203 = sub nsw i64 0, %1202
  %1204 = getelementptr inbounds i8, i8* %1200, i64 %1203
  store i8* %1204, i8** %461, align 8
  br label %1205

; <label>:1205:                                   ; preds = %1193, %1191
  %1206 = phi i8* [ %1204, %1193 ], [ %1192, %1191 ]
  %1207 = add nsw i32 %1183, 65536
  %1208 = add nsw i32 %1184, %671
  %1209 = add nsw i32 %1185, %677
  %1210 = and i32 %1184, -4096
  %1211 = and i32 %1185, -4096
  %1212 = and i32 %1208, -4096
  %1213 = and i32 %1209, -4096
  %1214 = load i32, i32* %1177, align 8
  %1215 = load i32, i32* %1176, align 8
  %1216 = icmp sgt i32 %1210, %1211
  br i1 %1216, label %1427, label %1217

; <label>:1217:                                   ; preds = %1205
  %1218 = icmp sgt i32 %1212, %1213
  br i1 %1218, label %1219, label %1232

; <label>:1219:                                   ; preds = %1217
  %1220 = icmp sgt i32 %1210, %1212
  %1221 = select i1 %1220, i32 %1212, i32 %1210
  %1222 = select i1 %1220, i32 %1210, i32 %1212
  %1223 = icmp sgt i32 %1211, %1213
  %1224 = select i1 %1223, i32 %1213, i32 %1211
  %1225 = select i1 %1223, i32 %1211, i32 %1213
  %1226 = icmp slt i32 %1224, %1221
  %1227 = select i1 %1226, i32 %1221, i32 %1224
  %1228 = icmp slt i32 %1222, %1225
  %1229 = select i1 %1228, i32 %1222, i32 %1225
  %1230 = add nsw i32 %1227, %1229
  %1231 = ashr exact i32 %1230, 1
  br label %1232

; <label>:1232:                                   ; preds = %1219, %1217
  %1233 = phi i32 [ %1231, %1219 ], [ %1212, %1217 ]
  %1234 = phi i32 [ %1231, %1219 ], [ %1213, %1217 ]
  %1235 = icmp eq i32 %1210, %1211
  %1236 = icmp eq i32 %1233, %1234
  %1237 = and i1 %1235, %1236
  br i1 %1237, label %1427, label %1238

; <label>:1238:                                   ; preds = %1232
  %1239 = icmp slt i32 %1233, %1210
  %1240 = select i1 %1239, i32 %1233, i32 %1210
  %1241 = select i1 %1239, i32 %1210, i32 %1233
  %1242 = icmp slt i32 %1234, %1211
  %1243 = select i1 %1242, i32 %1234, i32 %1211
  %1244 = select i1 %1242, i32 %1211, i32 %1234
  %1245 = add nsw i32 %1241, 65535
  %1246 = and i32 %1245, -65536
  %1247 = and i32 %1243, -65536
  %1248 = icmp slt i32 %1247, %1246
  br i1 %1248, label %1426, label %1249

; <label>:1249:                                   ; preds = %1238
  %1250 = icmp sgt i32 %1246, %1240
  br i1 %1250, label %1251, label %1299

; <label>:1251:                                   ; preds = %1249
  %1252 = sub nsw i32 %1246, %1240
  %1253 = add nsw i32 %1252, 65535
  %1254 = ashr i32 %1253, 16
  switch i32 %1254, label %1298 [
    i32 1, label %1255
    i32 2, label %1263
  ]

; <label>:1255:                                   ; preds = %1251
  %1256 = sub i32 %1246, %1241
  %1257 = add nsw i32 %1256, %1252
  %1258 = lshr i32 %1257, 9
  %1259 = trunc i32 %1258 to i8
  %1260 = ashr i32 %1240, 16
  %1261 = sext i32 %1260 to i64
  %1262 = getelementptr inbounds i8, i8* %1206, i64 %1261
  store i8 %1259, i8* %1262, align 1
  br label %1299

; <label>:1263:                                   ; preds = %1251
  %1264 = sub i32 -65536, %1240
  %1265 = add i32 %1246, %1264
  %1266 = sub i32 %1241, %1240
  %1267 = sub i32 %1266, %1265
  %1268 = ashr i32 %1265, 11
  %1269 = ashr i32 %1214, 11
  %1270 = mul i32 %1268, %1269
  %1271 = mul i32 %1270, %1268
  %1272 = lshr i32 %1271, 8
  %1273 = ashr i32 %1267, 11
  %1274 = mul i32 %1273, %1269
  %1275 = mul i32 %1274, %1273
  %1276 = lshr i32 %1275, 8
  %1277 = ashr i32 %1240, 16
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds i8, i8* %1206, i64 %1278
  %1280 = load i8, i8* %1279, align 1
  %1281 = zext i8 %1280 to i32
  %1282 = and i32 %1272, 255
  %1283 = add nuw nsw i32 %1282, %1281
  %1284 = lshr i32 %1283, 8
  %1285 = sub nsw i32 %1283, %1284
  %1286 = trunc i32 %1285 to i8
  store i8 %1286, i8* %1279, align 1
  %1287 = add nsw i32 %1277, 1
  %1288 = sext i32 %1287 to i64
  %1289 = getelementptr inbounds i8, i8* %1206, i64 %1288
  %1290 = load i8, i8* %1289, align 1
  %1291 = zext i8 %1290 to i32
  %1292 = and i32 %1276, 255
  %1293 = xor i32 %1292, 255
  %1294 = add nuw nsw i32 %1293, %1291
  %1295 = lshr i32 %1294, 8
  %1296 = sub nsw i32 %1294, %1295
  %1297 = trunc i32 %1296 to i8
  store i8 %1297, i8* %1289, align 1
  br label %1299

; <label>:1298:                                   ; preds = %1251
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1188, i32 %1240, i32 %1246, i32 %1241, i32 %1246, i32 %1214, i32 2147483647, i8 zeroext -1, i8* %1206, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1299

; <label>:1299:                                   ; preds = %1298, %1263, %1255, %1249
  %1300 = icmp sgt i32 %1247, %1246
  br i1 %1300, label %1301, label %1376

; <label>:1301:                                   ; preds = %1299
  %1302 = sub nsw i32 %1247, %1246
  %1303 = icmp sgt i32 %1302, 0
  br i1 %1303, label %1304, label %1376

; <label>:1304:                                   ; preds = %1301
  %1305 = lshr exact i32 %1302, 16
  %1306 = ashr i32 %1245, 16
  %1307 = sext i32 %1306 to i64
  %1308 = zext i32 %1305 to i64
  %1309 = icmp ult i32 %1302, 1048576
  br i1 %1309, label %1362, label %1310

; <label>:1310:                                   ; preds = %1304
  %1311 = and i64 %1308, 65520
  %1312 = add nsw i64 %1311, -16
  %1313 = lshr exact i64 %1312, 4
  %1314 = add nuw nsw i64 %1313, 1
  %1315 = and i64 %1314, 1
  %1316 = icmp eq i64 %1312, 0
  br i1 %1316, label %1346, label %1317

; <label>:1317:                                   ; preds = %1310
  %1318 = sub nsw i64 %1314, %1315
  br label %1319

; <label>:1319:                                   ; preds = %1319, %1317
  %1320 = phi i64 [ 0, %1317 ], [ %1343, %1319 ]
  %1321 = phi i64 [ %1318, %1317 ], [ %1344, %1319 ]
  %1322 = add nsw i64 %1320, %1307
  %1323 = getelementptr inbounds i8, i8* %1206, i64 %1322
  %1324 = bitcast i8* %1323 to <16 x i8>*
  %1325 = load <16 x i8>, <16 x i8>* %1324, align 1
  %1326 = zext <16 x i8> %1325 to <16 x i32>
  %1327 = add nuw nsw <16 x i32> %1326, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %1328 = lshr <16 x i32> %1327, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1329 = sub nsw <16 x i32> %1327, %1328
  %1330 = trunc <16 x i32> %1329 to <16 x i8>
  %1331 = bitcast i8* %1323 to <16 x i8>*
  store <16 x i8> %1330, <16 x i8>* %1331, align 1
  %1332 = or i64 %1320, 16
  %1333 = add nsw i64 %1332, %1307
  %1334 = getelementptr inbounds i8, i8* %1206, i64 %1333
  %1335 = bitcast i8* %1334 to <16 x i8>*
  %1336 = load <16 x i8>, <16 x i8>* %1335, align 1
  %1337 = zext <16 x i8> %1336 to <16 x i32>
  %1338 = add nuw nsw <16 x i32> %1337, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %1339 = lshr <16 x i32> %1338, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1340 = sub nsw <16 x i32> %1338, %1339
  %1341 = trunc <16 x i32> %1340 to <16 x i8>
  %1342 = bitcast i8* %1334 to <16 x i8>*
  store <16 x i8> %1341, <16 x i8>* %1342, align 1
  %1343 = add i64 %1320, 32
  %1344 = add i64 %1321, -2
  %1345 = icmp eq i64 %1344, 0
  br i1 %1345, label %1346, label %1319, !llvm.loop !12

; <label>:1346:                                   ; preds = %1319, %1310
  %1347 = phi i64 [ 0, %1310 ], [ %1343, %1319 ]
  %1348 = icmp eq i64 %1315, 0
  br i1 %1348, label %1360, label %1349

; <label>:1349:                                   ; preds = %1346
  %1350 = add nsw i64 %1347, %1307
  %1351 = getelementptr inbounds i8, i8* %1206, i64 %1350
  %1352 = bitcast i8* %1351 to <16 x i8>*
  %1353 = load <16 x i8>, <16 x i8>* %1352, align 1
  %1354 = zext <16 x i8> %1353 to <16 x i32>
  %1355 = add nuw nsw <16 x i32> %1354, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %1356 = lshr <16 x i32> %1355, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1357 = sub nsw <16 x i32> %1355, %1356
  %1358 = trunc <16 x i32> %1357 to <16 x i8>
  %1359 = bitcast i8* %1351 to <16 x i8>*
  store <16 x i8> %1358, <16 x i8>* %1359, align 1
  br label %1360

; <label>:1360:                                   ; preds = %1346, %1349
  %1361 = icmp eq i64 %1311, %1308
  br i1 %1361, label %1376, label %1362

; <label>:1362:                                   ; preds = %1360, %1304
  %1363 = phi i64 [ 0, %1304 ], [ %1311, %1360 ]
  br label %1364

; <label>:1364:                                   ; preds = %1362, %1364
  %1365 = phi i64 [ %1374, %1364 ], [ %1363, %1362 ]
  %1366 = add nsw i64 %1365, %1307
  %1367 = getelementptr inbounds i8, i8* %1206, i64 %1366
  %1368 = load i8, i8* %1367, align 1
  %1369 = zext i8 %1368 to i32
  %1370 = add nuw nsw i32 %1369, 255
  %1371 = lshr i32 %1370, 8
  %1372 = sub nsw i32 %1370, %1371
  %1373 = trunc i32 %1372 to i8
  store i8 %1373, i8* %1367, align 1
  %1374 = add nuw nsw i64 %1365, 1
  %1375 = icmp eq i64 %1374, %1308
  br i1 %1375, label %1376, label %1364, !llvm.loop !13

; <label>:1376:                                   ; preds = %1364, %1360, %1301, %1299
  %1377 = icmp sgt i32 %1244, %1247
  br i1 %1377, label %1378, label %1427

; <label>:1378:                                   ; preds = %1376
  %1379 = sub nsw i32 %1244, %1247
  %1380 = add nsw i32 %1379, 65535
  %1381 = ashr i32 %1380, 16
  switch i32 %1381, label %1425 [
    i32 1, label %1382
    i32 2, label %1390
  ]

; <label>:1382:                                   ; preds = %1378
  %1383 = sub i32 %1243, %1247
  %1384 = add nsw i32 %1383, %1379
  %1385 = lshr i32 %1384, 9
  %1386 = trunc i32 %1385 to i8
  %1387 = ashr i32 %1243, 16
  %1388 = sext i32 %1387 to i64
  %1389 = getelementptr inbounds i8, i8* %1206, i64 %1388
  store i8 %1386, i8* %1389, align 1
  br label %1427

; <label>:1390:                                   ; preds = %1378
  %1391 = sub i32 65536, %1243
  %1392 = add i32 %1391, %1247
  %1393 = sub i32 %1244, %1243
  %1394 = sub i32 %1393, %1392
  %1395 = ashr i32 %1392, 11
  %1396 = ashr i32 %1215, 11
  %1397 = mul i32 %1395, %1396
  %1398 = mul i32 %1397, %1395
  %1399 = lshr i32 %1398, 8
  %1400 = ashr i32 %1394, 11
  %1401 = mul i32 %1400, %1396
  %1402 = mul i32 %1401, %1400
  %1403 = lshr i32 %1402, 8
  %1404 = ashr i32 %1243, 16
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds i8, i8* %1206, i64 %1405
  %1407 = load i8, i8* %1406, align 1
  %1408 = zext i8 %1407 to i32
  %1409 = and i32 %1399, 255
  %1410 = xor i32 %1409, 255
  %1411 = add nuw nsw i32 %1410, %1408
  %1412 = lshr i32 %1411, 8
  %1413 = sub nsw i32 %1411, %1412
  %1414 = trunc i32 %1413 to i8
  store i8 %1414, i8* %1406, align 1
  %1415 = add nsw i32 %1404, 1
  %1416 = sext i32 %1415 to i64
  %1417 = getelementptr inbounds i8, i8* %1206, i64 %1416
  %1418 = load i8, i8* %1417, align 1
  %1419 = zext i8 %1418 to i32
  %1420 = and i32 %1403, 255
  %1421 = add nuw nsw i32 %1420, %1419
  %1422 = lshr i32 %1421, 8
  %1423 = sub nsw i32 %1421, %1422
  %1424 = trunc i32 %1423 to i8
  store i8 %1424, i8* %1417, align 1
  br label %1427

; <label>:1425:                                   ; preds = %1378
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1188, i32 %1247, i32 %1243, i32 %1247, i32 %1244, i32 2147483647, i32 %1215, i8 zeroext -1, i8* %1206, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1427

; <label>:1426:                                   ; preds = %1238
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1188, i32 %1240, i32 %1243, i32 %1241, i32 %1244, i32 %1214, i32 %1215, i8 zeroext -1, i8* %1206, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1427

; <label>:1427:                                   ; preds = %1426, %1425, %1390, %1382, %1376, %1232, %1205
  %1428 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %460, align 8
  %1429 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1428, i64 20
  %1430 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1429, align 8
  call void %1430(%class.AdditiveBlitter* nonnull %224, i32 %1183, i32 %1207) #12
  %1431 = icmp sgt i32 %1186, 2
  br i1 %1431, label %1182, label %1432

; <label>:1432:                                   ; preds = %1427, %1170, %893
  %1433 = phi i32 [ %873, %893 ], [ %917, %1170 ], [ %1209, %1427 ]
  %1434 = phi i32 [ %872, %893 ], [ %912, %1170 ], [ %1208, %1427 ]
  %1435 = phi i32 [ %474, %893 ], [ %905, %1170 ], [ %1207, %1427 ]
  %1436 = ashr i32 %1435, 16
  %1437 = load i32, i32* %458, align 8
  %1438 = icmp eq i32 %1437, %1436
  br i1 %1438, label %1439, label %1441

; <label>:1439:                                   ; preds = %1432
  %1440 = load i8*, i8** %461, align 8
  br label %1453

; <label>:1441:                                   ; preds = %1432
  store i32 %1436, i32* %458, align 8
  %1442 = load i8*, i8** %462, align 8
  %1443 = load i32, i32* %218, align 4
  %1444 = sub nsw i32 %1436, %1443
  %1445 = load i32, i32* %464, align 8
  %1446 = mul i32 %1444, %1445
  %1447 = zext i32 %1446 to i64
  %1448 = getelementptr inbounds i8, i8* %1442, i64 %1447
  %1449 = load i32, i32* %466, align 8
  %1450 = sext i32 %1449 to i64
  %1451 = sub nsw i64 0, %1450
  %1452 = getelementptr inbounds i8, i8* %1448, i64 %1451
  store i8* %1452, i8** %461, align 8
  br label %1453

; <label>:1453:                                   ; preds = %1441, %1439
  %1454 = phi i8* [ %1452, %1441 ], [ %1440, %1439 ]
  %1455 = sub nsw i32 %665, %1435
  %1456 = sext i32 %671 to i64
  %1457 = sext i32 %1455 to i64
  %1458 = mul nsw i64 %1457, %1456
  %1459 = lshr i64 %1458, 16
  %1460 = trunc i64 %1459 to i32
  %1461 = add nsw i32 %1434, %1460
  %1462 = icmp slt i32 %469, %1461
  %1463 = select i1 %1462, i32 %1461, i32 %469
  %1464 = sext i32 %677 to i64
  %1465 = mul nsw i64 %1457, %1464
  %1466 = lshr i64 %1465, 16
  %1467 = trunc i64 %1466 to i32
  %1468 = add nsw i32 %1433, %1467
  %1469 = icmp slt i32 %1468, %470
  %1470 = select i1 %1469, i32 %1468, i32 %470
  %1471 = and i32 %1434, -4096
  %1472 = and i32 %1433, -4096
  %1473 = and i32 %1463, -4096
  %1474 = and i32 %1470, -4096
  %1475 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 9
  %1476 = load i32, i32* %1475, align 8
  %1477 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 9
  %1478 = load i32, i32* %1477, align 8
  %1479 = mul nsw i32 %1455, 255
  %1480 = add nsw i32 %1479, 32768
  %1481 = lshr i32 %1480, 16
  %1482 = trunc i32 %1481 to i8
  %1483 = icmp sgt i32 %1471, %1472
  br i1 %1483, label %1723, label %1484

; <label>:1484:                                   ; preds = %1453
  %1485 = icmp sgt i32 %1473, %1474
  br i1 %1485, label %1486, label %1499

; <label>:1486:                                   ; preds = %1484
  %1487 = icmp sgt i32 %1471, %1473
  %1488 = select i1 %1487, i32 %1473, i32 %1471
  %1489 = select i1 %1487, i32 %1471, i32 %1473
  %1490 = icmp sgt i32 %1472, %1474
  %1491 = select i1 %1490, i32 %1474, i32 %1472
  %1492 = select i1 %1490, i32 %1472, i32 %1474
  %1493 = icmp slt i32 %1491, %1488
  %1494 = select i1 %1493, i32 %1488, i32 %1491
  %1495 = icmp slt i32 %1489, %1492
  %1496 = select i1 %1495, i32 %1489, i32 %1492
  %1497 = add nsw i32 %1494, %1496
  %1498 = ashr exact i32 %1497, 1
  br label %1499

; <label>:1499:                                   ; preds = %1486, %1484
  %1500 = phi i32 [ %1498, %1486 ], [ %1473, %1484 ]
  %1501 = phi i32 [ %1498, %1486 ], [ %1474, %1484 ]
  %1502 = icmp eq i32 %1471, %1472
  %1503 = icmp eq i32 %1500, %1501
  %1504 = and i1 %1502, %1503
  br i1 %1504, label %1723, label %1505

; <label>:1505:                                   ; preds = %1499
  %1506 = icmp slt i32 %1500, %1471
  %1507 = select i1 %1506, i32 %1500, i32 %1471
  %1508 = select i1 %1506, i32 %1471, i32 %1500
  %1509 = icmp slt i32 %1501, %1472
  %1510 = select i1 %1509, i32 %1501, i32 %1472
  %1511 = select i1 %1509, i32 %1472, i32 %1501
  %1512 = add nsw i32 %1508, 65535
  %1513 = and i32 %1512, -65536
  %1514 = and i32 %1510, -65536
  %1515 = icmp slt i32 %1514, %1513
  br i1 %1515, label %1722, label %1516

; <label>:1516:                                   ; preds = %1505
  %1517 = icmp sgt i32 %1513, %1507
  br i1 %1517, label %1518, label %1579

; <label>:1518:                                   ; preds = %1516
  %1519 = sub nsw i32 %1513, %1507
  %1520 = add nsw i32 %1519, 65535
  %1521 = ashr i32 %1520, 16
  switch i32 %1521, label %1578 [
    i32 1, label %1522
    i32 2, label %1543
  ]

; <label>:1522:                                   ; preds = %1518
  %1523 = sub i32 %1513, %1508
  %1524 = add nsw i32 %1523, %1519
  %1525 = lshr i32 %1524, 9
  %1526 = ashr i32 %1507, 16
  %1527 = icmp eq i8 %1482, -1
  %1528 = sext i32 %1526 to i64
  %1529 = getelementptr inbounds i8, i8* %1454, i64 %1528
  br i1 %1527, label %1530, label %1532

; <label>:1530:                                   ; preds = %1522
  %1531 = trunc i32 %1525 to i8
  store i8 %1531, i8* %1529, align 1
  br label %1579

; <label>:1532:                                   ; preds = %1522
  %1533 = and i32 %1525, 255
  %1534 = and i32 %1481, 255
  %1535 = mul nuw nsw i32 %1533, %1534
  %1536 = lshr i32 %1535, 8
  %1537 = load i8, i8* %1529, align 1
  %1538 = zext i8 %1537 to i32
  %1539 = add nuw nsw i32 %1536, %1538
  %1540 = lshr i32 %1539, 8
  %1541 = sub nsw i32 %1539, %1540
  %1542 = trunc i32 %1541 to i8
  store i8 %1542, i8* %1529, align 1
  br label %1579

; <label>:1543:                                   ; preds = %1518
  %1544 = sub i32 -65536, %1507
  %1545 = add i32 %1513, %1544
  %1546 = sub i32 %1508, %1507
  %1547 = sub i32 %1546, %1545
  %1548 = ashr i32 %1545, 11
  %1549 = ashr i32 %1476, 11
  %1550 = mul i32 %1548, %1549
  %1551 = mul i32 %1550, %1548
  %1552 = lshr i32 %1551, 8
  %1553 = ashr i32 %1547, 11
  %1554 = mul i32 %1553, %1549
  %1555 = mul i32 %1554, %1553
  %1556 = lshr i32 %1555, 8
  %1557 = sub nsw i32 %1481, %1556
  %1558 = ashr i32 %1507, 16
  %1559 = sext i32 %1558 to i64
  %1560 = getelementptr inbounds i8, i8* %1454, i64 %1559
  %1561 = load i8, i8* %1560, align 1
  %1562 = zext i8 %1561 to i32
  %1563 = and i32 %1552, 255
  %1564 = add nuw nsw i32 %1563, %1562
  %1565 = lshr i32 %1564, 8
  %1566 = sub nsw i32 %1564, %1565
  %1567 = trunc i32 %1566 to i8
  store i8 %1567, i8* %1560, align 1
  %1568 = add nsw i32 %1558, 1
  %1569 = sext i32 %1568 to i64
  %1570 = getelementptr inbounds i8, i8* %1454, i64 %1569
  %1571 = load i8, i8* %1570, align 1
  %1572 = zext i8 %1571 to i32
  %1573 = and i32 %1557, 255
  %1574 = add nuw nsw i32 %1573, %1572
  %1575 = lshr i32 %1574, 8
  %1576 = sub nsw i32 %1574, %1575
  %1577 = trunc i32 %1576 to i8
  store i8 %1577, i8* %1570, align 1
  br label %1579

; <label>:1578:                                   ; preds = %1518
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1436, i32 %1507, i32 %1513, i32 %1508, i32 %1513, i32 %1476, i32 2147483647, i8 zeroext %1482, i8* %1454, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1579

; <label>:1579:                                   ; preds = %1578, %1543, %1532, %1530, %1516
  %1580 = icmp sgt i32 %1514, %1513
  br i1 %1580, label %1581, label %1659

; <label>:1581:                                   ; preds = %1579
  %1582 = sub nsw i32 %1514, %1513
  %1583 = icmp sgt i32 %1582, 0
  br i1 %1583, label %1584, label %1659

; <label>:1584:                                   ; preds = %1581
  %1585 = lshr exact i32 %1582, 16
  %1586 = ashr i32 %1512, 16
  %1587 = and i32 %1481, 255
  %1588 = sext i32 %1586 to i64
  %1589 = zext i32 %1585 to i64
  %1590 = icmp ult i32 %1582, 1048576
  br i1 %1590, label %1645, label %1591

; <label>:1591:                                   ; preds = %1584
  %1592 = and i64 %1589, 65520
  %1593 = insertelement <16 x i32> undef, i32 %1587, i32 0
  %1594 = shufflevector <16 x i32> %1593, <16 x i32> undef, <16 x i32> zeroinitializer
  %1595 = add nsw i64 %1592, -16
  %1596 = lshr exact i64 %1595, 4
  %1597 = add nuw nsw i64 %1596, 1
  %1598 = and i64 %1597, 1
  %1599 = icmp eq i64 %1595, 0
  br i1 %1599, label %1629, label %1600

; <label>:1600:                                   ; preds = %1591
  %1601 = sub nsw i64 %1597, %1598
  br label %1602

; <label>:1602:                                   ; preds = %1602, %1600
  %1603 = phi i64 [ 0, %1600 ], [ %1626, %1602 ]
  %1604 = phi i64 [ %1601, %1600 ], [ %1627, %1602 ]
  %1605 = add nsw i64 %1603, %1588
  %1606 = getelementptr inbounds i8, i8* %1454, i64 %1605
  %1607 = bitcast i8* %1606 to <16 x i8>*
  %1608 = load <16 x i8>, <16 x i8>* %1607, align 1
  %1609 = zext <16 x i8> %1608 to <16 x i32>
  %1610 = add nuw nsw <16 x i32> %1594, %1609
  %1611 = lshr <16 x i32> %1610, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1612 = sub nsw <16 x i32> %1610, %1611
  %1613 = trunc <16 x i32> %1612 to <16 x i8>
  %1614 = bitcast i8* %1606 to <16 x i8>*
  store <16 x i8> %1613, <16 x i8>* %1614, align 1
  %1615 = or i64 %1603, 16
  %1616 = add nsw i64 %1615, %1588
  %1617 = getelementptr inbounds i8, i8* %1454, i64 %1616
  %1618 = bitcast i8* %1617 to <16 x i8>*
  %1619 = load <16 x i8>, <16 x i8>* %1618, align 1
  %1620 = zext <16 x i8> %1619 to <16 x i32>
  %1621 = add nuw nsw <16 x i32> %1594, %1620
  %1622 = lshr <16 x i32> %1621, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1623 = sub nsw <16 x i32> %1621, %1622
  %1624 = trunc <16 x i32> %1623 to <16 x i8>
  %1625 = bitcast i8* %1617 to <16 x i8>*
  store <16 x i8> %1624, <16 x i8>* %1625, align 1
  %1626 = add i64 %1603, 32
  %1627 = add i64 %1604, -2
  %1628 = icmp eq i64 %1627, 0
  br i1 %1628, label %1629, label %1602, !llvm.loop !14

; <label>:1629:                                   ; preds = %1602, %1591
  %1630 = phi i64 [ 0, %1591 ], [ %1626, %1602 ]
  %1631 = icmp eq i64 %1598, 0
  br i1 %1631, label %1643, label %1632

; <label>:1632:                                   ; preds = %1629
  %1633 = add nsw i64 %1630, %1588
  %1634 = getelementptr inbounds i8, i8* %1454, i64 %1633
  %1635 = bitcast i8* %1634 to <16 x i8>*
  %1636 = load <16 x i8>, <16 x i8>* %1635, align 1
  %1637 = zext <16 x i8> %1636 to <16 x i32>
  %1638 = add nuw nsw <16 x i32> %1594, %1637
  %1639 = lshr <16 x i32> %1638, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1640 = sub nsw <16 x i32> %1638, %1639
  %1641 = trunc <16 x i32> %1640 to <16 x i8>
  %1642 = bitcast i8* %1634 to <16 x i8>*
  store <16 x i8> %1641, <16 x i8>* %1642, align 1
  br label %1643

; <label>:1643:                                   ; preds = %1629, %1632
  %1644 = icmp eq i64 %1592, %1589
  br i1 %1644, label %1659, label %1645

; <label>:1645:                                   ; preds = %1643, %1584
  %1646 = phi i64 [ 0, %1584 ], [ %1592, %1643 ]
  br label %1647

; <label>:1647:                                   ; preds = %1645, %1647
  %1648 = phi i64 [ %1657, %1647 ], [ %1646, %1645 ]
  %1649 = add nsw i64 %1648, %1588
  %1650 = getelementptr inbounds i8, i8* %1454, i64 %1649
  %1651 = load i8, i8* %1650, align 1
  %1652 = zext i8 %1651 to i32
  %1653 = add nuw nsw i32 %1587, %1652
  %1654 = lshr i32 %1653, 8
  %1655 = sub nsw i32 %1653, %1654
  %1656 = trunc i32 %1655 to i8
  store i8 %1656, i8* %1650, align 1
  %1657 = add nuw nsw i64 %1648, 1
  %1658 = icmp eq i64 %1657, %1589
  br i1 %1658, label %1659, label %1647, !llvm.loop !15

; <label>:1659:                                   ; preds = %1647, %1643, %1581, %1579
  %1660 = icmp sgt i32 %1511, %1514
  br i1 %1660, label %1661, label %1723

; <label>:1661:                                   ; preds = %1659
  %1662 = sub nsw i32 %1511, %1514
  %1663 = add nsw i32 %1662, 65535
  %1664 = ashr i32 %1663, 16
  switch i32 %1664, label %1721 [
    i32 1, label %1665
    i32 2, label %1686
  ]

; <label>:1665:                                   ; preds = %1661
  %1666 = sub i32 %1510, %1514
  %1667 = add nsw i32 %1666, %1662
  %1668 = lshr i32 %1667, 9
  %1669 = ashr i32 %1510, 16
  %1670 = icmp eq i8 %1482, -1
  %1671 = sext i32 %1669 to i64
  %1672 = getelementptr inbounds i8, i8* %1454, i64 %1671
  br i1 %1670, label %1673, label %1675

; <label>:1673:                                   ; preds = %1665
  %1674 = trunc i32 %1668 to i8
  store i8 %1674, i8* %1672, align 1
  br label %1723

; <label>:1675:                                   ; preds = %1665
  %1676 = and i32 %1668, 255
  %1677 = and i32 %1481, 255
  %1678 = mul nuw nsw i32 %1676, %1677
  %1679 = lshr i32 %1678, 8
  %1680 = load i8, i8* %1672, align 1
  %1681 = zext i8 %1680 to i32
  %1682 = add nuw nsw i32 %1679, %1681
  %1683 = lshr i32 %1682, 8
  %1684 = sub nsw i32 %1682, %1683
  %1685 = trunc i32 %1684 to i8
  store i8 %1685, i8* %1672, align 1
  br label %1723

; <label>:1686:                                   ; preds = %1661
  %1687 = sub i32 65536, %1510
  %1688 = add i32 %1687, %1514
  %1689 = sub i32 %1511, %1510
  %1690 = sub i32 %1689, %1688
  %1691 = ashr i32 %1688, 11
  %1692 = ashr i32 %1478, 11
  %1693 = mul i32 %1691, %1692
  %1694 = mul i32 %1693, %1691
  %1695 = lshr i32 %1694, 8
  %1696 = sub nsw i32 %1481, %1695
  %1697 = ashr i32 %1690, 11
  %1698 = mul i32 %1697, %1692
  %1699 = mul i32 %1698, %1697
  %1700 = lshr i32 %1699, 8
  %1701 = ashr i32 %1510, 16
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds i8, i8* %1454, i64 %1702
  %1704 = load i8, i8* %1703, align 1
  %1705 = zext i8 %1704 to i32
  %1706 = and i32 %1696, 255
  %1707 = add nuw nsw i32 %1706, %1705
  %1708 = lshr i32 %1707, 8
  %1709 = sub nsw i32 %1707, %1708
  %1710 = trunc i32 %1709 to i8
  store i8 %1710, i8* %1703, align 1
  %1711 = add nsw i32 %1701, 1
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds i8, i8* %1454, i64 %1712
  %1714 = load i8, i8* %1713, align 1
  %1715 = zext i8 %1714 to i32
  %1716 = and i32 %1700, 255
  %1717 = add nuw nsw i32 %1716, %1715
  %1718 = lshr i32 %1717, 8
  %1719 = sub nsw i32 %1717, %1718
  %1720 = trunc i32 %1719 to i8
  store i8 %1720, i8* %1713, align 1
  br label %1723

; <label>:1721:                                   ; preds = %1661
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1436, i32 %1514, i32 %1510, i32 %1514, i32 %1511, i32 2147483647, i32 %1478, i8 zeroext %1482, i8* %1454, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1723

; <label>:1722:                                   ; preds = %1505
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1436, i32 %1507, i32 %1510, i32 %1508, i32 %1511, i32 %1476, i32 %1478, i8 zeroext %1482, i8* %1454, i1 zeroext true, i1 zeroext false, i1 zeroext false) #12
  br label %1723

; <label>:1723:                                   ; preds = %1722, %1721, %1686, %1675, %1673, %1659, %1499, %1453
  %1724 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %460, align 8
  %1725 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1724, i64 20
  %1726 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %1725, align 8
  call void %1726(%class.AdditiveBlitter* nonnull %224, i32 %1435, i32 %665) #12
  %1727 = add nsw i32 %1463, -2048
  %1728 = add nsw i32 %1470, -2048
  br label %1729

; <label>:1729:                                   ; preds = %1723, %856, %854, %805, %795, %777
  %1730 = phi i32 [ %1728, %1723 ], [ %675, %795 ], [ %675, %777 ], [ %675, %854 ], [ %675, %856 ], [ %675, %805 ]
  %1731 = phi i32 [ %1727, %1723 ], [ %669, %795 ], [ %669, %777 ], [ %669, %854 ], [ %669, %856 ], [ %669, %805 ]
  store i32 %1731, i32* %666, align 8
  store i32 %1730, i32* %672, align 8
  %1732 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %620, i64 0, i32 6
  store i32 %665, i32* %1732, align 4
  %1733 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %617, i64 0, i32 6
  store i32 %665, i32* %1733, align 4
  br label %471

; <label>:1734:                                   ; preds = %437, %405
  %1735 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %368, align 8
  %1736 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1735, i64 0, i32 8
  %1737 = load i32, i32* %1736, align 4
  %1738 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %358, align 8
  %1739 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1738, i64 0, i32 7
  %1740 = load i32, i32* %1739, align 8
  %1741 = sub nsw i32 %1737, %1740
  %1742 = ashr i32 %1741, 16
  %1743 = shl nsw i32 %1742, 2
  %1744 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* nonnull %0) #12
  %1745 = sub nsw i32 %388, %387
  %1746 = load i8, i8* %74, align 2
  store i32 %424, i32* %365, align 8
  store i32 %424, i32* %362, align 8
  store i32 %427, i32* %376, align 8
  store i32 %427, i32* %373, align 8
  %1747 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %358, align 8
  %1748 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1747, i64 0, i32 7
  %1749 = shl i32 %387, 16
  %1750 = load i32, i32* %1748, align 4
  %1751 = icmp slt i32 %1749, %1750
  %1752 = select i1 %1751, i32 %1750, i32 %1749
  br label %1753

; <label>:1753:                                   ; preds = %1783, %1734
  %1754 = phi i32 [ %1793, %1783 ], [ %1750, %1734 ]
  %1755 = phi %struct.SkAnalyticEdge* [ %1791, %1783 ], [ %1747, %1734 ]
  %1756 = phi i32 [ %1789, %1783 ], [ 2147483647, %1734 ]
  %1757 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 6
  %1758 = load i32, i32* %1757, align 4
  %1759 = add nsw i32 %1758, 65536
  %1760 = icmp eq i32 %1759, %1752
  br i1 %1760, label %1761, label %1767

; <label>:1761:                                   ; preds = %1753
  %1762 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 3
  %1763 = load i32, i32* %1762, align 8
  %1764 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 4
  %1765 = load i32, i32* %1764, align 4
  %1766 = add nsw i32 %1765, %1763
  store i32 %1766, i32* %1762, align 8
  br label %1782

; <label>:1767:                                   ; preds = %1753
  %1768 = icmp eq i32 %1758, %1752
  br i1 %1768, label %1783, label %1769

; <label>:1769:                                   ; preds = %1767
  %1770 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 5
  %1771 = load i32, i32* %1770, align 8
  %1772 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 4
  %1773 = load i32, i32* %1772, align 4
  %1774 = sub nsw i32 %1752, %1754
  %1775 = sext i32 %1773 to i64
  %1776 = sext i32 %1774 to i64
  %1777 = mul nsw i64 %1775, %1776
  %1778 = lshr i64 %1777, 16
  %1779 = trunc i64 %1778 to i32
  %1780 = add nsw i32 %1771, %1779
  %1781 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 3
  store i32 %1780, i32* %1781, align 8
  br label %1782

; <label>:1782:                                   ; preds = %1761, %1769
  store i32 %1752, i32* %1757, align 4
  br label %1783

; <label>:1783:                                   ; preds = %1782, %1767
  %1784 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 8
  %1785 = load i32, i32* %1784, align 4
  %1786 = icmp sgt i32 %1785, %1752
  %1787 = icmp sgt i32 %1756, %1785
  %1788 = and i1 %1786, %1787
  %1789 = select i1 %1788, i32 %1785, i32 %1756
  %1790 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1755, i64 0, i32 0
  %1791 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %1790, align 8
  %1792 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1791, i64 0, i32 7
  %1793 = load i32, i32* %1792, align 8
  %1794 = icmp slt i32 %1752, %1793
  br i1 %1794, label %1795, label %1753

; <label>:1795:                                   ; preds = %1783
  %1796 = add nsw i32 %1743, 4
  %1797 = shl nsw i32 %1745, 1
  %1798 = and i8 %1746, 3
  %1799 = icmp sgt i32 %234, %1796
  %1800 = icmp sgt i32 %1744, %1797
  %1801 = zext i8 %1798 to i32
  %1802 = icmp sgt i32 %1789, %1793
  %1803 = select i1 %1802, i32 %1793, i32 %1789
  %1804 = and i32 %1801, 1
  %1805 = icmp eq i32 %1804, 0
  %1806 = select i1 %1805, i32 -1, i32 1
  %1807 = and i32 %1801, 2
  %1808 = icmp ne i32 %1807, 0
  %1809 = xor i1 %1808, true
  %1810 = icmp sge i32 %1749, %1750
  %1811 = or i1 %1810, %1809
  br i1 %1811, label %1812, label %1816

; <label>:1812:                                   ; preds = %1795
  %1813 = ashr exact i32 %424, 16
  %1814 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 1
  %1815 = bitcast i64* %1814 to i32*
  br label %1942

; <label>:1816:                                   ; preds = %1795
  %1817 = sub nsw i32 %427, %424
  %1818 = ashr exact i32 %1817, 16
  %1819 = ashr i32 %1752, 16
  %1820 = icmp eq i32 %1819, %387
  br i1 %1820, label %1833, label %1821

; <label>:1821:                                   ; preds = %1816
  %1822 = bitcast %class.MaskAdditiveBlitter* %17 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %1823 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %1822, align 8
  %1824 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %1823, i64 15
  %1825 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %1824, align 8
  %1826 = call %class.SkBlitter* %1825(%class.AdditiveBlitter* nonnull %224, i1 zeroext false) #12
  %1827 = ashr exact i32 %424, 16
  %1828 = sub nsw i32 %1819, %387
  %1829 = bitcast %class.SkBlitter* %1826 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %1830 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %1829, align 8
  %1831 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %1830, i64 6
  %1832 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %1831, align 8
  call void %1832(%class.SkBlitter* %1826, i32 %1827, i32 %387, i32 %1818, i32 %1828) #12
  br label %1833

; <label>:1833:                                   ; preds = %1821, %1816
  %1834 = phi i32 [ %1819, %1821 ], [ %387, %1816 ]
  %1835 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 1
  %1836 = bitcast i64* %1835 to i32*
  %1837 = load i32, i32* %1836, align 8
  %1838 = icmp eq i32 %1837, %1834
  br i1 %1838, label %1839, label %1842

; <label>:1839:                                   ; preds = %1833
  %1840 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1841 = load i8*, i8** %1840, align 8
  br label %1860

; <label>:1842:                                   ; preds = %1833
  store i32 %1834, i32* %1836, align 8
  %1843 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1844 = load i8*, i8** %1843, align 8
  %1845 = load i32, i32* %218, align 4
  %1846 = sub nsw i32 %1834, %1845
  %1847 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 2, i32 0, i32 1
  %1848 = bitcast %class.SkAutoMalloc* %1847 to i32*
  %1849 = load i32, i32* %1848, align 8
  %1850 = mul i32 %1846, %1849
  %1851 = zext i32 %1850 to i64
  %1852 = getelementptr inbounds i8, i8* %1844, i64 %1851
  %1853 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 1, i32 0, i32 1, i32 1
  %1854 = bitcast i64* %1853 to i32*
  %1855 = load i32, i32* %1854, align 8
  %1856 = sext i32 %1855 to i64
  %1857 = sub nsw i64 0, %1856
  %1858 = getelementptr inbounds i8, i8* %1852, i64 %1857
  %1859 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8* %1858, i8** %1859, align 8
  br label %1860

; <label>:1860:                                   ; preds = %1842, %1839
  %1861 = phi i8* [ %1841, %1839 ], [ %1858, %1842 ]
  %1862 = ashr exact i32 %424, 16
  %1863 = icmp sgt i32 %1817, 65535
  br i1 %1863, label %1864, label %1942

; <label>:1864:                                   ; preds = %1860
  %1865 = shl i32 %1834, 16
  %1866 = sub nsw i32 %1752, %1865
  %1867 = mul nsw i32 %1866, 255
  %1868 = add nsw i32 %1867, 32768
  %1869 = lshr i32 %1868, 16
  %1870 = and i32 %1869, 255
  %1871 = sext i32 %1862 to i64
  %1872 = zext i32 %1818 to i64
  %1873 = icmp ult i32 %1818, 16
  br i1 %1873, label %1928, label %1874

; <label>:1874:                                   ; preds = %1864
  %1875 = and i64 %1872, 4294967280
  %1876 = insertelement <16 x i32> undef, i32 %1870, i32 0
  %1877 = shufflevector <16 x i32> %1876, <16 x i32> undef, <16 x i32> zeroinitializer
  %1878 = add nsw i64 %1875, -16
  %1879 = lshr exact i64 %1878, 4
  %1880 = add nuw nsw i64 %1879, 1
  %1881 = and i64 %1880, 1
  %1882 = icmp eq i64 %1878, 0
  br i1 %1882, label %1912, label %1883

; <label>:1883:                                   ; preds = %1874
  %1884 = sub nsw i64 %1880, %1881
  br label %1885

; <label>:1885:                                   ; preds = %1885, %1883
  %1886 = phi i64 [ 0, %1883 ], [ %1909, %1885 ]
  %1887 = phi i64 [ %1884, %1883 ], [ %1910, %1885 ]
  %1888 = add nsw i64 %1886, %1871
  %1889 = getelementptr inbounds i8, i8* %1861, i64 %1888
  %1890 = bitcast i8* %1889 to <16 x i8>*
  %1891 = load <16 x i8>, <16 x i8>* %1890, align 1
  %1892 = zext <16 x i8> %1891 to <16 x i32>
  %1893 = add nuw nsw <16 x i32> %1877, %1892
  %1894 = lshr <16 x i32> %1893, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1895 = sub nsw <16 x i32> %1893, %1894
  %1896 = trunc <16 x i32> %1895 to <16 x i8>
  %1897 = bitcast i8* %1889 to <16 x i8>*
  store <16 x i8> %1896, <16 x i8>* %1897, align 1
  %1898 = or i64 %1886, 16
  %1899 = add nsw i64 %1898, %1871
  %1900 = getelementptr inbounds i8, i8* %1861, i64 %1899
  %1901 = bitcast i8* %1900 to <16 x i8>*
  %1902 = load <16 x i8>, <16 x i8>* %1901, align 1
  %1903 = zext <16 x i8> %1902 to <16 x i32>
  %1904 = add nuw nsw <16 x i32> %1877, %1903
  %1905 = lshr <16 x i32> %1904, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1906 = sub nsw <16 x i32> %1904, %1905
  %1907 = trunc <16 x i32> %1906 to <16 x i8>
  %1908 = bitcast i8* %1900 to <16 x i8>*
  store <16 x i8> %1907, <16 x i8>* %1908, align 1
  %1909 = add i64 %1886, 32
  %1910 = add i64 %1887, -2
  %1911 = icmp eq i64 %1910, 0
  br i1 %1911, label %1912, label %1885, !llvm.loop !16

; <label>:1912:                                   ; preds = %1885, %1874
  %1913 = phi i64 [ 0, %1874 ], [ %1909, %1885 ]
  %1914 = icmp eq i64 %1881, 0
  br i1 %1914, label %1926, label %1915

; <label>:1915:                                   ; preds = %1912
  %1916 = add nsw i64 %1913, %1871
  %1917 = getelementptr inbounds i8, i8* %1861, i64 %1916
  %1918 = bitcast i8* %1917 to <16 x i8>*
  %1919 = load <16 x i8>, <16 x i8>* %1918, align 1
  %1920 = zext <16 x i8> %1919 to <16 x i32>
  %1921 = add nuw nsw <16 x i32> %1877, %1920
  %1922 = lshr <16 x i32> %1921, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %1923 = sub nsw <16 x i32> %1921, %1922
  %1924 = trunc <16 x i32> %1923 to <16 x i8>
  %1925 = bitcast i8* %1917 to <16 x i8>*
  store <16 x i8> %1924, <16 x i8>* %1925, align 1
  br label %1926

; <label>:1926:                                   ; preds = %1912, %1915
  %1927 = icmp eq i64 %1875, %1872
  br i1 %1927, label %1942, label %1928

; <label>:1928:                                   ; preds = %1926, %1864
  %1929 = phi i64 [ 0, %1864 ], [ %1875, %1926 ]
  br label %1930

; <label>:1930:                                   ; preds = %1928, %1930
  %1931 = phi i64 [ %1940, %1930 ], [ %1929, %1928 ]
  %1932 = add nsw i64 %1931, %1871
  %1933 = getelementptr inbounds i8, i8* %1861, i64 %1932
  %1934 = load i8, i8* %1933, align 1
  %1935 = zext i8 %1934 to i32
  %1936 = add nuw nsw i32 %1870, %1935
  %1937 = lshr i32 %1936, 8
  %1938 = sub nsw i32 %1936, %1937
  %1939 = trunc i32 %1938 to i8
  store i8 %1939, i8* %1933, align 1
  %1940 = add nuw nsw i64 %1931, 1
  %1941 = icmp eq i64 %1940, %1872
  br i1 %1941, label %1942, label %1930, !llvm.loop !17

; <label>:1942:                                   ; preds = %1930, %1926, %1860, %1812
  %1943 = phi i32* [ %1836, %1860 ], [ %1815, %1812 ], [ %1836, %1926 ], [ %1836, %1930 ]
  %1944 = phi i32 [ %1862, %1860 ], [ %1813, %1812 ], [ %1862, %1926 ], [ %1862, %1930 ]
  %1945 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 46, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1946 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1947 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 2, i32 0, i32 1
  %1948 = bitcast %class.SkAutoMalloc* %1947 to i32*
  %1949 = getelementptr inbounds %class.AdditiveBlitter, %class.AdditiveBlitter* %224, i64 1, i32 0, i32 1, i32 1
  %1950 = bitcast i64* %1949 to i32*
  %1951 = xor i1 %1799, true
  %1952 = shl i32 %388, 16
  %1953 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 10
  %1954 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 11
  %1955 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 12
  %1956 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %11, i64 0, i32 6
  br label %1957

; <label>:1957:                                   ; preds = %2949, %1942
  %1958 = phi i32 [ %1803, %1942 ], [ %2950, %2949 ]
  %1959 = phi i32 [ %1752, %1942 ], [ %1975, %2949 ]
  %1960 = load i32, i32* %362, align 8
  %1961 = add nsw i32 %1959, 65536
  %1962 = and i32 %1961, -65536
  %1963 = icmp slt i32 %1958, %1962
  %1964 = select i1 %1963, i32 %1958, i32 %1962
  %1965 = and i32 %1964, 65535
  %1966 = icmp eq i32 %1965, 0
  %1967 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %358, align 8
  %1968 = sub nsw i32 %1964, %1959
  %1969 = and i32 %1968, 16384
  %1970 = icmp eq i32 %1969, 0
  %1971 = add nsw i32 %1959, 16384
  %1972 = lshr i32 %1968, 15
  %1973 = and i32 %1972, 1
  %1974 = select i1 %1970, i32 %1973, i32 2
  %1975 = select i1 %1970, i32 %1964, i32 %1971
  %1976 = sub nsw i32 %1975, %1959
  %1977 = mul nsw i32 %1976, 255
  %1978 = add nsw i32 %1977, 32768
  %1979 = lshr i32 %1978, 16
  %1980 = trunc i32 %1979 to i8
  %1981 = ashr i32 %1959, 16
  %1982 = load i32, i32* %1943, align 8
  %1983 = icmp eq i32 %1982, %1981
  br i1 %1983, label %1984, label %1986

; <label>:1984:                                   ; preds = %1957
  %1985 = load i8*, i8** %1945, align 8
  br label %1998

; <label>:1986:                                   ; preds = %1957
  store i32 %1981, i32* %1943, align 8
  %1987 = load i8*, i8** %1946, align 8
  %1988 = load i32, i32* %218, align 4
  %1989 = sub nsw i32 %1981, %1988
  %1990 = load i32, i32* %1948, align 8
  %1991 = mul i32 %1989, %1990
  %1992 = zext i32 %1991 to i64
  %1993 = getelementptr inbounds i8, i8* %1987, i64 %1992
  %1994 = load i32, i32* %1950, align 8
  %1995 = sext i32 %1994 to i64
  %1996 = sub nsw i64 0, %1995
  %1997 = getelementptr inbounds i8, i8* %1993, i64 %1996
  store i8* %1997, i8** %1945, align 8
  br label %1998

; <label>:1998:                                   ; preds = %1986, %1984
  %1999 = phi i8* [ %1985, %1984 ], [ %1997, %1986 ]
  %2000 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1967, i64 0, i32 7
  %2001 = load i32, i32* %2000, align 8
  %2002 = icmp sgt i32 %2001, %1959
  br i1 %2002, label %2532, label %2003

; <label>:2003:                                   ; preds = %1998
  %2004 = icmp ne i8 %1980, -1
  %2005 = add nsw i32 %1975, 16384
  %2006 = and i32 %1979, 255
  %2007 = insertelement <16 x i32> undef, i32 %2006, i32 0
  %2008 = shufflevector <16 x i32> %2007, <16 x i32> undef, <16 x i32> zeroinitializer
  br label %2009

; <label>:2009:                                   ; preds = %2524, %2003
  %2010 = phi %struct.SkAnalyticEdge* [ %1967, %2003 ], [ %2413, %2524 ]
  %2011 = phi i32 [ 0, %2003 ], [ %2024, %2524 ]
  %2012 = phi i1 [ %1808, %2003 ], [ %2028, %2524 ]
  %2013 = phi i32 [ %1960, %2003 ], [ %2526, %2524 ]
  %2014 = phi %struct.SkAnalyticEdge* [ %10, %2003 ], [ %2411, %2524 ]
  %2015 = phi i32 [ %424, %2003 ], [ %2410, %2524 ]
  %2016 = phi i32 [ 0, %2003 ], [ %2409, %2524 ]
  %2017 = phi i8 [ 0, %2003 ], [ %2408, %2524 ]
  %2018 = phi i32 [ %1944, %2003 ], [ %2407, %2524 ]
  %2019 = phi i32 [ 2147483647, %2003 ], [ %2525, %2524 ]
  %2020 = bitcast %struct.SkAnalyticEdge* %2010 to %struct.SkAnalyticQuadraticEdge*
  %2021 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 16
  %2022 = load i8, i8* %2021, align 1
  %2023 = sext i8 %2022 to i32
  %2024 = add nsw i32 %2011, %2023
  %2025 = and i32 %2024, %1806
  %2026 = icmp eq i32 %2025, 0
  %2027 = xor i1 %1808, %2026
  %2028 = xor i1 %2027, true
  %2029 = or i1 %2012, %2027
  %2030 = and i1 %2012, %2027
  %2031 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 8
  %2032 = load i32, i32* %2031, align 4
  %2033 = icmp eq i32 %2032, %1975
  br i1 %1799, label %2034, label %2053

; <label>:2034:                                   ; preds = %2009
  %2035 = xor i1 %2029, true
  %2036 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 2
  %2037 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2036, align 8
  %2038 = icmp eq %struct.SkAnalyticEdge* %2037, null
  %2039 = or i1 %2038, %2035
  br i1 %2039, label %2045, label %2040

; <label>:2040:                                   ; preds = %2034
  %2041 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  %2042 = load i32, i32* %2041, align 8
  %2043 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2037, i64 0, i32 3
  %2044 = load i32, i32* %2043, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2010, i32 %1959, i32 %2042, i32 %2044, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  br label %2045

; <label>:2045:                                   ; preds = %2040, %2034
  %2046 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 2
  %2047 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2046, align 8
  %2048 = icmp ne %struct.SkAnalyticEdge* %2047, %2010
  %2049 = or i1 %2030, %2048
  br i1 %2049, label %2053, label %2050

; <label>:2050:                                   ; preds = %2045
  %2051 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  %2052 = load i32, i32* %2051, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2014, i32 %1959, i32 %2015, i32 %2052, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  br label %2053

; <label>:2053:                                   ; preds = %2050, %2045, %2009
  br i1 %2030, label %2054, label %2382

; <label>:2054:                                   ; preds = %2053
  br i1 %1799, label %2055, label %2096

; <label>:2055:                                   ; preds = %2054
  %2056 = and i8 %2017, 1
  %2057 = icmp ne i8 %2056, 0
  %2058 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 2
  %2059 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2058, align 8
  %2060 = icmp eq %struct.SkAnalyticEdge* %2059, null
  %2061 = icmp eq %struct.SkAnalyticEdge* %2059, %2010
  %2062 = or i1 %2060, %2061
  br i1 %2062, label %2067, label %2063

; <label>:2063:                                   ; preds = %2055
  %2064 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2059, i64 0, i32 3
  %2065 = load i32, i32* %2064, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2014, i32 %1959, i32 %2015, i32 %2065, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  %2066 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2058, align 8
  br label %2067

; <label>:2067:                                   ; preds = %2063, %2055
  %2068 = phi %struct.SkAnalyticEdge* [ %2059, %2055 ], [ %2066, %2063 ]
  %2069 = icmp eq %struct.SkAnalyticEdge* %2068, null
  br i1 %2069, label %2072, label %2070

; <label>:2070:                                   ; preds = %2067
  %2071 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  br label %2083

; <label>:2072:                                   ; preds = %2067
  %2073 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 10
  store i32 %2015, i32* %2073, align 4
  %2074 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 11
  store i32 %1959, i32* %2074, align 8
  %2075 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 12
  store i32 %2016, i32* %2075, align 4
  %2076 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  %2077 = load i32, i32* %2076, align 8
  %2078 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 9
  %2079 = load i32, i32* %2078, align 8
  %2080 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 10
  store i32 %2077, i32* %2080, align 4
  %2081 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 11
  store i32 %1959, i32* %2081, align 8
  %2082 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 12
  store i32 %2079, i32* %2082, align 4
  store %struct.SkAnalyticEdge* %2010, %struct.SkAnalyticEdge** %2058, align 8
  br label %2083

; <label>:2083:                                   ; preds = %2072, %2070
  %2084 = phi i32* [ %2071, %2070 ], [ %2076, %2072 ]
  %2085 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 6
  store i32 %1975, i32* %2085, align 4
  %2086 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 4
  %2087 = load i32, i32* %2086, align 4
  %2088 = ashr i32 %2087, %1974
  %2089 = load i32, i32* %2084, align 8
  %2090 = add nsw i32 %2089, %2088
  store i32 %2090, i32* %2084, align 8
  %2091 = or i1 %1966, %2057
  %2092 = or i1 %2091, %2033
  br i1 %2092, label %2093, label %2406

; <label>:2093:                                   ; preds = %2083
  %2094 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 3
  %2095 = load i32, i32* %2094, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2014, i32 %1975, i32 %2095, i32 %2090, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  br label %2406

; <label>:2096:                                   ; preds = %2054
  %2097 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  %2098 = load i32, i32* %2097, align 8
  %2099 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 6
  store i32 %1975, i32* %2099, align 4
  %2100 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 4
  %2101 = load i32, i32* %2100, align 4
  %2102 = ashr i32 %2101, %1974
  %2103 = add nsw i32 %2102, %2098
  store i32 %2103, i32* %2097, align 8
  %2104 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2014, i64 0, i32 3
  %2105 = load i32, i32* %2104, align 4
  %2106 = icmp slt i32 %2105, %424
  %2107 = select i1 %2106, i32 %424, i32 %2105
  %2108 = icmp sgt i32 %2098, %427
  %2109 = select i1 %2108, i32 %427, i32 %2098
  %2110 = icmp sgt i32 %2103, %427
  %2111 = select i1 %2110, i32 %427, i32 %2103
  %2112 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 9
  %2113 = load i32, i32* %2112, align 8
  br i1 %2004, label %2139, label %2114

; <label>:2114:                                   ; preds = %2096
  %2115 = ashr i32 %2015, 16
  %2116 = icmp slt i32 %2115, %2018
  %2117 = ashr i32 %2105, 16
  %2118 = icmp slt i32 %2117, %2018
  %2119 = or i1 %2116, %2118
  br i1 %2119, label %2139, label %2120

; <label>:2120:                                   ; preds = %2114
  %2121 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 0
  %2122 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2121, align 8
  %2123 = icmp eq %struct.SkAnalyticEdge* %2122, null
  br i1 %2123, label %2139, label %2124

; <label>:2124:                                   ; preds = %2120
  %2125 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2122, i64 0, i32 7
  %2126 = load i32, i32* %2125, align 8
  %2127 = icmp slt i32 %2126, %1975
  br i1 %2127, label %2128, label %2139

; <label>:2128:                                   ; preds = %2124
  %2129 = add nsw i32 %2103, 65536
  %2130 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2122, i64 0, i32 3
  %2131 = load i32, i32* %2130, align 8
  %2132 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2122, i64 0, i32 4
  %2133 = load i32, i32* %2132, align 4
  %2134 = icmp slt i32 %2133, 0
  %2135 = sub nsw i32 0, %2133
  %2136 = select i1 %2134, i32 %2135, i32 %2133
  %2137 = sub nsw i32 %2131, %2136
  %2138 = icmp sge i32 %2129, %2137
  br label %2139

; <label>:2139:                                   ; preds = %2128, %2124, %2120, %2114, %2096
  %2140 = phi i1 [ false, %2096 ], [ true, %2114 ], [ false, %2124 ], [ false, %2120 ], [ %2138, %2128 ]
  %2141 = icmp sgt i32 %2015, %2109
  br i1 %2141, label %2376, label %2142

; <label>:2142:                                   ; preds = %2139
  %2143 = icmp sgt i32 %2107, %2111
  br i1 %2143, label %2144, label %2157

; <label>:2144:                                   ; preds = %2142
  %2145 = icmp sgt i32 %2015, %2107
  %2146 = select i1 %2145, i32 %2107, i32 %2015
  %2147 = select i1 %2145, i32 %2015, i32 %2107
  %2148 = icmp sgt i32 %2109, %2111
  %2149 = select i1 %2148, i32 %2111, i32 %2109
  %2150 = select i1 %2148, i32 %2109, i32 %2111
  %2151 = icmp slt i32 %2149, %2146
  %2152 = select i1 %2151, i32 %2146, i32 %2149
  %2153 = icmp slt i32 %2147, %2150
  %2154 = select i1 %2153, i32 %2147, i32 %2150
  %2155 = add nsw i32 %2152, %2154
  %2156 = ashr i32 %2155, 1
  br label %2157

; <label>:2157:                                   ; preds = %2144, %2142
  %2158 = phi i32 [ %2156, %2144 ], [ %2107, %2142 ]
  %2159 = phi i32 [ %2156, %2144 ], [ %2111, %2142 ]
  %2160 = icmp eq i32 %2015, %2109
  %2161 = icmp eq i32 %2158, %2159
  %2162 = and i1 %2160, %2161
  br i1 %2162, label %2376, label %2163

; <label>:2163:                                   ; preds = %2157
  %2164 = icmp slt i32 %2158, %2015
  %2165 = select i1 %2164, i32 %2158, i32 %2015
  %2166 = select i1 %2164, i32 %2015, i32 %2158
  %2167 = icmp slt i32 %2159, %2109
  %2168 = select i1 %2167, i32 %2159, i32 %2109
  %2169 = select i1 %2167, i32 %2109, i32 %2159
  %2170 = add nsw i32 %2166, 65535
  %2171 = and i32 %2170, -65536
  %2172 = and i32 %2168, -65536
  %2173 = icmp slt i32 %2172, %2171
  br i1 %2173, label %2375, label %2174

; <label>:2174:                                   ; preds = %2163
  %2175 = icmp sgt i32 %2171, %2165
  br i1 %2175, label %2176, label %2236

; <label>:2176:                                   ; preds = %2174
  %2177 = sub nsw i32 %2171, %2165
  %2178 = add nsw i32 %2177, 65535
  %2179 = ashr i32 %2178, 16
  switch i32 %2179, label %2235 [
    i32 1, label %2180
    i32 2, label %2200
  ]

; <label>:2180:                                   ; preds = %2176
  %2181 = sub i32 %2171, %2166
  %2182 = add nsw i32 %2181, %2177
  %2183 = lshr i32 %2182, 9
  %2184 = ashr i32 %2165, 16
  %2185 = or i1 %2004, %2140
  %2186 = sext i32 %2184 to i64
  %2187 = getelementptr inbounds i8, i8* %1999, i64 %2186
  br i1 %2185, label %2190, label %2188

; <label>:2188:                                   ; preds = %2180
  %2189 = trunc i32 %2183 to i8
  store i8 %2189, i8* %2187, align 1
  br label %2236

; <label>:2190:                                   ; preds = %2180
  %2191 = and i32 %2183, 255
  %2192 = mul nuw nsw i32 %2191, %2006
  %2193 = lshr i32 %2192, 8
  %2194 = load i8, i8* %2187, align 1
  %2195 = zext i8 %2194 to i32
  %2196 = add nuw nsw i32 %2193, %2195
  %2197 = icmp ult i32 %2196, 255
  %2198 = select i1 %2197, i32 %2196, i32 255
  %2199 = trunc i32 %2198 to i8
  store i8 %2199, i8* %2187, align 1
  br label %2236

; <label>:2200:                                   ; preds = %2176
  %2201 = sub i32 -65536, %2165
  %2202 = add i32 %2171, %2201
  %2203 = sub i32 %2166, %2165
  %2204 = sub i32 %2203, %2202
  %2205 = ashr i32 %2202, 11
  %2206 = ashr i32 %2016, 11
  %2207 = mul i32 %2205, %2206
  %2208 = mul i32 %2207, %2205
  %2209 = lshr i32 %2208, 8
  %2210 = ashr i32 %2204, 11
  %2211 = mul i32 %2210, %2206
  %2212 = mul i32 %2211, %2210
  %2213 = lshr i32 %2212, 8
  %2214 = sub nsw i32 %1979, %2213
  %2215 = ashr i32 %2165, 16
  %2216 = sext i32 %2215 to i64
  %2217 = getelementptr inbounds i8, i8* %1999, i64 %2216
  %2218 = load i8, i8* %2217, align 1
  %2219 = zext i8 %2218 to i32
  %2220 = and i32 %2209, 255
  %2221 = add nuw nsw i32 %2220, %2219
  %2222 = icmp ult i32 %2221, 255
  %2223 = select i1 %2222, i32 %2221, i32 255
  %2224 = trunc i32 %2223 to i8
  store i8 %2224, i8* %2217, align 1
  %2225 = add nsw i32 %2215, 1
  %2226 = sext i32 %2225 to i64
  %2227 = getelementptr inbounds i8, i8* %1999, i64 %2226
  %2228 = load i8, i8* %2227, align 1
  %2229 = zext i8 %2228 to i32
  %2230 = and i32 %2214, 255
  %2231 = add nuw nsw i32 %2230, %2229
  %2232 = icmp ult i32 %2231, 255
  %2233 = select i1 %2232, i32 %2231, i32 255
  %2234 = trunc i32 %2233 to i8
  store i8 %2234, i8* %2227, align 1
  br label %2236

; <label>:2235:                                   ; preds = %2176
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1981, i32 %2165, i32 %2171, i32 %2166, i32 %2171, i32 %2016, i32 2147483647, i8 zeroext %1980, i8* %1999, i1 zeroext true, i1 zeroext %2140, i1 zeroext true) #12
  br label %2236

; <label>:2236:                                   ; preds = %2235, %2200, %2190, %2188, %2174
  %2237 = icmp sgt i32 %2172, %2171
  br i1 %2237, label %2238, label %2313

; <label>:2238:                                   ; preds = %2236
  %2239 = sub nsw i32 %2172, %2171
  %2240 = icmp sgt i32 %2239, 0
  br i1 %2240, label %2241, label %2313

; <label>:2241:                                   ; preds = %2238
  %2242 = lshr exact i32 %2239, 16
  %2243 = ashr i32 %2170, 16
  %2244 = sext i32 %2243 to i64
  %2245 = zext i32 %2242 to i64
  %2246 = icmp ult i32 %2239, 1048576
  br i1 %2246, label %2299, label %2247

; <label>:2247:                                   ; preds = %2241
  %2248 = and i64 %2245, 65520
  %2249 = add nsw i64 %2248, -16
  %2250 = lshr exact i64 %2249, 4
  %2251 = add nuw nsw i64 %2250, 1
  %2252 = and i64 %2251, 1
  %2253 = icmp eq i64 %2249, 0
  br i1 %2253, label %2283, label %2254

; <label>:2254:                                   ; preds = %2247
  %2255 = sub nsw i64 %2251, %2252
  br label %2256

; <label>:2256:                                   ; preds = %2256, %2254
  %2257 = phi i64 [ 0, %2254 ], [ %2280, %2256 ]
  %2258 = phi i64 [ %2255, %2254 ], [ %2281, %2256 ]
  %2259 = add nsw i64 %2257, %2244
  %2260 = getelementptr inbounds i8, i8* %1999, i64 %2259
  %2261 = bitcast i8* %2260 to <16 x i8>*
  %2262 = load <16 x i8>, <16 x i8>* %2261, align 1
  %2263 = zext <16 x i8> %2262 to <16 x i32>
  %2264 = add nuw nsw <16 x i32> %2008, %2263
  %2265 = icmp ult <16 x i32> %2264, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2266 = select <16 x i1> %2265, <16 x i32> %2264, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2267 = trunc <16 x i32> %2266 to <16 x i8>
  %2268 = bitcast i8* %2260 to <16 x i8>*
  store <16 x i8> %2267, <16 x i8>* %2268, align 1
  %2269 = or i64 %2257, 16
  %2270 = add nsw i64 %2269, %2244
  %2271 = getelementptr inbounds i8, i8* %1999, i64 %2270
  %2272 = bitcast i8* %2271 to <16 x i8>*
  %2273 = load <16 x i8>, <16 x i8>* %2272, align 1
  %2274 = zext <16 x i8> %2273 to <16 x i32>
  %2275 = add nuw nsw <16 x i32> %2008, %2274
  %2276 = icmp ult <16 x i32> %2275, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2277 = select <16 x i1> %2276, <16 x i32> %2275, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2278 = trunc <16 x i32> %2277 to <16 x i8>
  %2279 = bitcast i8* %2271 to <16 x i8>*
  store <16 x i8> %2278, <16 x i8>* %2279, align 1
  %2280 = add i64 %2257, 32
  %2281 = add i64 %2258, -2
  %2282 = icmp eq i64 %2281, 0
  br i1 %2282, label %2283, label %2256, !llvm.loop !18

; <label>:2283:                                   ; preds = %2256, %2247
  %2284 = phi i64 [ 0, %2247 ], [ %2280, %2256 ]
  %2285 = icmp eq i64 %2252, 0
  br i1 %2285, label %2297, label %2286

; <label>:2286:                                   ; preds = %2283
  %2287 = add nsw i64 %2284, %2244
  %2288 = getelementptr inbounds i8, i8* %1999, i64 %2287
  %2289 = bitcast i8* %2288 to <16 x i8>*
  %2290 = load <16 x i8>, <16 x i8>* %2289, align 1
  %2291 = zext <16 x i8> %2290 to <16 x i32>
  %2292 = add nuw nsw <16 x i32> %2008, %2291
  %2293 = icmp ult <16 x i32> %2292, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2294 = select <16 x i1> %2293, <16 x i32> %2292, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2295 = trunc <16 x i32> %2294 to <16 x i8>
  %2296 = bitcast i8* %2288 to <16 x i8>*
  store <16 x i8> %2295, <16 x i8>* %2296, align 1
  br label %2297

; <label>:2297:                                   ; preds = %2283, %2286
  %2298 = icmp eq i64 %2248, %2245
  br i1 %2298, label %2313, label %2299

; <label>:2299:                                   ; preds = %2297, %2241
  %2300 = phi i64 [ 0, %2241 ], [ %2248, %2297 ]
  br label %2301

; <label>:2301:                                   ; preds = %2299, %2301
  %2302 = phi i64 [ %2311, %2301 ], [ %2300, %2299 ]
  %2303 = add nsw i64 %2302, %2244
  %2304 = getelementptr inbounds i8, i8* %1999, i64 %2303
  %2305 = load i8, i8* %2304, align 1
  %2306 = zext i8 %2305 to i32
  %2307 = add nuw nsw i32 %2006, %2306
  %2308 = icmp ult i32 %2307, 255
  %2309 = select i1 %2308, i32 %2307, i32 255
  %2310 = trunc i32 %2309 to i8
  store i8 %2310, i8* %2304, align 1
  %2311 = add nuw nsw i64 %2302, 1
  %2312 = icmp eq i64 %2311, %2245
  br i1 %2312, label %2313, label %2301, !llvm.loop !19

; <label>:2313:                                   ; preds = %2301, %2297, %2238, %2236
  %2314 = icmp sgt i32 %2169, %2172
  br i1 %2314, label %2315, label %2376

; <label>:2315:                                   ; preds = %2313
  %2316 = sub nsw i32 %2169, %2172
  %2317 = add nsw i32 %2316, 65535
  %2318 = ashr i32 %2317, 16
  switch i32 %2318, label %2374 [
    i32 1, label %2319
    i32 2, label %2339
  ]

; <label>:2319:                                   ; preds = %2315
  %2320 = sub i32 %2168, %2172
  %2321 = add nsw i32 %2320, %2316
  %2322 = lshr i32 %2321, 9
  %2323 = ashr i32 %2168, 16
  %2324 = or i1 %2004, %2140
  %2325 = sext i32 %2323 to i64
  %2326 = getelementptr inbounds i8, i8* %1999, i64 %2325
  br i1 %2324, label %2329, label %2327

; <label>:2327:                                   ; preds = %2319
  %2328 = trunc i32 %2322 to i8
  store i8 %2328, i8* %2326, align 1
  br label %2376

; <label>:2329:                                   ; preds = %2319
  %2330 = and i32 %2322, 255
  %2331 = mul nuw nsw i32 %2330, %2006
  %2332 = lshr i32 %2331, 8
  %2333 = load i8, i8* %2326, align 1
  %2334 = zext i8 %2333 to i32
  %2335 = add nuw nsw i32 %2332, %2334
  %2336 = icmp ult i32 %2335, 255
  %2337 = select i1 %2336, i32 %2335, i32 255
  %2338 = trunc i32 %2337 to i8
  store i8 %2338, i8* %2326, align 1
  br label %2376

; <label>:2339:                                   ; preds = %2315
  %2340 = sub i32 65536, %2168
  %2341 = add i32 %2340, %2172
  %2342 = sub i32 %2169, %2168
  %2343 = sub i32 %2342, %2341
  %2344 = ashr i32 %2341, 11
  %2345 = ashr i32 %2113, 11
  %2346 = mul i32 %2344, %2345
  %2347 = mul i32 %2346, %2344
  %2348 = lshr i32 %2347, 8
  %2349 = sub nsw i32 %1979, %2348
  %2350 = ashr i32 %2343, 11
  %2351 = mul i32 %2350, %2345
  %2352 = mul i32 %2351, %2350
  %2353 = lshr i32 %2352, 8
  %2354 = ashr i32 %2168, 16
  %2355 = sext i32 %2354 to i64
  %2356 = getelementptr inbounds i8, i8* %1999, i64 %2355
  %2357 = load i8, i8* %2356, align 1
  %2358 = zext i8 %2357 to i32
  %2359 = and i32 %2349, 255
  %2360 = add nuw nsw i32 %2359, %2358
  %2361 = icmp ult i32 %2360, 255
  %2362 = select i1 %2361, i32 %2360, i32 255
  %2363 = trunc i32 %2362 to i8
  store i8 %2363, i8* %2356, align 1
  %2364 = add nsw i32 %2354, 1
  %2365 = sext i32 %2364 to i64
  %2366 = getelementptr inbounds i8, i8* %1999, i64 %2365
  %2367 = load i8, i8* %2366, align 1
  %2368 = zext i8 %2367 to i32
  %2369 = and i32 %2353, 255
  %2370 = add nuw nsw i32 %2369, %2368
  %2371 = icmp ult i32 %2370, 255
  %2372 = select i1 %2371, i32 %2370, i32 255
  %2373 = trunc i32 %2372 to i8
  store i8 %2373, i8* %2366, align 1
  br label %2376

; <label>:2374:                                   ; preds = %2315
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1981, i32 %2172, i32 %2168, i32 %2172, i32 %2169, i32 2147483647, i32 %2113, i8 zeroext %1980, i8* %1999, i1 zeroext true, i1 zeroext %2140, i1 zeroext true) #12
  br label %2376

; <label>:2375:                                   ; preds = %2163
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1981, i32 %2165, i32 %2168, i32 %2166, i32 %2169, i32 %2016, i32 %2113, i8 zeroext %1980, i8* %1999, i1 zeroext true, i1 zeroext %2140, i1 zeroext true) #12
  br label %2376

; <label>:2376:                                   ; preds = %2375, %2374, %2339, %2329, %2327, %2313, %2157, %2139
  %2377 = load i32, i32* %2097, align 4
  %2378 = icmp slt i32 %2377, %2109
  %2379 = select i1 %2378, i32 %2109, i32 %2377
  %2380 = add nsw i32 %2379, 65535
  %2381 = ashr i32 %2380, 16
  br label %2406

; <label>:2382:                                   ; preds = %2053
  %2383 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  br i1 %2029, label %2384, label %2386

; <label>:2384:                                   ; preds = %2382
  %2385 = load i32, i32* %2383, align 8
  br label %2395

; <label>:2386:                                   ; preds = %2382
  %2387 = load i32, i32* %2383, align 4
  %2388 = icmp sgt i32 %2387, %424
  %2389 = select i1 %2388, i32 %2387, i32 %424
  %2390 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 9
  %2391 = load i32, i32* %2390, align 8
  %2392 = load i32, i32* %2031, align 4
  %2393 = icmp eq i32 %2392, %1975
  %2394 = zext i1 %2393 to i8
  br label %2395

; <label>:2395:                                   ; preds = %2386, %2384
  %2396 = phi i32 [ %2385, %2384 ], [ %2387, %2386 ]
  %2397 = phi i8 [ %2017, %2384 ], [ %2394, %2386 ]
  %2398 = phi i32 [ %2016, %2384 ], [ %2391, %2386 ]
  %2399 = phi i32 [ %2015, %2384 ], [ %2389, %2386 ]
  %2400 = phi %struct.SkAnalyticEdge* [ %2014, %2384 ], [ %2010, %2386 ]
  %2401 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 6
  store i32 %1975, i32* %2401, align 4
  %2402 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 4
  %2403 = load i32, i32* %2402, align 4
  %2404 = ashr i32 %2403, %1974
  %2405 = add nsw i32 %2404, %2396
  store i32 %2405, i32* %2383, align 8
  br label %2406

; <label>:2406:                                   ; preds = %2395, %2376, %2093, %2083
  %2407 = phi i32 [ %2381, %2376 ], [ %2018, %2395 ], [ %2018, %2083 ], [ %2018, %2093 ]
  %2408 = phi i8 [ %2017, %2376 ], [ %2397, %2395 ], [ %2017, %2083 ], [ %2017, %2093 ]
  %2409 = phi i32 [ %2016, %2376 ], [ %2398, %2395 ], [ %2016, %2083 ], [ %2016, %2093 ]
  %2410 = phi i32 [ %2015, %2376 ], [ %2399, %2395 ], [ %2015, %2083 ], [ %2015, %2093 ]
  %2411 = phi %struct.SkAnalyticEdge* [ %2014, %2376 ], [ %2400, %2395 ], [ %2014, %2083 ], [ %2014, %2093 ]
  %2412 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 0
  %2413 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2412, align 8
  %2414 = load i32, i32* %2031, align 4
  %2415 = icmp sgt i32 %2414, %1975
  br i1 %2415, label %2445, label %2416

; <label>:2416:                                   ; preds = %2406
  %2417 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 13
  %2418 = bitcast %struct.SkAnalyticEdge* %2010 to %struct.SkAnalyticCubicEdge*
  %2419 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  %2420 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 1, i32 7
  %2421 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 6
  %2422 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 2, i32 1
  %2423 = bitcast %struct.SkAnalyticEdge** %2422 to i32*
  %2424 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 2
  %2425 = bitcast %struct.SkAnalyticEdge* %2424 to i32*
  %2426 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %2020, i64 0, i32 3
  br label %2427

; <label>:2427:                                   ; preds = %2440, %2416
  %2428 = load i8, i8* %2417, align 8
  %2429 = icmp slt i8 %2428, 0
  br i1 %2429, label %2430, label %2434

; <label>:2430:                                   ; preds = %2427
  %2431 = load i32, i32* %2419, align 8
  store i32 %2431, i32* %2420, align 8
  %2432 = load i32, i32* %2421, align 4
  store i32 %2432, i32* %2423, align 8
  %2433 = call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* nonnull %2418, i1 zeroext true) #12
  br i1 %2433, label %2440, label %2443

; <label>:2434:                                   ; preds = %2427
  %2435 = icmp eq i8 %2428, 0
  br i1 %2435, label %2443, label %2436

; <label>:2436:                                   ; preds = %2434
  %2437 = load i32, i32* %2419, align 8
  store i32 %2437, i32* %2425, align 8
  %2438 = load i32, i32* %2421, align 4
  store i32 %2438, i32* %2426, align 4
  %2439 = call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* nonnull %2020) #12
  br i1 %2439, label %2440, label %2443

; <label>:2440:                                   ; preds = %2436, %2430
  %2441 = load i32, i32* %2031, align 4
  %2442 = icmp sgt i32 %2441, %1975
  br i1 %2442, label %2443, label %2427

; <label>:2443:                                   ; preds = %2440, %2436, %2434, %2430
  %2444 = load i32, i32* %2031, align 4
  br label %2445

; <label>:2445:                                   ; preds = %2443, %2406
  %2446 = phi i32 [ %2444, %2443 ], [ %2414, %2406 ]
  %2447 = icmp sgt i32 %2446, %1975
  br i1 %2447, label %2459, label %2448

; <label>:2448:                                   ; preds = %2445
  %2449 = bitcast %struct.SkAnalyticEdge* %2010 to i64*
  %2450 = load i64, i64* %2449, align 8
  %2451 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 1
  %2452 = bitcast %struct.SkAnalyticEdge** %2451 to i64**
  %2453 = load i64*, i64** %2452, align 8
  store i64 %2450, i64* %2453, align 8
  %2454 = bitcast %struct.SkAnalyticEdge** %2451 to i64*
  %2455 = load i64, i64* %2454, align 8
  %2456 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2412, align 8
  %2457 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2456, i64 0, i32 1
  %2458 = bitcast %struct.SkAnalyticEdge** %2457 to i64*
  store i64 %2455, i64* %2458, align 8
  br label %2524

; <label>:2459:                                   ; preds = %2445
  %2460 = icmp sgt i32 %2019, %2446
  %2461 = select i1 %2460, i32 %2446, i32 %2019
  %2462 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 3
  %2463 = load i32, i32* %2462, align 8
  %2464 = icmp slt i32 %2463, %2013
  br i1 %2464, label %2465, label %2504

; <label>:2465:                                   ; preds = %2459
  %2466 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2411, i64 0, i32 2
  %2467 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2466, align 8
  %2468 = icmp ne %struct.SkAnalyticEdge* %2467, %2010
  %2469 = or i1 %2468, %1951
  br i1 %2469, label %2474, label %2470

; <label>:2470:                                   ; preds = %2465
  %2471 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2411, i64 0, i32 3
  %2472 = load i32, i32* %2471, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2411, i32 %1975, i32 %2472, i32 %2463, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  %2473 = load i32, i32* %2462, align 8
  br label %2474

; <label>:2474:                                   ; preds = %2470, %2465
  %2475 = phi i32 [ %2463, %2465 ], [ %2473, %2470 ]
  %2476 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 1
  %2477 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2476, align 8
  %2478 = bitcast %struct.SkAnalyticEdge* %2477 to i64*
  br label %2479

; <label>:2479:                                   ; preds = %2484, %2474
  %2480 = phi %struct.SkAnalyticEdge* [ %2477, %2474 ], [ %2482, %2484 ]
  %2481 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2480, i64 0, i32 1
  %2482 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2481, align 8
  %2483 = icmp eq %struct.SkAnalyticEdge* %2482, null
  br i1 %2483, label %2488, label %2484

; <label>:2484:                                   ; preds = %2479
  %2485 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2480, i64 0, i32 3
  %2486 = load i32, i32* %2485, align 8
  %2487 = icmp sgt i32 %2486, %2475
  br i1 %2487, label %2479, label %2488

; <label>:2488:                                   ; preds = %2484, %2479
  %2489 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2480, i64 0, i32 0
  %2490 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2489, align 8
  %2491 = icmp eq %struct.SkAnalyticEdge* %2490, %2010
  br i1 %2491, label %2504, label %2492

; <label>:2492:                                   ; preds = %2488
  %2493 = bitcast %struct.SkAnalyticEdge* %2010 to i64*
  %2494 = load i64, i64* %2493, align 8
  store i64 %2494, i64* %2478, align 8
  %2495 = bitcast %struct.SkAnalyticEdge** %2476 to i64*
  %2496 = load i64, i64* %2495, align 8
  %2497 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2412, align 8
  %2498 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2497, i64 0, i32 1
  %2499 = bitcast %struct.SkAnalyticEdge** %2498 to i64*
  store i64 %2496, i64* %2499, align 8
  store %struct.SkAnalyticEdge* %2480, %struct.SkAnalyticEdge** %2476, align 8
  %2500 = bitcast %struct.SkAnalyticEdge* %2480 to i64*
  %2501 = load i64, i64* %2500, align 8
  store i64 %2501, i64* %2493, align 8
  %2502 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2489, align 8
  %2503 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2502, i64 0, i32 1
  store %struct.SkAnalyticEdge* %2010, %struct.SkAnalyticEdge** %2503, align 8
  store %struct.SkAnalyticEdge* %2010, %struct.SkAnalyticEdge** %2489, align 8
  br label %2504

; <label>:2504:                                   ; preds = %2492, %2488, %2459
  %2505 = phi i32 [ %2463, %2459 ], [ %2013, %2488 ], [ %2013, %2492 ]
  br i1 %1800, label %2524, label %2506

; <label>:2506:                                   ; preds = %2504
  %2507 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 1
  %2508 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2507, align 8
  %2509 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2508, i64 0, i32 1
  %2510 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2509, align 8
  %2511 = icmp eq %struct.SkAnalyticEdge* %2510, null
  br i1 %2511, label %2524, label %2512

; <label>:2512:                                   ; preds = %2506
  %2513 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2508, i64 0, i32 3
  %2514 = load i32, i32* %2513, align 8
  %2515 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2508, i64 0, i32 4
  %2516 = load i32, i32* %2515, align 4
  %2517 = add nsw i32 %2516, %2514
  %2518 = load i32, i32* %2462, align 8
  %2519 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2010, i64 0, i32 4
  %2520 = load i32, i32* %2519, align 4
  %2521 = add nsw i32 %2520, %2518
  %2522 = icmp sgt i32 %2517, %2521
  %2523 = select i1 %2522, i32 %2005, i32 %2461
  br label %2524

; <label>:2524:                                   ; preds = %2512, %2506, %2504, %2448
  %2525 = phi i32 [ %2461, %2504 ], [ %2019, %2448 ], [ %2461, %2506 ], [ %2523, %2512 ]
  %2526 = phi i32 [ %2505, %2504 ], [ %2013, %2448 ], [ %2505, %2506 ], [ %2505, %2512 ]
  %2527 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2413, i64 0, i32 7
  %2528 = load i32, i32* %2527, align 8
  %2529 = icmp sgt i32 %2528, %1959
  br i1 %2529, label %2530, label %2009

; <label>:2530:                                   ; preds = %2524
  %2531 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2413, i64 0, i32 7
  br label %2532

; <label>:2532:                                   ; preds = %2530, %1998
  %2533 = phi i32 [ 2147483647, %1998 ], [ %2525, %2530 ]
  %2534 = phi i8 [ 0, %1998 ], [ %2408, %2530 ]
  %2535 = phi i32 [ 0, %1998 ], [ %2409, %2530 ]
  %2536 = phi i32 [ %424, %1998 ], [ %2410, %2530 ]
  %2537 = phi %struct.SkAnalyticEdge* [ %10, %1998 ], [ %2411, %2530 ]
  %2538 = phi %struct.SkAnalyticEdge* [ %1967, %1998 ], [ %2413, %2530 ]
  %2539 = phi i1 [ %1808, %1998 ], [ %2028, %2530 ]
  %2540 = phi i32* [ %2000, %1998 ], [ %2531, %2530 ]
  br i1 %2539, label %2541, label %2814

; <label>:2541:                                   ; preds = %2532
  br i1 %1799, label %2542, label %2572

; <label>:2542:                                   ; preds = %2541
  %2543 = and i8 %2534, 1
  %2544 = icmp ne i8 %2543, 0
  %2545 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 2
  %2546 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2545, align 8
  %2547 = icmp eq %struct.SkAnalyticEdge* %2546, null
  %2548 = icmp eq %struct.SkAnalyticEdge* %2546, %11
  %2549 = or i1 %2547, %2548
  br i1 %2549, label %2554, label %2550

; <label>:2550:                                   ; preds = %2542
  %2551 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2546, i64 0, i32 3
  %2552 = load i32, i32* %2551, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2537, i32 %1959, i32 %2536, i32 %2552, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  %2553 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2545, align 8
  br label %2554

; <label>:2554:                                   ; preds = %2550, %2542
  %2555 = phi %struct.SkAnalyticEdge* [ %2546, %2542 ], [ %2553, %2550 ]
  %2556 = icmp eq %struct.SkAnalyticEdge* %2555, null
  br i1 %2556, label %2557, label %2563

; <label>:2557:                                   ; preds = %2554
  %2558 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 10
  store i32 %2536, i32* %2558, align 4
  %2559 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 11
  store i32 %1959, i32* %2559, align 8
  %2560 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 12
  store i32 %2535, i32* %2560, align 4
  %2561 = load i32, i32* %373, align 8
  %2562 = load i32, i32* %375, align 8
  store i32 %2561, i32* %1953, align 4
  store i32 %1959, i32* %1954, align 8
  store i32 %2562, i32* %1955, align 4
  store %struct.SkAnalyticEdge* %11, %struct.SkAnalyticEdge** %2545, align 8
  br label %2563

; <label>:2563:                                   ; preds = %2557, %2554
  store i32 %1975, i32* %1956, align 4
  %2564 = load i32, i32* %374, align 4
  %2565 = ashr i32 %2564, %1974
  %2566 = load i32, i32* %373, align 8
  %2567 = add nsw i32 %2566, %2565
  store i32 %2567, i32* %373, align 8
  %2568 = or i1 %1966, %2544
  br i1 %2568, label %2569, label %2814

; <label>:2569:                                   ; preds = %2563
  %2570 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 3
  %2571 = load i32, i32* %2570, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %2537, i32 %1975, i32 %2571, i32 %2567, %class.AdditiveBlitter* nonnull %224, i8* %1999, i1 zeroext true, i1 zeroext false, i32 %424, i32 %427) #12
  br label %2814

; <label>:2572:                                   ; preds = %2541
  %2573 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 3
  %2574 = load i32, i32* %2573, align 4
  %2575 = icmp slt i32 %2574, %424
  %2576 = select i1 %2575, i32 %424, i32 %2574
  %2577 = icmp eq i8 %1980, -1
  br i1 %2577, label %2578, label %2597

; <label>:2578:                                   ; preds = %2572
  %2579 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 1
  %2580 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2579, align 8
  %2581 = icmp eq %struct.SkAnalyticEdge* %2580, null
  br i1 %2581, label %2597, label %2582

; <label>:2582:                                   ; preds = %2578
  %2583 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 7
  %2584 = load i32, i32* %2583, align 8
  %2585 = icmp slt i32 %2584, %1975
  br i1 %2585, label %2586, label %2597

; <label>:2586:                                   ; preds = %2582
  %2587 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2580, i64 0, i32 3
  %2588 = load i32, i32* %2587, align 8
  %2589 = add nsw i32 %2588, 65536
  %2590 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2537, i64 0, i32 4
  %2591 = load i32, i32* %2590, align 4
  %2592 = icmp slt i32 %2591, 0
  %2593 = sub nsw i32 0, %2591
  %2594 = select i1 %2592, i32 %2593, i32 %2591
  %2595 = sub nsw i32 %2574, %2594
  %2596 = icmp sge i32 %2589, %2595
  br label %2597

; <label>:2597:                                   ; preds = %2586, %2582, %2578, %2572
  %2598 = phi i1 [ false, %2572 ], [ false, %2582 ], [ false, %2578 ], [ %2596, %2586 ]
  %2599 = icmp sgt i32 %2536, %427
  br i1 %2599, label %2814, label %2600

; <label>:2600:                                   ; preds = %2597
  %2601 = icmp sgt i32 %2576, %427
  br i1 %2601, label %2602, label %2612

; <label>:2602:                                   ; preds = %2600
  %2603 = icmp sgt i32 %2536, %2576
  %2604 = select i1 %2603, i32 %2576, i32 %2536
  %2605 = select i1 %2603, i32 %2536, i32 %2576
  %2606 = icmp sgt i32 %2604, %427
  %2607 = select i1 %2606, i32 %2604, i32 %427
  %2608 = icmp slt i32 %2605, %427
  %2609 = select i1 %2608, i32 %2605, i32 %427
  %2610 = add nsw i32 %2607, %2609
  %2611 = ashr i32 %2610, 1
  br label %2612

; <label>:2612:                                   ; preds = %2602, %2600
  %2613 = phi i32 [ %2611, %2602 ], [ %2576, %2600 ]
  %2614 = phi i32 [ %2611, %2602 ], [ %427, %2600 ]
  %2615 = icmp eq i32 %2536, %427
  %2616 = icmp eq i32 %2613, %2614
  %2617 = and i1 %2615, %2616
  br i1 %2617, label %2814, label %2618

; <label>:2618:                                   ; preds = %2612
  %2619 = icmp slt i32 %2613, %2536
  %2620 = select i1 %2619, i32 %2613, i32 %2536
  %2621 = select i1 %2619, i32 %2536, i32 %2613
  %2622 = icmp slt i32 %2614, %427
  %2623 = select i1 %2622, i32 %2614, i32 %427
  %2624 = select i1 %2622, i32 %427, i32 %2614
  %2625 = add nsw i32 %2621, 65535
  %2626 = and i32 %2625, -65536
  %2627 = and i32 %2623, -65536
  %2628 = icmp slt i32 %2627, %2626
  br i1 %2628, label %2813, label %2629

; <label>:2629:                                   ; preds = %2618
  %2630 = icmp sgt i32 %2626, %2620
  br i1 %2630, label %2631, label %2693

; <label>:2631:                                   ; preds = %2629
  %2632 = sub nsw i32 %2626, %2620
  %2633 = add nsw i32 %2632, 65535
  %2634 = ashr i32 %2633, 16
  switch i32 %2634, label %2692 [
    i32 1, label %2635
    i32 2, label %2657
  ]

; <label>:2635:                                   ; preds = %2631
  %2636 = sub i32 %2626, %2621
  %2637 = add nsw i32 %2636, %2632
  %2638 = lshr i32 %2637, 9
  %2639 = ashr i32 %2620, 16
  %2640 = icmp ne i8 %1980, -1
  %2641 = or i1 %2640, %2598
  %2642 = sext i32 %2639 to i64
  %2643 = getelementptr inbounds i8, i8* %1999, i64 %2642
  br i1 %2641, label %2646, label %2644

; <label>:2644:                                   ; preds = %2635
  %2645 = trunc i32 %2638 to i8
  store i8 %2645, i8* %2643, align 1
  br label %2693

; <label>:2646:                                   ; preds = %2635
  %2647 = and i32 %2638, 255
  %2648 = and i32 %1979, 255
  %2649 = mul nuw nsw i32 %2647, %2648
  %2650 = lshr i32 %2649, 8
  %2651 = load i8, i8* %2643, align 1
  %2652 = zext i8 %2651 to i32
  %2653 = add nuw nsw i32 %2650, %2652
  %2654 = icmp ult i32 %2653, 255
  %2655 = select i1 %2654, i32 %2653, i32 255
  %2656 = trunc i32 %2655 to i8
  store i8 %2656, i8* %2643, align 1
  br label %2693

; <label>:2657:                                   ; preds = %2631
  %2658 = sub i32 -65536, %2620
  %2659 = add i32 %2626, %2658
  %2660 = sub i32 %2621, %2620
  %2661 = sub i32 %2660, %2659
  %2662 = ashr i32 %2659, 11
  %2663 = ashr i32 %2535, 11
  %2664 = mul i32 %2662, %2663
  %2665 = mul i32 %2664, %2662
  %2666 = lshr i32 %2665, 8
  %2667 = ashr i32 %2661, 11
  %2668 = mul i32 %2667, %2663
  %2669 = mul i32 %2668, %2667
  %2670 = lshr i32 %2669, 8
  %2671 = sub nsw i32 %1979, %2670
  %2672 = ashr i32 %2620, 16
  %2673 = sext i32 %2672 to i64
  %2674 = getelementptr inbounds i8, i8* %1999, i64 %2673
  %2675 = load i8, i8* %2674, align 1
  %2676 = zext i8 %2675 to i32
  %2677 = and i32 %2666, 255
  %2678 = add nuw nsw i32 %2677, %2676
  %2679 = icmp ult i32 %2678, 255
  %2680 = select i1 %2679, i32 %2678, i32 255
  %2681 = trunc i32 %2680 to i8
  store i8 %2681, i8* %2674, align 1
  %2682 = add nsw i32 %2672, 1
  %2683 = sext i32 %2682 to i64
  %2684 = getelementptr inbounds i8, i8* %1999, i64 %2683
  %2685 = load i8, i8* %2684, align 1
  %2686 = zext i8 %2685 to i32
  %2687 = and i32 %2671, 255
  %2688 = add nuw nsw i32 %2687, %2686
  %2689 = icmp ult i32 %2688, 255
  %2690 = select i1 %2689, i32 %2688, i32 255
  %2691 = trunc i32 %2690 to i8
  store i8 %2691, i8* %2684, align 1
  br label %2693

; <label>:2692:                                   ; preds = %2631
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1981, i32 %2620, i32 %2626, i32 %2621, i32 %2626, i32 %2535, i32 2147483647, i8 zeroext %1980, i8* %1999, i1 zeroext true, i1 zeroext %2598, i1 zeroext true) #12
  br label %2693

; <label>:2693:                                   ; preds = %2692, %2657, %2646, %2644, %2629
  %2694 = icmp sgt i32 %2627, %2626
  br i1 %2694, label %2695, label %2773

; <label>:2695:                                   ; preds = %2693
  %2696 = sub nsw i32 %2627, %2626
  %2697 = icmp sgt i32 %2696, 0
  br i1 %2697, label %2698, label %2773

; <label>:2698:                                   ; preds = %2695
  %2699 = lshr exact i32 %2696, 16
  %2700 = ashr i32 %2625, 16
  %2701 = and i32 %1979, 255
  %2702 = sext i32 %2700 to i64
  %2703 = zext i32 %2699 to i64
  %2704 = icmp ult i32 %2696, 1048576
  br i1 %2704, label %2759, label %2705

; <label>:2705:                                   ; preds = %2698
  %2706 = and i64 %2703, 65520
  %2707 = insertelement <16 x i32> undef, i32 %2701, i32 0
  %2708 = shufflevector <16 x i32> %2707, <16 x i32> undef, <16 x i32> zeroinitializer
  %2709 = add nsw i64 %2706, -16
  %2710 = lshr exact i64 %2709, 4
  %2711 = add nuw nsw i64 %2710, 1
  %2712 = and i64 %2711, 1
  %2713 = icmp eq i64 %2709, 0
  br i1 %2713, label %2743, label %2714

; <label>:2714:                                   ; preds = %2705
  %2715 = sub nsw i64 %2711, %2712
  br label %2716

; <label>:2716:                                   ; preds = %2716, %2714
  %2717 = phi i64 [ 0, %2714 ], [ %2740, %2716 ]
  %2718 = phi i64 [ %2715, %2714 ], [ %2741, %2716 ]
  %2719 = add nsw i64 %2717, %2702
  %2720 = getelementptr inbounds i8, i8* %1999, i64 %2719
  %2721 = bitcast i8* %2720 to <16 x i8>*
  %2722 = load <16 x i8>, <16 x i8>* %2721, align 1
  %2723 = zext <16 x i8> %2722 to <16 x i32>
  %2724 = add nuw nsw <16 x i32> %2708, %2723
  %2725 = icmp ult <16 x i32> %2724, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2726 = select <16 x i1> %2725, <16 x i32> %2724, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2727 = trunc <16 x i32> %2726 to <16 x i8>
  %2728 = bitcast i8* %2720 to <16 x i8>*
  store <16 x i8> %2727, <16 x i8>* %2728, align 1
  %2729 = or i64 %2717, 16
  %2730 = add nsw i64 %2729, %2702
  %2731 = getelementptr inbounds i8, i8* %1999, i64 %2730
  %2732 = bitcast i8* %2731 to <16 x i8>*
  %2733 = load <16 x i8>, <16 x i8>* %2732, align 1
  %2734 = zext <16 x i8> %2733 to <16 x i32>
  %2735 = add nuw nsw <16 x i32> %2708, %2734
  %2736 = icmp ult <16 x i32> %2735, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2737 = select <16 x i1> %2736, <16 x i32> %2735, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2738 = trunc <16 x i32> %2737 to <16 x i8>
  %2739 = bitcast i8* %2731 to <16 x i8>*
  store <16 x i8> %2738, <16 x i8>* %2739, align 1
  %2740 = add i64 %2717, 32
  %2741 = add i64 %2718, -2
  %2742 = icmp eq i64 %2741, 0
  br i1 %2742, label %2743, label %2716, !llvm.loop !20

; <label>:2743:                                   ; preds = %2716, %2705
  %2744 = phi i64 [ 0, %2705 ], [ %2740, %2716 ]
  %2745 = icmp eq i64 %2712, 0
  br i1 %2745, label %2757, label %2746

; <label>:2746:                                   ; preds = %2743
  %2747 = add nsw i64 %2744, %2702
  %2748 = getelementptr inbounds i8, i8* %1999, i64 %2747
  %2749 = bitcast i8* %2748 to <16 x i8>*
  %2750 = load <16 x i8>, <16 x i8>* %2749, align 1
  %2751 = zext <16 x i8> %2750 to <16 x i32>
  %2752 = add nuw nsw <16 x i32> %2708, %2751
  %2753 = icmp ult <16 x i32> %2752, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2754 = select <16 x i1> %2753, <16 x i32> %2752, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %2755 = trunc <16 x i32> %2754 to <16 x i8>
  %2756 = bitcast i8* %2748 to <16 x i8>*
  store <16 x i8> %2755, <16 x i8>* %2756, align 1
  br label %2757

; <label>:2757:                                   ; preds = %2743, %2746
  %2758 = icmp eq i64 %2706, %2703
  br i1 %2758, label %2773, label %2759

; <label>:2759:                                   ; preds = %2757, %2698
  %2760 = phi i64 [ 0, %2698 ], [ %2706, %2757 ]
  br label %2761

; <label>:2761:                                   ; preds = %2759, %2761
  %2762 = phi i64 [ %2771, %2761 ], [ %2760, %2759 ]
  %2763 = add nsw i64 %2762, %2702
  %2764 = getelementptr inbounds i8, i8* %1999, i64 %2763
  %2765 = load i8, i8* %2764, align 1
  %2766 = zext i8 %2765 to i32
  %2767 = add nuw nsw i32 %2701, %2766
  %2768 = icmp ult i32 %2767, 255
  %2769 = select i1 %2768, i32 %2767, i32 255
  %2770 = trunc i32 %2769 to i8
  store i8 %2770, i8* %2764, align 1
  %2771 = add nuw nsw i64 %2762, 1
  %2772 = icmp eq i64 %2771, %2703
  br i1 %2772, label %2773, label %2761, !llvm.loop !21

; <label>:2773:                                   ; preds = %2761, %2757, %2695, %2693
  %2774 = icmp sgt i32 %2624, %2627
  br i1 %2774, label %2775, label %2814

; <label>:2775:                                   ; preds = %2773
  %2776 = sub nsw i32 %2624, %2627
  %2777 = add nsw i32 %2776, 65535
  %2778 = ashr i32 %2777, 16
  switch i32 %2778, label %2812 [
    i32 1, label %2779
    i32 2, label %2801
  ]

; <label>:2779:                                   ; preds = %2775
  %2780 = sub i32 %2623, %2627
  %2781 = add nsw i32 %2780, %2776
  %2782 = lshr i32 %2781, 9
  %2783 = ashr i32 %2623, 16
  %2784 = icmp ne i8 %1980, -1
  %2785 = or i1 %2784, %2598
  %2786 = sext i32 %2783 to i64
  %2787 = getelementptr inbounds i8, i8* %1999, i64 %2786
  br i1 %2785, label %2790, label %2788

; <label>:2788:                                   ; preds = %2779
  %2789 = trunc i32 %2782 to i8
  store i8 %2789, i8* %2787, align 1
  br label %2814

; <label>:2790:                                   ; preds = %2779
  %2791 = and i32 %2782, 255
  %2792 = and i32 %1979, 255
  %2793 = mul nuw nsw i32 %2791, %2792
  %2794 = lshr i32 %2793, 8
  %2795 = load i8, i8* %2787, align 1
  %2796 = zext i8 %2795 to i32
  %2797 = add nuw nsw i32 %2794, %2796
  %2798 = icmp ult i32 %2797, 255
  %2799 = select i1 %2798, i32 %2797, i32 255
  %2800 = trunc i32 %2799 to i8
  store i8 %2800, i8* %2787, align 1
  br label %2814

; <label>:2801:                                   ; preds = %2775
  %2802 = ashr i32 %2623, 16
  %2803 = sext i32 %2802 to i64
  %2804 = getelementptr inbounds i8, i8* %1999, i64 %2803
  %2805 = load i8, i8* %2804, align 1
  %2806 = zext i8 %2805 to i32
  %2807 = and i32 %1979, 255
  %2808 = add nuw nsw i32 %2807, %2806
  %2809 = icmp ult i32 %2808, 255
  %2810 = select i1 %2809, i32 %2808, i32 255
  %2811 = trunc i32 %2810 to i8
  store i8 %2811, i8* %2804, align 1
  br label %2814

; <label>:2812:                                   ; preds = %2775
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1981, i32 %2627, i32 %2623, i32 %2627, i32 %2624, i32 2147483647, i32 0, i8 zeroext %1980, i8* %1999, i1 zeroext true, i1 zeroext %2598, i1 zeroext true) #12
  br label %2814

; <label>:2813:                                   ; preds = %2618
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %224, i32 %1981, i32 %2620, i32 %2623, i32 %2621, i32 %2624, i32 %2535, i32 0, i8 zeroext %1980, i8* %1999, i1 zeroext true, i1 zeroext %2598, i1 zeroext true) #12
  br label %2814

; <label>:2814:                                   ; preds = %2532, %2563, %2569, %2597, %2612, %2773, %2788, %2790, %2801, %2812, %2813
  %2815 = icmp slt i32 %1975, %1952
  br i1 %2815, label %2816, label %2951

; <label>:2816:                                   ; preds = %2814
  %2817 = load i32, i32* %2540, align 8
  %2818 = icmp sgt i32 %2817, %1975
  br i1 %2818, label %2819, label %2822

; <label>:2819:                                   ; preds = %2816
  %2820 = icmp sgt i32 %2533, %2817
  %2821 = select i1 %2820, i32 %2817, i32 %2533
  br label %2949

; <label>:2822:                                   ; preds = %2816
  %2823 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2538, i64 0, i32 1
  %2824 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2823, align 8
  %2825 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2824, i64 0, i32 3
  %2826 = load i32, i32* %2825, align 8
  %2827 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2538, i64 0, i32 3
  %2828 = load i32, i32* %2827, align 8
  %2829 = icmp sgt i32 %2826, %2828
  br i1 %2829, label %2871, label %2830

; <label>:2830:                                   ; preds = %2822
  %2831 = add nsw i32 %1975, 16384
  br label %2832

; <label>:2832:                                   ; preds = %2865, %2830
  %2833 = phi i32 [ %2533, %2830 ], [ %2859, %2865 ]
  %2834 = phi %struct.SkAnalyticEdge* [ %2824, %2830 ], [ %2867, %2865 ]
  %2835 = phi %struct.SkAnalyticEdge* [ %2538, %2830 ], [ %2861, %2865 ]
  %2836 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 1
  %2837 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2836, align 8
  %2838 = icmp eq %struct.SkAnalyticEdge* %2837, null
  br i1 %2838, label %2852, label %2839

; <label>:2839:                                   ; preds = %2832
  %2840 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 3
  %2841 = load i32, i32* %2840, align 8
  %2842 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2834, i64 0, i32 4
  %2843 = load i32, i32* %2842, align 4
  %2844 = add nsw i32 %2843, %2841
  %2845 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2835, i64 0, i32 3
  %2846 = load i32, i32* %2845, align 8
  %2847 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2835, i64 0, i32 4
  %2848 = load i32, i32* %2847, align 4
  %2849 = add nsw i32 %2848, %2846
  %2850 = icmp sgt i32 %2844, %2849
  %2851 = select i1 %2850, i32 %2831, i32 %2833
  br label %2852

; <label>:2852:                                   ; preds = %2839, %2832
  %2853 = phi i32 [ %2833, %2832 ], [ %2851, %2839 ]
  %2854 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2835, i64 0, i32 8
  %2855 = load i32, i32* %2854, align 4
  %2856 = icmp sgt i32 %2855, %1975
  %2857 = icmp sgt i32 %2853, %2855
  %2858 = and i1 %2856, %2857
  %2859 = select i1 %2858, i32 %2855, i32 %2853
  %2860 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2835, i64 0, i32 0
  %2861 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2860, align 8
  %2862 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2861, i64 0, i32 7
  %2863 = load i32, i32* %2862, align 8
  %2864 = icmp sgt i32 %2863, %1975
  br i1 %2864, label %2868, label %2865

; <label>:2865:                                   ; preds = %2852
  %2866 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2861, i64 0, i32 1
  %2867 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2866, align 8
  br label %2832

; <label>:2868:                                   ; preds = %2852
  %2869 = icmp sgt i32 %2859, %2863
  %2870 = select i1 %2869, i32 %2863, i32 %2859
  br label %2949

; <label>:2871:                                   ; preds = %2822, %2876
  %2872 = phi %struct.SkAnalyticEdge* [ %2874, %2876 ], [ %2824, %2822 ]
  %2873 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2872, i64 0, i32 1
  %2874 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2873, align 8
  %2875 = icmp eq %struct.SkAnalyticEdge* %2874, null
  br i1 %2875, label %2880, label %2876

; <label>:2876:                                   ; preds = %2871
  %2877 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2872, i64 0, i32 3
  %2878 = load i32, i32* %2877, align 8
  %2879 = icmp sgt i32 %2878, %2828
  br i1 %2879, label %2871, label %2880

; <label>:2880:                                   ; preds = %2876, %2871
  %2881 = add nsw i32 %1975, 16384
  br label %2882

; <label>:2882:                                   ; preds = %2935, %2880
  %2883 = phi i32 [ %2533, %2880 ], [ %2942, %2935 ]
  %2884 = phi %struct.SkAnalyticEdge* [ %2872, %2880 ], [ %2885, %2935 ]
  %2885 = phi %struct.SkAnalyticEdge* [ %2538, %2880 ], [ %2887, %2935 ]
  %2886 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2885, i64 0, i32 0
  %2887 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2886, align 8
  %2888 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2885, i64 0, i32 3
  %2889 = ptrtoint %struct.SkAnalyticEdge* %2887 to i64
  br label %2890

; <label>:2890:                                   ; preds = %2895, %2882
  %2891 = phi %struct.SkAnalyticEdge* [ %2884, %2882 ], [ %2893, %2895 ]
  %2892 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2891, i64 0, i32 0
  %2893 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2892, align 8
  %2894 = icmp eq %struct.SkAnalyticEdge* %2893, %2885
  br i1 %2894, label %2915, label %2895

; <label>:2895:                                   ; preds = %2890
  %2896 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2893, i64 0, i32 3
  %2897 = load i32, i32* %2896, align 8
  %2898 = load i32, i32* %2888, align 8
  %2899 = icmp slt i32 %2897, %2898
  br i1 %2899, label %2890, label %2900

; <label>:2900:                                   ; preds = %2895
  %2901 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2891, i64 0, i32 0
  %2902 = bitcast %struct.SkAnalyticEdge* %2885 to i64*
  %2903 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2885, i64 0, i32 1
  %2904 = bitcast %struct.SkAnalyticEdge** %2903 to i64**
  %2905 = load i64*, i64** %2904, align 8
  store i64 %2889, i64* %2905, align 8
  %2906 = bitcast %struct.SkAnalyticEdge** %2903 to i64*
  %2907 = load i64, i64* %2906, align 8
  %2908 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2886, align 8
  %2909 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2908, i64 0, i32 1
  %2910 = bitcast %struct.SkAnalyticEdge** %2909 to i64*
  store i64 %2907, i64* %2910, align 8
  store %struct.SkAnalyticEdge* %2891, %struct.SkAnalyticEdge** %2903, align 8
  %2911 = bitcast %struct.SkAnalyticEdge* %2891 to i64*
  %2912 = load i64, i64* %2911, align 8
  store i64 %2912, i64* %2902, align 8
  %2913 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2901, align 8
  %2914 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2913, i64 0, i32 1
  store %struct.SkAnalyticEdge* %2885, %struct.SkAnalyticEdge** %2914, align 8
  store %struct.SkAnalyticEdge* %2885, %struct.SkAnalyticEdge** %2901, align 8
  br label %2917

; <label>:2915:                                   ; preds = %2890
  %2916 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2885, i64 0, i32 1
  br label %2917

; <label>:2917:                                   ; preds = %2915, %2900
  %2918 = phi %struct.SkAnalyticEdge** [ %2916, %2915 ], [ %2903, %2900 ]
  %2919 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2918, align 8
  %2920 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2919, i64 0, i32 1
  %2921 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2920, align 8
  %2922 = icmp eq %struct.SkAnalyticEdge* %2921, null
  br i1 %2922, label %2935, label %2923

; <label>:2923:                                   ; preds = %2917
  %2924 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2919, i64 0, i32 3
  %2925 = load i32, i32* %2924, align 8
  %2926 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2919, i64 0, i32 4
  %2927 = load i32, i32* %2926, align 4
  %2928 = add nsw i32 %2927, %2925
  %2929 = load i32, i32* %2888, align 8
  %2930 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2885, i64 0, i32 4
  %2931 = load i32, i32* %2930, align 4
  %2932 = add nsw i32 %2931, %2929
  %2933 = icmp sgt i32 %2928, %2932
  %2934 = select i1 %2933, i32 %2881, i32 %2883
  br label %2935

; <label>:2935:                                   ; preds = %2923, %2917
  %2936 = phi i32 [ %2883, %2917 ], [ %2934, %2923 ]
  %2937 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2885, i64 0, i32 8
  %2938 = load i32, i32* %2937, align 4
  %2939 = icmp sgt i32 %2938, %1975
  %2940 = icmp sgt i32 %2936, %2938
  %2941 = and i1 %2939, %2940
  %2942 = select i1 %2941, i32 %2938, i32 %2936
  %2943 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %2887, i64 0, i32 7
  %2944 = load i32, i32* %2943, align 8
  %2945 = icmp sgt i32 %2944, %1975
  br i1 %2945, label %2946, label %2882

; <label>:2946:                                   ; preds = %2935
  %2947 = icmp sgt i32 %2942, %2944
  %2948 = select i1 %2947, i32 %2944, i32 %2942
  br label %2949

; <label>:2949:                                   ; preds = %2946, %2868, %2819
  %2950 = phi i32 [ %2821, %2819 ], [ %2948, %2946 ], [ %2870, %2868 ]
  br label %1957

; <label>:2951:                                   ; preds = %2814, %534, %495, %516
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %278) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %277) #12
  br label %2952

; <label>:2952:                                   ; preds = %242, %246, %260, %264, %2951
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* nonnull %229) #12
  %2953 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %9, i64 0, i32 0, i32 2
  %2954 = bitcast %class.SkTDArray.12* %2953 to i8**
  %2955 = load i8*, i8** %2954, align 8
  call void @_Z7sk_freePv(i8* %2955) #12
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %226) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %2956 = load %class.SkBlitter*, %class.SkBlitter** %142, align 8
  %2957 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 2
  %2958 = bitcast %class.SkBlitter* %2956 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %2959 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %2958, align 8
  %2960 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %2959, i64 8
  %2961 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %2960, align 8
  call void %2961(%class.SkBlitter* %2956, %struct.SkMask* nonnull dereferenceable(32) %2957, %struct.SkIRect* nonnull dereferenceable(16) %158) #12
  %2962 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %17, i64 0, i32 0, i32 0
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %2962) #12
  call void @llvm.lifetime.end.p0i8(i64 1128, i8* nonnull %137) #12
  br label %7584

; <label>:2963:                                   ; preds = %72, %80
  br i1 %77, label %5277, label %2964

; <label>:2964:                                   ; preds = %2963
  %2965 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0
  %2966 = load atomic i8, i8* %2965 monotonic, align 1
  %2967 = icmp eq i8 %2966, 0
  br i1 %2967, label %2968, label %2970

; <label>:2968:                                   ; preds = %2964
  %2969 = tail call zeroext i8 @_ZNK6SkPath20internalGetConvexityEv(%class.SkPath* nonnull %0) #12
  br label %2970

; <label>:2970:                                   ; preds = %2964, %2968
  %2971 = phi i8 [ %2969, %2968 ], [ %2966, %2964 ]
  %2972 = icmp eq i8 %2971, 1
  br i1 %2972, label %2973, label %5277

; <label>:2973:                                   ; preds = %2970
  %2974 = bitcast %class.RunBasedAdditiveBlitter* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %2974) #12
  call void @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.RunBasedAdditiveBlitter* nonnull %18, %class.SkBlitter* %1, %struct.SkIRect* nonnull dereferenceable(16) %2, %struct.SkIRect* nonnull dereferenceable(16) %3, i1 zeroext false)
  %2975 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %18, i64 0, i32 0
  %2976 = load i32, i32* %30, align 4
  %2977 = load i32, i32* %27, align 4
  %2978 = bitcast %class.SkAnalyticEdgeBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %2978) #12
  %2979 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2979, align 8
  %2980 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %6, i64 0, i32 0, i32 1
  %2981 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %6, i64 0, i32 0, i32 3, i32 0
  %2982 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %6, i64 0, i32 0, i32 3, i32 1, i64 0
  %2983 = bitcast i8*** %2980 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2983, i8 0, i64 24, i1 false) #12
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* nonnull %2981, i8* nonnull %2982, i64 512, i64 512) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV21SkAnalyticEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2979, align 8
  %2984 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %6, i64 0, i32 0
  %2985 = select i1 %73, %struct.SkIRect* null, %struct.SkIRect* %3
  %2986 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %2984, %class.SkPath* nonnull dereferenceable(16) %0, %struct.SkIRect* %2985) #12
  %2987 = bitcast i8*** %2980 to %struct.SkAnalyticEdge***
  %2988 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %2987, align 8
  %2989 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %2990 = load i32, i32* %2989, align 4
  %2991 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %2992 = load i32, i32* %2991, align 4
  %2993 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %2994 = load i32, i32* %2993, align 4
  %2995 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %2996 = load i32, i32* %2995, align 4
  %2997 = icmp eq i32 %2986, 0
  br i1 %2997, label %2998, label %3032

; <label>:2998:                                   ; preds = %2973
  %2999 = load i8, i8* %74, align 2
  %3000 = and i8 %2999, 2
  %3001 = icmp eq i8 %3000, 0
  br i1 %3001, label %5273, label %3002

; <label>:3002:                                   ; preds = %2998
  %3003 = icmp slt i32 %2992, %2976
  %3004 = select i1 %3003, i32 %2976, i32 %2992
  %3005 = icmp sgt i32 %2996, %2977
  %3006 = select i1 %3005, i32 %2977, i32 %2996
  %3007 = sext i32 %2994 to i64
  %3008 = sext i32 %2990 to i64
  %3009 = sub nsw i64 %3007, %3008
  %3010 = sext i32 %3006 to i64
  %3011 = sext i32 %3004 to i64
  %3012 = sub nsw i64 %3010, %3011
  %3013 = icmp slt i64 %3009, 1
  %3014 = icmp slt i64 %3012, 1
  %3015 = or i1 %3013, %3014
  br i1 %3015, label %5273, label %3016

; <label>:3016:                                   ; preds = %3002
  %3017 = or i64 %3012, %3009
  %3018 = add nsw i64 %3017, 2147483648
  %3019 = icmp ugt i64 %3018, 4294967295
  br i1 %3019, label %5273, label %3020

; <label>:3020:                                   ; preds = %3016
  %3021 = bitcast %class.RunBasedAdditiveBlitter* %18 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %3022 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3021, align 8
  %3023 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3022, i64 15
  %3024 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3023, align 8
  %3025 = call %class.SkBlitter* %3024(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3026 = sub i32 %2994, %2990
  %3027 = sub i32 %3006, %3004
  %3028 = bitcast %class.SkBlitter* %3025 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3029 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3028, align 8
  %3030 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3029, i64 6
  %3031 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3030, align 8
  call void %3031(%class.SkBlitter* %3025, i32 %2990, i32 %3004, i32 %3026, i32 %3027) #12
  br label %5273

; <label>:3032:                                   ; preds = %2973
  %3033 = bitcast %struct.SkAnalyticEdge* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3033) #12
  %3034 = bitcast %struct.SkAnalyticEdge* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3034) #12
  %3035 = sext i32 %2986 to i64
  %3036 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3035
  %3037 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3036, i64 -1
  %3038 = icmp ugt %struct.SkAnalyticEdge** %3037, %2988
  br i1 %3038, label %3039, label %3049

; <label>:3039:                                   ; preds = %3032
  %3040 = ptrtoint %struct.SkAnalyticEdge** %3037 to i64
  %3041 = ptrtoint %struct.SkAnalyticEdge** %2988 to i64
  %3042 = sub i64 %3040, %3041
  %3043 = lshr exact i64 %3042, 3
  %3044 = trunc i64 %3043 to i32
  %3045 = add i32 %3044, -1
  %3046 = call i32 @llvm.ctlz.i32(i32 %3045, i1 false) #12, !range !9
  %3047 = shl nuw nsw i32 %3046, 1
  %3048 = sub nsw i32 64, %3047
  call void @_Z12SkTIntroSortIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEviPT_S5_T0_(i32 %3048, %struct.SkAnalyticEdge** %2988, %struct.SkAnalyticEdge** nonnull %3037) #12
  br label %3049

; <label>:3049:                                   ; preds = %3039, %3032
  %3050 = icmp sgt i32 %2986, 1
  br i1 %3050, label %3051, label %3106

; <label>:3051:                                   ; preds = %3049
  %3052 = and i32 %2986, 1
  %3053 = xor i32 %3052, 1
  %3054 = icmp eq i32 %2986, 2
  br i1 %3054, label %3090, label %3055

; <label>:3055:                                   ; preds = %3051
  %3056 = zext i32 %3053 to i64
  %3057 = zext i32 %2986 to i64
  %3058 = xor i64 %3056, -1
  %3059 = add nsw i64 %3058, %3057
  br label %3060

; <label>:3060:                                   ; preds = %3060, %3055
  %3061 = phi i64 [ 1, %3055 ], [ %3087, %3060 ]
  %3062 = phi i64 [ %3059, %3055 ], [ %3088, %3060 ]
  %3063 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3061
  %3064 = bitcast %struct.SkAnalyticEdge** %3063 to i64*
  %3065 = load i64, i64* %3064, align 8
  %3066 = add nsw i64 %3061, -1
  %3067 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3066
  %3068 = bitcast %struct.SkAnalyticEdge** %3067 to i64**
  %3069 = load i64*, i64** %3068, align 8
  store i64 %3065, i64* %3069, align 8
  %3070 = bitcast %struct.SkAnalyticEdge** %3067 to i64*
  %3071 = load i64, i64* %3070, align 8
  %3072 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3063, align 8
  %3073 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3072, i64 0, i32 1
  %3074 = bitcast %struct.SkAnalyticEdge** %3073 to i64*
  store i64 %3071, i64* %3074, align 8
  %3075 = add nuw nsw i64 %3061, 1
  %3076 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3075
  %3077 = bitcast %struct.SkAnalyticEdge** %3076 to i64*
  %3078 = load i64, i64* %3077, align 8
  %3079 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3061
  %3080 = bitcast %struct.SkAnalyticEdge** %3079 to i64**
  %3081 = load i64*, i64** %3080, align 8
  store i64 %3078, i64* %3081, align 8
  %3082 = bitcast %struct.SkAnalyticEdge** %3079 to i64*
  %3083 = load i64, i64* %3082, align 8
  %3084 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3076, align 8
  %3085 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3084, i64 0, i32 1
  %3086 = bitcast %struct.SkAnalyticEdge** %3085 to i64*
  store i64 %3083, i64* %3086, align 8
  %3087 = add nuw nsw i64 %3061, 2
  %3088 = add i64 %3062, -2
  %3089 = icmp eq i64 %3088, 0
  br i1 %3089, label %3090, label %3060

; <label>:3090:                                   ; preds = %3060, %3051
  %3091 = phi i64 [ 1, %3051 ], [ %3087, %3060 ]
  %3092 = icmp eq i32 %3053, 0
  br i1 %3092, label %3106, label %3093

; <label>:3093:                                   ; preds = %3090
  %3094 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3091
  %3095 = bitcast %struct.SkAnalyticEdge** %3094 to i64*
  %3096 = load i64, i64* %3095, align 8
  %3097 = add nsw i64 %3091, -1
  %3098 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3097
  %3099 = bitcast %struct.SkAnalyticEdge** %3098 to i64**
  %3100 = load i64*, i64** %3099, align 8
  store i64 %3096, i64* %3100, align 8
  %3101 = bitcast %struct.SkAnalyticEdge** %3098 to i64*
  %3102 = load i64, i64* %3101, align 8
  %3103 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3094, align 8
  %3104 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3103, i64 0, i32 1
  %3105 = bitcast %struct.SkAnalyticEdge** %3104 to i64*
  store i64 %3102, i64* %3105, align 8
  br label %3106

; <label>:3106:                                   ; preds = %3093, %3090, %3049
  %3107 = add nsw i32 %2986, -1
  %3108 = sext i32 %3107 to i64
  %3109 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, i64 %3108
  %3110 = bitcast %struct.SkAnalyticEdge** %3109 to i64*
  %3111 = load i64, i64* %3110, align 8
  %3112 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %2988, align 8
  %3113 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 1
  %3114 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 0
  %3115 = bitcast %struct.SkAnalyticEdge** %3113 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3115, i8 0, i64 16, i1 false) #12
  store %struct.SkAnalyticEdge* %3112, %struct.SkAnalyticEdge** %3114, align 8
  %3116 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 8
  store i32 -2147483647, i32* %3116, align 4
  %3117 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 7
  store i32 -2147483647, i32* %3117, align 8
  %3118 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 3
  store i32 -2147483647, i32* %3118, align 8
  %3119 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 4
  store i32 0, i32* %3119, align 4
  %3120 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 9
  store i32 2147483647, i32* %3120, align 8
  %3121 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7, i64 0, i32 5
  store i32 -2147483647, i32* %3121, align 8
  %3122 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3112, i64 0, i32 1
  store %struct.SkAnalyticEdge* %7, %struct.SkAnalyticEdge** %3122, align 8
  %3123 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %3123, align 8
  %3124 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 1
  %3125 = bitcast %struct.SkAnalyticEdge** %3124 to i64*
  store i64 %3111, i64* %3125, align 8
  %3126 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 0
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %3126, align 8
  %3127 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 8
  store i32 2147483647, i32* %3127, align 4
  %3128 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 7
  store i32 2147483647, i32* %3128, align 8
  %3129 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 3
  store i32 2147483647, i32* %3129, align 8
  %3130 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 4
  store i32 0, i32* %3130, align 4
  %3131 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 9
  store i32 2147483647, i32* %3131, align 8
  %3132 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 5
  store i32 2147483647, i32* %3132, align 8
  %3133 = inttoptr i64 %3111 to %struct.SkAnalyticEdge*
  %3134 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3133, i64 0, i32 0
  store %struct.SkAnalyticEdge* %8, %struct.SkAnalyticEdge** %3134, align 8
  br i1 %73, label %3142, label %3135

; <label>:3135:                                   ; preds = %3106
  %3136 = load i32, i32* %2991, align 4
  %3137 = icmp sgt i32 %3136, %2976
  %3138 = select i1 %3137, i32 %3136, i32 %2976
  %3139 = load i32, i32* %2995, align 4
  %3140 = icmp slt i32 %3139, %2977
  %3141 = select i1 %3140, i32 %3139, i32 %2977
  br label %3142

; <label>:3142:                                   ; preds = %3135, %3106
  %3143 = phi i32 [ %3138, %3135 ], [ %2976, %3106 ]
  %3144 = phi i32 [ %3141, %3135 ], [ %2977, %3106 ]
  %3145 = shl i32 %2990, 16
  %3146 = shl i32 %2994, 16
  %3147 = load i8, i8* %74, align 2
  %3148 = and i8 %3147, 2
  %3149 = icmp eq i8 %3148, 0
  br i1 %3149, label %3150, label %4232

; <label>:3150:                                   ; preds = %3142
  %3151 = load atomic i8, i8* %2965 monotonic, align 1
  %3152 = icmp eq i8 %3151, 0
  br i1 %3152, label %3153, label %3155

; <label>:3153:                                   ; preds = %3150
  %3154 = call zeroext i8 @_ZNK6SkPath20internalGetConvexityEv(%class.SkPath* nonnull %0) #12
  br label %3155

; <label>:3155:                                   ; preds = %3153, %3150
  %3156 = phi i8 [ %3154, %3153 ], [ %3151, %3150 ]
  %3157 = icmp eq i8 %3156, 1
  %3158 = and i1 %3050, %3157
  br i1 %3158, label %3159, label %4232

; <label>:3159:                                   ; preds = %3155
  %3160 = bitcast %struct.SkAnalyticEdge* %7 to i64*
  %3161 = load i64, i64* %3160, align 8
  %3162 = inttoptr i64 %3161 to %struct.SkAnalyticEdge*
  %3163 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3162, i64 0, i32 0
  %3164 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3163, align 8
  %3165 = ptrtoint %struct.SkAnalyticEdge* %3164 to i64
  %3166 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3164, i64 0, i32 0
  %3167 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3166, align 8
  %3168 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3162, i64 0, i32 7
  %3169 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3164, i64 0, i32 7
  %3170 = load i32, i32* %3169, align 4
  %3171 = load i32, i32* %3168, align 4
  %3172 = icmp slt i32 %3170, %3171
  %3173 = select i1 %3172, i32 %3171, i32 %3170
  %3174 = shl i32 %3144, 16
  %3175 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %3176 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.AdditiveBlitter*, i32, i32)***
  %3177 = bitcast %class.RunBasedAdditiveBlitter* %18 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %3178 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %3179 = or i32 %3145, 2048
  %3180 = or i32 %3146, 2048
  br label %3181

; <label>:3181:                                   ; preds = %4227, %3159
  %3182 = phi i64 [ %3165, %3159 ], [ %3325, %4227 ]
  %3183 = phi i64 [ %3161, %3159 ], [ %3326, %4227 ]
  %3184 = phi i32 [ %3173, %3159 ], [ %3375, %4227 ]
  %3185 = phi %struct.SkAnalyticEdge* [ %3167, %3159 ], [ %3246, %4227 ]
  %3186 = inttoptr i64 %3183 to %struct.SkAnalyticEdge*
  %3187 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3186, i64 0, i32 8
  %3188 = load i32, i32* %3187, align 4
  %3189 = icmp sgt i32 %3188, %3184
  br i1 %3189, label %3192, label %3200

; <label>:3190:                                   ; preds = %3214
  %3191 = inttoptr i64 %3215 to %struct.SkAnalyticEdge*
  br label %3192

; <label>:3192:                                   ; preds = %3190, %3181
  %3193 = phi i64 [ %3183, %3181 ], [ %3215, %3190 ]
  %3194 = phi %struct.SkAnalyticEdge* [ %3185, %3181 ], [ %3216, %3190 ]
  %3195 = phi %struct.SkAnalyticEdge* [ %3186, %3181 ], [ %3191, %3190 ]
  %3196 = inttoptr i64 %3182 to %struct.SkAnalyticEdge*
  %3197 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3196, i64 0, i32 8
  %3198 = load i32, i32* %3197, align 4
  %3199 = icmp sgt i32 %3198, %3184
  br i1 %3199, label %3244, label %3221

; <label>:3200:                                   ; preds = %3181, %3214
  %3201 = phi %struct.SkAnalyticEdge* [ %3217, %3214 ], [ %3186, %3181 ]
  %3202 = phi %struct.SkAnalyticEdge* [ %3216, %3214 ], [ %3185, %3181 ]
  %3203 = phi i64 [ %3215, %3214 ], [ %3183, %3181 ]
  %3204 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %3201, i32 %3184, i1 zeroext true) #12
  br i1 %3204, label %3214, label %3205

; <label>:3205:                                   ; preds = %3200
  %3206 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3202, i64 0, i32 7
  %3207 = load i32, i32* %3206, align 8
  %3208 = ashr i32 %3207, 16
  %3209 = icmp slt i32 %3208, %3144
  br i1 %3209, label %3210, label %5272

; <label>:3210:                                   ; preds = %3205
  %3211 = ptrtoint %struct.SkAnalyticEdge* %3202 to i64
  %3212 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3202, i64 0, i32 0
  %3213 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3212, align 8
  br label %3214

; <label>:3214:                                   ; preds = %3210, %3200
  %3215 = phi i64 [ %3203, %3200 ], [ %3211, %3210 ]
  %3216 = phi %struct.SkAnalyticEdge* [ %3202, %3200 ], [ %3213, %3210 ]
  %3217 = inttoptr i64 %3215 to %struct.SkAnalyticEdge*
  %3218 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3217, i64 0, i32 8
  %3219 = load i32, i32* %3218, align 4
  %3220 = icmp sgt i32 %3219, %3184
  br i1 %3220, label %3190, label %3200

; <label>:3221:                                   ; preds = %3192, %3235
  %3222 = phi %struct.SkAnalyticEdge* [ %3238, %3235 ], [ %3196, %3192 ]
  %3223 = phi %struct.SkAnalyticEdge* [ %3237, %3235 ], [ %3194, %3192 ]
  %3224 = phi i64 [ %3236, %3235 ], [ %3182, %3192 ]
  %3225 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %3222, i32 %3184, i1 zeroext true) #12
  br i1 %3225, label %3235, label %3226

; <label>:3226:                                   ; preds = %3221
  %3227 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3223, i64 0, i32 7
  %3228 = load i32, i32* %3227, align 8
  %3229 = ashr i32 %3228, 16
  %3230 = icmp slt i32 %3229, %3144
  br i1 %3230, label %3231, label %5272

; <label>:3231:                                   ; preds = %3226
  %3232 = ptrtoint %struct.SkAnalyticEdge* %3223 to i64
  %3233 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3223, i64 0, i32 0
  %3234 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3233, align 8
  br label %3235

; <label>:3235:                                   ; preds = %3231, %3221
  %3236 = phi i64 [ %3224, %3221 ], [ %3232, %3231 ]
  %3237 = phi %struct.SkAnalyticEdge* [ %3223, %3221 ], [ %3234, %3231 ]
  %3238 = inttoptr i64 %3236 to %struct.SkAnalyticEdge*
  %3239 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3238, i64 0, i32 8
  %3240 = load i32, i32* %3239, align 4
  %3241 = icmp sgt i32 %3240, %3184
  br i1 %3241, label %3242, label %3221

; <label>:3242:                                   ; preds = %3235
  %3243 = inttoptr i64 %3236 to %struct.SkAnalyticEdge*
  br label %3244

; <label>:3244:                                   ; preds = %3242, %3192
  %3245 = phi i64 [ %3182, %3192 ], [ %3236, %3242 ]
  %3246 = phi %struct.SkAnalyticEdge* [ %3194, %3192 ], [ %3237, %3242 ]
  %3247 = phi %struct.SkAnalyticEdge* [ %3196, %3192 ], [ %3243, %3242 ]
  %3248 = ashr i32 %3184, 16
  %3249 = icmp slt i32 %3248, %3144
  br i1 %3249, label %3250, label %5272

; <label>:3250:                                   ; preds = %3244
  %3251 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 6
  %3252 = load i32, i32* %3251, align 4
  %3253 = add nsw i32 %3252, 65536
  %3254 = icmp eq i32 %3253, %3184
  br i1 %3254, label %3255, label %3261

; <label>:3255:                                   ; preds = %3250
  %3256 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 3
  %3257 = load i32, i32* %3256, align 8
  %3258 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 4
  %3259 = load i32, i32* %3258, align 4
  %3260 = add nsw i32 %3259, %3257
  store i32 %3260, i32* %3256, align 8
  br label %3278

; <label>:3261:                                   ; preds = %3250
  %3262 = icmp eq i32 %3252, %3184
  br i1 %3262, label %3279, label %3263

; <label>:3263:                                   ; preds = %3261
  %3264 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 5
  %3265 = load i32, i32* %3264, align 8
  %3266 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 4
  %3267 = load i32, i32* %3266, align 4
  %3268 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 7
  %3269 = load i32, i32* %3268, align 8
  %3270 = sub nsw i32 %3184, %3269
  %3271 = sext i32 %3267 to i64
  %3272 = sext i32 %3270 to i64
  %3273 = mul nsw i64 %3272, %3271
  %3274 = lshr i64 %3273, 16
  %3275 = trunc i64 %3274 to i32
  %3276 = add nsw i32 %3265, %3275
  %3277 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 3
  store i32 %3276, i32* %3277, align 8
  br label %3278

; <label>:3278:                                   ; preds = %3255, %3263
  store i32 %3184, i32* %3251, align 4
  br label %3279

; <label>:3279:                                   ; preds = %3278, %3261
  %3280 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 6
  %3281 = load i32, i32* %3280, align 4
  %3282 = add nsw i32 %3281, 65536
  %3283 = icmp eq i32 %3282, %3184
  br i1 %3283, label %3284, label %3290

; <label>:3284:                                   ; preds = %3279
  %3285 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 3
  %3286 = load i32, i32* %3285, align 8
  %3287 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 4
  %3288 = load i32, i32* %3287, align 4
  %3289 = add nsw i32 %3288, %3286
  store i32 %3289, i32* %3285, align 8
  store i32 %3184, i32* %3280, align 4
  br label %3310

; <label>:3290:                                   ; preds = %3279
  %3291 = icmp eq i32 %3281, %3184
  br i1 %3291, label %3292, label %3295

; <label>:3292:                                   ; preds = %3290
  %3293 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 3
  %3294 = load i32, i32* %3293, align 8
  br label %3310

; <label>:3295:                                   ; preds = %3290
  %3296 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 5
  %3297 = load i32, i32* %3296, align 8
  %3298 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 4
  %3299 = load i32, i32* %3298, align 4
  %3300 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 7
  %3301 = load i32, i32* %3300, align 8
  %3302 = sub nsw i32 %3184, %3301
  %3303 = sext i32 %3299 to i64
  %3304 = sext i32 %3302 to i64
  %3305 = mul nsw i64 %3304, %3303
  %3306 = lshr i64 %3305, 16
  %3307 = trunc i64 %3306 to i32
  %3308 = add nsw i32 %3297, %3307
  %3309 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 3
  store i32 %3308, i32* %3309, align 8
  store i32 %3184, i32* %3280, align 4
  br label %3310

; <label>:3310:                                   ; preds = %3295, %3292, %3284
  %3311 = phi i32 [ %3294, %3292 ], [ %3289, %3284 ], [ %3308, %3295 ]
  %3312 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 3
  %3313 = load i32, i32* %3312, align 8
  %3314 = icmp sgt i32 %3313, %3311
  br i1 %3314, label %3323, label %3315

; <label>:3315:                                   ; preds = %3310
  %3316 = icmp eq i32 %3313, %3311
  br i1 %3316, label %3317, label %3324

; <label>:3317:                                   ; preds = %3315
  %3318 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3195, i64 0, i32 4
  %3319 = load i32, i32* %3318, align 4
  %3320 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3247, i64 0, i32 4
  %3321 = load i32, i32* %3320, align 4
  %3322 = icmp sgt i32 %3319, %3321
  br i1 %3322, label %3323, label %3324

; <label>:3323:                                   ; preds = %3317, %3310
  br label %3324

; <label>:3324:                                   ; preds = %3323, %3317, %3315
  %3325 = phi i64 [ %3193, %3323 ], [ %3245, %3317 ], [ %3245, %3315 ]
  %3326 = phi i64 [ %3245, %3323 ], [ %3193, %3317 ], [ %3193, %3315 ]
  %3327 = inttoptr i64 %3326 to %struct.SkAnalyticEdge*
  %3328 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 8
  %3329 = load i32, i32* %3328, align 4
  %3330 = inttoptr i64 %3325 to %struct.SkAnalyticEdge*
  %3331 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 8
  %3332 = load i32, i32* %3331, align 4
  %3333 = icmp sgt i32 %3329, %3332
  %3334 = select i1 %3333, i32 %3332, i32 %3329
  %3335 = ptrtoint %struct.SkAnalyticEdge* %3246 to i64
  %3336 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3246, i64 0, i32 7
  %3337 = load i32, i32* %3336, align 8
  %3338 = icmp slt i32 %3337, %3174
  br i1 %3338, label %3339, label %3372

; <label>:3339:                                   ; preds = %3324
  %3340 = add nsw i32 %3329, 65536
  %3341 = icmp slt i32 %3340, %3332
  br i1 %3341, label %3342, label %3344

; <label>:3342:                                   ; preds = %3339
  %3343 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %3327, %struct.SkAnalyticEdge* nonnull %3246) #12
  br i1 %3343, label %3369, label %3372

; <label>:3344:                                   ; preds = %3339
  %3345 = add nsw i32 %3332, 65536
  %3346 = icmp sgt i32 %3329, %3345
  br i1 %3346, label %3347, label %3349

; <label>:3347:                                   ; preds = %3344
  %3348 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %3330, %struct.SkAnalyticEdge* nonnull %3246) #12
  br i1 %3348, label %3369, label %3372

; <label>:3349:                                   ; preds = %3344
  %3350 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3246, i64 0, i32 0
  %3351 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3350, align 8
  %3352 = ptrtoint %struct.SkAnalyticEdge* %3351 to i64
  %3353 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3351, i64 0, i32 7
  %3354 = load i32, i32* %3353, align 8
  %3355 = icmp slt i32 %3354, %3174
  br i1 %3355, label %3356, label %3372

; <label>:3356:                                   ; preds = %3349
  %3357 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3351, i64 0, i32 5
  %3358 = load i32, i32* %3357, align 8
  %3359 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3246, i64 0, i32 5
  %3360 = load i32, i32* %3359, align 8
  %3361 = icmp slt i32 %3358, %3360
  %3362 = select i1 %3361, i64 %3352, i64 %3335
  %3363 = inttoptr i64 %3362 to %struct.SkAnalyticEdge*
  %3364 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %3327, %struct.SkAnalyticEdge* %3363) #12
  br i1 %3364, label %3365, label %3372

; <label>:3365:                                   ; preds = %3356
  %3366 = select i1 %3361, i64 %3335, i64 %3352
  %3367 = inttoptr i64 %3366 to %struct.SkAnalyticEdge*
  %3368 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %3330, %struct.SkAnalyticEdge* %3367) #12
  br i1 %3368, label %3369, label %3372

; <label>:3369:                                   ; preds = %3365, %3347, %3342
  %3370 = add nsw i32 %3334, 65535
  %3371 = and i32 %3370, -65536
  br label %3372

; <label>:3372:                                   ; preds = %3369, %3365, %3356, %3349, %3347, %3342, %3324
  %3373 = phi i32 [ %3371, %3369 ], [ %3334, %3365 ], [ %3334, %3342 ], [ %3334, %3347 ], [ %3334, %3324 ], [ %3334, %3349 ], [ %3334, %3356 ]
  %3374 = icmp sgt i32 %3373, %3174
  %3375 = select i1 %3374, i32 %3174, i32 %3373
  %3376 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 3
  %3377 = load i32, i32* %3376, align 4
  %3378 = icmp slt i32 %3377, %3145
  %3379 = select i1 %3378, i32 %3145, i32 %3377
  %3380 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 4
  %3381 = load i32, i32* %3380, align 4
  %3382 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 3
  %3383 = load i32, i32* %3382, align 4
  %3384 = icmp sgt i32 %3383, %3146
  %3385 = select i1 %3384, i32 %3146, i32 %3383
  %3386 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 4
  %3387 = load i32, i32* %3386, align 4
  %3388 = or i32 %3387, %3381
  %3389 = icmp eq i32 %3388, 0
  br i1 %3389, label %3390, label %3581

; <label>:3390:                                   ; preds = %3372
  %3391 = add nsw i32 %3379, 65535
  %3392 = ashr i32 %3391, 16
  %3393 = ashr i32 %3385, 16
  %3394 = and i32 %3391, -65536
  %3395 = sub nsw i32 %3394, %3379
  %3396 = and i32 %3385, 65535
  %3397 = add nsw i32 %3184, 65535
  %3398 = ashr i32 %3397, 16
  %3399 = ashr i32 %3375, 16
  %3400 = and i32 %3397, -65536
  %3401 = sub nsw i32 %3400, %3184
  %3402 = and i32 %3375, 65535
  %3403 = icmp slt i32 %3399, %3398
  %3404 = or i32 %3375, -65536
  %3405 = select i1 %3403, i32 0, i32 %3402
  %3406 = select i1 %3403, i32 %3404, i32 0
  %3407 = add i32 %3406, %3401
  %3408 = icmp slt i32 %3393, %3392
  %3409 = icmp sgt i32 %3407, 0
  br i1 %3408, label %3525, label %3410

; <label>:3410:                                   ; preds = %3390
  br i1 %3409, label %3411, label %3459

; <label>:3411:                                   ; preds = %3410
  %3412 = icmp sgt i32 %3395, 0
  br i1 %3412, label %3415, label %3413

; <label>:3413:                                   ; preds = %3411
  %3414 = add nsw i32 %3398, -1
  br label %3430

; <label>:3415:                                   ; preds = %3411
  %3416 = add nsw i32 %3392, -1
  %3417 = add nsw i32 %3398, -1
  %3418 = sext i32 %3407 to i64
  %3419 = sext i32 %3395 to i64
  %3420 = mul nsw i64 %3419, %3418
  %3421 = lshr i64 %3420, 16
  %3422 = trunc i64 %3421 to i32
  %3423 = mul nsw i32 %3422, 255
  %3424 = add nsw i32 %3423, 32768
  %3425 = lshr i32 %3424, 16
  %3426 = trunc i32 %3425 to i8
  %3427 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3428 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3427, i64 17
  %3429 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3428, align 8
  call void %3429(%class.AdditiveBlitter* nonnull %2975, i32 %3416, i32 %3417, i8 zeroext %3426) #12
  br label %3430

; <label>:3430:                                   ; preds = %3415, %3413
  %3431 = phi i32 [ %3414, %3413 ], [ %3417, %3415 ]
  %3432 = sub nsw i32 %3393, %3392
  %3433 = mul nsw i32 %3407, 255
  %3434 = add nsw i32 %3433, 32768
  %3435 = lshr i32 %3434, 16
  %3436 = trunc i32 %3435 to i8
  %3437 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3175, align 8
  %3438 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3437, i64 18
  %3439 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3438, align 8
  call void %3439(%class.AdditiveBlitter* nonnull %2975, i32 %3392, i32 %3431, i32 %3432, i8 zeroext %3436) #12
  %3440 = icmp eq i32 %3396, 0
  br i1 %3440, label %3454, label %3441

; <label>:3441:                                   ; preds = %3430
  %3442 = sext i32 %3407 to i64
  %3443 = zext i32 %3396 to i64
  %3444 = mul nsw i64 %3443, %3442
  %3445 = lshr i64 %3444, 16
  %3446 = trunc i64 %3445 to i32
  %3447 = mul nsw i32 %3446, 255
  %3448 = add nsw i32 %3447, 32768
  %3449 = lshr i32 %3448, 16
  %3450 = trunc i32 %3449 to i8
  %3451 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3452 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3451, i64 17
  %3453 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3452, align 8
  call void %3453(%class.AdditiveBlitter* nonnull %2975, i32 %3393, i32 %3431, i8 zeroext %3450) #12
  br label %3454

; <label>:3454:                                   ; preds = %3441, %3430
  %3455 = add i32 %3406, %3400
  %3456 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3176, align 8
  %3457 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3456, i64 20
  %3458 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3457, align 8
  call void %3458(%class.AdditiveBlitter* nonnull %2975, i32 %3184, i32 %3455) #12
  br label %3459

; <label>:3459:                                   ; preds = %3454, %3410
  %3460 = icmp sgt i32 %3399, %3398
  br i1 %3460, label %3461, label %3487

; <label>:3461:                                   ; preds = %3459
  %3462 = icmp sle i32 %3393, %3392
  %3463 = mul nsw i32 %3395, 255
  %3464 = add nsw i32 %3463, 32768
  %3465 = lshr i32 %3464, 16
  %3466 = mul nuw nsw i32 %3396, 255
  %3467 = add nuw nsw i32 %3466, 32768
  %3468 = lshr i32 %3467, 16
  %3469 = or i32 %3465, %3468
  %3470 = trunc i32 %3469 to i8
  %3471 = icmp eq i8 %3470, 0
  %3472 = and i1 %3462, %3471
  br i1 %3472, label %3487, label %3473

; <label>:3473:                                   ; preds = %3461
  %3474 = trunc i32 %3465 to i8
  %3475 = trunc i32 %3468 to i8
  %3476 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3477 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3476, i64 15
  %3478 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3477, align 8
  %3479 = call %class.SkBlitter* %3478(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3480 = add nsw i32 %3392, -1
  %3481 = sub nsw i32 %3393, %3392
  %3482 = sub nsw i32 %3399, %3398
  %3483 = bitcast %class.SkBlitter* %3479 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %3484 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %3483, align 8
  %3485 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %3484, i64 7
  %3486 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %3485, align 8
  call void %3486(%class.SkBlitter* %3479, i32 %3480, i32 %3398, i32 %3481, i32 %3482, i8 zeroext %3474, i8 zeroext %3475) #12
  br label %3487

; <label>:3487:                                   ; preds = %3473, %3461, %3459
  %3488 = icmp eq i32 %3405, 0
  br i1 %3488, label %4227, label %3489

; <label>:3489:                                   ; preds = %3487
  %3490 = icmp sgt i32 %3395, 0
  br i1 %3490, label %3491, label %3505

; <label>:3491:                                   ; preds = %3489
  %3492 = add nsw i32 %3392, -1
  %3493 = zext i32 %3405 to i64
  %3494 = sext i32 %3395 to i64
  %3495 = mul nsw i64 %3494, %3493
  %3496 = lshr i64 %3495, 16
  %3497 = trunc i64 %3496 to i32
  %3498 = mul nsw i32 %3497, 255
  %3499 = add nsw i32 %3498, 32768
  %3500 = lshr i32 %3499, 16
  %3501 = trunc i32 %3500 to i8
  %3502 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3503 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3502, i64 17
  %3504 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3503, align 8
  call void %3504(%class.AdditiveBlitter* nonnull %2975, i32 %3492, i32 %3399, i8 zeroext %3501) #12
  br label %3505

; <label>:3505:                                   ; preds = %3491, %3489
  %3506 = sub nsw i32 %3393, %3392
  %3507 = mul nuw nsw i32 %3405, 255
  %3508 = add nuw nsw i32 %3507, 32768
  %3509 = lshr i32 %3508, 16
  %3510 = trunc i32 %3509 to i8
  %3511 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3175, align 8
  %3512 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3511, i64 18
  %3513 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3512, align 8
  call void %3513(%class.AdditiveBlitter* nonnull %2975, i32 %3392, i32 %3399, i32 %3506, i8 zeroext %3510) #12
  %3514 = icmp eq i32 %3396, 0
  br i1 %3514, label %4227, label %3515

; <label>:3515:                                   ; preds = %3505
  %3516 = mul nuw i32 %3396, %3405
  %3517 = lshr i32 %3516, 16
  %3518 = mul nuw nsw i32 %3517, 255
  %3519 = add nuw nsw i32 %3518, 32768
  %3520 = lshr i32 %3519, 16
  %3521 = trunc i32 %3520 to i8
  %3522 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3523 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3522, i64 17
  %3524 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3523, align 8
  call void %3524(%class.AdditiveBlitter* nonnull %2975, i32 %3393, i32 %3399, i8 zeroext %3521) #12
  br label %4227

; <label>:3525:                                   ; preds = %3390
  br i1 %3409, label %3526, label %3546

; <label>:3526:                                   ; preds = %3525
  %3527 = add nsw i32 %3392, -1
  %3528 = add nsw i32 %3398, -1
  %3529 = sub nsw i32 %3385, %3379
  %3530 = sext i32 %3407 to i64
  %3531 = sext i32 %3529 to i64
  %3532 = mul nsw i64 %3531, %3530
  %3533 = lshr i64 %3532, 16
  %3534 = trunc i64 %3533 to i32
  %3535 = mul nsw i32 %3534, 255
  %3536 = add nsw i32 %3535, 32768
  %3537 = lshr i32 %3536, 16
  %3538 = trunc i32 %3537 to i8
  %3539 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3175, align 8
  %3540 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3539, i64 18
  %3541 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3540, align 8
  call void %3541(%class.AdditiveBlitter* nonnull %2975, i32 %3527, i32 %3528, i32 1, i8 zeroext %3538) #12
  %3542 = add i32 %3406, %3400
  %3543 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3176, align 8
  %3544 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3543, i64 20
  %3545 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3544, align 8
  call void %3545(%class.AdditiveBlitter* nonnull %2975, i32 %3184, i32 %3542) #12
  br label %3546

; <label>:3546:                                   ; preds = %3526, %3525
  %3547 = icmp sgt i32 %3399, %3398
  br i1 %3547, label %3548, label %3564

; <label>:3548:                                   ; preds = %3546
  %3549 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3550 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3549, i64 15
  %3551 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3550, align 8
  %3552 = call %class.SkBlitter* %3551(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3553 = add nsw i32 %3392, -1
  %3554 = sub nsw i32 %3399, %3398
  %3555 = sub nsw i32 %3385, %3379
  %3556 = mul nsw i32 %3555, 255
  %3557 = add nsw i32 %3556, 32768
  %3558 = lshr i32 %3557, 16
  %3559 = trunc i32 %3558 to i8
  %3560 = bitcast %class.SkBlitter* %3552 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3561 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3560, align 8
  %3562 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3561, i64 5
  %3563 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3562, align 8
  call void %3563(%class.SkBlitter* %3552, i32 %3553, i32 %3398, i32 %3554, i8 zeroext %3559) #12
  br label %3564

; <label>:3564:                                   ; preds = %3548, %3546
  %3565 = icmp eq i32 %3405, 0
  br i1 %3565, label %4227, label %3566

; <label>:3566:                                   ; preds = %3564
  %3567 = add nsw i32 %3392, -1
  %3568 = sub nsw i32 %3385, %3379
  %3569 = zext i32 %3405 to i64
  %3570 = sext i32 %3568 to i64
  %3571 = mul nsw i64 %3570, %3569
  %3572 = lshr i64 %3571, 16
  %3573 = trunc i64 %3572 to i32
  %3574 = mul nsw i32 %3573, 255
  %3575 = add nsw i32 %3574, 32768
  %3576 = lshr i32 %3575, 16
  %3577 = trunc i32 %3576 to i8
  %3578 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3175, align 8
  %3579 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3578, i64 18
  %3580 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3579, align 8
  call void %3580(%class.AdditiveBlitter* nonnull %2975, i32 %3567, i32 %3399, i32 1, i8 zeroext %3577) #12
  br label %4227

; <label>:3581:                                   ; preds = %3372
  %3582 = add nsw i32 %3379, 2048
  %3583 = add nsw i32 %3385, 2048
  %3584 = add nsw i32 %3375, 65535
  %3585 = ashr i32 %3584, 16
  %3586 = sub nsw i32 %3585, %3248
  %3587 = icmp sgt i32 %3586, 1
  br i1 %3587, label %3591, label %3588

; <label>:3588:                                   ; preds = %3581
  %3589 = and i32 %3582, -4096
  %3590 = and i32 %3583, -4096
  br label %3994

; <label>:3591:                                   ; preds = %3581
  %3592 = and i32 %3184, -65536
  %3593 = icmp eq i32 %3592, %3184
  br i1 %3593, label %3594, label %3597

; <label>:3594:                                   ; preds = %3591
  %3595 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 9
  %3596 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 9
  br label %3824

; <label>:3597:                                   ; preds = %3591
  %3598 = add nsw i32 %3586, -1
  %3599 = add nsw i32 %3184, 65536
  %3600 = and i32 %3599, -65536
  %3601 = sub nsw i32 %3600, %3184
  %3602 = sext i32 %3381 to i64
  %3603 = sext i32 %3601 to i64
  %3604 = mul nsw i64 %3602, %3603
  %3605 = lshr i64 %3604, 16
  %3606 = trunc i64 %3605 to i32
  %3607 = add nsw i32 %3582, %3606
  %3608 = sext i32 %3387 to i64
  %3609 = mul nsw i64 %3608, %3603
  %3610 = lshr i64 %3609, 16
  %3611 = trunc i64 %3610 to i32
  %3612 = add nsw i32 %3583, %3611
  %3613 = and i32 %3582, -4096
  %3614 = and i32 %3583, -4096
  %3615 = and i32 %3607, -4096
  %3616 = and i32 %3612, -4096
  %3617 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 9
  %3618 = load i32, i32* %3617, align 8
  %3619 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 9
  %3620 = load i32, i32* %3619, align 8
  %3621 = mul nsw i32 %3601, 255
  %3622 = add nsw i32 %3621, 32768
  %3623 = lshr i32 %3622, 16
  %3624 = trunc i32 %3623 to i8
  %3625 = icmp sgt i32 %3613, %3614
  br i1 %3625, label %3819, label %3626

; <label>:3626:                                   ; preds = %3597
  %3627 = icmp sgt i32 %3615, %3616
  br i1 %3627, label %3628, label %3641

; <label>:3628:                                   ; preds = %3626
  %3629 = icmp sgt i32 %3613, %3615
  %3630 = select i1 %3629, i32 %3615, i32 %3613
  %3631 = select i1 %3629, i32 %3613, i32 %3615
  %3632 = icmp sgt i32 %3614, %3616
  %3633 = select i1 %3632, i32 %3616, i32 %3614
  %3634 = select i1 %3632, i32 %3614, i32 %3616
  %3635 = icmp slt i32 %3633, %3630
  %3636 = select i1 %3635, i32 %3630, i32 %3633
  %3637 = icmp slt i32 %3631, %3634
  %3638 = select i1 %3637, i32 %3631, i32 %3634
  %3639 = add nsw i32 %3636, %3638
  %3640 = ashr exact i32 %3639, 1
  br label %3641

; <label>:3641:                                   ; preds = %3628, %3626
  %3642 = phi i32 [ %3640, %3628 ], [ %3615, %3626 ]
  %3643 = phi i32 [ %3640, %3628 ], [ %3616, %3626 ]
  %3644 = icmp eq i32 %3613, %3614
  %3645 = icmp eq i32 %3642, %3643
  %3646 = and i1 %3644, %3645
  br i1 %3646, label %3819, label %3647

; <label>:3647:                                   ; preds = %3641
  %3648 = icmp slt i32 %3642, %3613
  %3649 = select i1 %3648, i32 %3642, i32 %3613
  %3650 = select i1 %3648, i32 %3613, i32 %3642
  %3651 = icmp slt i32 %3643, %3614
  %3652 = select i1 %3651, i32 %3643, i32 %3614
  %3653 = select i1 %3651, i32 %3614, i32 %3643
  %3654 = add nsw i32 %3650, 65535
  %3655 = and i32 %3654, -65536
  %3656 = and i32 %3652, -65536
  %3657 = icmp slt i32 %3656, %3655
  br i1 %3657, label %3818, label %3658

; <label>:3658:                                   ; preds = %3647
  %3659 = icmp sgt i32 %3655, %3649
  br i1 %3659, label %3660, label %3728

; <label>:3660:                                   ; preds = %3658
  %3661 = sub nsw i32 %3655, %3649
  %3662 = add nsw i32 %3661, 65535
  %3663 = ashr i32 %3662, 16
  switch i32 %3663, label %3727 [
    i32 1, label %3664
    i32 2, label %3689
  ]

; <label>:3664:                                   ; preds = %3660
  %3665 = sub i32 %3655, %3650
  %3666 = add nsw i32 %3665, %3661
  %3667 = lshr i32 %3666, 9
  %3668 = ashr i32 %3649, 16
  %3669 = icmp eq i8 %3624, -1
  br i1 %3669, label %3670, label %3680

; <label>:3670:                                   ; preds = %3664
  %3671 = trunc i32 %3667 to i8
  %3672 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3673 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3672, i64 15
  %3674 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3673, align 8
  %3675 = call %class.SkBlitter* %3674(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3676 = bitcast %class.SkBlitter* %3675 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3677 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3676, align 8
  %3678 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3677, i64 5
  %3679 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3678, align 8
  call void %3679(%class.SkBlitter* %3675, i32 %3668, i32 %3248, i32 1, i8 zeroext %3671) #12
  br label %3728

; <label>:3680:                                   ; preds = %3664
  %3681 = and i32 %3667, 255
  %3682 = and i32 %3623, 255
  %3683 = mul nuw nsw i32 %3681, %3682
  %3684 = lshr i32 %3683, 8
  %3685 = trunc i32 %3684 to i8
  %3686 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3687 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3686, i64 17
  %3688 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3687, align 8
  call void %3688(%class.AdditiveBlitter* nonnull %2975, i32 %3668, i32 %3248, i8 zeroext %3685) #12
  br label %3728

; <label>:3689:                                   ; preds = %3660
  %3690 = sub i32 -65536, %3649
  %3691 = add i32 %3655, %3690
  %3692 = sub i32 %3650, %3649
  %3693 = sub i32 %3692, %3691
  %3694 = ashr i32 %3691, 11
  %3695 = ashr i32 %3618, 11
  %3696 = mul i32 %3694, %3695
  %3697 = mul i32 %3696, %3694
  %3698 = lshr i32 %3697, 8
  %3699 = ashr i32 %3693, 11
  %3700 = mul i32 %3699, %3695
  %3701 = mul i32 %3700, %3699
  %3702 = lshr i32 %3701, 8
  %3703 = trunc i32 %3702 to i8
  %3704 = sub i8 %3624, %3703
  %3705 = ashr i32 %3649, 16
  %3706 = icmp eq i8 %3624, -1
  br i1 %3706, label %3707, label %3718

; <label>:3707:                                   ; preds = %3689
  %3708 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3709 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3708, i64 15
  %3710 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3709, align 8
  %3711 = call %class.SkBlitter* %3710(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3712 = and i32 %3698, 255
  %3713 = zext i8 %3704 to i32
  %3714 = bitcast %class.SkBlitter* %3711 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3715 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3714, align 8
  %3716 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3715, i64 10
  %3717 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3716, align 8
  call void %3717(%class.SkBlitter* %3711, i32 %3705, i32 %3248, i32 %3712, i32 %3713) #12
  br label %3728

; <label>:3718:                                   ; preds = %3689
  %3719 = trunc i32 %3698 to i8
  %3720 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3721 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3720, i64 17
  %3722 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3721, align 8
  call void %3722(%class.AdditiveBlitter* nonnull %2975, i32 %3705, i32 %3248, i8 zeroext %3719) #12
  %3723 = add nsw i32 %3705, 1
  %3724 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3725 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3724, i64 17
  %3726 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3725, align 8
  call void %3726(%class.AdditiveBlitter* nonnull %2975, i32 %3723, i32 %3248, i8 zeroext %3704) #12
  br label %3728

; <label>:3727:                                   ; preds = %3660
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %3248, i32 %3649, i32 %3655, i32 %3650, i32 %3655, i32 %3618, i32 2147483647, i8 zeroext %3624, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %3728

; <label>:3728:                                   ; preds = %3727, %3718, %3707, %3680, %3670, %3658
  %3729 = icmp sgt i32 %3656, %3655
  br i1 %3729, label %3730, label %3748

; <label>:3730:                                   ; preds = %3728
  %3731 = ashr i32 %3654, 16
  %3732 = sub nsw i32 %3656, %3655
  %3733 = ashr exact i32 %3732, 16
  %3734 = icmp eq i8 %3624, -1
  br i1 %3734, label %3735, label %3744

; <label>:3735:                                   ; preds = %3730
  %3736 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3737 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3736, i64 15
  %3738 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3737, align 8
  %3739 = call %class.SkBlitter* %3738(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3740 = bitcast %class.SkBlitter* %3739 to void (%class.SkBlitter*, i32, i32, i32)***
  %3741 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %3740, align 8
  %3742 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3741, i64 3
  %3743 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3742, align 8
  call void %3743(%class.SkBlitter* %3739, i32 %3731, i32 %3248, i32 %3733) #12
  br label %3748

; <label>:3744:                                   ; preds = %3730
  %3745 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3175, align 8
  %3746 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3745, i64 18
  %3747 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %3746, align 8
  call void %3747(%class.AdditiveBlitter* nonnull %2975, i32 %3731, i32 %3248, i32 %3733, i8 zeroext %3624) #12
  br label %3748

; <label>:3748:                                   ; preds = %3744, %3735, %3728
  %3749 = icmp sgt i32 %3653, %3656
  br i1 %3749, label %3750, label %3819

; <label>:3750:                                   ; preds = %3748
  %3751 = sub nsw i32 %3653, %3656
  %3752 = add nsw i32 %3751, 65535
  %3753 = ashr i32 %3752, 16
  switch i32 %3753, label %3817 [
    i32 1, label %3754
    i32 2, label %3779
  ]

; <label>:3754:                                   ; preds = %3750
  %3755 = sub i32 %3652, %3656
  %3756 = add nsw i32 %3755, %3751
  %3757 = lshr i32 %3756, 9
  %3758 = ashr i32 %3652, 16
  %3759 = icmp eq i8 %3624, -1
  br i1 %3759, label %3760, label %3770

; <label>:3760:                                   ; preds = %3754
  %3761 = trunc i32 %3757 to i8
  %3762 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3763 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3762, i64 15
  %3764 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3763, align 8
  %3765 = call %class.SkBlitter* %3764(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3766 = bitcast %class.SkBlitter* %3765 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3767 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3766, align 8
  %3768 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3767, i64 5
  %3769 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3768, align 8
  call void %3769(%class.SkBlitter* %3765, i32 %3758, i32 %3248, i32 1, i8 zeroext %3761) #12
  br label %3819

; <label>:3770:                                   ; preds = %3754
  %3771 = and i32 %3757, 255
  %3772 = and i32 %3623, 255
  %3773 = mul nuw nsw i32 %3771, %3772
  %3774 = lshr i32 %3773, 8
  %3775 = trunc i32 %3774 to i8
  %3776 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3777 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3776, i64 17
  %3778 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3777, align 8
  call void %3778(%class.AdditiveBlitter* nonnull %2975, i32 %3758, i32 %3248, i8 zeroext %3775) #12
  br label %3819

; <label>:3779:                                   ; preds = %3750
  %3780 = sub i32 65536, %3652
  %3781 = add i32 %3780, %3656
  %3782 = sub i32 %3653, %3652
  %3783 = sub i32 %3782, %3781
  %3784 = ashr i32 %3781, 11
  %3785 = ashr i32 %3620, 11
  %3786 = mul i32 %3784, %3785
  %3787 = mul i32 %3786, %3784
  %3788 = lshr i32 %3787, 8
  %3789 = trunc i32 %3788 to i8
  %3790 = sub i8 %3624, %3789
  %3791 = ashr i32 %3783, 11
  %3792 = mul i32 %3791, %3785
  %3793 = mul i32 %3792, %3791
  %3794 = lshr i32 %3793, 8
  %3795 = ashr i32 %3652, 16
  %3796 = icmp eq i8 %3624, -1
  br i1 %3796, label %3797, label %3808

; <label>:3797:                                   ; preds = %3779
  %3798 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3799 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3798, i64 15
  %3800 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3799, align 8
  %3801 = call %class.SkBlitter* %3800(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3802 = zext i8 %3790 to i32
  %3803 = and i32 %3794, 255
  %3804 = bitcast %class.SkBlitter* %3801 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3805 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3804, align 8
  %3806 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3805, i64 10
  %3807 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3806, align 8
  call void %3807(%class.SkBlitter* %3801, i32 %3795, i32 %3248, i32 %3802, i32 %3803) #12
  br label %3819

; <label>:3808:                                   ; preds = %3779
  %3809 = trunc i32 %3794 to i8
  %3810 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3811 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3810, i64 17
  %3812 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3811, align 8
  call void %3812(%class.AdditiveBlitter* nonnull %2975, i32 %3795, i32 %3248, i8 zeroext %3790) #12
  %3813 = add nsw i32 %3795, 1
  %3814 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %3815 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3814, i64 17
  %3816 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %3815, align 8
  call void %3816(%class.AdditiveBlitter* nonnull %2975, i32 %3813, i32 %3248, i8 zeroext %3809) #12
  br label %3819

; <label>:3817:                                   ; preds = %3750
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %3248, i32 %3656, i32 %3652, i32 %3656, i32 %3653, i32 2147483647, i32 %3620, i8 zeroext %3624, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %3819

; <label>:3818:                                   ; preds = %3647
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %3248, i32 %3649, i32 %3652, i32 %3650, i32 %3653, i32 %3618, i32 %3620, i8 zeroext %3624, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %3819

; <label>:3819:                                   ; preds = %3818, %3817, %3808, %3797, %3770, %3760, %3748, %3641, %3597
  %3820 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3176, align 8
  %3821 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3820, i64 20
  %3822 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3821, align 8
  call void %3822(%class.AdditiveBlitter* nonnull %2975, i32 %3184, i32 %3600) #12
  %3823 = icmp sgt i32 %3586, 2
  br i1 %3823, label %3824, label %3994

; <label>:3824:                                   ; preds = %3819, %3594
  %3825 = phi i32* [ %3596, %3594 ], [ %3619, %3819 ]
  %3826 = phi i32* [ %3595, %3594 ], [ %3617, %3819 ]
  %3827 = phi i32 [ %3184, %3594 ], [ %3600, %3819 ]
  %3828 = phi i32 [ %3582, %3594 ], [ %3607, %3819 ]
  %3829 = phi i32 [ %3583, %3594 ], [ %3612, %3819 ]
  %3830 = phi i32 [ %3586, %3594 ], [ %3598, %3819 ]
  br label %3831

; <label>:3831:                                   ; preds = %3989, %3824
  %3832 = phi i32 [ %3827, %3824 ], [ %3838, %3989 ]
  %3833 = phi i32 [ %3828, %3824 ], [ %3839, %3989 ]
  %3834 = phi i32 [ %3829, %3824 ], [ %3840, %3989 ]
  %3835 = phi i32 [ %3830, %3824 ], [ %3836, %3989 ]
  %3836 = add nsw i32 %3835, -1
  %3837 = ashr i32 %3832, 16
  %3838 = add nsw i32 %3832, 65536
  %3839 = add nsw i32 %3833, %3381
  %3840 = add nsw i32 %3834, %3387
  %3841 = and i32 %3833, -4096
  %3842 = and i32 %3834, -4096
  %3843 = and i32 %3839, -4096
  %3844 = and i32 %3840, -4096
  %3845 = load i32, i32* %3826, align 8
  %3846 = load i32, i32* %3825, align 8
  %3847 = icmp sgt i32 %3841, %3842
  br i1 %3847, label %3989, label %3848

; <label>:3848:                                   ; preds = %3831
  %3849 = icmp sgt i32 %3843, %3844
  br i1 %3849, label %3850, label %3863

; <label>:3850:                                   ; preds = %3848
  %3851 = icmp sgt i32 %3841, %3843
  %3852 = select i1 %3851, i32 %3843, i32 %3841
  %3853 = select i1 %3851, i32 %3841, i32 %3843
  %3854 = icmp sgt i32 %3842, %3844
  %3855 = select i1 %3854, i32 %3844, i32 %3842
  %3856 = select i1 %3854, i32 %3842, i32 %3844
  %3857 = icmp slt i32 %3855, %3852
  %3858 = select i1 %3857, i32 %3852, i32 %3855
  %3859 = icmp slt i32 %3853, %3856
  %3860 = select i1 %3859, i32 %3853, i32 %3856
  %3861 = add nsw i32 %3858, %3860
  %3862 = ashr exact i32 %3861, 1
  br label %3863

; <label>:3863:                                   ; preds = %3850, %3848
  %3864 = phi i32 [ %3862, %3850 ], [ %3843, %3848 ]
  %3865 = phi i32 [ %3862, %3850 ], [ %3844, %3848 ]
  %3866 = icmp eq i32 %3841, %3842
  %3867 = icmp eq i32 %3864, %3865
  %3868 = and i1 %3866, %3867
  br i1 %3868, label %3989, label %3869

; <label>:3869:                                   ; preds = %3863
  %3870 = icmp slt i32 %3864, %3841
  %3871 = select i1 %3870, i32 %3864, i32 %3841
  %3872 = select i1 %3870, i32 %3841, i32 %3864
  %3873 = icmp slt i32 %3865, %3842
  %3874 = select i1 %3873, i32 %3865, i32 %3842
  %3875 = select i1 %3873, i32 %3842, i32 %3865
  %3876 = add nsw i32 %3872, 65535
  %3877 = and i32 %3876, -65536
  %3878 = and i32 %3874, -65536
  %3879 = icmp slt i32 %3878, %3877
  br i1 %3879, label %3988, label %3880

; <label>:3880:                                   ; preds = %3869
  %3881 = icmp sgt i32 %3877, %3871
  br i1 %3881, label %3882, label %3927

; <label>:3882:                                   ; preds = %3880
  %3883 = sub nsw i32 %3877, %3871
  %3884 = add nsw i32 %3883, 65535
  %3885 = ashr i32 %3884, 16
  switch i32 %3885, label %3926 [
    i32 1, label %3886
    i32 2, label %3900
  ]

; <label>:3886:                                   ; preds = %3882
  %3887 = sub i32 %3877, %3872
  %3888 = add nsw i32 %3887, %3883
  %3889 = lshr i32 %3888, 9
  %3890 = trunc i32 %3889 to i8
  %3891 = ashr i32 %3871, 16
  %3892 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3893 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3892, i64 15
  %3894 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3893, align 8
  %3895 = call %class.SkBlitter* %3894(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3896 = bitcast %class.SkBlitter* %3895 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3897 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3896, align 8
  %3898 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3897, i64 5
  %3899 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3898, align 8
  call void %3899(%class.SkBlitter* %3895, i32 %3891, i32 %3837, i32 1, i8 zeroext %3890) #12
  br label %3927

; <label>:3900:                                   ; preds = %3882
  %3901 = sub i32 -65536, %3871
  %3902 = add i32 %3877, %3901
  %3903 = sub i32 %3872, %3871
  %3904 = sub i32 %3903, %3902
  %3905 = ashr i32 %3902, 11
  %3906 = ashr i32 %3845, 11
  %3907 = mul i32 %3905, %3906
  %3908 = mul i32 %3907, %3905
  %3909 = lshr i32 %3908, 8
  %3910 = ashr i32 %3904, 11
  %3911 = mul i32 %3910, %3906
  %3912 = mul i32 %3911, %3910
  %3913 = lshr i32 %3912, 8
  %3914 = ashr i32 %3871, 16
  %3915 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3916 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3915, i64 15
  %3917 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3916, align 8
  %3918 = call %class.SkBlitter* %3917(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3919 = and i32 %3909, 255
  %3920 = and i32 %3913, 255
  %3921 = xor i32 %3920, 255
  %3922 = bitcast %class.SkBlitter* %3918 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3923 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3922, align 8
  %3924 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3923, i64 10
  %3925 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3924, align 8
  call void %3925(%class.SkBlitter* %3918, i32 %3914, i32 %3837, i32 %3919, i32 %3921) #12
  br label %3927

; <label>:3926:                                   ; preds = %3882
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %3837, i32 %3871, i32 %3877, i32 %3872, i32 %3877, i32 %3845, i32 2147483647, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %3927

; <label>:3927:                                   ; preds = %3926, %3900, %3886, %3880
  %3928 = icmp sgt i32 %3878, %3877
  br i1 %3928, label %3929, label %3941

; <label>:3929:                                   ; preds = %3927
  %3930 = ashr i32 %3876, 16
  %3931 = sub nsw i32 %3878, %3877
  %3932 = ashr exact i32 %3931, 16
  %3933 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3934 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3933, i64 15
  %3935 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3934, align 8
  %3936 = call %class.SkBlitter* %3935(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3937 = bitcast %class.SkBlitter* %3936 to void (%class.SkBlitter*, i32, i32, i32)***
  %3938 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %3937, align 8
  %3939 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3938, i64 3
  %3940 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %3939, align 8
  call void %3940(%class.SkBlitter* %3936, i32 %3930, i32 %3837, i32 %3932) #12
  br label %3941

; <label>:3941:                                   ; preds = %3929, %3927
  %3942 = icmp sgt i32 %3875, %3878
  br i1 %3942, label %3943, label %3989

; <label>:3943:                                   ; preds = %3941
  %3944 = sub nsw i32 %3875, %3878
  %3945 = add nsw i32 %3944, 65535
  %3946 = ashr i32 %3945, 16
  switch i32 %3946, label %3987 [
    i32 1, label %3947
    i32 2, label %3961
  ]

; <label>:3947:                                   ; preds = %3943
  %3948 = sub i32 %3874, %3878
  %3949 = add nsw i32 %3948, %3944
  %3950 = lshr i32 %3949, 9
  %3951 = trunc i32 %3950 to i8
  %3952 = ashr i32 %3874, 16
  %3953 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3954 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3953, i64 15
  %3955 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3954, align 8
  %3956 = call %class.SkBlitter* %3955(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3957 = bitcast %class.SkBlitter* %3956 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %3958 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %3957, align 8
  %3959 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3958, i64 5
  %3960 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %3959, align 8
  call void %3960(%class.SkBlitter* %3956, i32 %3952, i32 %3837, i32 1, i8 zeroext %3951) #12
  br label %3989

; <label>:3961:                                   ; preds = %3943
  %3962 = sub i32 65536, %3874
  %3963 = add i32 %3962, %3878
  %3964 = sub i32 %3875, %3874
  %3965 = sub i32 %3964, %3963
  %3966 = ashr i32 %3963, 11
  %3967 = ashr i32 %3846, 11
  %3968 = mul i32 %3966, %3967
  %3969 = mul i32 %3968, %3966
  %3970 = lshr i32 %3969, 8
  %3971 = ashr i32 %3965, 11
  %3972 = mul i32 %3971, %3967
  %3973 = mul i32 %3972, %3971
  %3974 = lshr i32 %3973, 8
  %3975 = ashr i32 %3874, 16
  %3976 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %3977 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3976, i64 15
  %3978 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %3977, align 8
  %3979 = call %class.SkBlitter* %3978(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %3980 = and i32 %3970, 255
  %3981 = xor i32 %3980, 255
  %3982 = and i32 %3974, 255
  %3983 = bitcast %class.SkBlitter* %3979 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %3984 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %3983, align 8
  %3985 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3984, i64 10
  %3986 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %3985, align 8
  call void %3986(%class.SkBlitter* %3979, i32 %3975, i32 %3837, i32 %3981, i32 %3982) #12
  br label %3989

; <label>:3987:                                   ; preds = %3943
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %3837, i32 %3878, i32 %3874, i32 %3878, i32 %3875, i32 2147483647, i32 %3846, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %3989

; <label>:3988:                                   ; preds = %3869
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %3837, i32 %3871, i32 %3874, i32 %3872, i32 %3875, i32 %3845, i32 %3846, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %3989

; <label>:3989:                                   ; preds = %3988, %3987, %3961, %3947, %3941, %3863, %3831
  %3990 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3176, align 8
  %3991 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3990, i64 20
  %3992 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %3991, align 8
  call void %3992(%class.AdditiveBlitter* nonnull %2975, i32 %3832, i32 %3838) #12
  %3993 = icmp sgt i32 %3835, 2
  br i1 %3993, label %3831, label %3994

; <label>:3994:                                   ; preds = %3989, %3588, %3819
  %3995 = phi i32 [ %3590, %3588 ], [ %3616, %3819 ], [ %3844, %3989 ]
  %3996 = phi i32 [ %3589, %3588 ], [ %3615, %3819 ], [ %3843, %3989 ]
  %3997 = phi i32 [ %3583, %3588 ], [ %3612, %3819 ], [ %3840, %3989 ]
  %3998 = phi i32 [ %3582, %3588 ], [ %3607, %3819 ], [ %3839, %3989 ]
  %3999 = phi i32 [ %3184, %3588 ], [ %3600, %3819 ], [ %3838, %3989 ]
  %4000 = ashr i32 %3999, 16
  %4001 = sub nsw i32 %3375, %3999
  %4002 = sext i32 %3381 to i64
  %4003 = sext i32 %4001 to i64
  %4004 = mul nsw i64 %4003, %4002
  %4005 = lshr i64 %4004, 16
  %4006 = trunc i64 %4005 to i32
  %4007 = add nsw i32 %3998, %4006
  %4008 = icmp slt i32 %3179, %4007
  %4009 = select i1 %4008, i32 %4007, i32 %3179
  %4010 = sext i32 %3387 to i64
  %4011 = mul nsw i64 %4003, %4010
  %4012 = lshr i64 %4011, 16
  %4013 = trunc i64 %4012 to i32
  %4014 = add nsw i32 %3997, %4013
  %4015 = icmp slt i32 %4014, %3180
  %4016 = select i1 %4015, i32 %4014, i32 %3180
  %4017 = and i32 %4009, -4096
  %4018 = and i32 %4016, -4096
  %4019 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 9
  %4020 = load i32, i32* %4019, align 8
  %4021 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 9
  %4022 = load i32, i32* %4021, align 8
  %4023 = mul nsw i32 %4001, 255
  %4024 = add nsw i32 %4023, 32768
  %4025 = lshr i32 %4024, 16
  %4026 = trunc i32 %4025 to i8
  %4027 = icmp sgt i32 %3996, %3995
  br i1 %4027, label %4221, label %4028

; <label>:4028:                                   ; preds = %3994
  %4029 = icmp sgt i32 %4017, %4018
  br i1 %4029, label %4030, label %4043

; <label>:4030:                                   ; preds = %4028
  %4031 = icmp sgt i32 %3996, %4017
  %4032 = select i1 %4031, i32 %4017, i32 %3996
  %4033 = select i1 %4031, i32 %3996, i32 %4017
  %4034 = icmp sgt i32 %3995, %4018
  %4035 = select i1 %4034, i32 %4018, i32 %3995
  %4036 = select i1 %4034, i32 %3995, i32 %4018
  %4037 = icmp slt i32 %4035, %4032
  %4038 = select i1 %4037, i32 %4032, i32 %4035
  %4039 = icmp slt i32 %4033, %4036
  %4040 = select i1 %4039, i32 %4033, i32 %4036
  %4041 = add nsw i32 %4038, %4040
  %4042 = ashr exact i32 %4041, 1
  br label %4043

; <label>:4043:                                   ; preds = %4030, %4028
  %4044 = phi i32 [ %4042, %4030 ], [ %4017, %4028 ]
  %4045 = phi i32 [ %4042, %4030 ], [ %4018, %4028 ]
  %4046 = icmp eq i32 %3996, %3995
  %4047 = icmp eq i32 %4044, %4045
  %4048 = and i1 %4046, %4047
  br i1 %4048, label %4221, label %4049

; <label>:4049:                                   ; preds = %4043
  %4050 = icmp slt i32 %4044, %3996
  %4051 = select i1 %4050, i32 %4044, i32 %3996
  %4052 = select i1 %4050, i32 %3996, i32 %4044
  %4053 = icmp slt i32 %4045, %3995
  %4054 = select i1 %4053, i32 %4045, i32 %3995
  %4055 = select i1 %4053, i32 %3995, i32 %4045
  %4056 = add nsw i32 %4052, 65535
  %4057 = and i32 %4056, -65536
  %4058 = and i32 %4054, -65536
  %4059 = icmp slt i32 %4058, %4057
  br i1 %4059, label %4220, label %4060

; <label>:4060:                                   ; preds = %4049
  %4061 = icmp sgt i32 %4057, %4051
  br i1 %4061, label %4062, label %4130

; <label>:4062:                                   ; preds = %4060
  %4063 = sub nsw i32 %4057, %4051
  %4064 = add nsw i32 %4063, 65535
  %4065 = ashr i32 %4064, 16
  switch i32 %4065, label %4129 [
    i32 1, label %4066
    i32 2, label %4091
  ]

; <label>:4066:                                   ; preds = %4062
  %4067 = sub i32 %4057, %4052
  %4068 = add nsw i32 %4067, %4063
  %4069 = lshr i32 %4068, 9
  %4070 = ashr i32 %4051, 16
  %4071 = icmp eq i8 %4026, -1
  br i1 %4071, label %4072, label %4082

; <label>:4072:                                   ; preds = %4066
  %4073 = trunc i32 %4069 to i8
  %4074 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %4075 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4074, i64 15
  %4076 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4075, align 8
  %4077 = call %class.SkBlitter* %4076(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4078 = bitcast %class.SkBlitter* %4077 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4079 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4078, align 8
  %4080 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4079, i64 5
  %4081 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4080, align 8
  call void %4081(%class.SkBlitter* %4077, i32 %4070, i32 %4000, i32 1, i8 zeroext %4073) #12
  br label %4130

; <label>:4082:                                   ; preds = %4066
  %4083 = and i32 %4069, 255
  %4084 = and i32 %4025, 255
  %4085 = mul nuw nsw i32 %4083, %4084
  %4086 = lshr i32 %4085, 8
  %4087 = trunc i32 %4086 to i8
  %4088 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %4089 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4088, i64 17
  %4090 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4089, align 8
  call void %4090(%class.AdditiveBlitter* nonnull %2975, i32 %4070, i32 %4000, i8 zeroext %4087) #12
  br label %4130

; <label>:4091:                                   ; preds = %4062
  %4092 = sub i32 -65536, %4051
  %4093 = add i32 %4057, %4092
  %4094 = sub i32 %4052, %4051
  %4095 = sub i32 %4094, %4093
  %4096 = ashr i32 %4093, 11
  %4097 = ashr i32 %4020, 11
  %4098 = mul i32 %4096, %4097
  %4099 = mul i32 %4098, %4096
  %4100 = lshr i32 %4099, 8
  %4101 = ashr i32 %4095, 11
  %4102 = mul i32 %4101, %4097
  %4103 = mul i32 %4102, %4101
  %4104 = lshr i32 %4103, 8
  %4105 = trunc i32 %4104 to i8
  %4106 = sub i8 %4026, %4105
  %4107 = ashr i32 %4051, 16
  %4108 = icmp eq i8 %4026, -1
  br i1 %4108, label %4109, label %4120

; <label>:4109:                                   ; preds = %4091
  %4110 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %4111 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4110, i64 15
  %4112 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4111, align 8
  %4113 = call %class.SkBlitter* %4112(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4114 = and i32 %4100, 255
  %4115 = zext i8 %4106 to i32
  %4116 = bitcast %class.SkBlitter* %4113 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4117 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4116, align 8
  %4118 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4117, i64 10
  %4119 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4118, align 8
  call void %4119(%class.SkBlitter* %4113, i32 %4107, i32 %4000, i32 %4114, i32 %4115) #12
  br label %4130

; <label>:4120:                                   ; preds = %4091
  %4121 = trunc i32 %4100 to i8
  %4122 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %4123 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4122, i64 17
  %4124 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4123, align 8
  call void %4124(%class.AdditiveBlitter* nonnull %2975, i32 %4107, i32 %4000, i8 zeroext %4121) #12
  %4125 = add nsw i32 %4107, 1
  %4126 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %4127 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4126, i64 17
  %4128 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4127, align 8
  call void %4128(%class.AdditiveBlitter* nonnull %2975, i32 %4125, i32 %4000, i8 zeroext %4106) #12
  br label %4130

; <label>:4129:                                   ; preds = %4062
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4000, i32 %4051, i32 %4057, i32 %4052, i32 %4057, i32 %4020, i32 2147483647, i8 zeroext %4026, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %4130

; <label>:4130:                                   ; preds = %4129, %4120, %4109, %4082, %4072, %4060
  %4131 = icmp sgt i32 %4058, %4057
  br i1 %4131, label %4132, label %4150

; <label>:4132:                                   ; preds = %4130
  %4133 = ashr i32 %4056, 16
  %4134 = sub nsw i32 %4058, %4057
  %4135 = ashr exact i32 %4134, 16
  %4136 = icmp eq i8 %4026, -1
  br i1 %4136, label %4137, label %4146

; <label>:4137:                                   ; preds = %4132
  %4138 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %4139 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4138, i64 15
  %4140 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4139, align 8
  %4141 = call %class.SkBlitter* %4140(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4142 = bitcast %class.SkBlitter* %4141 to void (%class.SkBlitter*, i32, i32, i32)***
  %4143 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %4142, align 8
  %4144 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4143, i64 3
  %4145 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4144, align 8
  call void %4145(%class.SkBlitter* %4141, i32 %4133, i32 %4000, i32 %4135) #12
  br label %4150

; <label>:4146:                                   ; preds = %4132
  %4147 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %3175, align 8
  %4148 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4147, i64 18
  %4149 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4148, align 8
  call void %4149(%class.AdditiveBlitter* nonnull %2975, i32 %4133, i32 %4000, i32 %4135, i8 zeroext %4026) #12
  br label %4150

; <label>:4150:                                   ; preds = %4146, %4137, %4130
  %4151 = icmp sgt i32 %4055, %4058
  br i1 %4151, label %4152, label %4221

; <label>:4152:                                   ; preds = %4150
  %4153 = sub nsw i32 %4055, %4058
  %4154 = add nsw i32 %4153, 65535
  %4155 = ashr i32 %4154, 16
  switch i32 %4155, label %4219 [
    i32 1, label %4156
    i32 2, label %4181
  ]

; <label>:4156:                                   ; preds = %4152
  %4157 = sub i32 %4054, %4058
  %4158 = add nsw i32 %4157, %4153
  %4159 = lshr i32 %4158, 9
  %4160 = ashr i32 %4054, 16
  %4161 = icmp eq i8 %4026, -1
  br i1 %4161, label %4162, label %4172

; <label>:4162:                                   ; preds = %4156
  %4163 = trunc i32 %4159 to i8
  %4164 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %4165 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4164, i64 15
  %4166 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4165, align 8
  %4167 = call %class.SkBlitter* %4166(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4168 = bitcast %class.SkBlitter* %4167 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4169 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4168, align 8
  %4170 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4169, i64 5
  %4171 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4170, align 8
  call void %4171(%class.SkBlitter* %4167, i32 %4160, i32 %4000, i32 1, i8 zeroext %4163) #12
  br label %4221

; <label>:4172:                                   ; preds = %4156
  %4173 = and i32 %4159, 255
  %4174 = and i32 %4025, 255
  %4175 = mul nuw nsw i32 %4173, %4174
  %4176 = lshr i32 %4175, 8
  %4177 = trunc i32 %4176 to i8
  %4178 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %4179 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4178, i64 17
  %4180 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4179, align 8
  call void %4180(%class.AdditiveBlitter* nonnull %2975, i32 %4160, i32 %4000, i8 zeroext %4177) #12
  br label %4221

; <label>:4181:                                   ; preds = %4152
  %4182 = sub i32 65536, %4054
  %4183 = add i32 %4182, %4058
  %4184 = sub i32 %4055, %4054
  %4185 = sub i32 %4184, %4183
  %4186 = ashr i32 %4183, 11
  %4187 = ashr i32 %4022, 11
  %4188 = mul i32 %4186, %4187
  %4189 = mul i32 %4188, %4186
  %4190 = lshr i32 %4189, 8
  %4191 = trunc i32 %4190 to i8
  %4192 = sub i8 %4026, %4191
  %4193 = ashr i32 %4185, 11
  %4194 = mul i32 %4193, %4187
  %4195 = mul i32 %4194, %4193
  %4196 = lshr i32 %4195, 8
  %4197 = ashr i32 %4054, 16
  %4198 = icmp eq i8 %4026, -1
  br i1 %4198, label %4199, label %4210

; <label>:4199:                                   ; preds = %4181
  %4200 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %3177, align 8
  %4201 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4200, i64 15
  %4202 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4201, align 8
  %4203 = call %class.SkBlitter* %4202(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4204 = zext i8 %4192 to i32
  %4205 = and i32 %4196, 255
  %4206 = bitcast %class.SkBlitter* %4203 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4207 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4206, align 8
  %4208 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4207, i64 10
  %4209 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4208, align 8
  call void %4209(%class.SkBlitter* %4203, i32 %4197, i32 %4000, i32 %4204, i32 %4205) #12
  br label %4221

; <label>:4210:                                   ; preds = %4181
  %4211 = trunc i32 %4196 to i8
  %4212 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %4213 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4212, i64 17
  %4214 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4213, align 8
  call void %4214(%class.AdditiveBlitter* nonnull %2975, i32 %4197, i32 %4000, i8 zeroext %4192) #12
  %4215 = add nsw i32 %4197, 1
  %4216 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %3178, align 8
  %4217 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4216, i64 17
  %4218 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4217, align 8
  call void %4218(%class.AdditiveBlitter* nonnull %2975, i32 %4215, i32 %4000, i8 zeroext %4211) #12
  br label %4221

; <label>:4219:                                   ; preds = %4152
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4000, i32 %4058, i32 %4054, i32 %4058, i32 %4055, i32 2147483647, i32 %4022, i8 zeroext %4026, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %4221

; <label>:4220:                                   ; preds = %4049
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4000, i32 %4051, i32 %4054, i32 %4052, i32 %4055, i32 %4020, i32 %4022, i8 zeroext %4026, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %4221

; <label>:4221:                                   ; preds = %4220, %4219, %4210, %4199, %4172, %4162, %4150, %4043, %3994
  %4222 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %3176, align 8
  %4223 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %4222, i64 20
  %4224 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %4223, align 8
  call void %4224(%class.AdditiveBlitter* nonnull %2975, i32 %3999, i32 %3375) #12
  %4225 = add nsw i32 %4009, -2048
  %4226 = add nsw i32 %4016, -2048
  br label %4227

; <label>:4227:                                   ; preds = %4221, %3566, %3564, %3515, %3505, %3487
  %4228 = phi i32 [ %4226, %4221 ], [ %3385, %3505 ], [ %3385, %3487 ], [ %3385, %3564 ], [ %3385, %3566 ], [ %3385, %3515 ]
  %4229 = phi i32 [ %4225, %4221 ], [ %3379, %3505 ], [ %3379, %3487 ], [ %3379, %3564 ], [ %3379, %3566 ], [ %3379, %3515 ]
  store i32 %4229, i32* %3376, align 8
  store i32 %4228, i32* %3382, align 8
  %4230 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3330, i64 0, i32 6
  store i32 %3375, i32* %4230, align 4
  %4231 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %3327, i64 0, i32 6
  store i32 %3375, i32* %4231, align 4
  br label %3181

; <label>:4232:                                   ; preds = %3155, %3142
  %4233 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3124, align 8
  %4234 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4233, i64 0, i32 8
  %4235 = load i32, i32* %4234, align 4
  %4236 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3114, align 8
  %4237 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4236, i64 0, i32 7
  %4238 = load i32, i32* %4237, align 8
  %4239 = sub nsw i32 %4235, %4238
  %4240 = ashr i32 %4239, 16
  %4241 = shl nsw i32 %4240, 2
  %4242 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* nonnull %0) #12
  %4243 = sub nsw i32 %3144, %3143
  %4244 = load i8, i8* %74, align 2
  store i32 %3145, i32* %3121, align 8
  store i32 %3145, i32* %3118, align 8
  store i32 %3146, i32* %3132, align 8
  store i32 %3146, i32* %3129, align 8
  %4245 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3114, align 8
  %4246 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4245, i64 0, i32 7
  %4247 = shl i32 %3143, 16
  %4248 = load i32, i32* %4246, align 4
  %4249 = icmp slt i32 %4247, %4248
  %4250 = select i1 %4249, i32 %4248, i32 %4247
  br label %4251

; <label>:4251:                                   ; preds = %4281, %4232
  %4252 = phi i32 [ %4291, %4281 ], [ %4248, %4232 ]
  %4253 = phi %struct.SkAnalyticEdge* [ %4289, %4281 ], [ %4245, %4232 ]
  %4254 = phi i32 [ %4287, %4281 ], [ 2147483647, %4232 ]
  %4255 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 6
  %4256 = load i32, i32* %4255, align 4
  %4257 = add nsw i32 %4256, 65536
  %4258 = icmp eq i32 %4257, %4250
  br i1 %4258, label %4259, label %4265

; <label>:4259:                                   ; preds = %4251
  %4260 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 3
  %4261 = load i32, i32* %4260, align 8
  %4262 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 4
  %4263 = load i32, i32* %4262, align 4
  %4264 = add nsw i32 %4263, %4261
  store i32 %4264, i32* %4260, align 8
  br label %4280

; <label>:4265:                                   ; preds = %4251
  %4266 = icmp eq i32 %4256, %4250
  br i1 %4266, label %4281, label %4267

; <label>:4267:                                   ; preds = %4265
  %4268 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 5
  %4269 = load i32, i32* %4268, align 8
  %4270 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 4
  %4271 = load i32, i32* %4270, align 4
  %4272 = sub nsw i32 %4250, %4252
  %4273 = sext i32 %4271 to i64
  %4274 = sext i32 %4272 to i64
  %4275 = mul nsw i64 %4273, %4274
  %4276 = lshr i64 %4275, 16
  %4277 = trunc i64 %4276 to i32
  %4278 = add nsw i32 %4269, %4277
  %4279 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 3
  store i32 %4278, i32* %4279, align 8
  br label %4280

; <label>:4280:                                   ; preds = %4259, %4267
  store i32 %4250, i32* %4255, align 4
  br label %4281

; <label>:4281:                                   ; preds = %4280, %4265
  %4282 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 8
  %4283 = load i32, i32* %4282, align 4
  %4284 = icmp sgt i32 %4283, %4250
  %4285 = icmp sgt i32 %4254, %4283
  %4286 = and i1 %4284, %4285
  %4287 = select i1 %4286, i32 %4283, i32 %4254
  %4288 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4253, i64 0, i32 0
  %4289 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4288, align 8
  %4290 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4289, i64 0, i32 7
  %4291 = load i32, i32* %4290, align 8
  %4292 = icmp slt i32 %4250, %4291
  br i1 %4292, label %4293, label %4251

; <label>:4293:                                   ; preds = %4281
  %4294 = add nsw i32 %4241, 4
  %4295 = shl nsw i32 %4243, 1
  %4296 = and i8 %4244, 3
  %4297 = icmp sgt i32 %2986, %4294
  %4298 = icmp sgt i32 %4242, %4295
  %4299 = zext i8 %4296 to i32
  %4300 = icmp sgt i32 %4287, %4291
  %4301 = select i1 %4300, i32 %4291, i32 %4287
  %4302 = and i32 %4299, 1
  %4303 = icmp eq i32 %4302, 0
  %4304 = select i1 %4303, i32 -1, i32 1
  %4305 = and i32 %4299, 2
  %4306 = icmp ne i32 %4305, 0
  %4307 = xor i1 %4306, true
  %4308 = icmp sge i32 %4247, %4248
  %4309 = or i1 %4308, %4307
  br i1 %4309, label %4310, label %4312

; <label>:4310:                                   ; preds = %4293
  %4311 = ashr exact i32 %3145, 16
  br label %4357

; <label>:4312:                                   ; preds = %4293
  %4313 = sub nsw i32 %3146, %3145
  %4314 = ashr exact i32 %4313, 16
  %4315 = ashr i32 %4250, 16
  %4316 = icmp eq i32 %4315, %3143
  br i1 %4316, label %4317, label %4319

; <label>:4317:                                   ; preds = %4312
  %4318 = ashr exact i32 %3145, 16
  br label %4332

; <label>:4319:                                   ; preds = %4312
  %4320 = bitcast %class.RunBasedAdditiveBlitter* %18 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %4321 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4320, align 8
  %4322 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4321, i64 15
  %4323 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4322, align 8
  %4324 = call %class.SkBlitter* %4323(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4325 = ashr exact i32 %3145, 16
  %4326 = sub nsw i32 %4315, %3143
  %4327 = bitcast %class.SkBlitter* %4324 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4328 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4327, align 8
  %4329 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4328, i64 6
  %4330 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4329, align 8
  call void %4330(%class.SkBlitter* %4324, i32 %4325, i32 %3143, i32 %4314, i32 %4326) #12
  %4331 = and i32 %4250, -65536
  br label %4332

; <label>:4332:                                   ; preds = %4317, %4319
  %4333 = phi i32 [ %4318, %4317 ], [ %4325, %4319 ]
  %4334 = phi i32 [ %4247, %4317 ], [ %4331, %4319 ]
  %4335 = phi i32 [ %3143, %4317 ], [ %4315, %4319 ]
  %4336 = sub nsw i32 %4250, %4334
  %4337 = mul nsw i32 %4336, 255
  %4338 = add nsw i32 %4337, 32768
  %4339 = lshr i32 %4338, 16
  %4340 = trunc i32 %4339 to i8
  %4341 = icmp eq i8 %4340, -1
  br i1 %4341, label %4342, label %4352

; <label>:4342:                                   ; preds = %4332
  %4343 = bitcast %class.RunBasedAdditiveBlitter* %18 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %4344 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4343, align 8
  %4345 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4344, i64 15
  %4346 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4345, align 8
  %4347 = call %class.SkBlitter* %4346(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4348 = bitcast %class.SkBlitter* %4347 to void (%class.SkBlitter*, i32, i32, i32)***
  %4349 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %4348, align 8
  %4350 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4349, i64 3
  %4351 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4350, align 8
  call void %4351(%class.SkBlitter* %4347, i32 %4333, i32 %4335, i32 %4314) #12
  br label %4357

; <label>:4352:                                   ; preds = %4332
  %4353 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %4354 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %4353, align 8
  %4355 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4354, i64 18
  %4356 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4355, align 8
  call void %4356(%class.AdditiveBlitter* nonnull %2975, i32 %4333, i32 %4335, i32 %4314, i8 zeroext %4340) #12
  br label %4357

; <label>:4357:                                   ; preds = %4352, %4342, %4310
  %4358 = phi i32 [ %4311, %4310 ], [ %4333, %4352 ], [ %4333, %4342 ]
  %4359 = xor i1 %4297, true
  %4360 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %4361 = bitcast %class.RunBasedAdditiveBlitter* %18 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %4362 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %4363 = bitcast %class.RunBasedAdditiveBlitter* %18 to void (%class.RunBasedAdditiveBlitter*, i32, i32)***
  %4364 = shl i32 %3144, 16
  %4365 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 10
  %4366 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 11
  %4367 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 12
  %4368 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %8, i64 0, i32 6
  br label %4369

; <label>:4369:                                   ; preds = %5270, %4357
  %4370 = phi i32 [ %4301, %4357 ], [ %5271, %5270 ]
  %4371 = phi i32 [ %4250, %4357 ], [ %4386, %5270 ]
  %4372 = add nsw i32 %4371, 65536
  %4373 = and i32 %4372, -65536
  %4374 = icmp slt i32 %4370, %4373
  %4375 = select i1 %4374, i32 %4370, i32 %4373
  %4376 = and i32 %4375, 65535
  %4377 = icmp eq i32 %4376, 0
  %4378 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %3114, align 8
  %4379 = sub nsw i32 %4375, %4371
  %4380 = and i32 %4379, 16384
  %4381 = icmp eq i32 %4380, 0
  %4382 = add nsw i32 %4371, 16384
  %4383 = lshr i32 %4379, 15
  %4384 = and i32 %4383, 1
  %4385 = select i1 %4381, i32 %4384, i32 2
  %4386 = select i1 %4381, i32 %4375, i32 %4382
  %4387 = sub nsw i32 %4386, %4371
  %4388 = mul nsw i32 %4387, 255
  %4389 = add nsw i32 %4388, 32768
  %4390 = lshr i32 %4389, 16
  %4391 = trunc i32 %4390 to i8
  %4392 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4378, i64 0, i32 7
  %4393 = load i32, i32* %4392, align 8
  %4394 = icmp sgt i32 %4393, %4371
  br i1 %4394, label %4882, label %4395

; <label>:4395:                                   ; preds = %4369
  %4396 = load i32, i32* %3118, align 8
  %4397 = ashr i32 %4371, 16
  %4398 = icmp ne i8 %4391, -1
  %4399 = add nsw i32 %4386, 16384
  %4400 = and i32 %4390, 255
  %4401 = or i1 %4398, %4
  br label %4402

; <label>:4402:                                   ; preds = %4874, %4395
  %4403 = phi %struct.SkAnalyticEdge* [ %4378, %4395 ], [ %4763, %4874 ]
  %4404 = phi i32 [ 0, %4395 ], [ %4417, %4874 ]
  %4405 = phi i1 [ %4306, %4395 ], [ %4421, %4874 ]
  %4406 = phi i32 [ %4396, %4395 ], [ %4876, %4874 ]
  %4407 = phi %struct.SkAnalyticEdge* [ %7, %4395 ], [ %4761, %4874 ]
  %4408 = phi i32 [ %3145, %4395 ], [ %4760, %4874 ]
  %4409 = phi i32 [ 0, %4395 ], [ %4759, %4874 ]
  %4410 = phi i8 [ 0, %4395 ], [ %4758, %4874 ]
  %4411 = phi i32 [ %4358, %4395 ], [ %4757, %4874 ]
  %4412 = phi i32 [ 2147483647, %4395 ], [ %4875, %4874 ]
  %4413 = bitcast %struct.SkAnalyticEdge* %4403 to %struct.SkAnalyticQuadraticEdge*
  %4414 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 16
  %4415 = load i8, i8* %4414, align 1
  %4416 = sext i8 %4415 to i32
  %4417 = add nsw i32 %4404, %4416
  %4418 = and i32 %4417, %4304
  %4419 = icmp eq i32 %4418, 0
  %4420 = xor i1 %4306, %4419
  %4421 = xor i1 %4420, true
  %4422 = or i1 %4405, %4420
  %4423 = and i1 %4405, %4420
  %4424 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 8
  %4425 = load i32, i32* %4424, align 4
  %4426 = icmp eq i32 %4425, %4386
  br i1 %4297, label %4427, label %4446

; <label>:4427:                                   ; preds = %4402
  %4428 = xor i1 %4422, true
  %4429 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 2
  %4430 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4429, align 8
  %4431 = icmp eq %struct.SkAnalyticEdge* %4430, null
  %4432 = or i1 %4431, %4428
  br i1 %4432, label %4438, label %4433

; <label>:4433:                                   ; preds = %4427
  %4434 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  %4435 = load i32, i32* %4434, align 8
  %4436 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4430, i64 0, i32 3
  %4437 = load i32, i32* %4436, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4403, i32 %4371, i32 %4435, i32 %4437, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  br label %4438

; <label>:4438:                                   ; preds = %4433, %4427
  %4439 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 2
  %4440 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4439, align 8
  %4441 = icmp ne %struct.SkAnalyticEdge* %4440, %4403
  %4442 = or i1 %4423, %4441
  br i1 %4442, label %4446, label %4443

; <label>:4443:                                   ; preds = %4438
  %4444 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  %4445 = load i32, i32* %4444, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4407, i32 %4371, i32 %4408, i32 %4445, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  br label %4446

; <label>:4446:                                   ; preds = %4443, %4438, %4402
  br i1 %4423, label %4447, label %4732

; <label>:4447:                                   ; preds = %4446
  br i1 %4297, label %4448, label %4489

; <label>:4448:                                   ; preds = %4447
  %4449 = and i8 %4410, 1
  %4450 = icmp ne i8 %4449, 0
  %4451 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 2
  %4452 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4451, align 8
  %4453 = icmp eq %struct.SkAnalyticEdge* %4452, null
  %4454 = icmp eq %struct.SkAnalyticEdge* %4452, %4403
  %4455 = or i1 %4453, %4454
  br i1 %4455, label %4460, label %4456

; <label>:4456:                                   ; preds = %4448
  %4457 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4452, i64 0, i32 3
  %4458 = load i32, i32* %4457, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4407, i32 %4371, i32 %4408, i32 %4458, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  %4459 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4451, align 8
  br label %4460

; <label>:4460:                                   ; preds = %4456, %4448
  %4461 = phi %struct.SkAnalyticEdge* [ %4452, %4448 ], [ %4459, %4456 ]
  %4462 = icmp eq %struct.SkAnalyticEdge* %4461, null
  br i1 %4462, label %4465, label %4463

; <label>:4463:                                   ; preds = %4460
  %4464 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  br label %4476

; <label>:4465:                                   ; preds = %4460
  %4466 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 10
  store i32 %4408, i32* %4466, align 4
  %4467 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 11
  store i32 %4371, i32* %4467, align 8
  %4468 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 12
  store i32 %4409, i32* %4468, align 4
  %4469 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  %4470 = load i32, i32* %4469, align 8
  %4471 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 9
  %4472 = load i32, i32* %4471, align 8
  %4473 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 10
  store i32 %4470, i32* %4473, align 4
  %4474 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 11
  store i32 %4371, i32* %4474, align 8
  %4475 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 12
  store i32 %4472, i32* %4475, align 4
  store %struct.SkAnalyticEdge* %4403, %struct.SkAnalyticEdge** %4451, align 8
  br label %4476

; <label>:4476:                                   ; preds = %4465, %4463
  %4477 = phi i32* [ %4464, %4463 ], [ %4469, %4465 ]
  %4478 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 6
  store i32 %4386, i32* %4478, align 4
  %4479 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 4
  %4480 = load i32, i32* %4479, align 4
  %4481 = ashr i32 %4480, %4385
  %4482 = load i32, i32* %4477, align 8
  %4483 = add nsw i32 %4482, %4481
  store i32 %4483, i32* %4477, align 8
  %4484 = or i1 %4377, %4450
  %4485 = or i1 %4484, %4426
  br i1 %4485, label %4486, label %4756

; <label>:4486:                                   ; preds = %4476
  %4487 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 3
  %4488 = load i32, i32* %4487, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4407, i32 %4386, i32 %4488, i32 %4483, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  br label %4756

; <label>:4489:                                   ; preds = %4447
  %4490 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  %4491 = load i32, i32* %4490, align 8
  %4492 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 6
  store i32 %4386, i32* %4492, align 4
  %4493 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 4
  %4494 = load i32, i32* %4493, align 4
  %4495 = ashr i32 %4494, %4385
  %4496 = add nsw i32 %4495, %4491
  store i32 %4496, i32* %4490, align 8
  %4497 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4407, i64 0, i32 3
  %4498 = load i32, i32* %4497, align 4
  %4499 = icmp slt i32 %4498, %3145
  %4500 = select i1 %4499, i32 %3145, i32 %4498
  %4501 = icmp sgt i32 %4491, %3146
  %4502 = select i1 %4501, i32 %3146, i32 %4491
  %4503 = icmp sgt i32 %4496, %3146
  %4504 = select i1 %4503, i32 %3146, i32 %4496
  %4505 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 9
  %4506 = load i32, i32* %4505, align 8
  br i1 %4401, label %4532, label %4507

; <label>:4507:                                   ; preds = %4489
  %4508 = ashr i32 %4408, 16
  %4509 = icmp slt i32 %4508, %4411
  %4510 = ashr i32 %4498, 16
  %4511 = icmp slt i32 %4510, %4411
  %4512 = or i1 %4509, %4511
  br i1 %4512, label %4532, label %4513

; <label>:4513:                                   ; preds = %4507
  %4514 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 0
  %4515 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4514, align 8
  %4516 = icmp eq %struct.SkAnalyticEdge* %4515, null
  br i1 %4516, label %4532, label %4517

; <label>:4517:                                   ; preds = %4513
  %4518 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4515, i64 0, i32 7
  %4519 = load i32, i32* %4518, align 8
  %4520 = icmp slt i32 %4519, %4386
  br i1 %4520, label %4521, label %4532

; <label>:4521:                                   ; preds = %4517
  %4522 = add nsw i32 %4496, 65536
  %4523 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4515, i64 0, i32 3
  %4524 = load i32, i32* %4523, align 8
  %4525 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4515, i64 0, i32 4
  %4526 = load i32, i32* %4525, align 4
  %4527 = icmp slt i32 %4526, 0
  %4528 = sub nsw i32 0, %4526
  %4529 = select i1 %4527, i32 %4528, i32 %4526
  %4530 = sub nsw i32 %4524, %4529
  %4531 = icmp sge i32 %4522, %4530
  br label %4532

; <label>:4532:                                   ; preds = %4521, %4517, %4513, %4507, %4489
  %4533 = phi i1 [ %4, %4489 ], [ true, %4507 ], [ false, %4517 ], [ false, %4513 ], [ %4531, %4521 ]
  %4534 = icmp sgt i32 %4408, %4502
  br i1 %4534, label %4726, label %4535

; <label>:4535:                                   ; preds = %4532
  %4536 = icmp sgt i32 %4500, %4504
  br i1 %4536, label %4537, label %4550

; <label>:4537:                                   ; preds = %4535
  %4538 = icmp sgt i32 %4408, %4500
  %4539 = select i1 %4538, i32 %4500, i32 %4408
  %4540 = select i1 %4538, i32 %4408, i32 %4500
  %4541 = icmp sgt i32 %4502, %4504
  %4542 = select i1 %4541, i32 %4504, i32 %4502
  %4543 = select i1 %4541, i32 %4502, i32 %4504
  %4544 = icmp slt i32 %4542, %4539
  %4545 = select i1 %4544, i32 %4539, i32 %4542
  %4546 = icmp slt i32 %4540, %4543
  %4547 = select i1 %4546, i32 %4540, i32 %4543
  %4548 = add nsw i32 %4545, %4547
  %4549 = ashr i32 %4548, 1
  br label %4550

; <label>:4550:                                   ; preds = %4537, %4535
  %4551 = phi i32 [ %4549, %4537 ], [ %4500, %4535 ]
  %4552 = phi i32 [ %4549, %4537 ], [ %4504, %4535 ]
  %4553 = icmp eq i32 %4408, %4502
  %4554 = icmp eq i32 %4551, %4552
  %4555 = and i1 %4553, %4554
  br i1 %4555, label %4726, label %4556

; <label>:4556:                                   ; preds = %4550
  %4557 = icmp slt i32 %4551, %4408
  %4558 = select i1 %4557, i32 %4551, i32 %4408
  %4559 = select i1 %4557, i32 %4408, i32 %4551
  %4560 = icmp slt i32 %4552, %4502
  %4561 = select i1 %4560, i32 %4552, i32 %4502
  %4562 = select i1 %4560, i32 %4502, i32 %4552
  %4563 = add nsw i32 %4559, 65535
  %4564 = and i32 %4563, -65536
  %4565 = and i32 %4561, -65536
  %4566 = icmp slt i32 %4565, %4564
  br i1 %4566, label %4725, label %4567

; <label>:4567:                                   ; preds = %4556
  %4568 = icmp sgt i32 %4564, %4558
  br i1 %4568, label %4569, label %4636

; <label>:4569:                                   ; preds = %4567
  %4570 = sub nsw i32 %4564, %4558
  %4571 = add nsw i32 %4570, 65535
  %4572 = ashr i32 %4571, 16
  switch i32 %4572, label %4635 [
    i32 1, label %4573
    i32 2, label %4597
  ]

; <label>:4573:                                   ; preds = %4569
  %4574 = sub i32 %4564, %4559
  %4575 = add nsw i32 %4574, %4570
  %4576 = lshr i32 %4575, 9
  %4577 = ashr i32 %4558, 16
  %4578 = or i1 %4398, %4533
  br i1 %4578, label %4589, label %4579

; <label>:4579:                                   ; preds = %4573
  %4580 = trunc i32 %4576 to i8
  %4581 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %4582 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4581, i64 15
  %4583 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4582, align 8
  %4584 = call %class.SkBlitter* %4583(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4585 = bitcast %class.SkBlitter* %4584 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4586 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4585, align 8
  %4587 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4586, i64 5
  %4588 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4587, align 8
  call void %4588(%class.SkBlitter* %4584, i32 %4577, i32 %4397, i32 1, i8 zeroext %4580) #12
  br label %4636

; <label>:4589:                                   ; preds = %4573
  %4590 = and i32 %4576, 255
  %4591 = mul nuw nsw i32 %4590, %4400
  %4592 = lshr i32 %4591, 8
  %4593 = trunc i32 %4592 to i8
  %4594 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %4595 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4594, i64 17
  %4596 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4595, align 8
  call void %4596(%class.AdditiveBlitter* nonnull %2975, i32 %4577, i32 %4397, i8 zeroext %4593) #12
  br label %4636

; <label>:4597:                                   ; preds = %4569
  %4598 = sub i32 -65536, %4558
  %4599 = add i32 %4564, %4598
  %4600 = sub i32 %4559, %4558
  %4601 = sub i32 %4600, %4599
  %4602 = ashr i32 %4599, 11
  %4603 = ashr i32 %4409, 11
  %4604 = mul i32 %4602, %4603
  %4605 = mul i32 %4604, %4602
  %4606 = lshr i32 %4605, 8
  %4607 = ashr i32 %4601, 11
  %4608 = mul i32 %4607, %4603
  %4609 = mul i32 %4608, %4607
  %4610 = lshr i32 %4609, 8
  %4611 = trunc i32 %4610 to i8
  %4612 = sub i8 %4391, %4611
  %4613 = ashr i32 %4558, 16
  %4614 = or i1 %4398, %4533
  br i1 %4614, label %4626, label %4615

; <label>:4615:                                   ; preds = %4597
  %4616 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %4617 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4616, i64 15
  %4618 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4617, align 8
  %4619 = call %class.SkBlitter* %4618(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4620 = and i32 %4606, 255
  %4621 = zext i8 %4612 to i32
  %4622 = bitcast %class.SkBlitter* %4619 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4623 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4622, align 8
  %4624 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4623, i64 10
  %4625 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4624, align 8
  call void %4625(%class.SkBlitter* %4619, i32 %4613, i32 %4397, i32 %4620, i32 %4621) #12
  br label %4636

; <label>:4626:                                   ; preds = %4597
  %4627 = trunc i32 %4606 to i8
  %4628 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %4629 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4628, i64 17
  %4630 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4629, align 8
  call void %4630(%class.AdditiveBlitter* nonnull %2975, i32 %4613, i32 %4397, i8 zeroext %4627) #12
  %4631 = add nsw i32 %4613, 1
  %4632 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %4633 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4632, i64 17
  %4634 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4633, align 8
  call void %4634(%class.AdditiveBlitter* nonnull %2975, i32 %4631, i32 %4397, i8 zeroext %4612) #12
  br label %4636

; <label>:4635:                                   ; preds = %4569
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4397, i32 %4558, i32 %4564, i32 %4559, i32 %4564, i32 %4409, i32 2147483647, i8 zeroext %4391, i8* null, i1 zeroext false, i1 zeroext %4533, i1 zeroext true) #12
  br label %4636

; <label>:4636:                                   ; preds = %4635, %4626, %4615, %4589, %4579, %4567
  %4637 = icmp sgt i32 %4565, %4564
  br i1 %4637, label %4638, label %4656

; <label>:4638:                                   ; preds = %4636
  %4639 = ashr i32 %4563, 16
  %4640 = sub nsw i32 %4565, %4564
  %4641 = ashr exact i32 %4640, 16
  %4642 = or i1 %4398, %4533
  br i1 %4642, label %4652, label %4643

; <label>:4643:                                   ; preds = %4638
  %4644 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %4645 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4644, i64 15
  %4646 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4645, align 8
  %4647 = call %class.SkBlitter* %4646(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4648 = bitcast %class.SkBlitter* %4647 to void (%class.SkBlitter*, i32, i32, i32)***
  %4649 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %4648, align 8
  %4650 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4649, i64 3
  %4651 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %4650, align 8
  call void %4651(%class.SkBlitter* %4647, i32 %4639, i32 %4397, i32 %4641) #12
  br label %4656

; <label>:4652:                                   ; preds = %4638
  %4653 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %4362, align 8
  %4654 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4653, i64 18
  %4655 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %4654, align 8
  call void %4655(%class.AdditiveBlitter* nonnull %2975, i32 %4639, i32 %4397, i32 %4641, i8 zeroext %4391) #12
  br label %4656

; <label>:4656:                                   ; preds = %4652, %4643, %4636
  %4657 = icmp sgt i32 %4562, %4565
  br i1 %4657, label %4658, label %4726

; <label>:4658:                                   ; preds = %4656
  %4659 = sub nsw i32 %4562, %4565
  %4660 = add nsw i32 %4659, 65535
  %4661 = ashr i32 %4660, 16
  switch i32 %4661, label %4724 [
    i32 1, label %4662
    i32 2, label %4686
  ]

; <label>:4662:                                   ; preds = %4658
  %4663 = sub i32 %4561, %4565
  %4664 = add nsw i32 %4663, %4659
  %4665 = lshr i32 %4664, 9
  %4666 = ashr i32 %4561, 16
  %4667 = or i1 %4398, %4533
  br i1 %4667, label %4678, label %4668

; <label>:4668:                                   ; preds = %4662
  %4669 = trunc i32 %4665 to i8
  %4670 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %4671 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4670, i64 15
  %4672 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4671, align 8
  %4673 = call %class.SkBlitter* %4672(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4674 = bitcast %class.SkBlitter* %4673 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %4675 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %4674, align 8
  %4676 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4675, i64 5
  %4677 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %4676, align 8
  call void %4677(%class.SkBlitter* %4673, i32 %4666, i32 %4397, i32 1, i8 zeroext %4669) #12
  br label %4726

; <label>:4678:                                   ; preds = %4662
  %4679 = and i32 %4665, 255
  %4680 = mul nuw nsw i32 %4679, %4400
  %4681 = lshr i32 %4680, 8
  %4682 = trunc i32 %4681 to i8
  %4683 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %4684 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4683, i64 17
  %4685 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4684, align 8
  call void %4685(%class.AdditiveBlitter* nonnull %2975, i32 %4666, i32 %4397, i8 zeroext %4682) #12
  br label %4726

; <label>:4686:                                   ; preds = %4658
  %4687 = sub i32 65536, %4561
  %4688 = add i32 %4687, %4565
  %4689 = sub i32 %4562, %4561
  %4690 = sub i32 %4689, %4688
  %4691 = ashr i32 %4688, 11
  %4692 = ashr i32 %4506, 11
  %4693 = mul i32 %4691, %4692
  %4694 = mul i32 %4693, %4691
  %4695 = lshr i32 %4694, 8
  %4696 = trunc i32 %4695 to i8
  %4697 = sub i8 %4391, %4696
  %4698 = ashr i32 %4690, 11
  %4699 = mul i32 %4698, %4692
  %4700 = mul i32 %4699, %4698
  %4701 = lshr i32 %4700, 8
  %4702 = ashr i32 %4561, 16
  %4703 = or i1 %4398, %4533
  br i1 %4703, label %4715, label %4704

; <label>:4704:                                   ; preds = %4686
  %4705 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %4706 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4705, i64 15
  %4707 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4706, align 8
  %4708 = call %class.SkBlitter* %4707(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %4709 = zext i8 %4697 to i32
  %4710 = and i32 %4701, 255
  %4711 = bitcast %class.SkBlitter* %4708 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %4712 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %4711, align 8
  %4713 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4712, i64 10
  %4714 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %4713, align 8
  call void %4714(%class.SkBlitter* %4708, i32 %4702, i32 %4397, i32 %4709, i32 %4710) #12
  br label %4726

; <label>:4715:                                   ; preds = %4686
  %4716 = trunc i32 %4701 to i8
  %4717 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %4718 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4717, i64 17
  %4719 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4718, align 8
  call void %4719(%class.AdditiveBlitter* nonnull %2975, i32 %4702, i32 %4397, i8 zeroext %4697) #12
  %4720 = add nsw i32 %4702, 1
  %4721 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %4722 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4721, i64 17
  %4723 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %4722, align 8
  call void %4723(%class.AdditiveBlitter* nonnull %2975, i32 %4720, i32 %4397, i8 zeroext %4716) #12
  br label %4726

; <label>:4724:                                   ; preds = %4658
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4397, i32 %4565, i32 %4561, i32 %4565, i32 %4562, i32 2147483647, i32 %4506, i8 zeroext %4391, i8* null, i1 zeroext false, i1 zeroext %4533, i1 zeroext true) #12
  br label %4726

; <label>:4725:                                   ; preds = %4556
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4397, i32 %4558, i32 %4561, i32 %4559, i32 %4562, i32 %4409, i32 %4506, i8 zeroext %4391, i8* null, i1 zeroext false, i1 zeroext %4533, i1 zeroext true) #12
  br label %4726

; <label>:4726:                                   ; preds = %4725, %4724, %4715, %4704, %4678, %4668, %4656, %4550, %4532
  %4727 = load i32, i32* %4490, align 4
  %4728 = icmp slt i32 %4727, %4502
  %4729 = select i1 %4728, i32 %4502, i32 %4727
  %4730 = add nsw i32 %4729, 65535
  %4731 = ashr i32 %4730, 16
  br label %4756

; <label>:4732:                                   ; preds = %4446
  %4733 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  br i1 %4422, label %4734, label %4736

; <label>:4734:                                   ; preds = %4732
  %4735 = load i32, i32* %4733, align 8
  br label %4745

; <label>:4736:                                   ; preds = %4732
  %4737 = load i32, i32* %4733, align 4
  %4738 = icmp sgt i32 %4737, %3145
  %4739 = select i1 %4738, i32 %4737, i32 %3145
  %4740 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 9
  %4741 = load i32, i32* %4740, align 8
  %4742 = load i32, i32* %4424, align 4
  %4743 = icmp eq i32 %4742, %4386
  %4744 = zext i1 %4743 to i8
  br label %4745

; <label>:4745:                                   ; preds = %4736, %4734
  %4746 = phi i32 [ %4735, %4734 ], [ %4737, %4736 ]
  %4747 = phi i8 [ %4410, %4734 ], [ %4744, %4736 ]
  %4748 = phi i32 [ %4409, %4734 ], [ %4741, %4736 ]
  %4749 = phi i32 [ %4408, %4734 ], [ %4739, %4736 ]
  %4750 = phi %struct.SkAnalyticEdge* [ %4407, %4734 ], [ %4403, %4736 ]
  %4751 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 6
  store i32 %4386, i32* %4751, align 4
  %4752 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 4
  %4753 = load i32, i32* %4752, align 4
  %4754 = ashr i32 %4753, %4385
  %4755 = add nsw i32 %4754, %4746
  store i32 %4755, i32* %4733, align 8
  br label %4756

; <label>:4756:                                   ; preds = %4745, %4726, %4486, %4476
  %4757 = phi i32 [ %4731, %4726 ], [ %4411, %4745 ], [ %4411, %4476 ], [ %4411, %4486 ]
  %4758 = phi i8 [ %4410, %4726 ], [ %4747, %4745 ], [ %4410, %4476 ], [ %4410, %4486 ]
  %4759 = phi i32 [ %4409, %4726 ], [ %4748, %4745 ], [ %4409, %4476 ], [ %4409, %4486 ]
  %4760 = phi i32 [ %4408, %4726 ], [ %4749, %4745 ], [ %4408, %4476 ], [ %4408, %4486 ]
  %4761 = phi %struct.SkAnalyticEdge* [ %4407, %4726 ], [ %4750, %4745 ], [ %4407, %4476 ], [ %4407, %4486 ]
  %4762 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 0
  %4763 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4762, align 8
  %4764 = load i32, i32* %4424, align 4
  %4765 = icmp sgt i32 %4764, %4386
  br i1 %4765, label %4795, label %4766

; <label>:4766:                                   ; preds = %4756
  %4767 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 13
  %4768 = bitcast %struct.SkAnalyticEdge* %4403 to %struct.SkAnalyticCubicEdge*
  %4769 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  %4770 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 1, i32 7
  %4771 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 6
  %4772 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 2, i32 1
  %4773 = bitcast %struct.SkAnalyticEdge** %4772 to i32*
  %4774 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 2
  %4775 = bitcast %struct.SkAnalyticEdge* %4774 to i32*
  %4776 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %4413, i64 0, i32 3
  br label %4777

; <label>:4777:                                   ; preds = %4790, %4766
  %4778 = load i8, i8* %4767, align 8
  %4779 = icmp slt i8 %4778, 0
  br i1 %4779, label %4780, label %4784

; <label>:4780:                                   ; preds = %4777
  %4781 = load i32, i32* %4769, align 8
  store i32 %4781, i32* %4770, align 8
  %4782 = load i32, i32* %4771, align 4
  store i32 %4782, i32* %4773, align 8
  %4783 = call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* nonnull %4768, i1 zeroext true) #12
  br i1 %4783, label %4790, label %4793

; <label>:4784:                                   ; preds = %4777
  %4785 = icmp eq i8 %4778, 0
  br i1 %4785, label %4793, label %4786

; <label>:4786:                                   ; preds = %4784
  %4787 = load i32, i32* %4769, align 8
  store i32 %4787, i32* %4775, align 8
  %4788 = load i32, i32* %4771, align 4
  store i32 %4788, i32* %4776, align 4
  %4789 = call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* nonnull %4413) #12
  br i1 %4789, label %4790, label %4793

; <label>:4790:                                   ; preds = %4786, %4780
  %4791 = load i32, i32* %4424, align 4
  %4792 = icmp sgt i32 %4791, %4386
  br i1 %4792, label %4793, label %4777

; <label>:4793:                                   ; preds = %4790, %4786, %4784, %4780
  %4794 = load i32, i32* %4424, align 4
  br label %4795

; <label>:4795:                                   ; preds = %4793, %4756
  %4796 = phi i32 [ %4794, %4793 ], [ %4764, %4756 ]
  %4797 = icmp sgt i32 %4796, %4386
  br i1 %4797, label %4809, label %4798

; <label>:4798:                                   ; preds = %4795
  %4799 = bitcast %struct.SkAnalyticEdge* %4403 to i64*
  %4800 = load i64, i64* %4799, align 8
  %4801 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 1
  %4802 = bitcast %struct.SkAnalyticEdge** %4801 to i64**
  %4803 = load i64*, i64** %4802, align 8
  store i64 %4800, i64* %4803, align 8
  %4804 = bitcast %struct.SkAnalyticEdge** %4801 to i64*
  %4805 = load i64, i64* %4804, align 8
  %4806 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4762, align 8
  %4807 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4806, i64 0, i32 1
  %4808 = bitcast %struct.SkAnalyticEdge** %4807 to i64*
  store i64 %4805, i64* %4808, align 8
  br label %4874

; <label>:4809:                                   ; preds = %4795
  %4810 = icmp sgt i32 %4412, %4796
  %4811 = select i1 %4810, i32 %4796, i32 %4412
  %4812 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 3
  %4813 = load i32, i32* %4812, align 8
  %4814 = icmp slt i32 %4813, %4406
  br i1 %4814, label %4815, label %4854

; <label>:4815:                                   ; preds = %4809
  %4816 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4761, i64 0, i32 2
  %4817 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4816, align 8
  %4818 = icmp ne %struct.SkAnalyticEdge* %4817, %4403
  %4819 = or i1 %4818, %4359
  br i1 %4819, label %4824, label %4820

; <label>:4820:                                   ; preds = %4815
  %4821 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4761, i64 0, i32 3
  %4822 = load i32, i32* %4821, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4761, i32 %4386, i32 %4822, i32 %4813, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  %4823 = load i32, i32* %4812, align 8
  br label %4824

; <label>:4824:                                   ; preds = %4820, %4815
  %4825 = phi i32 [ %4813, %4815 ], [ %4823, %4820 ]
  %4826 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 1
  %4827 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4826, align 8
  %4828 = bitcast %struct.SkAnalyticEdge* %4827 to i64*
  br label %4829

; <label>:4829:                                   ; preds = %4834, %4824
  %4830 = phi %struct.SkAnalyticEdge* [ %4827, %4824 ], [ %4832, %4834 ]
  %4831 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4830, i64 0, i32 1
  %4832 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4831, align 8
  %4833 = icmp eq %struct.SkAnalyticEdge* %4832, null
  br i1 %4833, label %4838, label %4834

; <label>:4834:                                   ; preds = %4829
  %4835 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4830, i64 0, i32 3
  %4836 = load i32, i32* %4835, align 8
  %4837 = icmp sgt i32 %4836, %4825
  br i1 %4837, label %4829, label %4838

; <label>:4838:                                   ; preds = %4834, %4829
  %4839 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4830, i64 0, i32 0
  %4840 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4839, align 8
  %4841 = icmp eq %struct.SkAnalyticEdge* %4840, %4403
  br i1 %4841, label %4854, label %4842

; <label>:4842:                                   ; preds = %4838
  %4843 = bitcast %struct.SkAnalyticEdge* %4403 to i64*
  %4844 = load i64, i64* %4843, align 8
  store i64 %4844, i64* %4828, align 8
  %4845 = bitcast %struct.SkAnalyticEdge** %4826 to i64*
  %4846 = load i64, i64* %4845, align 8
  %4847 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4762, align 8
  %4848 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4847, i64 0, i32 1
  %4849 = bitcast %struct.SkAnalyticEdge** %4848 to i64*
  store i64 %4846, i64* %4849, align 8
  store %struct.SkAnalyticEdge* %4830, %struct.SkAnalyticEdge** %4826, align 8
  %4850 = bitcast %struct.SkAnalyticEdge* %4830 to i64*
  %4851 = load i64, i64* %4850, align 8
  store i64 %4851, i64* %4843, align 8
  %4852 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4839, align 8
  %4853 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4852, i64 0, i32 1
  store %struct.SkAnalyticEdge* %4403, %struct.SkAnalyticEdge** %4853, align 8
  store %struct.SkAnalyticEdge* %4403, %struct.SkAnalyticEdge** %4839, align 8
  br label %4854

; <label>:4854:                                   ; preds = %4842, %4838, %4809
  %4855 = phi i32 [ %4813, %4809 ], [ %4406, %4838 ], [ %4406, %4842 ]
  br i1 %4298, label %4874, label %4856

; <label>:4856:                                   ; preds = %4854
  %4857 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 1
  %4858 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4857, align 8
  %4859 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4858, i64 0, i32 1
  %4860 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4859, align 8
  %4861 = icmp eq %struct.SkAnalyticEdge* %4860, null
  br i1 %4861, label %4874, label %4862

; <label>:4862:                                   ; preds = %4856
  %4863 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4858, i64 0, i32 3
  %4864 = load i32, i32* %4863, align 8
  %4865 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4858, i64 0, i32 4
  %4866 = load i32, i32* %4865, align 4
  %4867 = add nsw i32 %4866, %4864
  %4868 = load i32, i32* %4812, align 8
  %4869 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4403, i64 0, i32 4
  %4870 = load i32, i32* %4869, align 4
  %4871 = add nsw i32 %4870, %4868
  %4872 = icmp sgt i32 %4867, %4871
  %4873 = select i1 %4872, i32 %4399, i32 %4811
  br label %4874

; <label>:4874:                                   ; preds = %4862, %4856, %4854, %4798
  %4875 = phi i32 [ %4811, %4854 ], [ %4412, %4798 ], [ %4811, %4856 ], [ %4873, %4862 ]
  %4876 = phi i32 [ %4855, %4854 ], [ %4406, %4798 ], [ %4855, %4856 ], [ %4855, %4862 ]
  %4877 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4763, i64 0, i32 7
  %4878 = load i32, i32* %4877, align 8
  %4879 = icmp sgt i32 %4878, %4371
  br i1 %4879, label %4880, label %4402

; <label>:4880:                                   ; preds = %4874
  %4881 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4763, i64 0, i32 7
  br label %4882

; <label>:4882:                                   ; preds = %4880, %4369
  %4883 = phi i32 [ 2147483647, %4369 ], [ %4875, %4880 ]
  %4884 = phi i8 [ 0, %4369 ], [ %4758, %4880 ]
  %4885 = phi i32 [ 0, %4369 ], [ %4759, %4880 ]
  %4886 = phi i32 [ %3145, %4369 ], [ %4760, %4880 ]
  %4887 = phi %struct.SkAnalyticEdge* [ %7, %4369 ], [ %4761, %4880 ]
  %4888 = phi %struct.SkAnalyticEdge* [ %4378, %4369 ], [ %4763, %4880 ]
  %4889 = phi i1 [ %4306, %4369 ], [ %4421, %4880 ]
  %4890 = phi i32* [ %4392, %4369 ], [ %4881, %4880 ]
  br i1 %4889, label %4891, label %5130

; <label>:4891:                                   ; preds = %4882
  br i1 %4297, label %4892, label %4922

; <label>:4892:                                   ; preds = %4891
  %4893 = and i8 %4884, 1
  %4894 = icmp ne i8 %4893, 0
  %4895 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 2
  %4896 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4895, align 8
  %4897 = icmp eq %struct.SkAnalyticEdge* %4896, null
  %4898 = icmp eq %struct.SkAnalyticEdge* %4896, %8
  %4899 = or i1 %4897, %4898
  br i1 %4899, label %4904, label %4900

; <label>:4900:                                   ; preds = %4892
  %4901 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4896, i64 0, i32 3
  %4902 = load i32, i32* %4901, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4887, i32 %4371, i32 %4886, i32 %4902, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  %4903 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4895, align 8
  br label %4904

; <label>:4904:                                   ; preds = %4900, %4892
  %4905 = phi %struct.SkAnalyticEdge* [ %4896, %4892 ], [ %4903, %4900 ]
  %4906 = icmp eq %struct.SkAnalyticEdge* %4905, null
  br i1 %4906, label %4907, label %4913

; <label>:4907:                                   ; preds = %4904
  %4908 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 10
  store i32 %4886, i32* %4908, align 4
  %4909 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 11
  store i32 %4371, i32* %4909, align 8
  %4910 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 12
  store i32 %4885, i32* %4910, align 4
  %4911 = load i32, i32* %3129, align 8
  %4912 = load i32, i32* %3131, align 8
  store i32 %4911, i32* %4365, align 4
  store i32 %4371, i32* %4366, align 8
  store i32 %4912, i32* %4367, align 4
  store %struct.SkAnalyticEdge* %8, %struct.SkAnalyticEdge** %4895, align 8
  br label %4913

; <label>:4913:                                   ; preds = %4907, %4904
  store i32 %4386, i32* %4368, align 4
  %4914 = load i32, i32* %3130, align 4
  %4915 = ashr i32 %4914, %4385
  %4916 = load i32, i32* %3129, align 8
  %4917 = add nsw i32 %4916, %4915
  store i32 %4917, i32* %3129, align 8
  %4918 = or i1 %4377, %4894
  br i1 %4918, label %4919, label %5130

; <label>:4919:                                   ; preds = %4913
  %4920 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 3
  %4921 = load i32, i32* %4920, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %4887, i32 %4386, i32 %4921, i32 %4917, %class.AdditiveBlitter* nonnull %2975, i8* null, i1 zeroext false, i1 zeroext %4, i32 %3145, i32 %3146) #12
  br label %5130

; <label>:4922:                                   ; preds = %4891
  %4923 = ashr i32 %4371, 16
  %4924 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 3
  %4925 = load i32, i32* %4924, align 4
  %4926 = icmp slt i32 %4925, %3145
  %4927 = select i1 %4926, i32 %3145, i32 %4925
  br i1 %4, label %4949, label %4928

; <label>:4928:                                   ; preds = %4922
  %4929 = icmp eq i8 %4391, -1
  br i1 %4929, label %4930, label %4949

; <label>:4930:                                   ; preds = %4928
  %4931 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 1
  %4932 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %4931, align 8
  %4933 = icmp eq %struct.SkAnalyticEdge* %4932, null
  br i1 %4933, label %4949, label %4934

; <label>:4934:                                   ; preds = %4930
  %4935 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 7
  %4936 = load i32, i32* %4935, align 8
  %4937 = icmp slt i32 %4936, %4386
  br i1 %4937, label %4938, label %4949

; <label>:4938:                                   ; preds = %4934
  %4939 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4932, i64 0, i32 3
  %4940 = load i32, i32* %4939, align 8
  %4941 = add nsw i32 %4940, 65536
  %4942 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4887, i64 0, i32 4
  %4943 = load i32, i32* %4942, align 4
  %4944 = icmp slt i32 %4943, 0
  %4945 = sub nsw i32 0, %4943
  %4946 = select i1 %4944, i32 %4945, i32 %4943
  %4947 = sub nsw i32 %4925, %4946
  %4948 = icmp sge i32 %4941, %4947
  br label %4949

; <label>:4949:                                   ; preds = %4938, %4934, %4930, %4928, %4922
  %4950 = phi i1 [ true, %4922 ], [ false, %4928 ], [ false, %4934 ], [ false, %4930 ], [ %4948, %4938 ]
  %4951 = icmp sgt i32 %4886, %3146
  br i1 %4951, label %5130, label %4952

; <label>:4952:                                   ; preds = %4949
  %4953 = icmp sgt i32 %4927, %3146
  br i1 %4953, label %4954, label %4964

; <label>:4954:                                   ; preds = %4952
  %4955 = icmp sgt i32 %4886, %4927
  %4956 = select i1 %4955, i32 %4927, i32 %4886
  %4957 = select i1 %4955, i32 %4886, i32 %4927
  %4958 = icmp sgt i32 %4956, %3146
  %4959 = select i1 %4958, i32 %4956, i32 %3146
  %4960 = icmp slt i32 %4957, %3146
  %4961 = select i1 %4960, i32 %4957, i32 %3146
  %4962 = add nsw i32 %4959, %4961
  %4963 = ashr i32 %4962, 1
  br label %4964

; <label>:4964:                                   ; preds = %4954, %4952
  %4965 = phi i32 [ %4963, %4954 ], [ %4927, %4952 ]
  %4966 = phi i32 [ %4963, %4954 ], [ %3146, %4952 ]
  %4967 = icmp eq i32 %4886, %3146
  %4968 = icmp eq i32 %4965, %4966
  %4969 = and i1 %4967, %4968
  br i1 %4969, label %5130, label %4970

; <label>:4970:                                   ; preds = %4964
  %4971 = icmp slt i32 %4965, %4886
  %4972 = select i1 %4971, i32 %4965, i32 %4886
  %4973 = select i1 %4971, i32 %4886, i32 %4965
  %4974 = icmp slt i32 %4966, %3146
  %4975 = select i1 %4974, i32 %4966, i32 %3146
  %4976 = select i1 %4974, i32 %3146, i32 %4966
  %4977 = add nsw i32 %4973, 65535
  %4978 = and i32 %4977, -65536
  %4979 = and i32 %4975, -65536
  %4980 = icmp slt i32 %4979, %4978
  br i1 %4980, label %5129, label %4981

; <label>:4981:                                   ; preds = %4970
  %4982 = icmp sgt i32 %4978, %4972
  br i1 %4982, label %4983, label %5053

; <label>:4983:                                   ; preds = %4981
  %4984 = sub nsw i32 %4978, %4972
  %4985 = add nsw i32 %4984, 65535
  %4986 = ashr i32 %4985, 16
  switch i32 %4986, label %5052 [
    i32 1, label %4987
    i32 2, label %5013
  ]

; <label>:4987:                                   ; preds = %4983
  %4988 = sub i32 %4978, %4973
  %4989 = add nsw i32 %4988, %4984
  %4990 = lshr i32 %4989, 9
  %4991 = ashr i32 %4972, 16
  %4992 = icmp ne i8 %4391, -1
  %4993 = or i1 %4992, %4950
  br i1 %4993, label %5004, label %4994

; <label>:4994:                                   ; preds = %4987
  %4995 = trunc i32 %4990 to i8
  %4996 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %4997 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4996, i64 15
  %4998 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %4997, align 8
  %4999 = call %class.SkBlitter* %4998(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %5000 = bitcast %class.SkBlitter* %4999 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5001 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5000, align 8
  %5002 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5001, i64 5
  %5003 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5002, align 8
  call void %5003(%class.SkBlitter* %4999, i32 %4991, i32 %4923, i32 1, i8 zeroext %4995) #12
  br label %5053

; <label>:5004:                                   ; preds = %4987
  %5005 = and i32 %4990, 255
  %5006 = and i32 %4390, 255
  %5007 = mul nuw nsw i32 %5005, %5006
  %5008 = lshr i32 %5007, 8
  %5009 = trunc i32 %5008 to i8
  %5010 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %5011 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5010, i64 17
  %5012 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5011, align 8
  call void %5012(%class.AdditiveBlitter* nonnull %2975, i32 %4991, i32 %4923, i8 zeroext %5009) #12
  br label %5053

; <label>:5013:                                   ; preds = %4983
  %5014 = sub i32 -65536, %4972
  %5015 = add i32 %4978, %5014
  %5016 = sub i32 %4973, %4972
  %5017 = sub i32 %5016, %5015
  %5018 = ashr i32 %5015, 11
  %5019 = ashr i32 %4885, 11
  %5020 = mul i32 %5018, %5019
  %5021 = mul i32 %5020, %5018
  %5022 = lshr i32 %5021, 8
  %5023 = ashr i32 %5017, 11
  %5024 = mul i32 %5023, %5019
  %5025 = mul i32 %5024, %5023
  %5026 = lshr i32 %5025, 8
  %5027 = trunc i32 %5026 to i8
  %5028 = sub i8 %4391, %5027
  %5029 = ashr i32 %4972, 16
  %5030 = icmp ne i8 %4391, -1
  %5031 = or i1 %5030, %4950
  br i1 %5031, label %5043, label %5032

; <label>:5032:                                   ; preds = %5013
  %5033 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %5034 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5033, i64 15
  %5035 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5034, align 8
  %5036 = call %class.SkBlitter* %5035(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %5037 = and i32 %5022, 255
  %5038 = zext i8 %5028 to i32
  %5039 = bitcast %class.SkBlitter* %5036 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %5040 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %5039, align 8
  %5041 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5040, i64 10
  %5042 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5041, align 8
  call void %5042(%class.SkBlitter* %5036, i32 %5029, i32 %4923, i32 %5037, i32 %5038) #12
  br label %5053

; <label>:5043:                                   ; preds = %5013
  %5044 = trunc i32 %5022 to i8
  %5045 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %5046 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5045, i64 17
  %5047 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5046, align 8
  call void %5047(%class.AdditiveBlitter* nonnull %2975, i32 %5029, i32 %4923, i8 zeroext %5044) #12
  %5048 = add nsw i32 %5029, 1
  %5049 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %5050 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5049, i64 17
  %5051 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5050, align 8
  call void %5051(%class.AdditiveBlitter* nonnull %2975, i32 %5048, i32 %4923, i8 zeroext %5028) #12
  br label %5053

; <label>:5052:                                   ; preds = %4983
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4923, i32 %4972, i32 %4978, i32 %4973, i32 %4978, i32 %4885, i32 2147483647, i8 zeroext %4391, i8* null, i1 zeroext false, i1 zeroext %4950, i1 zeroext true) #12
  br label %5053

; <label>:5053:                                   ; preds = %5052, %5043, %5032, %5004, %4994, %4981
  %5054 = icmp sgt i32 %4979, %4978
  br i1 %5054, label %5055, label %5074

; <label>:5055:                                   ; preds = %5053
  %5056 = ashr i32 %4977, 16
  %5057 = sub nsw i32 %4979, %4978
  %5058 = ashr exact i32 %5057, 16
  %5059 = icmp ne i8 %4391, -1
  %5060 = or i1 %5059, %4950
  br i1 %5060, label %5070, label %5061

; <label>:5061:                                   ; preds = %5055
  %5062 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %5063 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5062, i64 15
  %5064 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5063, align 8
  %5065 = call %class.SkBlitter* %5064(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %5066 = bitcast %class.SkBlitter* %5065 to void (%class.SkBlitter*, i32, i32, i32)***
  %5067 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %5066, align 8
  %5068 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %5067, i64 3
  %5069 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %5068, align 8
  call void %5069(%class.SkBlitter* %5065, i32 %5056, i32 %4923, i32 %5058) #12
  br label %5074

; <label>:5070:                                   ; preds = %5055
  %5071 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %4362, align 8
  %5072 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5071, i64 18
  %5073 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5072, align 8
  call void %5073(%class.AdditiveBlitter* nonnull %2975, i32 %5056, i32 %4923, i32 %5058, i8 zeroext %4391) #12
  br label %5074

; <label>:5074:                                   ; preds = %5070, %5061, %5053
  %5075 = icmp sgt i32 %4976, %4979
  br i1 %5075, label %5076, label %5130

; <label>:5076:                                   ; preds = %5074
  %5077 = sub nsw i32 %4976, %4979
  %5078 = add nsw i32 %5077, 65535
  %5079 = ashr i32 %5078, 16
  switch i32 %5079, label %5128 [
    i32 1, label %5080
    i32 2, label %5106
  ]

; <label>:5080:                                   ; preds = %5076
  %5081 = sub i32 %4975, %4979
  %5082 = add nsw i32 %5081, %5077
  %5083 = lshr i32 %5082, 9
  %5084 = ashr i32 %4975, 16
  %5085 = icmp ne i8 %4391, -1
  %5086 = or i1 %5085, %4950
  br i1 %5086, label %5097, label %5087

; <label>:5087:                                   ; preds = %5080
  %5088 = trunc i32 %5083 to i8
  %5089 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %5090 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5089, i64 15
  %5091 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5090, align 8
  %5092 = call %class.SkBlitter* %5091(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %5093 = bitcast %class.SkBlitter* %5092 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5094 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5093, align 8
  %5095 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5094, i64 5
  %5096 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5095, align 8
  call void %5096(%class.SkBlitter* %5092, i32 %5084, i32 %4923, i32 1, i8 zeroext %5088) #12
  br label %5130

; <label>:5097:                                   ; preds = %5080
  %5098 = and i32 %5083, 255
  %5099 = and i32 %4390, 255
  %5100 = mul nuw nsw i32 %5098, %5099
  %5101 = lshr i32 %5100, 8
  %5102 = trunc i32 %5101 to i8
  %5103 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %5104 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5103, i64 17
  %5105 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5104, align 8
  call void %5105(%class.AdditiveBlitter* nonnull %2975, i32 %5084, i32 %4923, i8 zeroext %5102) #12
  br label %5130

; <label>:5106:                                   ; preds = %5076
  %5107 = ashr i32 %4975, 16
  %5108 = icmp ne i8 %4391, -1
  %5109 = or i1 %5108, %4950
  br i1 %5109, label %5120, label %5110

; <label>:5110:                                   ; preds = %5106
  %5111 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %4361, align 8
  %5112 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5111, i64 15
  %5113 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5112, align 8
  %5114 = call %class.SkBlitter* %5113(%class.AdditiveBlitter* nonnull %2975, i1 zeroext false) #12
  %5115 = and i32 %4390, 255
  %5116 = bitcast %class.SkBlitter* %5114 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %5117 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %5116, align 8
  %5118 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5117, i64 10
  %5119 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5118, align 8
  call void %5119(%class.SkBlitter* %5114, i32 %5107, i32 %4923, i32 %5115, i32 0) #12
  br label %5130

; <label>:5120:                                   ; preds = %5106
  %5121 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %5122 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5121, i64 17
  %5123 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5122, align 8
  call void %5123(%class.AdditiveBlitter* nonnull %2975, i32 %5107, i32 %4923, i8 zeroext %4391) #12
  %5124 = add nsw i32 %5107, 1
  %5125 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %4360, align 8
  %5126 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5125, i64 17
  %5127 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5126, align 8
  call void %5127(%class.AdditiveBlitter* nonnull %2975, i32 %5124, i32 %4923, i8 zeroext 0) #12
  br label %5130

; <label>:5128:                                   ; preds = %5076
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4923, i32 %4979, i32 %4975, i32 %4979, i32 %4976, i32 2147483647, i32 0, i8 zeroext %4391, i8* null, i1 zeroext false, i1 zeroext %4950, i1 zeroext true) #12
  br label %5130

; <label>:5129:                                   ; preds = %4970
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %2975, i32 %4923, i32 %4972, i32 %4975, i32 %4973, i32 %4976, i32 %4885, i32 0, i8 zeroext %4391, i8* null, i1 zeroext false, i1 zeroext %4950, i1 zeroext true) #12
  br label %5130

; <label>:5130:                                   ; preds = %5129, %5128, %5120, %5110, %5097, %5087, %5074, %4964, %4949, %4919, %4913, %4882
  br i1 %4, label %5131, label %5135

; <label>:5131:                                   ; preds = %5130
  %5132 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)**, void (%class.RunBasedAdditiveBlitter*, i32, i32)*** %4363, align 8
  %5133 = getelementptr inbounds void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %5132, i64 20
  %5134 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %5133, align 8
  call void %5134(%class.RunBasedAdditiveBlitter* nonnull %18, i32 %4371, i32 %4386) #12
  br label %5135

; <label>:5135:                                   ; preds = %5131, %5130
  %5136 = icmp slt i32 %4386, %4364
  br i1 %5136, label %5137, label %5272

; <label>:5137:                                   ; preds = %5135
  %5138 = load i32, i32* %4890, align 8
  %5139 = icmp sgt i32 %5138, %4386
  br i1 %5139, label %5140, label %5143

; <label>:5140:                                   ; preds = %5137
  %5141 = icmp sgt i32 %4883, %5138
  %5142 = select i1 %5141, i32 %5138, i32 %4883
  br label %5270

; <label>:5143:                                   ; preds = %5137
  %5144 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4888, i64 0, i32 1
  %5145 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5144, align 8
  %5146 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5145, i64 0, i32 3
  %5147 = load i32, i32* %5146, align 8
  %5148 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %4888, i64 0, i32 3
  %5149 = load i32, i32* %5148, align 8
  %5150 = icmp sgt i32 %5147, %5149
  br i1 %5150, label %5192, label %5151

; <label>:5151:                                   ; preds = %5143
  %5152 = add nsw i32 %4386, 16384
  br label %5153

; <label>:5153:                                   ; preds = %5186, %5151
  %5154 = phi i32 [ %4883, %5151 ], [ %5180, %5186 ]
  %5155 = phi %struct.SkAnalyticEdge* [ %5145, %5151 ], [ %5188, %5186 ]
  %5156 = phi %struct.SkAnalyticEdge* [ %4888, %5151 ], [ %5182, %5186 ]
  %5157 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5155, i64 0, i32 1
  %5158 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5157, align 8
  %5159 = icmp eq %struct.SkAnalyticEdge* %5158, null
  br i1 %5159, label %5173, label %5160

; <label>:5160:                                   ; preds = %5153
  %5161 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5155, i64 0, i32 3
  %5162 = load i32, i32* %5161, align 8
  %5163 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5155, i64 0, i32 4
  %5164 = load i32, i32* %5163, align 4
  %5165 = add nsw i32 %5164, %5162
  %5166 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5156, i64 0, i32 3
  %5167 = load i32, i32* %5166, align 8
  %5168 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5156, i64 0, i32 4
  %5169 = load i32, i32* %5168, align 4
  %5170 = add nsw i32 %5169, %5167
  %5171 = icmp sgt i32 %5165, %5170
  %5172 = select i1 %5171, i32 %5152, i32 %5154
  br label %5173

; <label>:5173:                                   ; preds = %5160, %5153
  %5174 = phi i32 [ %5154, %5153 ], [ %5172, %5160 ]
  %5175 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5156, i64 0, i32 8
  %5176 = load i32, i32* %5175, align 4
  %5177 = icmp sgt i32 %5176, %4386
  %5178 = icmp sgt i32 %5174, %5176
  %5179 = and i1 %5177, %5178
  %5180 = select i1 %5179, i32 %5176, i32 %5174
  %5181 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5156, i64 0, i32 0
  %5182 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5181, align 8
  %5183 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5182, i64 0, i32 7
  %5184 = load i32, i32* %5183, align 8
  %5185 = icmp sgt i32 %5184, %4386
  br i1 %5185, label %5189, label %5186

; <label>:5186:                                   ; preds = %5173
  %5187 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5182, i64 0, i32 1
  %5188 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5187, align 8
  br label %5153

; <label>:5189:                                   ; preds = %5173
  %5190 = icmp sgt i32 %5180, %5184
  %5191 = select i1 %5190, i32 %5184, i32 %5180
  br label %5270

; <label>:5192:                                   ; preds = %5143, %5197
  %5193 = phi %struct.SkAnalyticEdge* [ %5195, %5197 ], [ %5145, %5143 ]
  %5194 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5193, i64 0, i32 1
  %5195 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5194, align 8
  %5196 = icmp eq %struct.SkAnalyticEdge* %5195, null
  br i1 %5196, label %5201, label %5197

; <label>:5197:                                   ; preds = %5192
  %5198 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5193, i64 0, i32 3
  %5199 = load i32, i32* %5198, align 8
  %5200 = icmp sgt i32 %5199, %5149
  br i1 %5200, label %5192, label %5201

; <label>:5201:                                   ; preds = %5197, %5192
  %5202 = add nsw i32 %4386, 16384
  br label %5203

; <label>:5203:                                   ; preds = %5256, %5201
  %5204 = phi i32 [ %4883, %5201 ], [ %5263, %5256 ]
  %5205 = phi %struct.SkAnalyticEdge* [ %5193, %5201 ], [ %5206, %5256 ]
  %5206 = phi %struct.SkAnalyticEdge* [ %4888, %5201 ], [ %5208, %5256 ]
  %5207 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5206, i64 0, i32 0
  %5208 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5207, align 8
  %5209 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5206, i64 0, i32 3
  %5210 = ptrtoint %struct.SkAnalyticEdge* %5208 to i64
  br label %5211

; <label>:5211:                                   ; preds = %5216, %5203
  %5212 = phi %struct.SkAnalyticEdge* [ %5205, %5203 ], [ %5214, %5216 ]
  %5213 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5212, i64 0, i32 0
  %5214 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5213, align 8
  %5215 = icmp eq %struct.SkAnalyticEdge* %5214, %5206
  br i1 %5215, label %5236, label %5216

; <label>:5216:                                   ; preds = %5211
  %5217 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5214, i64 0, i32 3
  %5218 = load i32, i32* %5217, align 8
  %5219 = load i32, i32* %5209, align 8
  %5220 = icmp slt i32 %5218, %5219
  br i1 %5220, label %5211, label %5221

; <label>:5221:                                   ; preds = %5216
  %5222 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5212, i64 0, i32 0
  %5223 = bitcast %struct.SkAnalyticEdge* %5206 to i64*
  %5224 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5206, i64 0, i32 1
  %5225 = bitcast %struct.SkAnalyticEdge** %5224 to i64**
  %5226 = load i64*, i64** %5225, align 8
  store i64 %5210, i64* %5226, align 8
  %5227 = bitcast %struct.SkAnalyticEdge** %5224 to i64*
  %5228 = load i64, i64* %5227, align 8
  %5229 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5207, align 8
  %5230 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5229, i64 0, i32 1
  %5231 = bitcast %struct.SkAnalyticEdge** %5230 to i64*
  store i64 %5228, i64* %5231, align 8
  store %struct.SkAnalyticEdge* %5212, %struct.SkAnalyticEdge** %5224, align 8
  %5232 = bitcast %struct.SkAnalyticEdge* %5212 to i64*
  %5233 = load i64, i64* %5232, align 8
  store i64 %5233, i64* %5223, align 8
  %5234 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5222, align 8
  %5235 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5234, i64 0, i32 1
  store %struct.SkAnalyticEdge* %5206, %struct.SkAnalyticEdge** %5235, align 8
  store %struct.SkAnalyticEdge* %5206, %struct.SkAnalyticEdge** %5222, align 8
  br label %5238

; <label>:5236:                                   ; preds = %5211
  %5237 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5206, i64 0, i32 1
  br label %5238

; <label>:5238:                                   ; preds = %5236, %5221
  %5239 = phi %struct.SkAnalyticEdge** [ %5237, %5236 ], [ %5224, %5221 ]
  %5240 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5239, align 8
  %5241 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5240, i64 0, i32 1
  %5242 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5241, align 8
  %5243 = icmp eq %struct.SkAnalyticEdge* %5242, null
  br i1 %5243, label %5256, label %5244

; <label>:5244:                                   ; preds = %5238
  %5245 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5240, i64 0, i32 3
  %5246 = load i32, i32* %5245, align 8
  %5247 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5240, i64 0, i32 4
  %5248 = load i32, i32* %5247, align 4
  %5249 = add nsw i32 %5248, %5246
  %5250 = load i32, i32* %5209, align 8
  %5251 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5206, i64 0, i32 4
  %5252 = load i32, i32* %5251, align 4
  %5253 = add nsw i32 %5252, %5250
  %5254 = icmp sgt i32 %5249, %5253
  %5255 = select i1 %5254, i32 %5202, i32 %5204
  br label %5256

; <label>:5256:                                   ; preds = %5244, %5238
  %5257 = phi i32 [ %5204, %5238 ], [ %5255, %5244 ]
  %5258 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5206, i64 0, i32 8
  %5259 = load i32, i32* %5258, align 4
  %5260 = icmp sgt i32 %5259, %4386
  %5261 = icmp sgt i32 %5257, %5259
  %5262 = and i1 %5260, %5261
  %5263 = select i1 %5262, i32 %5259, i32 %5257
  %5264 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5208, i64 0, i32 7
  %5265 = load i32, i32* %5264, align 8
  %5266 = icmp sgt i32 %5265, %4386
  br i1 %5266, label %5267, label %5203

; <label>:5267:                                   ; preds = %5256
  %5268 = icmp sgt i32 %5263, %5265
  %5269 = select i1 %5268, i32 %5265, i32 %5263
  br label %5270

; <label>:5270:                                   ; preds = %5267, %5189, %5140
  %5271 = phi i32 [ %5142, %5140 ], [ %5269, %5267 ], [ %5191, %5189 ]
  br label %4369

; <label>:5272:                                   ; preds = %5135, %3244, %3205, %3226
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3034) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3033) #12
  br label %5273

; <label>:5273:                                   ; preds = %2998, %3002, %3016, %3020, %5272
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2979, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* nonnull %2981) #12
  %5274 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %6, i64 0, i32 0, i32 2
  %5275 = bitcast %class.SkTDArray.12* %5274 to i8**
  %5276 = load i8*, i8** %5275, align 8
  call void @_Z7sk_freePv(i8* %5276) #12
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %2978) #12
  call void @_ZN23RunBasedAdditiveBlitterD2Ev(%class.RunBasedAdditiveBlitter* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %2974) #12
  br label %7584

; <label>:5277:                                   ; preds = %2970, %2963
  %5278 = bitcast %class.SafeRLEAdditiveBlitter* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %5278) #12
  %5279 = bitcast %class.SafeRLEAdditiveBlitter* %19 to %class.RunBasedAdditiveBlitter*
  call void @_ZN23RunBasedAdditiveBlitterC2EP9SkBlitterRK7SkIRectS4_b(%class.RunBasedAdditiveBlitter* nonnull %5279, %class.SkBlitter* %1, %struct.SkIRect* nonnull dereferenceable(16) %2, %struct.SkIRect* nonnull dereferenceable(16) %3, i1 zeroext %77) #12
  %5280 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV22SafeRLEAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5280, align 8
  %5281 = getelementptr inbounds %class.SafeRLEAdditiveBlitter, %class.SafeRLEAdditiveBlitter* %19, i64 0, i32 0, i32 0
  %5282 = load i32, i32* %30, align 4
  %5283 = load i32, i32* %27, align 4
  %5284 = bitcast %class.SkAnalyticEdgeBuilder* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %5284) #12
  %5285 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %14, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5285, align 8
  %5286 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %14, i64 0, i32 0, i32 1
  %5287 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %14, i64 0, i32 0, i32 3, i32 0
  %5288 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %14, i64 0, i32 0, i32 3, i32 1, i64 0
  %5289 = bitcast i8*** %5286 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5289, i8 0, i64 24, i1 false) #12
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* nonnull %5287, i8* nonnull %5288, i64 512, i64 512) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV21SkAnalyticEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5285, align 8
  %5290 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %14, i64 0, i32 0
  %5291 = select i1 %73, %struct.SkIRect* null, %struct.SkIRect* %3
  %5292 = call i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder* nonnull %5290, %class.SkPath* nonnull dereferenceable(16) %0, %struct.SkIRect* %5291) #12
  %5293 = bitcast i8*** %5286 to %struct.SkAnalyticEdge***
  %5294 = load %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge*** %5293, align 8
  %5295 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 0
  %5296 = load i32, i32* %5295, align 4
  %5297 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 1
  %5298 = load i32, i32* %5297, align 4
  %5299 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 2
  %5300 = load i32, i32* %5299, align 4
  %5301 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %3, i64 0, i32 3
  %5302 = load i32, i32* %5301, align 4
  %5303 = icmp eq i32 %5292, 0
  br i1 %5303, label %5304, label %5338

; <label>:5304:                                   ; preds = %5277
  %5305 = load i8, i8* %74, align 2
  %5306 = and i8 %5305, 2
  %5307 = icmp eq i8 %5306, 0
  br i1 %5307, label %7580, label %5308

; <label>:5308:                                   ; preds = %5304
  %5309 = icmp slt i32 %5298, %5282
  %5310 = select i1 %5309, i32 %5282, i32 %5298
  %5311 = icmp sgt i32 %5302, %5283
  %5312 = select i1 %5311, i32 %5283, i32 %5302
  %5313 = sext i32 %5300 to i64
  %5314 = sext i32 %5296 to i64
  %5315 = sub nsw i64 %5313, %5314
  %5316 = sext i32 %5312 to i64
  %5317 = sext i32 %5310 to i64
  %5318 = sub nsw i64 %5316, %5317
  %5319 = icmp slt i64 %5315, 1
  %5320 = icmp slt i64 %5318, 1
  %5321 = or i1 %5319, %5320
  br i1 %5321, label %7580, label %5322

; <label>:5322:                                   ; preds = %5308
  %5323 = or i64 %5318, %5315
  %5324 = add nsw i64 %5323, 2147483648
  %5325 = icmp ugt i64 %5324, 4294967295
  br i1 %5325, label %7580, label %5326

; <label>:5326:                                   ; preds = %5322
  %5327 = bitcast %class.SafeRLEAdditiveBlitter* %19 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %5328 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5327, align 8
  %5329 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5328, i64 15
  %5330 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5329, align 8
  %5331 = call %class.SkBlitter* %5330(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %5332 = sub i32 %5300, %5296
  %5333 = sub i32 %5312, %5310
  %5334 = bitcast %class.SkBlitter* %5331 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %5335 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %5334, align 8
  %5336 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5335, i64 6
  %5337 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %5336, align 8
  call void %5337(%class.SkBlitter* %5331, i32 %5296, i32 %5310, i32 %5332, i32 %5333) #12
  br label %7580

; <label>:5338:                                   ; preds = %5277
  %5339 = bitcast %struct.SkAnalyticEdge* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5339) #12
  %5340 = bitcast %struct.SkAnalyticEdge* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5340) #12
  %5341 = sext i32 %5292 to i64
  %5342 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5341
  %5343 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5342, i64 -1
  %5344 = icmp ugt %struct.SkAnalyticEdge** %5343, %5294
  br i1 %5344, label %5345, label %5355

; <label>:5345:                                   ; preds = %5338
  %5346 = ptrtoint %struct.SkAnalyticEdge** %5343 to i64
  %5347 = ptrtoint %struct.SkAnalyticEdge** %5294 to i64
  %5348 = sub i64 %5346, %5347
  %5349 = lshr exact i64 %5348, 3
  %5350 = trunc i64 %5349 to i32
  %5351 = add i32 %5350, -1
  %5352 = call i32 @llvm.ctlz.i32(i32 %5351, i1 false) #12, !range !9
  %5353 = shl nuw nsw i32 %5352, 1
  %5354 = sub nsw i32 64, %5353
  call void @_Z12SkTIntroSortIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEviPT_S5_T0_(i32 %5354, %struct.SkAnalyticEdge** %5294, %struct.SkAnalyticEdge** nonnull %5343) #12
  br label %5355

; <label>:5355:                                   ; preds = %5345, %5338
  %5356 = icmp sgt i32 %5292, 1
  br i1 %5356, label %5357, label %5412

; <label>:5357:                                   ; preds = %5355
  %5358 = and i32 %5292, 1
  %5359 = xor i32 %5358, 1
  %5360 = icmp eq i32 %5292, 2
  br i1 %5360, label %5396, label %5361

; <label>:5361:                                   ; preds = %5357
  %5362 = zext i32 %5359 to i64
  %5363 = zext i32 %5292 to i64
  %5364 = xor i64 %5362, -1
  %5365 = add nsw i64 %5364, %5363
  br label %5366

; <label>:5366:                                   ; preds = %5366, %5361
  %5367 = phi i64 [ 1, %5361 ], [ %5393, %5366 ]
  %5368 = phi i64 [ %5365, %5361 ], [ %5394, %5366 ]
  %5369 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5367
  %5370 = bitcast %struct.SkAnalyticEdge** %5369 to i64*
  %5371 = load i64, i64* %5370, align 8
  %5372 = add nsw i64 %5367, -1
  %5373 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5372
  %5374 = bitcast %struct.SkAnalyticEdge** %5373 to i64**
  %5375 = load i64*, i64** %5374, align 8
  store i64 %5371, i64* %5375, align 8
  %5376 = bitcast %struct.SkAnalyticEdge** %5373 to i64*
  %5377 = load i64, i64* %5376, align 8
  %5378 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5369, align 8
  %5379 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5378, i64 0, i32 1
  %5380 = bitcast %struct.SkAnalyticEdge** %5379 to i64*
  store i64 %5377, i64* %5380, align 8
  %5381 = add nuw nsw i64 %5367, 1
  %5382 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5381
  %5383 = bitcast %struct.SkAnalyticEdge** %5382 to i64*
  %5384 = load i64, i64* %5383, align 8
  %5385 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5367
  %5386 = bitcast %struct.SkAnalyticEdge** %5385 to i64**
  %5387 = load i64*, i64** %5386, align 8
  store i64 %5384, i64* %5387, align 8
  %5388 = bitcast %struct.SkAnalyticEdge** %5385 to i64*
  %5389 = load i64, i64* %5388, align 8
  %5390 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5382, align 8
  %5391 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5390, i64 0, i32 1
  %5392 = bitcast %struct.SkAnalyticEdge** %5391 to i64*
  store i64 %5389, i64* %5392, align 8
  %5393 = add nuw nsw i64 %5367, 2
  %5394 = add i64 %5368, -2
  %5395 = icmp eq i64 %5394, 0
  br i1 %5395, label %5396, label %5366

; <label>:5396:                                   ; preds = %5366, %5357
  %5397 = phi i64 [ 1, %5357 ], [ %5393, %5366 ]
  %5398 = icmp eq i32 %5359, 0
  br i1 %5398, label %5412, label %5399

; <label>:5399:                                   ; preds = %5396
  %5400 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5397
  %5401 = bitcast %struct.SkAnalyticEdge** %5400 to i64*
  %5402 = load i64, i64* %5401, align 8
  %5403 = add nsw i64 %5397, -1
  %5404 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5403
  %5405 = bitcast %struct.SkAnalyticEdge** %5404 to i64**
  %5406 = load i64*, i64** %5405, align 8
  store i64 %5402, i64* %5406, align 8
  %5407 = bitcast %struct.SkAnalyticEdge** %5404 to i64*
  %5408 = load i64, i64* %5407, align 8
  %5409 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5400, align 8
  %5410 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5409, i64 0, i32 1
  %5411 = bitcast %struct.SkAnalyticEdge** %5410 to i64*
  store i64 %5408, i64* %5411, align 8
  br label %5412

; <label>:5412:                                   ; preds = %5399, %5396, %5355
  %5413 = add nsw i32 %5292, -1
  %5414 = sext i32 %5413 to i64
  %5415 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, i64 %5414
  %5416 = bitcast %struct.SkAnalyticEdge** %5415 to i64*
  %5417 = load i64, i64* %5416, align 8
  %5418 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5294, align 8
  %5419 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 1
  %5420 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 0
  %5421 = bitcast %struct.SkAnalyticEdge** %5419 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5421, i8 0, i64 16, i1 false) #12
  store %struct.SkAnalyticEdge* %5418, %struct.SkAnalyticEdge** %5420, align 8
  %5422 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 8
  store i32 -2147483647, i32* %5422, align 4
  %5423 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 7
  store i32 -2147483647, i32* %5423, align 8
  %5424 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 3
  store i32 -2147483647, i32* %5424, align 8
  %5425 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 4
  store i32 0, i32* %5425, align 4
  %5426 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 9
  store i32 2147483647, i32* %5426, align 8
  %5427 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %15, i64 0, i32 5
  store i32 -2147483647, i32* %5427, align 8
  %5428 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5418, i64 0, i32 1
  store %struct.SkAnalyticEdge* %15, %struct.SkAnalyticEdge** %5428, align 8
  %5429 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 2
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %5429, align 8
  %5430 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 1
  %5431 = bitcast %struct.SkAnalyticEdge** %5430 to i64*
  store i64 %5417, i64* %5431, align 8
  %5432 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 0
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %5432, align 8
  %5433 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 8
  store i32 2147483647, i32* %5433, align 4
  %5434 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 7
  store i32 2147483647, i32* %5434, align 8
  %5435 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 3
  store i32 2147483647, i32* %5435, align 8
  %5436 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 4
  store i32 0, i32* %5436, align 4
  %5437 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 9
  store i32 2147483647, i32* %5437, align 8
  %5438 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 5
  store i32 2147483647, i32* %5438, align 8
  %5439 = inttoptr i64 %5417 to %struct.SkAnalyticEdge*
  %5440 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5439, i64 0, i32 0
  store %struct.SkAnalyticEdge* %16, %struct.SkAnalyticEdge** %5440, align 8
  br i1 %73, label %5448, label %5441

; <label>:5441:                                   ; preds = %5412
  %5442 = load i32, i32* %5297, align 4
  %5443 = icmp sgt i32 %5442, %5282
  %5444 = select i1 %5443, i32 %5442, i32 %5282
  %5445 = load i32, i32* %5301, align 4
  %5446 = icmp slt i32 %5445, %5283
  %5447 = select i1 %5446, i32 %5445, i32 %5283
  br label %5448

; <label>:5448:                                   ; preds = %5441, %5412
  %5449 = phi i32 [ %5444, %5441 ], [ %5282, %5412 ]
  %5450 = phi i32 [ %5447, %5441 ], [ %5283, %5412 ]
  %5451 = shl i32 %5296, 16
  %5452 = shl i32 %5300, 16
  %5453 = load i8, i8* %74, align 2
  %5454 = and i8 %5453, 2
  %5455 = icmp eq i8 %5454, 0
  br i1 %5455, label %5456, label %6539

; <label>:5456:                                   ; preds = %5448
  %5457 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0
  %5458 = load atomic i8, i8* %5457 monotonic, align 1
  %5459 = icmp eq i8 %5458, 0
  br i1 %5459, label %5460, label %5462

; <label>:5460:                                   ; preds = %5456
  %5461 = call zeroext i8 @_ZNK6SkPath20internalGetConvexityEv(%class.SkPath* nonnull %0) #12
  br label %5462

; <label>:5462:                                   ; preds = %5460, %5456
  %5463 = phi i8 [ %5461, %5460 ], [ %5458, %5456 ]
  %5464 = icmp eq i8 %5463, 1
  %5465 = and i1 %5356, %5464
  br i1 %5465, label %5466, label %6539

; <label>:5466:                                   ; preds = %5462
  %5467 = bitcast %struct.SkAnalyticEdge* %15 to i64*
  %5468 = load i64, i64* %5467, align 8
  %5469 = inttoptr i64 %5468 to %struct.SkAnalyticEdge*
  %5470 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5469, i64 0, i32 0
  %5471 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5470, align 8
  %5472 = ptrtoint %struct.SkAnalyticEdge* %5471 to i64
  %5473 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5471, i64 0, i32 0
  %5474 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5473, align 8
  %5475 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5469, i64 0, i32 7
  %5476 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5471, i64 0, i32 7
  %5477 = load i32, i32* %5476, align 4
  %5478 = load i32, i32* %5475, align 4
  %5479 = icmp slt i32 %5477, %5478
  %5480 = select i1 %5479, i32 %5478, i32 %5477
  %5481 = shl i32 %5450, 16
  %5482 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %5483 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.AdditiveBlitter*, i32, i32)***
  %5484 = bitcast %class.SafeRLEAdditiveBlitter* %19 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %5485 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %5486 = or i32 %5451, 2048
  %5487 = or i32 %5452, 2048
  br label %5488

; <label>:5488:                                   ; preds = %6534, %5466
  %5489 = phi i64 [ %5472, %5466 ], [ %5632, %6534 ]
  %5490 = phi i64 [ %5468, %5466 ], [ %5633, %6534 ]
  %5491 = phi i32 [ %5480, %5466 ], [ %5682, %6534 ]
  %5492 = phi %struct.SkAnalyticEdge* [ %5474, %5466 ], [ %5553, %6534 ]
  %5493 = inttoptr i64 %5490 to %struct.SkAnalyticEdge*
  %5494 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5493, i64 0, i32 8
  %5495 = load i32, i32* %5494, align 4
  %5496 = icmp sgt i32 %5495, %5491
  br i1 %5496, label %5499, label %5507

; <label>:5497:                                   ; preds = %5521
  %5498 = inttoptr i64 %5522 to %struct.SkAnalyticEdge*
  br label %5499

; <label>:5499:                                   ; preds = %5497, %5488
  %5500 = phi i64 [ %5490, %5488 ], [ %5522, %5497 ]
  %5501 = phi %struct.SkAnalyticEdge* [ %5492, %5488 ], [ %5523, %5497 ]
  %5502 = phi %struct.SkAnalyticEdge* [ %5493, %5488 ], [ %5498, %5497 ]
  %5503 = inttoptr i64 %5489 to %struct.SkAnalyticEdge*
  %5504 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5503, i64 0, i32 8
  %5505 = load i32, i32* %5504, align 4
  %5506 = icmp sgt i32 %5505, %5491
  br i1 %5506, label %5551, label %5528

; <label>:5507:                                   ; preds = %5488, %5521
  %5508 = phi %struct.SkAnalyticEdge* [ %5524, %5521 ], [ %5493, %5488 ]
  %5509 = phi %struct.SkAnalyticEdge* [ %5523, %5521 ], [ %5492, %5488 ]
  %5510 = phi i64 [ %5522, %5521 ], [ %5490, %5488 ]
  %5511 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %5508, i32 %5491, i1 zeroext true) #12
  br i1 %5511, label %5521, label %5512

; <label>:5512:                                   ; preds = %5507
  %5513 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5509, i64 0, i32 7
  %5514 = load i32, i32* %5513, align 8
  %5515 = ashr i32 %5514, 16
  %5516 = icmp slt i32 %5515, %5450
  br i1 %5516, label %5517, label %7579

; <label>:5517:                                   ; preds = %5512
  %5518 = ptrtoint %struct.SkAnalyticEdge* %5509 to i64
  %5519 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5509, i64 0, i32 0
  %5520 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5519, align 8
  br label %5521

; <label>:5521:                                   ; preds = %5517, %5507
  %5522 = phi i64 [ %5510, %5507 ], [ %5518, %5517 ]
  %5523 = phi %struct.SkAnalyticEdge* [ %5509, %5507 ], [ %5520, %5517 ]
  %5524 = inttoptr i64 %5522 to %struct.SkAnalyticEdge*
  %5525 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5524, i64 0, i32 8
  %5526 = load i32, i32* %5525, align 4
  %5527 = icmp sgt i32 %5526, %5491
  br i1 %5527, label %5497, label %5507

; <label>:5528:                                   ; preds = %5499, %5542
  %5529 = phi %struct.SkAnalyticEdge* [ %5545, %5542 ], [ %5503, %5499 ]
  %5530 = phi %struct.SkAnalyticEdge* [ %5544, %5542 ], [ %5501, %5499 ]
  %5531 = phi i64 [ %5543, %5542 ], [ %5489, %5499 ]
  %5532 = call zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge* %5529, i32 %5491, i1 zeroext true) #12
  br i1 %5532, label %5542, label %5533

; <label>:5533:                                   ; preds = %5528
  %5534 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5530, i64 0, i32 7
  %5535 = load i32, i32* %5534, align 8
  %5536 = ashr i32 %5535, 16
  %5537 = icmp slt i32 %5536, %5450
  br i1 %5537, label %5538, label %7579

; <label>:5538:                                   ; preds = %5533
  %5539 = ptrtoint %struct.SkAnalyticEdge* %5530 to i64
  %5540 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5530, i64 0, i32 0
  %5541 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5540, align 8
  br label %5542

; <label>:5542:                                   ; preds = %5538, %5528
  %5543 = phi i64 [ %5531, %5528 ], [ %5539, %5538 ]
  %5544 = phi %struct.SkAnalyticEdge* [ %5530, %5528 ], [ %5541, %5538 ]
  %5545 = inttoptr i64 %5543 to %struct.SkAnalyticEdge*
  %5546 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5545, i64 0, i32 8
  %5547 = load i32, i32* %5546, align 4
  %5548 = icmp sgt i32 %5547, %5491
  br i1 %5548, label %5549, label %5528

; <label>:5549:                                   ; preds = %5542
  %5550 = inttoptr i64 %5543 to %struct.SkAnalyticEdge*
  br label %5551

; <label>:5551:                                   ; preds = %5549, %5499
  %5552 = phi i64 [ %5489, %5499 ], [ %5543, %5549 ]
  %5553 = phi %struct.SkAnalyticEdge* [ %5501, %5499 ], [ %5544, %5549 ]
  %5554 = phi %struct.SkAnalyticEdge* [ %5503, %5499 ], [ %5550, %5549 ]
  %5555 = ashr i32 %5491, 16
  %5556 = icmp slt i32 %5555, %5450
  br i1 %5556, label %5557, label %7579

; <label>:5557:                                   ; preds = %5551
  %5558 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 6
  %5559 = load i32, i32* %5558, align 4
  %5560 = add nsw i32 %5559, 65536
  %5561 = icmp eq i32 %5560, %5491
  br i1 %5561, label %5562, label %5568

; <label>:5562:                                   ; preds = %5557
  %5563 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 3
  %5564 = load i32, i32* %5563, align 8
  %5565 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 4
  %5566 = load i32, i32* %5565, align 4
  %5567 = add nsw i32 %5566, %5564
  store i32 %5567, i32* %5563, align 8
  br label %5585

; <label>:5568:                                   ; preds = %5557
  %5569 = icmp eq i32 %5559, %5491
  br i1 %5569, label %5586, label %5570

; <label>:5570:                                   ; preds = %5568
  %5571 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 5
  %5572 = load i32, i32* %5571, align 8
  %5573 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 4
  %5574 = load i32, i32* %5573, align 4
  %5575 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 7
  %5576 = load i32, i32* %5575, align 8
  %5577 = sub nsw i32 %5491, %5576
  %5578 = sext i32 %5574 to i64
  %5579 = sext i32 %5577 to i64
  %5580 = mul nsw i64 %5579, %5578
  %5581 = lshr i64 %5580, 16
  %5582 = trunc i64 %5581 to i32
  %5583 = add nsw i32 %5572, %5582
  %5584 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 3
  store i32 %5583, i32* %5584, align 8
  br label %5585

; <label>:5585:                                   ; preds = %5562, %5570
  store i32 %5491, i32* %5558, align 4
  br label %5586

; <label>:5586:                                   ; preds = %5585, %5568
  %5587 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 6
  %5588 = load i32, i32* %5587, align 4
  %5589 = add nsw i32 %5588, 65536
  %5590 = icmp eq i32 %5589, %5491
  br i1 %5590, label %5591, label %5597

; <label>:5591:                                   ; preds = %5586
  %5592 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 3
  %5593 = load i32, i32* %5592, align 8
  %5594 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 4
  %5595 = load i32, i32* %5594, align 4
  %5596 = add nsw i32 %5595, %5593
  store i32 %5596, i32* %5592, align 8
  store i32 %5491, i32* %5587, align 4
  br label %5617

; <label>:5597:                                   ; preds = %5586
  %5598 = icmp eq i32 %5588, %5491
  br i1 %5598, label %5599, label %5602

; <label>:5599:                                   ; preds = %5597
  %5600 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 3
  %5601 = load i32, i32* %5600, align 8
  br label %5617

; <label>:5602:                                   ; preds = %5597
  %5603 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 5
  %5604 = load i32, i32* %5603, align 8
  %5605 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 4
  %5606 = load i32, i32* %5605, align 4
  %5607 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 7
  %5608 = load i32, i32* %5607, align 8
  %5609 = sub nsw i32 %5491, %5608
  %5610 = sext i32 %5606 to i64
  %5611 = sext i32 %5609 to i64
  %5612 = mul nsw i64 %5611, %5610
  %5613 = lshr i64 %5612, 16
  %5614 = trunc i64 %5613 to i32
  %5615 = add nsw i32 %5604, %5614
  %5616 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 3
  store i32 %5615, i32* %5616, align 8
  store i32 %5491, i32* %5587, align 4
  br label %5617

; <label>:5617:                                   ; preds = %5602, %5599, %5591
  %5618 = phi i32 [ %5601, %5599 ], [ %5596, %5591 ], [ %5615, %5602 ]
  %5619 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 3
  %5620 = load i32, i32* %5619, align 8
  %5621 = icmp sgt i32 %5620, %5618
  br i1 %5621, label %5630, label %5622

; <label>:5622:                                   ; preds = %5617
  %5623 = icmp eq i32 %5620, %5618
  br i1 %5623, label %5624, label %5631

; <label>:5624:                                   ; preds = %5622
  %5625 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5502, i64 0, i32 4
  %5626 = load i32, i32* %5625, align 4
  %5627 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5554, i64 0, i32 4
  %5628 = load i32, i32* %5627, align 4
  %5629 = icmp sgt i32 %5626, %5628
  br i1 %5629, label %5630, label %5631

; <label>:5630:                                   ; preds = %5624, %5617
  br label %5631

; <label>:5631:                                   ; preds = %5630, %5624, %5622
  %5632 = phi i64 [ %5500, %5630 ], [ %5552, %5624 ], [ %5552, %5622 ]
  %5633 = phi i64 [ %5552, %5630 ], [ %5500, %5624 ], [ %5500, %5622 ]
  %5634 = inttoptr i64 %5633 to %struct.SkAnalyticEdge*
  %5635 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 8
  %5636 = load i32, i32* %5635, align 4
  %5637 = inttoptr i64 %5632 to %struct.SkAnalyticEdge*
  %5638 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 8
  %5639 = load i32, i32* %5638, align 4
  %5640 = icmp sgt i32 %5636, %5639
  %5641 = select i1 %5640, i32 %5639, i32 %5636
  %5642 = ptrtoint %struct.SkAnalyticEdge* %5553 to i64
  %5643 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5553, i64 0, i32 7
  %5644 = load i32, i32* %5643, align 8
  %5645 = icmp slt i32 %5644, %5481
  br i1 %5645, label %5646, label %5679

; <label>:5646:                                   ; preds = %5631
  %5647 = add nsw i32 %5636, 65536
  %5648 = icmp slt i32 %5647, %5639
  br i1 %5648, label %5649, label %5651

; <label>:5649:                                   ; preds = %5646
  %5650 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %5634, %struct.SkAnalyticEdge* nonnull %5553) #12
  br i1 %5650, label %5676, label %5679

; <label>:5651:                                   ; preds = %5646
  %5652 = add nsw i32 %5639, 65536
  %5653 = icmp sgt i32 %5636, %5652
  br i1 %5653, label %5654, label %5656

; <label>:5654:                                   ; preds = %5651
  %5655 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %5637, %struct.SkAnalyticEdge* nonnull %5553) #12
  br i1 %5655, label %5676, label %5679

; <label>:5656:                                   ; preds = %5651
  %5657 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5553, i64 0, i32 0
  %5658 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5657, align 8
  %5659 = ptrtoint %struct.SkAnalyticEdge* %5658 to i64
  %5660 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5658, i64 0, i32 7
  %5661 = load i32, i32* %5660, align 8
  %5662 = icmp slt i32 %5661, %5481
  br i1 %5662, label %5663, label %5679

; <label>:5663:                                   ; preds = %5656
  %5664 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5658, i64 0, i32 5
  %5665 = load i32, i32* %5664, align 8
  %5666 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5553, i64 0, i32 5
  %5667 = load i32, i32* %5666, align 8
  %5668 = icmp slt i32 %5665, %5667
  %5669 = select i1 %5668, i64 %5659, i64 %5642
  %5670 = inttoptr i64 %5669 to %struct.SkAnalyticEdge*
  %5671 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %5634, %struct.SkAnalyticEdge* %5670) #12
  br i1 %5671, label %5672, label %5679

; <label>:5672:                                   ; preds = %5663
  %5673 = select i1 %5668, i64 %5642, i64 %5659
  %5674 = inttoptr i64 %5673 to %struct.SkAnalyticEdge*
  %5675 = call fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nonnull %5637, %struct.SkAnalyticEdge* %5674) #12
  br i1 %5675, label %5676, label %5679

; <label>:5676:                                   ; preds = %5672, %5654, %5649
  %5677 = add nsw i32 %5641, 65535
  %5678 = and i32 %5677, -65536
  br label %5679

; <label>:5679:                                   ; preds = %5676, %5672, %5663, %5656, %5654, %5649, %5631
  %5680 = phi i32 [ %5678, %5676 ], [ %5641, %5672 ], [ %5641, %5649 ], [ %5641, %5654 ], [ %5641, %5631 ], [ %5641, %5656 ], [ %5641, %5663 ]
  %5681 = icmp sgt i32 %5680, %5481
  %5682 = select i1 %5681, i32 %5481, i32 %5680
  %5683 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 3
  %5684 = load i32, i32* %5683, align 4
  %5685 = icmp slt i32 %5684, %5451
  %5686 = select i1 %5685, i32 %5451, i32 %5684
  %5687 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 4
  %5688 = load i32, i32* %5687, align 4
  %5689 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 3
  %5690 = load i32, i32* %5689, align 4
  %5691 = icmp sgt i32 %5690, %5452
  %5692 = select i1 %5691, i32 %5452, i32 %5690
  %5693 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 4
  %5694 = load i32, i32* %5693, align 4
  %5695 = or i32 %5694, %5688
  %5696 = icmp eq i32 %5695, 0
  br i1 %5696, label %5697, label %5888

; <label>:5697:                                   ; preds = %5679
  %5698 = add nsw i32 %5686, 65535
  %5699 = ashr i32 %5698, 16
  %5700 = ashr i32 %5692, 16
  %5701 = and i32 %5698, -65536
  %5702 = sub nsw i32 %5701, %5686
  %5703 = and i32 %5692, 65535
  %5704 = add nsw i32 %5491, 65535
  %5705 = ashr i32 %5704, 16
  %5706 = ashr i32 %5682, 16
  %5707 = and i32 %5704, -65536
  %5708 = sub nsw i32 %5707, %5491
  %5709 = and i32 %5682, 65535
  %5710 = icmp slt i32 %5706, %5705
  %5711 = or i32 %5682, -65536
  %5712 = select i1 %5710, i32 0, i32 %5709
  %5713 = select i1 %5710, i32 %5711, i32 0
  %5714 = add i32 %5713, %5708
  %5715 = icmp slt i32 %5700, %5699
  %5716 = icmp sgt i32 %5714, 0
  br i1 %5715, label %5832, label %5717

; <label>:5717:                                   ; preds = %5697
  br i1 %5716, label %5718, label %5766

; <label>:5718:                                   ; preds = %5717
  %5719 = icmp sgt i32 %5702, 0
  br i1 %5719, label %5722, label %5720

; <label>:5720:                                   ; preds = %5718
  %5721 = add nsw i32 %5705, -1
  br label %5737

; <label>:5722:                                   ; preds = %5718
  %5723 = add nsw i32 %5699, -1
  %5724 = add nsw i32 %5705, -1
  %5725 = sext i32 %5714 to i64
  %5726 = sext i32 %5702 to i64
  %5727 = mul nsw i64 %5726, %5725
  %5728 = lshr i64 %5727, 16
  %5729 = trunc i64 %5728 to i32
  %5730 = mul nsw i32 %5729, 255
  %5731 = add nsw i32 %5730, 32768
  %5732 = lshr i32 %5731, 16
  %5733 = trunc i32 %5732 to i8
  %5734 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %5735 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5734, i64 17
  %5736 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5735, align 8
  call void %5736(%class.AdditiveBlitter* nonnull %5281, i32 %5723, i32 %5724, i8 zeroext %5733) #12
  br label %5737

; <label>:5737:                                   ; preds = %5722, %5720
  %5738 = phi i32 [ %5721, %5720 ], [ %5724, %5722 ]
  %5739 = sub nsw i32 %5700, %5699
  %5740 = mul nsw i32 %5714, 255
  %5741 = add nsw i32 %5740, 32768
  %5742 = lshr i32 %5741, 16
  %5743 = trunc i32 %5742 to i8
  %5744 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5482, align 8
  %5745 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5744, i64 18
  %5746 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5745, align 8
  call void %5746(%class.AdditiveBlitter* nonnull %5281, i32 %5699, i32 %5738, i32 %5739, i8 zeroext %5743) #12
  %5747 = icmp eq i32 %5703, 0
  br i1 %5747, label %5761, label %5748

; <label>:5748:                                   ; preds = %5737
  %5749 = sext i32 %5714 to i64
  %5750 = zext i32 %5703 to i64
  %5751 = mul nsw i64 %5750, %5749
  %5752 = lshr i64 %5751, 16
  %5753 = trunc i64 %5752 to i32
  %5754 = mul nsw i32 %5753, 255
  %5755 = add nsw i32 %5754, 32768
  %5756 = lshr i32 %5755, 16
  %5757 = trunc i32 %5756 to i8
  %5758 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %5759 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5758, i64 17
  %5760 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5759, align 8
  call void %5760(%class.AdditiveBlitter* nonnull %5281, i32 %5700, i32 %5738, i8 zeroext %5757) #12
  br label %5761

; <label>:5761:                                   ; preds = %5748, %5737
  %5762 = add i32 %5713, %5707
  %5763 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5483, align 8
  %5764 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5763, i64 20
  %5765 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5764, align 8
  call void %5765(%class.AdditiveBlitter* nonnull %5281, i32 %5491, i32 %5762) #12
  br label %5766

; <label>:5766:                                   ; preds = %5761, %5717
  %5767 = icmp sgt i32 %5706, %5705
  br i1 %5767, label %5768, label %5794

; <label>:5768:                                   ; preds = %5766
  %5769 = icmp sle i32 %5700, %5699
  %5770 = mul nsw i32 %5702, 255
  %5771 = add nsw i32 %5770, 32768
  %5772 = lshr i32 %5771, 16
  %5773 = mul nuw nsw i32 %5703, 255
  %5774 = add nuw nsw i32 %5773, 32768
  %5775 = lshr i32 %5774, 16
  %5776 = or i32 %5772, %5775
  %5777 = trunc i32 %5776 to i8
  %5778 = icmp eq i8 %5777, 0
  %5779 = and i1 %5769, %5778
  br i1 %5779, label %5794, label %5780

; <label>:5780:                                   ; preds = %5768
  %5781 = trunc i32 %5772 to i8
  %5782 = trunc i32 %5775 to i8
  %5783 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %5784 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5783, i64 15
  %5785 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5784, align 8
  %5786 = call %class.SkBlitter* %5785(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %5787 = add nsw i32 %5699, -1
  %5788 = sub nsw i32 %5700, %5699
  %5789 = sub nsw i32 %5706, %5705
  %5790 = bitcast %class.SkBlitter* %5786 to void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)***
  %5791 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)**, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*** %5790, align 8
  %5792 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %5791, i64 7
  %5793 = load void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)*, void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)** %5792, align 8
  call void %5793(%class.SkBlitter* %5786, i32 %5787, i32 %5705, i32 %5788, i32 %5789, i8 zeroext %5781, i8 zeroext %5782) #12
  br label %5794

; <label>:5794:                                   ; preds = %5780, %5768, %5766
  %5795 = icmp eq i32 %5712, 0
  br i1 %5795, label %6534, label %5796

; <label>:5796:                                   ; preds = %5794
  %5797 = icmp sgt i32 %5702, 0
  br i1 %5797, label %5798, label %5812

; <label>:5798:                                   ; preds = %5796
  %5799 = add nsw i32 %5699, -1
  %5800 = zext i32 %5712 to i64
  %5801 = sext i32 %5702 to i64
  %5802 = mul nsw i64 %5801, %5800
  %5803 = lshr i64 %5802, 16
  %5804 = trunc i64 %5803 to i32
  %5805 = mul nsw i32 %5804, 255
  %5806 = add nsw i32 %5805, 32768
  %5807 = lshr i32 %5806, 16
  %5808 = trunc i32 %5807 to i8
  %5809 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %5810 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5809, i64 17
  %5811 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5810, align 8
  call void %5811(%class.AdditiveBlitter* nonnull %5281, i32 %5799, i32 %5706, i8 zeroext %5808) #12
  br label %5812

; <label>:5812:                                   ; preds = %5798, %5796
  %5813 = sub nsw i32 %5700, %5699
  %5814 = mul nuw nsw i32 %5712, 255
  %5815 = add nuw nsw i32 %5814, 32768
  %5816 = lshr i32 %5815, 16
  %5817 = trunc i32 %5816 to i8
  %5818 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5482, align 8
  %5819 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5818, i64 18
  %5820 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5819, align 8
  call void %5820(%class.AdditiveBlitter* nonnull %5281, i32 %5699, i32 %5706, i32 %5813, i8 zeroext %5817) #12
  %5821 = icmp eq i32 %5703, 0
  br i1 %5821, label %6534, label %5822

; <label>:5822:                                   ; preds = %5812
  %5823 = mul nuw i32 %5703, %5712
  %5824 = lshr i32 %5823, 16
  %5825 = mul nuw nsw i32 %5824, 255
  %5826 = add nuw nsw i32 %5825, 32768
  %5827 = lshr i32 %5826, 16
  %5828 = trunc i32 %5827 to i8
  %5829 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %5830 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5829, i64 17
  %5831 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5830, align 8
  call void %5831(%class.AdditiveBlitter* nonnull %5281, i32 %5700, i32 %5706, i8 zeroext %5828) #12
  br label %6534

; <label>:5832:                                   ; preds = %5697
  br i1 %5716, label %5833, label %5853

; <label>:5833:                                   ; preds = %5832
  %5834 = add nsw i32 %5699, -1
  %5835 = add nsw i32 %5705, -1
  %5836 = sub nsw i32 %5692, %5686
  %5837 = sext i32 %5714 to i64
  %5838 = sext i32 %5836 to i64
  %5839 = mul nsw i64 %5838, %5837
  %5840 = lshr i64 %5839, 16
  %5841 = trunc i64 %5840 to i32
  %5842 = mul nsw i32 %5841, 255
  %5843 = add nsw i32 %5842, 32768
  %5844 = lshr i32 %5843, 16
  %5845 = trunc i32 %5844 to i8
  %5846 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5482, align 8
  %5847 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5846, i64 18
  %5848 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5847, align 8
  call void %5848(%class.AdditiveBlitter* nonnull %5281, i32 %5834, i32 %5835, i32 1, i8 zeroext %5845) #12
  %5849 = add i32 %5713, %5707
  %5850 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5483, align 8
  %5851 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5850, i64 20
  %5852 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %5851, align 8
  call void %5852(%class.AdditiveBlitter* nonnull %5281, i32 %5491, i32 %5849) #12
  br label %5853

; <label>:5853:                                   ; preds = %5833, %5832
  %5854 = icmp sgt i32 %5706, %5705
  br i1 %5854, label %5855, label %5871

; <label>:5855:                                   ; preds = %5853
  %5856 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %5857 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5856, i64 15
  %5858 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5857, align 8
  %5859 = call %class.SkBlitter* %5858(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %5860 = add nsw i32 %5699, -1
  %5861 = sub nsw i32 %5706, %5705
  %5862 = sub nsw i32 %5692, %5686
  %5863 = mul nsw i32 %5862, 255
  %5864 = add nsw i32 %5863, 32768
  %5865 = lshr i32 %5864, 16
  %5866 = trunc i32 %5865 to i8
  %5867 = bitcast %class.SkBlitter* %5859 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5868 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5867, align 8
  %5869 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5868, i64 5
  %5870 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5869, align 8
  call void %5870(%class.SkBlitter* %5859, i32 %5860, i32 %5705, i32 %5861, i8 zeroext %5866) #12
  br label %5871

; <label>:5871:                                   ; preds = %5855, %5853
  %5872 = icmp eq i32 %5712, 0
  br i1 %5872, label %6534, label %5873

; <label>:5873:                                   ; preds = %5871
  %5874 = add nsw i32 %5699, -1
  %5875 = sub nsw i32 %5692, %5686
  %5876 = zext i32 %5712 to i64
  %5877 = sext i32 %5875 to i64
  %5878 = mul nsw i64 %5877, %5876
  %5879 = lshr i64 %5878, 16
  %5880 = trunc i64 %5879 to i32
  %5881 = mul nsw i32 %5880, 255
  %5882 = add nsw i32 %5881, 32768
  %5883 = lshr i32 %5882, 16
  %5884 = trunc i32 %5883 to i8
  %5885 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5482, align 8
  %5886 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5885, i64 18
  %5887 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %5886, align 8
  call void %5887(%class.AdditiveBlitter* nonnull %5281, i32 %5874, i32 %5706, i32 1, i8 zeroext %5884) #12
  br label %6534

; <label>:5888:                                   ; preds = %5679
  %5889 = add nsw i32 %5686, 2048
  %5890 = add nsw i32 %5692, 2048
  %5891 = add nsw i32 %5682, 65535
  %5892 = ashr i32 %5891, 16
  %5893 = sub nsw i32 %5892, %5555
  %5894 = icmp sgt i32 %5893, 1
  br i1 %5894, label %5898, label %5895

; <label>:5895:                                   ; preds = %5888
  %5896 = and i32 %5889, -4096
  %5897 = and i32 %5890, -4096
  br label %6301

; <label>:5898:                                   ; preds = %5888
  %5899 = and i32 %5491, -65536
  %5900 = icmp eq i32 %5899, %5491
  br i1 %5900, label %5901, label %5904

; <label>:5901:                                   ; preds = %5898
  %5902 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 9
  %5903 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 9
  br label %6131

; <label>:5904:                                   ; preds = %5898
  %5905 = add nsw i32 %5893, -1
  %5906 = add nsw i32 %5491, 65536
  %5907 = and i32 %5906, -65536
  %5908 = sub nsw i32 %5907, %5491
  %5909 = sext i32 %5688 to i64
  %5910 = sext i32 %5908 to i64
  %5911 = mul nsw i64 %5909, %5910
  %5912 = lshr i64 %5911, 16
  %5913 = trunc i64 %5912 to i32
  %5914 = add nsw i32 %5889, %5913
  %5915 = sext i32 %5694 to i64
  %5916 = mul nsw i64 %5915, %5910
  %5917 = lshr i64 %5916, 16
  %5918 = trunc i64 %5917 to i32
  %5919 = add nsw i32 %5890, %5918
  %5920 = and i32 %5889, -4096
  %5921 = and i32 %5890, -4096
  %5922 = and i32 %5914, -4096
  %5923 = and i32 %5919, -4096
  %5924 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 9
  %5925 = load i32, i32* %5924, align 8
  %5926 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 9
  %5927 = load i32, i32* %5926, align 8
  %5928 = mul nsw i32 %5908, 255
  %5929 = add nsw i32 %5928, 32768
  %5930 = lshr i32 %5929, 16
  %5931 = trunc i32 %5930 to i8
  %5932 = icmp sgt i32 %5920, %5921
  br i1 %5932, label %6126, label %5933

; <label>:5933:                                   ; preds = %5904
  %5934 = icmp sgt i32 %5922, %5923
  br i1 %5934, label %5935, label %5948

; <label>:5935:                                   ; preds = %5933
  %5936 = icmp sgt i32 %5920, %5922
  %5937 = select i1 %5936, i32 %5922, i32 %5920
  %5938 = select i1 %5936, i32 %5920, i32 %5922
  %5939 = icmp sgt i32 %5921, %5923
  %5940 = select i1 %5939, i32 %5923, i32 %5921
  %5941 = select i1 %5939, i32 %5921, i32 %5923
  %5942 = icmp slt i32 %5940, %5937
  %5943 = select i1 %5942, i32 %5937, i32 %5940
  %5944 = icmp slt i32 %5938, %5941
  %5945 = select i1 %5944, i32 %5938, i32 %5941
  %5946 = add nsw i32 %5943, %5945
  %5947 = ashr exact i32 %5946, 1
  br label %5948

; <label>:5948:                                   ; preds = %5935, %5933
  %5949 = phi i32 [ %5947, %5935 ], [ %5922, %5933 ]
  %5950 = phi i32 [ %5947, %5935 ], [ %5923, %5933 ]
  %5951 = icmp eq i32 %5920, %5921
  %5952 = icmp eq i32 %5949, %5950
  %5953 = and i1 %5951, %5952
  br i1 %5953, label %6126, label %5954

; <label>:5954:                                   ; preds = %5948
  %5955 = icmp slt i32 %5949, %5920
  %5956 = select i1 %5955, i32 %5949, i32 %5920
  %5957 = select i1 %5955, i32 %5920, i32 %5949
  %5958 = icmp slt i32 %5950, %5921
  %5959 = select i1 %5958, i32 %5950, i32 %5921
  %5960 = select i1 %5958, i32 %5921, i32 %5950
  %5961 = add nsw i32 %5957, 65535
  %5962 = and i32 %5961, -65536
  %5963 = and i32 %5959, -65536
  %5964 = icmp slt i32 %5963, %5962
  br i1 %5964, label %6125, label %5965

; <label>:5965:                                   ; preds = %5954
  %5966 = icmp sgt i32 %5962, %5956
  br i1 %5966, label %5967, label %6035

; <label>:5967:                                   ; preds = %5965
  %5968 = sub nsw i32 %5962, %5956
  %5969 = add nsw i32 %5968, 65535
  %5970 = ashr i32 %5969, 16
  switch i32 %5970, label %6034 [
    i32 1, label %5971
    i32 2, label %5996
  ]

; <label>:5971:                                   ; preds = %5967
  %5972 = sub i32 %5962, %5957
  %5973 = add nsw i32 %5972, %5968
  %5974 = lshr i32 %5973, 9
  %5975 = ashr i32 %5956, 16
  %5976 = icmp eq i8 %5931, -1
  br i1 %5976, label %5977, label %5987

; <label>:5977:                                   ; preds = %5971
  %5978 = trunc i32 %5974 to i8
  %5979 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %5980 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5979, i64 15
  %5981 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %5980, align 8
  %5982 = call %class.SkBlitter* %5981(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %5983 = bitcast %class.SkBlitter* %5982 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %5984 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %5983, align 8
  %5985 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5984, i64 5
  %5986 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %5985, align 8
  call void %5986(%class.SkBlitter* %5982, i32 %5975, i32 %5555, i32 1, i8 zeroext %5978) #12
  br label %6035

; <label>:5987:                                   ; preds = %5971
  %5988 = and i32 %5974, 255
  %5989 = and i32 %5930, 255
  %5990 = mul nuw nsw i32 %5988, %5989
  %5991 = lshr i32 %5990, 8
  %5992 = trunc i32 %5991 to i8
  %5993 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %5994 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5993, i64 17
  %5995 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %5994, align 8
  call void %5995(%class.AdditiveBlitter* nonnull %5281, i32 %5975, i32 %5555, i8 zeroext %5992) #12
  br label %6035

; <label>:5996:                                   ; preds = %5967
  %5997 = sub i32 -65536, %5956
  %5998 = add i32 %5962, %5997
  %5999 = sub i32 %5957, %5956
  %6000 = sub i32 %5999, %5998
  %6001 = ashr i32 %5998, 11
  %6002 = ashr i32 %5925, 11
  %6003 = mul i32 %6001, %6002
  %6004 = mul i32 %6003, %6001
  %6005 = lshr i32 %6004, 8
  %6006 = ashr i32 %6000, 11
  %6007 = mul i32 %6006, %6002
  %6008 = mul i32 %6007, %6006
  %6009 = lshr i32 %6008, 8
  %6010 = trunc i32 %6009 to i8
  %6011 = sub i8 %5931, %6010
  %6012 = ashr i32 %5956, 16
  %6013 = icmp eq i8 %5931, -1
  br i1 %6013, label %6014, label %6025

; <label>:6014:                                   ; preds = %5996
  %6015 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6016 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6015, i64 15
  %6017 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6016, align 8
  %6018 = call %class.SkBlitter* %6017(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6019 = and i32 %6005, 255
  %6020 = zext i8 %6011 to i32
  %6021 = bitcast %class.SkBlitter* %6018 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6022 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6021, align 8
  %6023 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6022, i64 10
  %6024 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6023, align 8
  call void %6024(%class.SkBlitter* %6018, i32 %6012, i32 %5555, i32 %6019, i32 %6020) #12
  br label %6035

; <label>:6025:                                   ; preds = %5996
  %6026 = trunc i32 %6005 to i8
  %6027 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6028 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6027, i64 17
  %6029 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6028, align 8
  call void %6029(%class.AdditiveBlitter* nonnull %5281, i32 %6012, i32 %5555, i8 zeroext %6026) #12
  %6030 = add nsw i32 %6012, 1
  %6031 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6032 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6031, i64 17
  %6033 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6032, align 8
  call void %6033(%class.AdditiveBlitter* nonnull %5281, i32 %6030, i32 %5555, i8 zeroext %6011) #12
  br label %6035

; <label>:6034:                                   ; preds = %5967
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %5555, i32 %5956, i32 %5962, i32 %5957, i32 %5962, i32 %5925, i32 2147483647, i8 zeroext %5931, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6035

; <label>:6035:                                   ; preds = %6034, %6025, %6014, %5987, %5977, %5965
  %6036 = icmp sgt i32 %5963, %5962
  br i1 %6036, label %6037, label %6055

; <label>:6037:                                   ; preds = %6035
  %6038 = ashr i32 %5961, 16
  %6039 = sub nsw i32 %5963, %5962
  %6040 = ashr exact i32 %6039, 16
  %6041 = icmp eq i8 %5931, -1
  br i1 %6041, label %6042, label %6051

; <label>:6042:                                   ; preds = %6037
  %6043 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6044 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6043, i64 15
  %6045 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6044, align 8
  %6046 = call %class.SkBlitter* %6045(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6047 = bitcast %class.SkBlitter* %6046 to void (%class.SkBlitter*, i32, i32, i32)***
  %6048 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6047, align 8
  %6049 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6048, i64 3
  %6050 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6049, align 8
  call void %6050(%class.SkBlitter* %6046, i32 %6038, i32 %5555, i32 %6040) #12
  br label %6055

; <label>:6051:                                   ; preds = %6037
  %6052 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5482, align 8
  %6053 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6052, i64 18
  %6054 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6053, align 8
  call void %6054(%class.AdditiveBlitter* nonnull %5281, i32 %6038, i32 %5555, i32 %6040, i8 zeroext %5931) #12
  br label %6055

; <label>:6055:                                   ; preds = %6051, %6042, %6035
  %6056 = icmp sgt i32 %5960, %5963
  br i1 %6056, label %6057, label %6126

; <label>:6057:                                   ; preds = %6055
  %6058 = sub nsw i32 %5960, %5963
  %6059 = add nsw i32 %6058, 65535
  %6060 = ashr i32 %6059, 16
  switch i32 %6060, label %6124 [
    i32 1, label %6061
    i32 2, label %6086
  ]

; <label>:6061:                                   ; preds = %6057
  %6062 = sub i32 %5959, %5963
  %6063 = add nsw i32 %6062, %6058
  %6064 = lshr i32 %6063, 9
  %6065 = ashr i32 %5959, 16
  %6066 = icmp eq i8 %5931, -1
  br i1 %6066, label %6067, label %6077

; <label>:6067:                                   ; preds = %6061
  %6068 = trunc i32 %6064 to i8
  %6069 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6070 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6069, i64 15
  %6071 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6070, align 8
  %6072 = call %class.SkBlitter* %6071(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6073 = bitcast %class.SkBlitter* %6072 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6074 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6073, align 8
  %6075 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6074, i64 5
  %6076 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6075, align 8
  call void %6076(%class.SkBlitter* %6072, i32 %6065, i32 %5555, i32 1, i8 zeroext %6068) #12
  br label %6126

; <label>:6077:                                   ; preds = %6061
  %6078 = and i32 %6064, 255
  %6079 = and i32 %5930, 255
  %6080 = mul nuw nsw i32 %6078, %6079
  %6081 = lshr i32 %6080, 8
  %6082 = trunc i32 %6081 to i8
  %6083 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6084 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6083, i64 17
  %6085 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6084, align 8
  call void %6085(%class.AdditiveBlitter* nonnull %5281, i32 %6065, i32 %5555, i8 zeroext %6082) #12
  br label %6126

; <label>:6086:                                   ; preds = %6057
  %6087 = sub i32 65536, %5959
  %6088 = add i32 %6087, %5963
  %6089 = sub i32 %5960, %5959
  %6090 = sub i32 %6089, %6088
  %6091 = ashr i32 %6088, 11
  %6092 = ashr i32 %5927, 11
  %6093 = mul i32 %6091, %6092
  %6094 = mul i32 %6093, %6091
  %6095 = lshr i32 %6094, 8
  %6096 = trunc i32 %6095 to i8
  %6097 = sub i8 %5931, %6096
  %6098 = ashr i32 %6090, 11
  %6099 = mul i32 %6098, %6092
  %6100 = mul i32 %6099, %6098
  %6101 = lshr i32 %6100, 8
  %6102 = ashr i32 %5959, 16
  %6103 = icmp eq i8 %5931, -1
  br i1 %6103, label %6104, label %6115

; <label>:6104:                                   ; preds = %6086
  %6105 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6106 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6105, i64 15
  %6107 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6106, align 8
  %6108 = call %class.SkBlitter* %6107(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6109 = zext i8 %6097 to i32
  %6110 = and i32 %6101, 255
  %6111 = bitcast %class.SkBlitter* %6108 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6112 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6111, align 8
  %6113 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6112, i64 10
  %6114 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6113, align 8
  call void %6114(%class.SkBlitter* %6108, i32 %6102, i32 %5555, i32 %6109, i32 %6110) #12
  br label %6126

; <label>:6115:                                   ; preds = %6086
  %6116 = trunc i32 %6101 to i8
  %6117 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6118 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6117, i64 17
  %6119 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6118, align 8
  call void %6119(%class.AdditiveBlitter* nonnull %5281, i32 %6102, i32 %5555, i8 zeroext %6097) #12
  %6120 = add nsw i32 %6102, 1
  %6121 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6122 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6121, i64 17
  %6123 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6122, align 8
  call void %6123(%class.AdditiveBlitter* nonnull %5281, i32 %6120, i32 %5555, i8 zeroext %6116) #12
  br label %6126

; <label>:6124:                                   ; preds = %6057
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %5555, i32 %5963, i32 %5959, i32 %5963, i32 %5960, i32 2147483647, i32 %5927, i8 zeroext %5931, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6126

; <label>:6125:                                   ; preds = %5954
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %5555, i32 %5956, i32 %5959, i32 %5957, i32 %5960, i32 %5925, i32 %5927, i8 zeroext %5931, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6126

; <label>:6126:                                   ; preds = %6125, %6124, %6115, %6104, %6077, %6067, %6055, %5948, %5904
  %6127 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5483, align 8
  %6128 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6127, i64 20
  %6129 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6128, align 8
  call void %6129(%class.AdditiveBlitter* nonnull %5281, i32 %5491, i32 %5907) #12
  %6130 = icmp sgt i32 %5893, 2
  br i1 %6130, label %6131, label %6301

; <label>:6131:                                   ; preds = %6126, %5901
  %6132 = phi i32* [ %5903, %5901 ], [ %5926, %6126 ]
  %6133 = phi i32* [ %5902, %5901 ], [ %5924, %6126 ]
  %6134 = phi i32 [ %5491, %5901 ], [ %5907, %6126 ]
  %6135 = phi i32 [ %5889, %5901 ], [ %5914, %6126 ]
  %6136 = phi i32 [ %5890, %5901 ], [ %5919, %6126 ]
  %6137 = phi i32 [ %5893, %5901 ], [ %5905, %6126 ]
  br label %6138

; <label>:6138:                                   ; preds = %6296, %6131
  %6139 = phi i32 [ %6134, %6131 ], [ %6145, %6296 ]
  %6140 = phi i32 [ %6135, %6131 ], [ %6146, %6296 ]
  %6141 = phi i32 [ %6136, %6131 ], [ %6147, %6296 ]
  %6142 = phi i32 [ %6137, %6131 ], [ %6143, %6296 ]
  %6143 = add nsw i32 %6142, -1
  %6144 = ashr i32 %6139, 16
  %6145 = add nsw i32 %6139, 65536
  %6146 = add nsw i32 %6140, %5688
  %6147 = add nsw i32 %6141, %5694
  %6148 = and i32 %6140, -4096
  %6149 = and i32 %6141, -4096
  %6150 = and i32 %6146, -4096
  %6151 = and i32 %6147, -4096
  %6152 = load i32, i32* %6133, align 8
  %6153 = load i32, i32* %6132, align 8
  %6154 = icmp sgt i32 %6148, %6149
  br i1 %6154, label %6296, label %6155

; <label>:6155:                                   ; preds = %6138
  %6156 = icmp sgt i32 %6150, %6151
  br i1 %6156, label %6157, label %6170

; <label>:6157:                                   ; preds = %6155
  %6158 = icmp sgt i32 %6148, %6150
  %6159 = select i1 %6158, i32 %6150, i32 %6148
  %6160 = select i1 %6158, i32 %6148, i32 %6150
  %6161 = icmp sgt i32 %6149, %6151
  %6162 = select i1 %6161, i32 %6151, i32 %6149
  %6163 = select i1 %6161, i32 %6149, i32 %6151
  %6164 = icmp slt i32 %6162, %6159
  %6165 = select i1 %6164, i32 %6159, i32 %6162
  %6166 = icmp slt i32 %6160, %6163
  %6167 = select i1 %6166, i32 %6160, i32 %6163
  %6168 = add nsw i32 %6165, %6167
  %6169 = ashr exact i32 %6168, 1
  br label %6170

; <label>:6170:                                   ; preds = %6157, %6155
  %6171 = phi i32 [ %6169, %6157 ], [ %6150, %6155 ]
  %6172 = phi i32 [ %6169, %6157 ], [ %6151, %6155 ]
  %6173 = icmp eq i32 %6148, %6149
  %6174 = icmp eq i32 %6171, %6172
  %6175 = and i1 %6173, %6174
  br i1 %6175, label %6296, label %6176

; <label>:6176:                                   ; preds = %6170
  %6177 = icmp slt i32 %6171, %6148
  %6178 = select i1 %6177, i32 %6171, i32 %6148
  %6179 = select i1 %6177, i32 %6148, i32 %6171
  %6180 = icmp slt i32 %6172, %6149
  %6181 = select i1 %6180, i32 %6172, i32 %6149
  %6182 = select i1 %6180, i32 %6149, i32 %6172
  %6183 = add nsw i32 %6179, 65535
  %6184 = and i32 %6183, -65536
  %6185 = and i32 %6181, -65536
  %6186 = icmp slt i32 %6185, %6184
  br i1 %6186, label %6295, label %6187

; <label>:6187:                                   ; preds = %6176
  %6188 = icmp sgt i32 %6184, %6178
  br i1 %6188, label %6189, label %6234

; <label>:6189:                                   ; preds = %6187
  %6190 = sub nsw i32 %6184, %6178
  %6191 = add nsw i32 %6190, 65535
  %6192 = ashr i32 %6191, 16
  switch i32 %6192, label %6233 [
    i32 1, label %6193
    i32 2, label %6207
  ]

; <label>:6193:                                   ; preds = %6189
  %6194 = sub i32 %6184, %6179
  %6195 = add nsw i32 %6194, %6190
  %6196 = lshr i32 %6195, 9
  %6197 = trunc i32 %6196 to i8
  %6198 = ashr i32 %6178, 16
  %6199 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6200 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6199, i64 15
  %6201 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6200, align 8
  %6202 = call %class.SkBlitter* %6201(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6203 = bitcast %class.SkBlitter* %6202 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6204 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6203, align 8
  %6205 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6204, i64 5
  %6206 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6205, align 8
  call void %6206(%class.SkBlitter* %6202, i32 %6198, i32 %6144, i32 1, i8 zeroext %6197) #12
  br label %6234

; <label>:6207:                                   ; preds = %6189
  %6208 = sub i32 -65536, %6178
  %6209 = add i32 %6184, %6208
  %6210 = sub i32 %6179, %6178
  %6211 = sub i32 %6210, %6209
  %6212 = ashr i32 %6209, 11
  %6213 = ashr i32 %6152, 11
  %6214 = mul i32 %6212, %6213
  %6215 = mul i32 %6214, %6212
  %6216 = lshr i32 %6215, 8
  %6217 = ashr i32 %6211, 11
  %6218 = mul i32 %6217, %6213
  %6219 = mul i32 %6218, %6217
  %6220 = lshr i32 %6219, 8
  %6221 = ashr i32 %6178, 16
  %6222 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6223 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6222, i64 15
  %6224 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6223, align 8
  %6225 = call %class.SkBlitter* %6224(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6226 = and i32 %6216, 255
  %6227 = and i32 %6220, 255
  %6228 = xor i32 %6227, 255
  %6229 = bitcast %class.SkBlitter* %6225 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6230 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6229, align 8
  %6231 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6230, i64 10
  %6232 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6231, align 8
  call void %6232(%class.SkBlitter* %6225, i32 %6221, i32 %6144, i32 %6226, i32 %6228) #12
  br label %6234

; <label>:6233:                                   ; preds = %6189
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6144, i32 %6178, i32 %6184, i32 %6179, i32 %6184, i32 %6152, i32 2147483647, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6234

; <label>:6234:                                   ; preds = %6233, %6207, %6193, %6187
  %6235 = icmp sgt i32 %6185, %6184
  br i1 %6235, label %6236, label %6248

; <label>:6236:                                   ; preds = %6234
  %6237 = ashr i32 %6183, 16
  %6238 = sub nsw i32 %6185, %6184
  %6239 = ashr exact i32 %6238, 16
  %6240 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6241 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6240, i64 15
  %6242 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6241, align 8
  %6243 = call %class.SkBlitter* %6242(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6244 = bitcast %class.SkBlitter* %6243 to void (%class.SkBlitter*, i32, i32, i32)***
  %6245 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6244, align 8
  %6246 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6245, i64 3
  %6247 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6246, align 8
  call void %6247(%class.SkBlitter* %6243, i32 %6237, i32 %6144, i32 %6239) #12
  br label %6248

; <label>:6248:                                   ; preds = %6236, %6234
  %6249 = icmp sgt i32 %6182, %6185
  br i1 %6249, label %6250, label %6296

; <label>:6250:                                   ; preds = %6248
  %6251 = sub nsw i32 %6182, %6185
  %6252 = add nsw i32 %6251, 65535
  %6253 = ashr i32 %6252, 16
  switch i32 %6253, label %6294 [
    i32 1, label %6254
    i32 2, label %6268
  ]

; <label>:6254:                                   ; preds = %6250
  %6255 = sub i32 %6181, %6185
  %6256 = add nsw i32 %6255, %6251
  %6257 = lshr i32 %6256, 9
  %6258 = trunc i32 %6257 to i8
  %6259 = ashr i32 %6181, 16
  %6260 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6261 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6260, i64 15
  %6262 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6261, align 8
  %6263 = call %class.SkBlitter* %6262(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6264 = bitcast %class.SkBlitter* %6263 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6265 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6264, align 8
  %6266 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6265, i64 5
  %6267 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6266, align 8
  call void %6267(%class.SkBlitter* %6263, i32 %6259, i32 %6144, i32 1, i8 zeroext %6258) #12
  br label %6296

; <label>:6268:                                   ; preds = %6250
  %6269 = sub i32 65536, %6181
  %6270 = add i32 %6269, %6185
  %6271 = sub i32 %6182, %6181
  %6272 = sub i32 %6271, %6270
  %6273 = ashr i32 %6270, 11
  %6274 = ashr i32 %6153, 11
  %6275 = mul i32 %6273, %6274
  %6276 = mul i32 %6275, %6273
  %6277 = lshr i32 %6276, 8
  %6278 = ashr i32 %6272, 11
  %6279 = mul i32 %6278, %6274
  %6280 = mul i32 %6279, %6278
  %6281 = lshr i32 %6280, 8
  %6282 = ashr i32 %6181, 16
  %6283 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6284 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6283, i64 15
  %6285 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6284, align 8
  %6286 = call %class.SkBlitter* %6285(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6287 = and i32 %6277, 255
  %6288 = xor i32 %6287, 255
  %6289 = and i32 %6281, 255
  %6290 = bitcast %class.SkBlitter* %6286 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6291 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6290, align 8
  %6292 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6291, i64 10
  %6293 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6292, align 8
  call void %6293(%class.SkBlitter* %6286, i32 %6282, i32 %6144, i32 %6288, i32 %6289) #12
  br label %6296

; <label>:6294:                                   ; preds = %6250
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6144, i32 %6185, i32 %6181, i32 %6185, i32 %6182, i32 2147483647, i32 %6153, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6296

; <label>:6295:                                   ; preds = %6176
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6144, i32 %6178, i32 %6181, i32 %6179, i32 %6182, i32 %6152, i32 %6153, i8 zeroext -1, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6296

; <label>:6296:                                   ; preds = %6295, %6294, %6268, %6254, %6248, %6170, %6138
  %6297 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5483, align 8
  %6298 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6297, i64 20
  %6299 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6298, align 8
  call void %6299(%class.AdditiveBlitter* nonnull %5281, i32 %6139, i32 %6145) #12
  %6300 = icmp sgt i32 %6142, 2
  br i1 %6300, label %6138, label %6301

; <label>:6301:                                   ; preds = %6296, %5895, %6126
  %6302 = phi i32 [ %5897, %5895 ], [ %5923, %6126 ], [ %6151, %6296 ]
  %6303 = phi i32 [ %5896, %5895 ], [ %5922, %6126 ], [ %6150, %6296 ]
  %6304 = phi i32 [ %5890, %5895 ], [ %5919, %6126 ], [ %6147, %6296 ]
  %6305 = phi i32 [ %5889, %5895 ], [ %5914, %6126 ], [ %6146, %6296 ]
  %6306 = phi i32 [ %5491, %5895 ], [ %5907, %6126 ], [ %6145, %6296 ]
  %6307 = ashr i32 %6306, 16
  %6308 = sub nsw i32 %5682, %6306
  %6309 = sext i32 %5688 to i64
  %6310 = sext i32 %6308 to i64
  %6311 = mul nsw i64 %6310, %6309
  %6312 = lshr i64 %6311, 16
  %6313 = trunc i64 %6312 to i32
  %6314 = add nsw i32 %6305, %6313
  %6315 = icmp slt i32 %5486, %6314
  %6316 = select i1 %6315, i32 %6314, i32 %5486
  %6317 = sext i32 %5694 to i64
  %6318 = mul nsw i64 %6310, %6317
  %6319 = lshr i64 %6318, 16
  %6320 = trunc i64 %6319 to i32
  %6321 = add nsw i32 %6304, %6320
  %6322 = icmp slt i32 %6321, %5487
  %6323 = select i1 %6322, i32 %6321, i32 %5487
  %6324 = and i32 %6316, -4096
  %6325 = and i32 %6323, -4096
  %6326 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 9
  %6327 = load i32, i32* %6326, align 8
  %6328 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 9
  %6329 = load i32, i32* %6328, align 8
  %6330 = mul nsw i32 %6308, 255
  %6331 = add nsw i32 %6330, 32768
  %6332 = lshr i32 %6331, 16
  %6333 = trunc i32 %6332 to i8
  %6334 = icmp sgt i32 %6303, %6302
  br i1 %6334, label %6528, label %6335

; <label>:6335:                                   ; preds = %6301
  %6336 = icmp sgt i32 %6324, %6325
  br i1 %6336, label %6337, label %6350

; <label>:6337:                                   ; preds = %6335
  %6338 = icmp sgt i32 %6303, %6324
  %6339 = select i1 %6338, i32 %6324, i32 %6303
  %6340 = select i1 %6338, i32 %6303, i32 %6324
  %6341 = icmp sgt i32 %6302, %6325
  %6342 = select i1 %6341, i32 %6325, i32 %6302
  %6343 = select i1 %6341, i32 %6302, i32 %6325
  %6344 = icmp slt i32 %6342, %6339
  %6345 = select i1 %6344, i32 %6339, i32 %6342
  %6346 = icmp slt i32 %6340, %6343
  %6347 = select i1 %6346, i32 %6340, i32 %6343
  %6348 = add nsw i32 %6345, %6347
  %6349 = ashr exact i32 %6348, 1
  br label %6350

; <label>:6350:                                   ; preds = %6337, %6335
  %6351 = phi i32 [ %6349, %6337 ], [ %6324, %6335 ]
  %6352 = phi i32 [ %6349, %6337 ], [ %6325, %6335 ]
  %6353 = icmp eq i32 %6303, %6302
  %6354 = icmp eq i32 %6351, %6352
  %6355 = and i1 %6353, %6354
  br i1 %6355, label %6528, label %6356

; <label>:6356:                                   ; preds = %6350
  %6357 = icmp slt i32 %6351, %6303
  %6358 = select i1 %6357, i32 %6351, i32 %6303
  %6359 = select i1 %6357, i32 %6303, i32 %6351
  %6360 = icmp slt i32 %6352, %6302
  %6361 = select i1 %6360, i32 %6352, i32 %6302
  %6362 = select i1 %6360, i32 %6302, i32 %6352
  %6363 = add nsw i32 %6359, 65535
  %6364 = and i32 %6363, -65536
  %6365 = and i32 %6361, -65536
  %6366 = icmp slt i32 %6365, %6364
  br i1 %6366, label %6527, label %6367

; <label>:6367:                                   ; preds = %6356
  %6368 = icmp sgt i32 %6364, %6358
  br i1 %6368, label %6369, label %6437

; <label>:6369:                                   ; preds = %6367
  %6370 = sub nsw i32 %6364, %6358
  %6371 = add nsw i32 %6370, 65535
  %6372 = ashr i32 %6371, 16
  switch i32 %6372, label %6436 [
    i32 1, label %6373
    i32 2, label %6398
  ]

; <label>:6373:                                   ; preds = %6369
  %6374 = sub i32 %6364, %6359
  %6375 = add nsw i32 %6374, %6370
  %6376 = lshr i32 %6375, 9
  %6377 = ashr i32 %6358, 16
  %6378 = icmp eq i8 %6333, -1
  br i1 %6378, label %6379, label %6389

; <label>:6379:                                   ; preds = %6373
  %6380 = trunc i32 %6376 to i8
  %6381 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6382 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6381, i64 15
  %6383 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6382, align 8
  %6384 = call %class.SkBlitter* %6383(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6385 = bitcast %class.SkBlitter* %6384 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6386 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6385, align 8
  %6387 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6386, i64 5
  %6388 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6387, align 8
  call void %6388(%class.SkBlitter* %6384, i32 %6377, i32 %6307, i32 1, i8 zeroext %6380) #12
  br label %6437

; <label>:6389:                                   ; preds = %6373
  %6390 = and i32 %6376, 255
  %6391 = and i32 %6332, 255
  %6392 = mul nuw nsw i32 %6390, %6391
  %6393 = lshr i32 %6392, 8
  %6394 = trunc i32 %6393 to i8
  %6395 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6396 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6395, i64 17
  %6397 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6396, align 8
  call void %6397(%class.AdditiveBlitter* nonnull %5281, i32 %6377, i32 %6307, i8 zeroext %6394) #12
  br label %6437

; <label>:6398:                                   ; preds = %6369
  %6399 = sub i32 -65536, %6358
  %6400 = add i32 %6364, %6399
  %6401 = sub i32 %6359, %6358
  %6402 = sub i32 %6401, %6400
  %6403 = ashr i32 %6400, 11
  %6404 = ashr i32 %6327, 11
  %6405 = mul i32 %6403, %6404
  %6406 = mul i32 %6405, %6403
  %6407 = lshr i32 %6406, 8
  %6408 = ashr i32 %6402, 11
  %6409 = mul i32 %6408, %6404
  %6410 = mul i32 %6409, %6408
  %6411 = lshr i32 %6410, 8
  %6412 = trunc i32 %6411 to i8
  %6413 = sub i8 %6333, %6412
  %6414 = ashr i32 %6358, 16
  %6415 = icmp eq i8 %6333, -1
  br i1 %6415, label %6416, label %6427

; <label>:6416:                                   ; preds = %6398
  %6417 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6418 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6417, i64 15
  %6419 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6418, align 8
  %6420 = call %class.SkBlitter* %6419(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6421 = and i32 %6407, 255
  %6422 = zext i8 %6413 to i32
  %6423 = bitcast %class.SkBlitter* %6420 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6424 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6423, align 8
  %6425 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6424, i64 10
  %6426 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6425, align 8
  call void %6426(%class.SkBlitter* %6420, i32 %6414, i32 %6307, i32 %6421, i32 %6422) #12
  br label %6437

; <label>:6427:                                   ; preds = %6398
  %6428 = trunc i32 %6407 to i8
  %6429 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6430 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6429, i64 17
  %6431 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6430, align 8
  call void %6431(%class.AdditiveBlitter* nonnull %5281, i32 %6414, i32 %6307, i8 zeroext %6428) #12
  %6432 = add nsw i32 %6414, 1
  %6433 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6434 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6433, i64 17
  %6435 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6434, align 8
  call void %6435(%class.AdditiveBlitter* nonnull %5281, i32 %6432, i32 %6307, i8 zeroext %6413) #12
  br label %6437

; <label>:6436:                                   ; preds = %6369
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6307, i32 %6358, i32 %6364, i32 %6359, i32 %6364, i32 %6327, i32 2147483647, i8 zeroext %6333, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6437

; <label>:6437:                                   ; preds = %6436, %6427, %6416, %6389, %6379, %6367
  %6438 = icmp sgt i32 %6365, %6364
  br i1 %6438, label %6439, label %6457

; <label>:6439:                                   ; preds = %6437
  %6440 = ashr i32 %6363, 16
  %6441 = sub nsw i32 %6365, %6364
  %6442 = ashr exact i32 %6441, 16
  %6443 = icmp eq i8 %6333, -1
  br i1 %6443, label %6444, label %6453

; <label>:6444:                                   ; preds = %6439
  %6445 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6446 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6445, i64 15
  %6447 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6446, align 8
  %6448 = call %class.SkBlitter* %6447(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6449 = bitcast %class.SkBlitter* %6448 to void (%class.SkBlitter*, i32, i32, i32)***
  %6450 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6449, align 8
  %6451 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6450, i64 3
  %6452 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6451, align 8
  call void %6452(%class.SkBlitter* %6448, i32 %6440, i32 %6307, i32 %6442) #12
  br label %6457

; <label>:6453:                                   ; preds = %6439
  %6454 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %5482, align 8
  %6455 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6454, i64 18
  %6456 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6455, align 8
  call void %6456(%class.AdditiveBlitter* nonnull %5281, i32 %6440, i32 %6307, i32 %6442, i8 zeroext %6333) #12
  br label %6457

; <label>:6457:                                   ; preds = %6453, %6444, %6437
  %6458 = icmp sgt i32 %6362, %6365
  br i1 %6458, label %6459, label %6528

; <label>:6459:                                   ; preds = %6457
  %6460 = sub nsw i32 %6362, %6365
  %6461 = add nsw i32 %6460, 65535
  %6462 = ashr i32 %6461, 16
  switch i32 %6462, label %6526 [
    i32 1, label %6463
    i32 2, label %6488
  ]

; <label>:6463:                                   ; preds = %6459
  %6464 = sub i32 %6361, %6365
  %6465 = add nsw i32 %6464, %6460
  %6466 = lshr i32 %6465, 9
  %6467 = ashr i32 %6361, 16
  %6468 = icmp eq i8 %6333, -1
  br i1 %6468, label %6469, label %6479

; <label>:6469:                                   ; preds = %6463
  %6470 = trunc i32 %6466 to i8
  %6471 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6472 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6471, i64 15
  %6473 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6472, align 8
  %6474 = call %class.SkBlitter* %6473(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6475 = bitcast %class.SkBlitter* %6474 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6476 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6475, align 8
  %6477 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6476, i64 5
  %6478 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6477, align 8
  call void %6478(%class.SkBlitter* %6474, i32 %6467, i32 %6307, i32 1, i8 zeroext %6470) #12
  br label %6528

; <label>:6479:                                   ; preds = %6463
  %6480 = and i32 %6466, 255
  %6481 = and i32 %6332, 255
  %6482 = mul nuw nsw i32 %6480, %6481
  %6483 = lshr i32 %6482, 8
  %6484 = trunc i32 %6483 to i8
  %6485 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6486 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6485, i64 17
  %6487 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6486, align 8
  call void %6487(%class.AdditiveBlitter* nonnull %5281, i32 %6467, i32 %6307, i8 zeroext %6484) #12
  br label %6528

; <label>:6488:                                   ; preds = %6459
  %6489 = sub i32 65536, %6361
  %6490 = add i32 %6489, %6365
  %6491 = sub i32 %6362, %6361
  %6492 = sub i32 %6491, %6490
  %6493 = ashr i32 %6490, 11
  %6494 = ashr i32 %6329, 11
  %6495 = mul i32 %6493, %6494
  %6496 = mul i32 %6495, %6493
  %6497 = lshr i32 %6496, 8
  %6498 = trunc i32 %6497 to i8
  %6499 = sub i8 %6333, %6498
  %6500 = ashr i32 %6492, 11
  %6501 = mul i32 %6500, %6494
  %6502 = mul i32 %6501, %6500
  %6503 = lshr i32 %6502, 8
  %6504 = ashr i32 %6361, 16
  %6505 = icmp eq i8 %6333, -1
  br i1 %6505, label %6506, label %6517

; <label>:6506:                                   ; preds = %6488
  %6507 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %5484, align 8
  %6508 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6507, i64 15
  %6509 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6508, align 8
  %6510 = call %class.SkBlitter* %6509(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6511 = zext i8 %6499 to i32
  %6512 = and i32 %6503, 255
  %6513 = bitcast %class.SkBlitter* %6510 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6514 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6513, align 8
  %6515 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6514, i64 10
  %6516 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6515, align 8
  call void %6516(%class.SkBlitter* %6510, i32 %6504, i32 %6307, i32 %6511, i32 %6512) #12
  br label %6528

; <label>:6517:                                   ; preds = %6488
  %6518 = trunc i32 %6503 to i8
  %6519 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6520 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6519, i64 17
  %6521 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6520, align 8
  call void %6521(%class.AdditiveBlitter* nonnull %5281, i32 %6504, i32 %6307, i8 zeroext %6499) #12
  %6522 = add nsw i32 %6504, 1
  %6523 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %5485, align 8
  %6524 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6523, i64 17
  %6525 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6524, align 8
  call void %6525(%class.AdditiveBlitter* nonnull %5281, i32 %6522, i32 %6307, i8 zeroext %6518) #12
  br label %6528

; <label>:6526:                                   ; preds = %6459
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6307, i32 %6365, i32 %6361, i32 %6365, i32 %6362, i32 2147483647, i32 %6329, i8 zeroext %6333, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6528

; <label>:6527:                                   ; preds = %6356
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6307, i32 %6358, i32 %6361, i32 %6359, i32 %6362, i32 %6327, i32 %6329, i8 zeroext %6333, i8* null, i1 zeroext false, i1 zeroext false, i1 zeroext false) #12
  br label %6528

; <label>:6528:                                   ; preds = %6527, %6526, %6517, %6506, %6479, %6469, %6457, %6350, %6301
  %6529 = load void (%class.AdditiveBlitter*, i32, i32)**, void (%class.AdditiveBlitter*, i32, i32)*** %5483, align 8
  %6530 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6529, i64 20
  %6531 = load void (%class.AdditiveBlitter*, i32, i32)*, void (%class.AdditiveBlitter*, i32, i32)** %6530, align 8
  call void %6531(%class.AdditiveBlitter* nonnull %5281, i32 %6306, i32 %5682) #12
  %6532 = add nsw i32 %6316, -2048
  %6533 = add nsw i32 %6323, -2048
  br label %6534

; <label>:6534:                                   ; preds = %6528, %5873, %5871, %5822, %5812, %5794
  %6535 = phi i32 [ %6533, %6528 ], [ %5692, %5812 ], [ %5692, %5794 ], [ %5692, %5871 ], [ %5692, %5873 ], [ %5692, %5822 ]
  %6536 = phi i32 [ %6532, %6528 ], [ %5686, %5812 ], [ %5686, %5794 ], [ %5686, %5871 ], [ %5686, %5873 ], [ %5686, %5822 ]
  store i32 %6536, i32* %5683, align 8
  store i32 %6535, i32* %5689, align 8
  %6537 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5637, i64 0, i32 6
  store i32 %5682, i32* %6537, align 4
  %6538 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %5634, i64 0, i32 6
  store i32 %5682, i32* %6538, align 4
  br label %5488

; <label>:6539:                                   ; preds = %5462, %5448
  %6540 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5430, align 8
  %6541 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6540, i64 0, i32 8
  %6542 = load i32, i32* %6541, align 4
  %6543 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5420, align 8
  %6544 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6543, i64 0, i32 7
  %6545 = load i32, i32* %6544, align 8
  %6546 = sub nsw i32 %6542, %6545
  %6547 = ashr i32 %6546, 16
  %6548 = shl nsw i32 %6547, 2
  %6549 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* nonnull %0) #12
  %6550 = sub nsw i32 %5450, %5449
  %6551 = load i8, i8* %74, align 2
  store i32 %5451, i32* %5427, align 8
  store i32 %5451, i32* %5424, align 8
  store i32 %5452, i32* %5438, align 8
  store i32 %5452, i32* %5435, align 8
  %6552 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5420, align 8
  %6553 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6552, i64 0, i32 7
  %6554 = shl i32 %5449, 16
  %6555 = load i32, i32* %6553, align 4
  %6556 = icmp slt i32 %6554, %6555
  %6557 = select i1 %6556, i32 %6555, i32 %6554
  br label %6558

; <label>:6558:                                   ; preds = %6588, %6539
  %6559 = phi i32 [ %6598, %6588 ], [ %6555, %6539 ]
  %6560 = phi %struct.SkAnalyticEdge* [ %6596, %6588 ], [ %6552, %6539 ]
  %6561 = phi i32 [ %6594, %6588 ], [ 2147483647, %6539 ]
  %6562 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 6
  %6563 = load i32, i32* %6562, align 4
  %6564 = add nsw i32 %6563, 65536
  %6565 = icmp eq i32 %6564, %6557
  br i1 %6565, label %6566, label %6572

; <label>:6566:                                   ; preds = %6558
  %6567 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 3
  %6568 = load i32, i32* %6567, align 8
  %6569 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 4
  %6570 = load i32, i32* %6569, align 4
  %6571 = add nsw i32 %6570, %6568
  store i32 %6571, i32* %6567, align 8
  br label %6587

; <label>:6572:                                   ; preds = %6558
  %6573 = icmp eq i32 %6563, %6557
  br i1 %6573, label %6588, label %6574

; <label>:6574:                                   ; preds = %6572
  %6575 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 5
  %6576 = load i32, i32* %6575, align 8
  %6577 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 4
  %6578 = load i32, i32* %6577, align 4
  %6579 = sub nsw i32 %6557, %6559
  %6580 = sext i32 %6578 to i64
  %6581 = sext i32 %6579 to i64
  %6582 = mul nsw i64 %6580, %6581
  %6583 = lshr i64 %6582, 16
  %6584 = trunc i64 %6583 to i32
  %6585 = add nsw i32 %6576, %6584
  %6586 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 3
  store i32 %6585, i32* %6586, align 8
  br label %6587

; <label>:6587:                                   ; preds = %6566, %6574
  store i32 %6557, i32* %6562, align 4
  br label %6588

; <label>:6588:                                   ; preds = %6587, %6572
  %6589 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 8
  %6590 = load i32, i32* %6589, align 4
  %6591 = icmp sgt i32 %6590, %6557
  %6592 = icmp sgt i32 %6561, %6590
  %6593 = and i1 %6591, %6592
  %6594 = select i1 %6593, i32 %6590, i32 %6561
  %6595 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6560, i64 0, i32 0
  %6596 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6595, align 8
  %6597 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6596, i64 0, i32 7
  %6598 = load i32, i32* %6597, align 8
  %6599 = icmp slt i32 %6557, %6598
  br i1 %6599, label %6600, label %6558

; <label>:6600:                                   ; preds = %6588
  %6601 = add nsw i32 %6548, 4
  %6602 = shl nsw i32 %6550, 1
  %6603 = and i8 %6551, 3
  %6604 = icmp sgt i32 %5292, %6601
  %6605 = icmp sgt i32 %6549, %6602
  %6606 = zext i8 %6603 to i32
  %6607 = icmp sgt i32 %6594, %6598
  %6608 = select i1 %6607, i32 %6598, i32 %6594
  %6609 = and i32 %6606, 1
  %6610 = icmp eq i32 %6609, 0
  %6611 = select i1 %6610, i32 -1, i32 1
  %6612 = and i32 %6606, 2
  %6613 = icmp ne i32 %6612, 0
  %6614 = xor i1 %6613, true
  %6615 = icmp sge i32 %6554, %6555
  %6616 = or i1 %6615, %6614
  br i1 %6616, label %6617, label %6619

; <label>:6617:                                   ; preds = %6600
  %6618 = ashr exact i32 %5451, 16
  br label %6664

; <label>:6619:                                   ; preds = %6600
  %6620 = sub nsw i32 %5452, %5451
  %6621 = ashr exact i32 %6620, 16
  %6622 = ashr i32 %6557, 16
  %6623 = icmp eq i32 %6622, %5449
  br i1 %6623, label %6624, label %6626

; <label>:6624:                                   ; preds = %6619
  %6625 = ashr exact i32 %5451, 16
  br label %6639

; <label>:6626:                                   ; preds = %6619
  %6627 = bitcast %class.SafeRLEAdditiveBlitter* %19 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %6628 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6627, align 8
  %6629 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6628, i64 15
  %6630 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6629, align 8
  %6631 = call %class.SkBlitter* %6630(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6632 = ashr exact i32 %5451, 16
  %6633 = sub nsw i32 %6622, %5449
  %6634 = bitcast %class.SkBlitter* %6631 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6635 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6634, align 8
  %6636 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6635, i64 6
  %6637 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6636, align 8
  call void %6637(%class.SkBlitter* %6631, i32 %6632, i32 %5449, i32 %6621, i32 %6633) #12
  %6638 = and i32 %6557, -65536
  br label %6639

; <label>:6639:                                   ; preds = %6624, %6626
  %6640 = phi i32 [ %6625, %6624 ], [ %6632, %6626 ]
  %6641 = phi i32 [ %6554, %6624 ], [ %6638, %6626 ]
  %6642 = phi i32 [ %5449, %6624 ], [ %6622, %6626 ]
  %6643 = sub nsw i32 %6557, %6641
  %6644 = mul nsw i32 %6643, 255
  %6645 = add nsw i32 %6644, 32768
  %6646 = lshr i32 %6645, 16
  %6647 = trunc i32 %6646 to i8
  %6648 = icmp eq i8 %6647, -1
  br i1 %6648, label %6649, label %6659

; <label>:6649:                                   ; preds = %6639
  %6650 = bitcast %class.SafeRLEAdditiveBlitter* %19 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %6651 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6650, align 8
  %6652 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6651, i64 15
  %6653 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6652, align 8
  %6654 = call %class.SkBlitter* %6653(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6655 = bitcast %class.SkBlitter* %6654 to void (%class.SkBlitter*, i32, i32, i32)***
  %6656 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6655, align 8
  %6657 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6656, i64 3
  %6658 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6657, align 8
  call void %6658(%class.SkBlitter* %6654, i32 %6640, i32 %6642, i32 %6621) #12
  br label %6664

; <label>:6659:                                   ; preds = %6639
  %6660 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %6661 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %6660, align 8
  %6662 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6661, i64 18
  %6663 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6662, align 8
  call void %6663(%class.AdditiveBlitter* nonnull %5281, i32 %6640, i32 %6642, i32 %6621, i8 zeroext %6647) #12
  br label %6664

; <label>:6664:                                   ; preds = %6659, %6649, %6617
  %6665 = phi i32 [ %6618, %6617 ], [ %6640, %6659 ], [ %6640, %6649 ]
  %6666 = xor i1 %6604, true
  %6667 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %6668 = bitcast %class.SafeRLEAdditiveBlitter* %19 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %6669 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %6670 = bitcast %class.SafeRLEAdditiveBlitter* %19 to void (%class.RunBasedAdditiveBlitter*, i32, i32)***
  %6671 = shl i32 %5450, 16
  %6672 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 10
  %6673 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 11
  %6674 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 12
  %6675 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %16, i64 0, i32 6
  br label %6676

; <label>:6676:                                   ; preds = %7577, %6664
  %6677 = phi i32 [ %6608, %6664 ], [ %7578, %7577 ]
  %6678 = phi i32 [ %6557, %6664 ], [ %6693, %7577 ]
  %6679 = add nsw i32 %6678, 65536
  %6680 = and i32 %6679, -65536
  %6681 = icmp slt i32 %6677, %6680
  %6682 = select i1 %6681, i32 %6677, i32 %6680
  %6683 = and i32 %6682, 65535
  %6684 = icmp eq i32 %6683, 0
  %6685 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5420, align 8
  %6686 = sub nsw i32 %6682, %6678
  %6687 = and i32 %6686, 16384
  %6688 = icmp eq i32 %6687, 0
  %6689 = add nsw i32 %6678, 16384
  %6690 = lshr i32 %6686, 15
  %6691 = and i32 %6690, 1
  %6692 = select i1 %6688, i32 %6691, i32 2
  %6693 = select i1 %6688, i32 %6682, i32 %6689
  %6694 = sub nsw i32 %6693, %6678
  %6695 = mul nsw i32 %6694, 255
  %6696 = add nsw i32 %6695, 32768
  %6697 = lshr i32 %6696, 16
  %6698 = trunc i32 %6697 to i8
  %6699 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6685, i64 0, i32 7
  %6700 = load i32, i32* %6699, align 8
  %6701 = icmp sgt i32 %6700, %6678
  br i1 %6701, label %7189, label %6702

; <label>:6702:                                   ; preds = %6676
  %6703 = load i32, i32* %5424, align 8
  %6704 = ashr i32 %6678, 16
  %6705 = icmp ne i8 %6698, -1
  %6706 = add nsw i32 %6693, 16384
  %6707 = and i32 %6697, 255
  %6708 = or i1 %6705, %4
  br label %6709

; <label>:6709:                                   ; preds = %7181, %6702
  %6710 = phi %struct.SkAnalyticEdge* [ %6685, %6702 ], [ %7070, %7181 ]
  %6711 = phi i32 [ 0, %6702 ], [ %6724, %7181 ]
  %6712 = phi i1 [ %6613, %6702 ], [ %6728, %7181 ]
  %6713 = phi i32 [ %6703, %6702 ], [ %7183, %7181 ]
  %6714 = phi %struct.SkAnalyticEdge* [ %15, %6702 ], [ %7068, %7181 ]
  %6715 = phi i32 [ %5451, %6702 ], [ %7067, %7181 ]
  %6716 = phi i32 [ 0, %6702 ], [ %7066, %7181 ]
  %6717 = phi i8 [ 0, %6702 ], [ %7065, %7181 ]
  %6718 = phi i32 [ %6665, %6702 ], [ %7064, %7181 ]
  %6719 = phi i32 [ 2147483647, %6702 ], [ %7182, %7181 ]
  %6720 = bitcast %struct.SkAnalyticEdge* %6710 to %struct.SkAnalyticQuadraticEdge*
  %6721 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 16
  %6722 = load i8, i8* %6721, align 1
  %6723 = sext i8 %6722 to i32
  %6724 = add nsw i32 %6711, %6723
  %6725 = and i32 %6724, %6611
  %6726 = icmp eq i32 %6725, 0
  %6727 = xor i1 %6613, %6726
  %6728 = xor i1 %6727, true
  %6729 = or i1 %6712, %6727
  %6730 = and i1 %6712, %6727
  %6731 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 8
  %6732 = load i32, i32* %6731, align 4
  %6733 = icmp eq i32 %6732, %6693
  br i1 %6604, label %6734, label %6753

; <label>:6734:                                   ; preds = %6709
  %6735 = xor i1 %6729, true
  %6736 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 2
  %6737 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6736, align 8
  %6738 = icmp eq %struct.SkAnalyticEdge* %6737, null
  %6739 = or i1 %6738, %6735
  br i1 %6739, label %6745, label %6740

; <label>:6740:                                   ; preds = %6734
  %6741 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  %6742 = load i32, i32* %6741, align 8
  %6743 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6737, i64 0, i32 3
  %6744 = load i32, i32* %6743, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %6710, i32 %6678, i32 %6742, i32 %6744, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  br label %6745

; <label>:6745:                                   ; preds = %6740, %6734
  %6746 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 2
  %6747 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6746, align 8
  %6748 = icmp ne %struct.SkAnalyticEdge* %6747, %6710
  %6749 = or i1 %6730, %6748
  br i1 %6749, label %6753, label %6750

; <label>:6750:                                   ; preds = %6745
  %6751 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  %6752 = load i32, i32* %6751, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %6714, i32 %6678, i32 %6715, i32 %6752, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  br label %6753

; <label>:6753:                                   ; preds = %6750, %6745, %6709
  br i1 %6730, label %6754, label %7039

; <label>:6754:                                   ; preds = %6753
  br i1 %6604, label %6755, label %6796

; <label>:6755:                                   ; preds = %6754
  %6756 = and i8 %6717, 1
  %6757 = icmp ne i8 %6756, 0
  %6758 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 2
  %6759 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6758, align 8
  %6760 = icmp eq %struct.SkAnalyticEdge* %6759, null
  %6761 = icmp eq %struct.SkAnalyticEdge* %6759, %6710
  %6762 = or i1 %6760, %6761
  br i1 %6762, label %6767, label %6763

; <label>:6763:                                   ; preds = %6755
  %6764 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6759, i64 0, i32 3
  %6765 = load i32, i32* %6764, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %6714, i32 %6678, i32 %6715, i32 %6765, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  %6766 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6758, align 8
  br label %6767

; <label>:6767:                                   ; preds = %6763, %6755
  %6768 = phi %struct.SkAnalyticEdge* [ %6759, %6755 ], [ %6766, %6763 ]
  %6769 = icmp eq %struct.SkAnalyticEdge* %6768, null
  br i1 %6769, label %6772, label %6770

; <label>:6770:                                   ; preds = %6767
  %6771 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  br label %6783

; <label>:6772:                                   ; preds = %6767
  %6773 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 10
  store i32 %6715, i32* %6773, align 4
  %6774 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 11
  store i32 %6678, i32* %6774, align 8
  %6775 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 12
  store i32 %6716, i32* %6775, align 4
  %6776 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  %6777 = load i32, i32* %6776, align 8
  %6778 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 9
  %6779 = load i32, i32* %6778, align 8
  %6780 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 10
  store i32 %6777, i32* %6780, align 4
  %6781 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 11
  store i32 %6678, i32* %6781, align 8
  %6782 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 12
  store i32 %6779, i32* %6782, align 4
  store %struct.SkAnalyticEdge* %6710, %struct.SkAnalyticEdge** %6758, align 8
  br label %6783

; <label>:6783:                                   ; preds = %6772, %6770
  %6784 = phi i32* [ %6771, %6770 ], [ %6776, %6772 ]
  %6785 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 6
  store i32 %6693, i32* %6785, align 4
  %6786 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 4
  %6787 = load i32, i32* %6786, align 4
  %6788 = ashr i32 %6787, %6692
  %6789 = load i32, i32* %6784, align 8
  %6790 = add nsw i32 %6789, %6788
  store i32 %6790, i32* %6784, align 8
  %6791 = or i1 %6684, %6757
  %6792 = or i1 %6791, %6733
  br i1 %6792, label %6793, label %7063

; <label>:6793:                                   ; preds = %6783
  %6794 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 3
  %6795 = load i32, i32* %6794, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %6714, i32 %6693, i32 %6795, i32 %6790, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  br label %7063

; <label>:6796:                                   ; preds = %6754
  %6797 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  %6798 = load i32, i32* %6797, align 8
  %6799 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 6
  store i32 %6693, i32* %6799, align 4
  %6800 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 4
  %6801 = load i32, i32* %6800, align 4
  %6802 = ashr i32 %6801, %6692
  %6803 = add nsw i32 %6802, %6798
  store i32 %6803, i32* %6797, align 8
  %6804 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6714, i64 0, i32 3
  %6805 = load i32, i32* %6804, align 4
  %6806 = icmp slt i32 %6805, %5451
  %6807 = select i1 %6806, i32 %5451, i32 %6805
  %6808 = icmp sgt i32 %6798, %5452
  %6809 = select i1 %6808, i32 %5452, i32 %6798
  %6810 = icmp sgt i32 %6803, %5452
  %6811 = select i1 %6810, i32 %5452, i32 %6803
  %6812 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 9
  %6813 = load i32, i32* %6812, align 8
  br i1 %6708, label %6839, label %6814

; <label>:6814:                                   ; preds = %6796
  %6815 = ashr i32 %6715, 16
  %6816 = icmp slt i32 %6815, %6718
  %6817 = ashr i32 %6805, 16
  %6818 = icmp slt i32 %6817, %6718
  %6819 = or i1 %6816, %6818
  br i1 %6819, label %6839, label %6820

; <label>:6820:                                   ; preds = %6814
  %6821 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 0
  %6822 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %6821, align 8
  %6823 = icmp eq %struct.SkAnalyticEdge* %6822, null
  br i1 %6823, label %6839, label %6824

; <label>:6824:                                   ; preds = %6820
  %6825 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6822, i64 0, i32 7
  %6826 = load i32, i32* %6825, align 8
  %6827 = icmp slt i32 %6826, %6693
  br i1 %6827, label %6828, label %6839

; <label>:6828:                                   ; preds = %6824
  %6829 = add nsw i32 %6803, 65536
  %6830 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6822, i64 0, i32 3
  %6831 = load i32, i32* %6830, align 8
  %6832 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6822, i64 0, i32 4
  %6833 = load i32, i32* %6832, align 4
  %6834 = icmp slt i32 %6833, 0
  %6835 = sub nsw i32 0, %6833
  %6836 = select i1 %6834, i32 %6835, i32 %6833
  %6837 = sub nsw i32 %6831, %6836
  %6838 = icmp sge i32 %6829, %6837
  br label %6839

; <label>:6839:                                   ; preds = %6828, %6824, %6820, %6814, %6796
  %6840 = phi i1 [ %4, %6796 ], [ true, %6814 ], [ false, %6824 ], [ false, %6820 ], [ %6838, %6828 ]
  %6841 = icmp sgt i32 %6715, %6809
  br i1 %6841, label %7033, label %6842

; <label>:6842:                                   ; preds = %6839
  %6843 = icmp sgt i32 %6807, %6811
  br i1 %6843, label %6844, label %6857

; <label>:6844:                                   ; preds = %6842
  %6845 = icmp sgt i32 %6715, %6807
  %6846 = select i1 %6845, i32 %6807, i32 %6715
  %6847 = select i1 %6845, i32 %6715, i32 %6807
  %6848 = icmp sgt i32 %6809, %6811
  %6849 = select i1 %6848, i32 %6811, i32 %6809
  %6850 = select i1 %6848, i32 %6809, i32 %6811
  %6851 = icmp slt i32 %6849, %6846
  %6852 = select i1 %6851, i32 %6846, i32 %6849
  %6853 = icmp slt i32 %6847, %6850
  %6854 = select i1 %6853, i32 %6847, i32 %6850
  %6855 = add nsw i32 %6852, %6854
  %6856 = ashr i32 %6855, 1
  br label %6857

; <label>:6857:                                   ; preds = %6844, %6842
  %6858 = phi i32 [ %6856, %6844 ], [ %6807, %6842 ]
  %6859 = phi i32 [ %6856, %6844 ], [ %6811, %6842 ]
  %6860 = icmp eq i32 %6715, %6809
  %6861 = icmp eq i32 %6858, %6859
  %6862 = and i1 %6860, %6861
  br i1 %6862, label %7033, label %6863

; <label>:6863:                                   ; preds = %6857
  %6864 = icmp slt i32 %6858, %6715
  %6865 = select i1 %6864, i32 %6858, i32 %6715
  %6866 = select i1 %6864, i32 %6715, i32 %6858
  %6867 = icmp slt i32 %6859, %6809
  %6868 = select i1 %6867, i32 %6859, i32 %6809
  %6869 = select i1 %6867, i32 %6809, i32 %6859
  %6870 = add nsw i32 %6866, 65535
  %6871 = and i32 %6870, -65536
  %6872 = and i32 %6868, -65536
  %6873 = icmp slt i32 %6872, %6871
  br i1 %6873, label %7032, label %6874

; <label>:6874:                                   ; preds = %6863
  %6875 = icmp sgt i32 %6871, %6865
  br i1 %6875, label %6876, label %6943

; <label>:6876:                                   ; preds = %6874
  %6877 = sub nsw i32 %6871, %6865
  %6878 = add nsw i32 %6877, 65535
  %6879 = ashr i32 %6878, 16
  switch i32 %6879, label %6942 [
    i32 1, label %6880
    i32 2, label %6904
  ]

; <label>:6880:                                   ; preds = %6876
  %6881 = sub i32 %6871, %6866
  %6882 = add nsw i32 %6881, %6877
  %6883 = lshr i32 %6882, 9
  %6884 = ashr i32 %6865, 16
  %6885 = or i1 %6705, %6840
  br i1 %6885, label %6896, label %6886

; <label>:6886:                                   ; preds = %6880
  %6887 = trunc i32 %6883 to i8
  %6888 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %6889 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6888, i64 15
  %6890 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6889, align 8
  %6891 = call %class.SkBlitter* %6890(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6892 = bitcast %class.SkBlitter* %6891 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6893 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6892, align 8
  %6894 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6893, i64 5
  %6895 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6894, align 8
  call void %6895(%class.SkBlitter* %6891, i32 %6884, i32 %6704, i32 1, i8 zeroext %6887) #12
  br label %6943

; <label>:6896:                                   ; preds = %6880
  %6897 = and i32 %6883, 255
  %6898 = mul nuw nsw i32 %6897, %6707
  %6899 = lshr i32 %6898, 8
  %6900 = trunc i32 %6899 to i8
  %6901 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %6902 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6901, i64 17
  %6903 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6902, align 8
  call void %6903(%class.AdditiveBlitter* nonnull %5281, i32 %6884, i32 %6704, i8 zeroext %6900) #12
  br label %6943

; <label>:6904:                                   ; preds = %6876
  %6905 = sub i32 -65536, %6865
  %6906 = add i32 %6871, %6905
  %6907 = sub i32 %6866, %6865
  %6908 = sub i32 %6907, %6906
  %6909 = ashr i32 %6906, 11
  %6910 = ashr i32 %6716, 11
  %6911 = mul i32 %6909, %6910
  %6912 = mul i32 %6911, %6909
  %6913 = lshr i32 %6912, 8
  %6914 = ashr i32 %6908, 11
  %6915 = mul i32 %6914, %6910
  %6916 = mul i32 %6915, %6914
  %6917 = lshr i32 %6916, 8
  %6918 = trunc i32 %6917 to i8
  %6919 = sub i8 %6698, %6918
  %6920 = ashr i32 %6865, 16
  %6921 = or i1 %6705, %6840
  br i1 %6921, label %6933, label %6922

; <label>:6922:                                   ; preds = %6904
  %6923 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %6924 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6923, i64 15
  %6925 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6924, align 8
  %6926 = call %class.SkBlitter* %6925(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6927 = and i32 %6913, 255
  %6928 = zext i8 %6919 to i32
  %6929 = bitcast %class.SkBlitter* %6926 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %6930 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %6929, align 8
  %6931 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6930, i64 10
  %6932 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %6931, align 8
  call void %6932(%class.SkBlitter* %6926, i32 %6920, i32 %6704, i32 %6927, i32 %6928) #12
  br label %6943

; <label>:6933:                                   ; preds = %6904
  %6934 = trunc i32 %6913 to i8
  %6935 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %6936 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6935, i64 17
  %6937 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6936, align 8
  call void %6937(%class.AdditiveBlitter* nonnull %5281, i32 %6920, i32 %6704, i8 zeroext %6934) #12
  %6938 = add nsw i32 %6920, 1
  %6939 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %6940 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6939, i64 17
  %6941 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6940, align 8
  call void %6941(%class.AdditiveBlitter* nonnull %5281, i32 %6938, i32 %6704, i8 zeroext %6919) #12
  br label %6943

; <label>:6942:                                   ; preds = %6876
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6704, i32 %6865, i32 %6871, i32 %6866, i32 %6871, i32 %6716, i32 2147483647, i8 zeroext %6698, i8* null, i1 zeroext false, i1 zeroext %6840, i1 zeroext true) #12
  br label %6943

; <label>:6943:                                   ; preds = %6942, %6933, %6922, %6896, %6886, %6874
  %6944 = icmp sgt i32 %6872, %6871
  br i1 %6944, label %6945, label %6963

; <label>:6945:                                   ; preds = %6943
  %6946 = ashr i32 %6870, 16
  %6947 = sub nsw i32 %6872, %6871
  %6948 = ashr exact i32 %6947, 16
  %6949 = or i1 %6705, %6840
  br i1 %6949, label %6959, label %6950

; <label>:6950:                                   ; preds = %6945
  %6951 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %6952 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6951, i64 15
  %6953 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6952, align 8
  %6954 = call %class.SkBlitter* %6953(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6955 = bitcast %class.SkBlitter* %6954 to void (%class.SkBlitter*, i32, i32, i32)***
  %6956 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %6955, align 8
  %6957 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6956, i64 3
  %6958 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %6957, align 8
  call void %6958(%class.SkBlitter* %6954, i32 %6946, i32 %6704, i32 %6948) #12
  br label %6963

; <label>:6959:                                   ; preds = %6945
  %6960 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %6669, align 8
  %6961 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6960, i64 18
  %6962 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %6961, align 8
  call void %6962(%class.AdditiveBlitter* nonnull %5281, i32 %6946, i32 %6704, i32 %6948, i8 zeroext %6698) #12
  br label %6963

; <label>:6963:                                   ; preds = %6959, %6950, %6943
  %6964 = icmp sgt i32 %6869, %6872
  br i1 %6964, label %6965, label %7033

; <label>:6965:                                   ; preds = %6963
  %6966 = sub nsw i32 %6869, %6872
  %6967 = add nsw i32 %6966, 65535
  %6968 = ashr i32 %6967, 16
  switch i32 %6968, label %7031 [
    i32 1, label %6969
    i32 2, label %6993
  ]

; <label>:6969:                                   ; preds = %6965
  %6970 = sub i32 %6868, %6872
  %6971 = add nsw i32 %6970, %6966
  %6972 = lshr i32 %6971, 9
  %6973 = ashr i32 %6868, 16
  %6974 = or i1 %6705, %6840
  br i1 %6974, label %6985, label %6975

; <label>:6975:                                   ; preds = %6969
  %6976 = trunc i32 %6972 to i8
  %6977 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %6978 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6977, i64 15
  %6979 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %6978, align 8
  %6980 = call %class.SkBlitter* %6979(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %6981 = bitcast %class.SkBlitter* %6980 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %6982 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %6981, align 8
  %6983 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6982, i64 5
  %6984 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %6983, align 8
  call void %6984(%class.SkBlitter* %6980, i32 %6973, i32 %6704, i32 1, i8 zeroext %6976) #12
  br label %7033

; <label>:6985:                                   ; preds = %6969
  %6986 = and i32 %6972, 255
  %6987 = mul nuw nsw i32 %6986, %6707
  %6988 = lshr i32 %6987, 8
  %6989 = trunc i32 %6988 to i8
  %6990 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %6991 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6990, i64 17
  %6992 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %6991, align 8
  call void %6992(%class.AdditiveBlitter* nonnull %5281, i32 %6973, i32 %6704, i8 zeroext %6989) #12
  br label %7033

; <label>:6993:                                   ; preds = %6965
  %6994 = sub i32 65536, %6868
  %6995 = add i32 %6994, %6872
  %6996 = sub i32 %6869, %6868
  %6997 = sub i32 %6996, %6995
  %6998 = ashr i32 %6995, 11
  %6999 = ashr i32 %6813, 11
  %7000 = mul i32 %6998, %6999
  %7001 = mul i32 %7000, %6998
  %7002 = lshr i32 %7001, 8
  %7003 = trunc i32 %7002 to i8
  %7004 = sub i8 %6698, %7003
  %7005 = ashr i32 %6997, 11
  %7006 = mul i32 %7005, %6999
  %7007 = mul i32 %7006, %7005
  %7008 = lshr i32 %7007, 8
  %7009 = ashr i32 %6868, 16
  %7010 = or i1 %6705, %6840
  br i1 %7010, label %7022, label %7011

; <label>:7011:                                   ; preds = %6993
  %7012 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %7013 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7012, i64 15
  %7014 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7013, align 8
  %7015 = call %class.SkBlitter* %7014(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %7016 = zext i8 %7004 to i32
  %7017 = and i32 %7008, 255
  %7018 = bitcast %class.SkBlitter* %7015 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %7019 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %7018, align 8
  %7020 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7019, i64 10
  %7021 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7020, align 8
  call void %7021(%class.SkBlitter* %7015, i32 %7009, i32 %6704, i32 %7016, i32 %7017) #12
  br label %7033

; <label>:7022:                                   ; preds = %6993
  %7023 = trunc i32 %7008 to i8
  %7024 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7025 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7024, i64 17
  %7026 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7025, align 8
  call void %7026(%class.AdditiveBlitter* nonnull %5281, i32 %7009, i32 %6704, i8 zeroext %7004) #12
  %7027 = add nsw i32 %7009, 1
  %7028 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7029 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7028, i64 17
  %7030 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7029, align 8
  call void %7030(%class.AdditiveBlitter* nonnull %5281, i32 %7027, i32 %6704, i8 zeroext %7023) #12
  br label %7033

; <label>:7031:                                   ; preds = %6965
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6704, i32 %6872, i32 %6868, i32 %6872, i32 %6869, i32 2147483647, i32 %6813, i8 zeroext %6698, i8* null, i1 zeroext false, i1 zeroext %6840, i1 zeroext true) #12
  br label %7033

; <label>:7032:                                   ; preds = %6863
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %6704, i32 %6865, i32 %6868, i32 %6866, i32 %6869, i32 %6716, i32 %6813, i8 zeroext %6698, i8* null, i1 zeroext false, i1 zeroext %6840, i1 zeroext true) #12
  br label %7033

; <label>:7033:                                   ; preds = %7032, %7031, %7022, %7011, %6985, %6975, %6963, %6857, %6839
  %7034 = load i32, i32* %6797, align 4
  %7035 = icmp slt i32 %7034, %6809
  %7036 = select i1 %7035, i32 %6809, i32 %7034
  %7037 = add nsw i32 %7036, 65535
  %7038 = ashr i32 %7037, 16
  br label %7063

; <label>:7039:                                   ; preds = %6753
  %7040 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  br i1 %6729, label %7041, label %7043

; <label>:7041:                                   ; preds = %7039
  %7042 = load i32, i32* %7040, align 8
  br label %7052

; <label>:7043:                                   ; preds = %7039
  %7044 = load i32, i32* %7040, align 4
  %7045 = icmp sgt i32 %7044, %5451
  %7046 = select i1 %7045, i32 %7044, i32 %5451
  %7047 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 9
  %7048 = load i32, i32* %7047, align 8
  %7049 = load i32, i32* %6731, align 4
  %7050 = icmp eq i32 %7049, %6693
  %7051 = zext i1 %7050 to i8
  br label %7052

; <label>:7052:                                   ; preds = %7043, %7041
  %7053 = phi i32 [ %7042, %7041 ], [ %7044, %7043 ]
  %7054 = phi i8 [ %6717, %7041 ], [ %7051, %7043 ]
  %7055 = phi i32 [ %6716, %7041 ], [ %7048, %7043 ]
  %7056 = phi i32 [ %6715, %7041 ], [ %7046, %7043 ]
  %7057 = phi %struct.SkAnalyticEdge* [ %6714, %7041 ], [ %6710, %7043 ]
  %7058 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 6
  store i32 %6693, i32* %7058, align 4
  %7059 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 4
  %7060 = load i32, i32* %7059, align 4
  %7061 = ashr i32 %7060, %6692
  %7062 = add nsw i32 %7061, %7053
  store i32 %7062, i32* %7040, align 8
  br label %7063

; <label>:7063:                                   ; preds = %7052, %7033, %6793, %6783
  %7064 = phi i32 [ %7038, %7033 ], [ %6718, %7052 ], [ %6718, %6783 ], [ %6718, %6793 ]
  %7065 = phi i8 [ %6717, %7033 ], [ %7054, %7052 ], [ %6717, %6783 ], [ %6717, %6793 ]
  %7066 = phi i32 [ %6716, %7033 ], [ %7055, %7052 ], [ %6716, %6783 ], [ %6716, %6793 ]
  %7067 = phi i32 [ %6715, %7033 ], [ %7056, %7052 ], [ %6715, %6783 ], [ %6715, %6793 ]
  %7068 = phi %struct.SkAnalyticEdge* [ %6714, %7033 ], [ %7057, %7052 ], [ %6714, %6783 ], [ %6714, %6793 ]
  %7069 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 0
  %7070 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7069, align 8
  %7071 = load i32, i32* %6731, align 4
  %7072 = icmp sgt i32 %7071, %6693
  br i1 %7072, label %7102, label %7073

; <label>:7073:                                   ; preds = %7063
  %7074 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 13
  %7075 = bitcast %struct.SkAnalyticEdge* %6710 to %struct.SkAnalyticCubicEdge*
  %7076 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  %7077 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 1, i32 7
  %7078 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 6
  %7079 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 2, i32 1
  %7080 = bitcast %struct.SkAnalyticEdge** %7079 to i32*
  %7081 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 2
  %7082 = bitcast %struct.SkAnalyticEdge* %7081 to i32*
  %7083 = getelementptr inbounds %struct.SkAnalyticQuadraticEdge, %struct.SkAnalyticQuadraticEdge* %6720, i64 0, i32 3
  br label %7084

; <label>:7084:                                   ; preds = %7097, %7073
  %7085 = load i8, i8* %7074, align 8
  %7086 = icmp slt i8 %7085, 0
  br i1 %7086, label %7087, label %7091

; <label>:7087:                                   ; preds = %7084
  %7088 = load i32, i32* %7076, align 8
  store i32 %7088, i32* %7077, align 8
  %7089 = load i32, i32* %7078, align 4
  store i32 %7089, i32* %7080, align 8
  %7090 = call zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge* nonnull %7075, i1 zeroext true) #12
  br i1 %7090, label %7097, label %7100

; <label>:7091:                                   ; preds = %7084
  %7092 = icmp eq i8 %7085, 0
  br i1 %7092, label %7100, label %7093

; <label>:7093:                                   ; preds = %7091
  %7094 = load i32, i32* %7076, align 8
  store i32 %7094, i32* %7082, align 8
  %7095 = load i32, i32* %7078, align 4
  store i32 %7095, i32* %7083, align 4
  %7096 = call zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge* nonnull %6720) #12
  br i1 %7096, label %7097, label %7100

; <label>:7097:                                   ; preds = %7093, %7087
  %7098 = load i32, i32* %6731, align 4
  %7099 = icmp sgt i32 %7098, %6693
  br i1 %7099, label %7100, label %7084

; <label>:7100:                                   ; preds = %7097, %7093, %7091, %7087
  %7101 = load i32, i32* %6731, align 4
  br label %7102

; <label>:7102:                                   ; preds = %7100, %7063
  %7103 = phi i32 [ %7101, %7100 ], [ %7071, %7063 ]
  %7104 = icmp sgt i32 %7103, %6693
  br i1 %7104, label %7116, label %7105

; <label>:7105:                                   ; preds = %7102
  %7106 = bitcast %struct.SkAnalyticEdge* %6710 to i64*
  %7107 = load i64, i64* %7106, align 8
  %7108 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 1
  %7109 = bitcast %struct.SkAnalyticEdge** %7108 to i64**
  %7110 = load i64*, i64** %7109, align 8
  store i64 %7107, i64* %7110, align 8
  %7111 = bitcast %struct.SkAnalyticEdge** %7108 to i64*
  %7112 = load i64, i64* %7111, align 8
  %7113 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7069, align 8
  %7114 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7113, i64 0, i32 1
  %7115 = bitcast %struct.SkAnalyticEdge** %7114 to i64*
  store i64 %7112, i64* %7115, align 8
  br label %7181

; <label>:7116:                                   ; preds = %7102
  %7117 = icmp sgt i32 %6719, %7103
  %7118 = select i1 %7117, i32 %7103, i32 %6719
  %7119 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 3
  %7120 = load i32, i32* %7119, align 8
  %7121 = icmp slt i32 %7120, %6713
  br i1 %7121, label %7122, label %7161

; <label>:7122:                                   ; preds = %7116
  %7123 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7068, i64 0, i32 2
  %7124 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7123, align 8
  %7125 = icmp ne %struct.SkAnalyticEdge* %7124, %6710
  %7126 = or i1 %7125, %6666
  br i1 %7126, label %7131, label %7127

; <label>:7127:                                   ; preds = %7122
  %7128 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7068, i64 0, i32 3
  %7129 = load i32, i32* %7128, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %7068, i32 %6693, i32 %7129, i32 %7120, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  %7130 = load i32, i32* %7119, align 8
  br label %7131

; <label>:7131:                                   ; preds = %7127, %7122
  %7132 = phi i32 [ %7120, %7122 ], [ %7130, %7127 ]
  %7133 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 1
  %7134 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7133, align 8
  %7135 = bitcast %struct.SkAnalyticEdge* %7134 to i64*
  br label %7136

; <label>:7136:                                   ; preds = %7141, %7131
  %7137 = phi %struct.SkAnalyticEdge* [ %7134, %7131 ], [ %7139, %7141 ]
  %7138 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7137, i64 0, i32 1
  %7139 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7138, align 8
  %7140 = icmp eq %struct.SkAnalyticEdge* %7139, null
  br i1 %7140, label %7145, label %7141

; <label>:7141:                                   ; preds = %7136
  %7142 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7137, i64 0, i32 3
  %7143 = load i32, i32* %7142, align 8
  %7144 = icmp sgt i32 %7143, %7132
  br i1 %7144, label %7136, label %7145

; <label>:7145:                                   ; preds = %7141, %7136
  %7146 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7137, i64 0, i32 0
  %7147 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7146, align 8
  %7148 = icmp eq %struct.SkAnalyticEdge* %7147, %6710
  br i1 %7148, label %7161, label %7149

; <label>:7149:                                   ; preds = %7145
  %7150 = bitcast %struct.SkAnalyticEdge* %6710 to i64*
  %7151 = load i64, i64* %7150, align 8
  store i64 %7151, i64* %7135, align 8
  %7152 = bitcast %struct.SkAnalyticEdge** %7133 to i64*
  %7153 = load i64, i64* %7152, align 8
  %7154 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7069, align 8
  %7155 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7154, i64 0, i32 1
  %7156 = bitcast %struct.SkAnalyticEdge** %7155 to i64*
  store i64 %7153, i64* %7156, align 8
  store %struct.SkAnalyticEdge* %7137, %struct.SkAnalyticEdge** %7133, align 8
  %7157 = bitcast %struct.SkAnalyticEdge* %7137 to i64*
  %7158 = load i64, i64* %7157, align 8
  store i64 %7158, i64* %7150, align 8
  %7159 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7146, align 8
  %7160 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7159, i64 0, i32 1
  store %struct.SkAnalyticEdge* %6710, %struct.SkAnalyticEdge** %7160, align 8
  store %struct.SkAnalyticEdge* %6710, %struct.SkAnalyticEdge** %7146, align 8
  br label %7161

; <label>:7161:                                   ; preds = %7149, %7145, %7116
  %7162 = phi i32 [ %7120, %7116 ], [ %6713, %7145 ], [ %6713, %7149 ]
  br i1 %6605, label %7181, label %7163

; <label>:7163:                                   ; preds = %7161
  %7164 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 1
  %7165 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7164, align 8
  %7166 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7165, i64 0, i32 1
  %7167 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7166, align 8
  %7168 = icmp eq %struct.SkAnalyticEdge* %7167, null
  br i1 %7168, label %7181, label %7169

; <label>:7169:                                   ; preds = %7163
  %7170 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7165, i64 0, i32 3
  %7171 = load i32, i32* %7170, align 8
  %7172 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7165, i64 0, i32 4
  %7173 = load i32, i32* %7172, align 4
  %7174 = add nsw i32 %7173, %7171
  %7175 = load i32, i32* %7119, align 8
  %7176 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6710, i64 0, i32 4
  %7177 = load i32, i32* %7176, align 4
  %7178 = add nsw i32 %7177, %7175
  %7179 = icmp sgt i32 %7174, %7178
  %7180 = select i1 %7179, i32 %6706, i32 %7118
  br label %7181

; <label>:7181:                                   ; preds = %7169, %7163, %7161, %7105
  %7182 = phi i32 [ %7118, %7161 ], [ %6719, %7105 ], [ %7118, %7163 ], [ %7180, %7169 ]
  %7183 = phi i32 [ %7162, %7161 ], [ %6713, %7105 ], [ %7162, %7163 ], [ %7162, %7169 ]
  %7184 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7070, i64 0, i32 7
  %7185 = load i32, i32* %7184, align 8
  %7186 = icmp sgt i32 %7185, %6678
  br i1 %7186, label %7187, label %6709

; <label>:7187:                                   ; preds = %7181
  %7188 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7070, i64 0, i32 7
  br label %7189

; <label>:7189:                                   ; preds = %7187, %6676
  %7190 = phi i32 [ 2147483647, %6676 ], [ %7182, %7187 ]
  %7191 = phi i8 [ 0, %6676 ], [ %7065, %7187 ]
  %7192 = phi i32 [ 0, %6676 ], [ %7066, %7187 ]
  %7193 = phi i32 [ %5451, %6676 ], [ %7067, %7187 ]
  %7194 = phi %struct.SkAnalyticEdge* [ %15, %6676 ], [ %7068, %7187 ]
  %7195 = phi %struct.SkAnalyticEdge* [ %6685, %6676 ], [ %7070, %7187 ]
  %7196 = phi i1 [ %6613, %6676 ], [ %6728, %7187 ]
  %7197 = phi i32* [ %6699, %6676 ], [ %7188, %7187 ]
  br i1 %7196, label %7198, label %7437

; <label>:7198:                                   ; preds = %7189
  br i1 %6604, label %7199, label %7229

; <label>:7199:                                   ; preds = %7198
  %7200 = and i8 %7191, 1
  %7201 = icmp ne i8 %7200, 0
  %7202 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 2
  %7203 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7202, align 8
  %7204 = icmp eq %struct.SkAnalyticEdge* %7203, null
  %7205 = icmp eq %struct.SkAnalyticEdge* %7203, %16
  %7206 = or i1 %7204, %7205
  br i1 %7206, label %7211, label %7207

; <label>:7207:                                   ; preds = %7199
  %7208 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7203, i64 0, i32 3
  %7209 = load i32, i32* %7208, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %7194, i32 %6678, i32 %7193, i32 %7209, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  %7210 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7202, align 8
  br label %7211

; <label>:7211:                                   ; preds = %7207, %7199
  %7212 = phi %struct.SkAnalyticEdge* [ %7203, %7199 ], [ %7210, %7207 ]
  %7213 = icmp eq %struct.SkAnalyticEdge* %7212, null
  br i1 %7213, label %7214, label %7220

; <label>:7214:                                   ; preds = %7211
  %7215 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 10
  store i32 %7193, i32* %7215, align 4
  %7216 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 11
  store i32 %6678, i32* %7216, align 8
  %7217 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 12
  store i32 %7192, i32* %7217, align 4
  %7218 = load i32, i32* %5435, align 8
  %7219 = load i32, i32* %5437, align 8
  store i32 %7218, i32* %6672, align 4
  store i32 %6678, i32* %6673, align 8
  store i32 %7219, i32* %6674, align 4
  store %struct.SkAnalyticEdge* %16, %struct.SkAnalyticEdge** %7202, align 8
  br label %7220

; <label>:7220:                                   ; preds = %7214, %7211
  store i32 %6693, i32* %6675, align 4
  %7221 = load i32, i32* %5436, align 4
  %7222 = ashr i32 %7221, %6692
  %7223 = load i32, i32* %5435, align 8
  %7224 = add nsw i32 %7223, %7222
  store i32 %7224, i32* %5435, align 8
  %7225 = or i1 %6684, %7201
  br i1 %7225, label %7226, label %7437

; <label>:7226:                                   ; preds = %7220
  %7227 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 3
  %7228 = load i32, i32* %7227, align 8
  call fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge* nonnull %7194, i32 %6693, i32 %7228, i32 %7224, %class.AdditiveBlitter* nonnull %5281, i8* null, i1 zeroext false, i1 zeroext %4, i32 %5451, i32 %5452) #12
  br label %7437

; <label>:7229:                                   ; preds = %7198
  %7230 = ashr i32 %6678, 16
  %7231 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 3
  %7232 = load i32, i32* %7231, align 4
  %7233 = icmp slt i32 %7232, %5451
  %7234 = select i1 %7233, i32 %5451, i32 %7232
  br i1 %4, label %7256, label %7235

; <label>:7235:                                   ; preds = %7229
  %7236 = icmp eq i8 %6698, -1
  br i1 %7236, label %7237, label %7256

; <label>:7237:                                   ; preds = %7235
  %7238 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 1
  %7239 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7238, align 8
  %7240 = icmp eq %struct.SkAnalyticEdge* %7239, null
  br i1 %7240, label %7256, label %7241

; <label>:7241:                                   ; preds = %7237
  %7242 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 7
  %7243 = load i32, i32* %7242, align 8
  %7244 = icmp slt i32 %7243, %6693
  br i1 %7244, label %7245, label %7256

; <label>:7245:                                   ; preds = %7241
  %7246 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7239, i64 0, i32 3
  %7247 = load i32, i32* %7246, align 8
  %7248 = add nsw i32 %7247, 65536
  %7249 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7194, i64 0, i32 4
  %7250 = load i32, i32* %7249, align 4
  %7251 = icmp slt i32 %7250, 0
  %7252 = sub nsw i32 0, %7250
  %7253 = select i1 %7251, i32 %7252, i32 %7250
  %7254 = sub nsw i32 %7232, %7253
  %7255 = icmp sge i32 %7248, %7254
  br label %7256

; <label>:7256:                                   ; preds = %7245, %7241, %7237, %7235, %7229
  %7257 = phi i1 [ true, %7229 ], [ false, %7235 ], [ false, %7241 ], [ false, %7237 ], [ %7255, %7245 ]
  %7258 = icmp sgt i32 %7193, %5452
  br i1 %7258, label %7437, label %7259

; <label>:7259:                                   ; preds = %7256
  %7260 = icmp sgt i32 %7234, %5452
  br i1 %7260, label %7261, label %7271

; <label>:7261:                                   ; preds = %7259
  %7262 = icmp sgt i32 %7193, %7234
  %7263 = select i1 %7262, i32 %7234, i32 %7193
  %7264 = select i1 %7262, i32 %7193, i32 %7234
  %7265 = icmp sgt i32 %7263, %5452
  %7266 = select i1 %7265, i32 %7263, i32 %5452
  %7267 = icmp slt i32 %7264, %5452
  %7268 = select i1 %7267, i32 %7264, i32 %5452
  %7269 = add nsw i32 %7266, %7268
  %7270 = ashr i32 %7269, 1
  br label %7271

; <label>:7271:                                   ; preds = %7261, %7259
  %7272 = phi i32 [ %7270, %7261 ], [ %7234, %7259 ]
  %7273 = phi i32 [ %7270, %7261 ], [ %5452, %7259 ]
  %7274 = icmp eq i32 %7193, %5452
  %7275 = icmp eq i32 %7272, %7273
  %7276 = and i1 %7274, %7275
  br i1 %7276, label %7437, label %7277

; <label>:7277:                                   ; preds = %7271
  %7278 = icmp slt i32 %7272, %7193
  %7279 = select i1 %7278, i32 %7272, i32 %7193
  %7280 = select i1 %7278, i32 %7193, i32 %7272
  %7281 = icmp slt i32 %7273, %5452
  %7282 = select i1 %7281, i32 %7273, i32 %5452
  %7283 = select i1 %7281, i32 %5452, i32 %7273
  %7284 = add nsw i32 %7280, 65535
  %7285 = and i32 %7284, -65536
  %7286 = and i32 %7282, -65536
  %7287 = icmp slt i32 %7286, %7285
  br i1 %7287, label %7436, label %7288

; <label>:7288:                                   ; preds = %7277
  %7289 = icmp sgt i32 %7285, %7279
  br i1 %7289, label %7290, label %7360

; <label>:7290:                                   ; preds = %7288
  %7291 = sub nsw i32 %7285, %7279
  %7292 = add nsw i32 %7291, 65535
  %7293 = ashr i32 %7292, 16
  switch i32 %7293, label %7359 [
    i32 1, label %7294
    i32 2, label %7320
  ]

; <label>:7294:                                   ; preds = %7290
  %7295 = sub i32 %7285, %7280
  %7296 = add nsw i32 %7295, %7291
  %7297 = lshr i32 %7296, 9
  %7298 = ashr i32 %7279, 16
  %7299 = icmp ne i8 %6698, -1
  %7300 = or i1 %7299, %7257
  br i1 %7300, label %7311, label %7301

; <label>:7301:                                   ; preds = %7294
  %7302 = trunc i32 %7297 to i8
  %7303 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %7304 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7303, i64 15
  %7305 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7304, align 8
  %7306 = call %class.SkBlitter* %7305(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %7307 = bitcast %class.SkBlitter* %7306 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %7308 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %7307, align 8
  %7309 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7308, i64 5
  %7310 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7309, align 8
  call void %7310(%class.SkBlitter* %7306, i32 %7298, i32 %7230, i32 1, i8 zeroext %7302) #12
  br label %7360

; <label>:7311:                                   ; preds = %7294
  %7312 = and i32 %7297, 255
  %7313 = and i32 %6697, 255
  %7314 = mul nuw nsw i32 %7312, %7313
  %7315 = lshr i32 %7314, 8
  %7316 = trunc i32 %7315 to i8
  %7317 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7318 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7317, i64 17
  %7319 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7318, align 8
  call void %7319(%class.AdditiveBlitter* nonnull %5281, i32 %7298, i32 %7230, i8 zeroext %7316) #12
  br label %7360

; <label>:7320:                                   ; preds = %7290
  %7321 = sub i32 -65536, %7279
  %7322 = add i32 %7285, %7321
  %7323 = sub i32 %7280, %7279
  %7324 = sub i32 %7323, %7322
  %7325 = ashr i32 %7322, 11
  %7326 = ashr i32 %7192, 11
  %7327 = mul i32 %7325, %7326
  %7328 = mul i32 %7327, %7325
  %7329 = lshr i32 %7328, 8
  %7330 = ashr i32 %7324, 11
  %7331 = mul i32 %7330, %7326
  %7332 = mul i32 %7331, %7330
  %7333 = lshr i32 %7332, 8
  %7334 = trunc i32 %7333 to i8
  %7335 = sub i8 %6698, %7334
  %7336 = ashr i32 %7279, 16
  %7337 = icmp ne i8 %6698, -1
  %7338 = or i1 %7337, %7257
  br i1 %7338, label %7350, label %7339

; <label>:7339:                                   ; preds = %7320
  %7340 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %7341 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7340, i64 15
  %7342 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7341, align 8
  %7343 = call %class.SkBlitter* %7342(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %7344 = and i32 %7329, 255
  %7345 = zext i8 %7335 to i32
  %7346 = bitcast %class.SkBlitter* %7343 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %7347 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %7346, align 8
  %7348 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7347, i64 10
  %7349 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7348, align 8
  call void %7349(%class.SkBlitter* %7343, i32 %7336, i32 %7230, i32 %7344, i32 %7345) #12
  br label %7360

; <label>:7350:                                   ; preds = %7320
  %7351 = trunc i32 %7329 to i8
  %7352 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7353 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7352, i64 17
  %7354 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7353, align 8
  call void %7354(%class.AdditiveBlitter* nonnull %5281, i32 %7336, i32 %7230, i8 zeroext %7351) #12
  %7355 = add nsw i32 %7336, 1
  %7356 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7357 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7356, i64 17
  %7358 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7357, align 8
  call void %7358(%class.AdditiveBlitter* nonnull %5281, i32 %7355, i32 %7230, i8 zeroext %7335) #12
  br label %7360

; <label>:7359:                                   ; preds = %7290
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %7230, i32 %7279, i32 %7285, i32 %7280, i32 %7285, i32 %7192, i32 2147483647, i8 zeroext %6698, i8* null, i1 zeroext false, i1 zeroext %7257, i1 zeroext true) #12
  br label %7360

; <label>:7360:                                   ; preds = %7359, %7350, %7339, %7311, %7301, %7288
  %7361 = icmp sgt i32 %7286, %7285
  br i1 %7361, label %7362, label %7381

; <label>:7362:                                   ; preds = %7360
  %7363 = ashr i32 %7284, 16
  %7364 = sub nsw i32 %7286, %7285
  %7365 = ashr exact i32 %7364, 16
  %7366 = icmp ne i8 %6698, -1
  %7367 = or i1 %7366, %7257
  br i1 %7367, label %7377, label %7368

; <label>:7368:                                   ; preds = %7362
  %7369 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %7370 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7369, i64 15
  %7371 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7370, align 8
  %7372 = call %class.SkBlitter* %7371(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %7373 = bitcast %class.SkBlitter* %7372 to void (%class.SkBlitter*, i32, i32, i32)***
  %7374 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %7373, align 8
  %7375 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %7374, i64 3
  %7376 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %7375, align 8
  call void %7376(%class.SkBlitter* %7372, i32 %7363, i32 %7230, i32 %7365) #12
  br label %7381

; <label>:7377:                                   ; preds = %7362
  %7378 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %6669, align 8
  %7379 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %7378, i64 18
  %7380 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %7379, align 8
  call void %7380(%class.AdditiveBlitter* nonnull %5281, i32 %7363, i32 %7230, i32 %7365, i8 zeroext %6698) #12
  br label %7381

; <label>:7381:                                   ; preds = %7377, %7368, %7360
  %7382 = icmp sgt i32 %7283, %7286
  br i1 %7382, label %7383, label %7437

; <label>:7383:                                   ; preds = %7381
  %7384 = sub nsw i32 %7283, %7286
  %7385 = add nsw i32 %7384, 65535
  %7386 = ashr i32 %7385, 16
  switch i32 %7386, label %7435 [
    i32 1, label %7387
    i32 2, label %7413
  ]

; <label>:7387:                                   ; preds = %7383
  %7388 = sub i32 %7282, %7286
  %7389 = add nsw i32 %7388, %7384
  %7390 = lshr i32 %7389, 9
  %7391 = ashr i32 %7282, 16
  %7392 = icmp ne i8 %6698, -1
  %7393 = or i1 %7392, %7257
  br i1 %7393, label %7404, label %7394

; <label>:7394:                                   ; preds = %7387
  %7395 = trunc i32 %7390 to i8
  %7396 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %7397 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7396, i64 15
  %7398 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7397, align 8
  %7399 = call %class.SkBlitter* %7398(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %7400 = bitcast %class.SkBlitter* %7399 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %7401 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %7400, align 8
  %7402 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7401, i64 5
  %7403 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %7402, align 8
  call void %7403(%class.SkBlitter* %7399, i32 %7391, i32 %7230, i32 1, i8 zeroext %7395) #12
  br label %7437

; <label>:7404:                                   ; preds = %7387
  %7405 = and i32 %7390, 255
  %7406 = and i32 %6697, 255
  %7407 = mul nuw nsw i32 %7405, %7406
  %7408 = lshr i32 %7407, 8
  %7409 = trunc i32 %7408 to i8
  %7410 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7411 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7410, i64 17
  %7412 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7411, align 8
  call void %7412(%class.AdditiveBlitter* nonnull %5281, i32 %7391, i32 %7230, i8 zeroext %7409) #12
  br label %7437

; <label>:7413:                                   ; preds = %7383
  %7414 = ashr i32 %7282, 16
  %7415 = icmp ne i8 %6698, -1
  %7416 = or i1 %7415, %7257
  br i1 %7416, label %7427, label %7417

; <label>:7417:                                   ; preds = %7413
  %7418 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %6668, align 8
  %7419 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7418, i64 15
  %7420 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %7419, align 8
  %7421 = call %class.SkBlitter* %7420(%class.AdditiveBlitter* nonnull %5281, i1 zeroext false) #12
  %7422 = and i32 %6697, 255
  %7423 = bitcast %class.SkBlitter* %7421 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %7424 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %7423, align 8
  %7425 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7424, i64 10
  %7426 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %7425, align 8
  call void %7426(%class.SkBlitter* %7421, i32 %7414, i32 %7230, i32 %7422, i32 0) #12
  br label %7437

; <label>:7427:                                   ; preds = %7413
  %7428 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7429 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7428, i64 17
  %7430 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7429, align 8
  call void %7430(%class.AdditiveBlitter* nonnull %5281, i32 %7414, i32 %7230, i8 zeroext %6698) #12
  %7431 = add nsw i32 %7414, 1
  %7432 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %6667, align 8
  %7433 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7432, i64 17
  %7434 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %7433, align 8
  call void %7434(%class.AdditiveBlitter* nonnull %5281, i32 %7431, i32 %7230, i8 zeroext 0) #12
  br label %7437

; <label>:7435:                                   ; preds = %7383
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %7230, i32 %7286, i32 %7282, i32 %7286, i32 %7283, i32 2147483647, i32 0, i8 zeroext %6698, i8* null, i1 zeroext false, i1 zeroext %7257, i1 zeroext true) #12
  br label %7437

; <label>:7436:                                   ; preds = %7277
  call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* nonnull %5281, i32 %7230, i32 %7279, i32 %7282, i32 %7280, i32 %7283, i32 %7192, i32 0, i8 zeroext %6698, i8* null, i1 zeroext false, i1 zeroext %7257, i1 zeroext true) #12
  br label %7437

; <label>:7437:                                   ; preds = %7436, %7435, %7427, %7417, %7404, %7394, %7381, %7271, %7256, %7226, %7220, %7189
  br i1 %4, label %7438, label %7442

; <label>:7438:                                   ; preds = %7437
  %7439 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)**, void (%class.RunBasedAdditiveBlitter*, i32, i32)*** %6670, align 8
  %7440 = getelementptr inbounds void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %7439, i64 20
  %7441 = load void (%class.RunBasedAdditiveBlitter*, i32, i32)*, void (%class.RunBasedAdditiveBlitter*, i32, i32)** %7440, align 8
  call void %7441(%class.RunBasedAdditiveBlitter* nonnull %5279, i32 %6678, i32 %6693) #12
  br label %7442

; <label>:7442:                                   ; preds = %7438, %7437
  %7443 = icmp slt i32 %6693, %6671
  br i1 %7443, label %7444, label %7579

; <label>:7444:                                   ; preds = %7442
  %7445 = load i32, i32* %7197, align 8
  %7446 = icmp sgt i32 %7445, %6693
  br i1 %7446, label %7447, label %7450

; <label>:7447:                                   ; preds = %7444
  %7448 = icmp sgt i32 %7190, %7445
  %7449 = select i1 %7448, i32 %7445, i32 %7190
  br label %7577

; <label>:7450:                                   ; preds = %7444
  %7451 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7195, i64 0, i32 1
  %7452 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7451, align 8
  %7453 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7452, i64 0, i32 3
  %7454 = load i32, i32* %7453, align 8
  %7455 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7195, i64 0, i32 3
  %7456 = load i32, i32* %7455, align 8
  %7457 = icmp sgt i32 %7454, %7456
  br i1 %7457, label %7499, label %7458

; <label>:7458:                                   ; preds = %7450
  %7459 = add nsw i32 %6693, 16384
  br label %7460

; <label>:7460:                                   ; preds = %7493, %7458
  %7461 = phi i32 [ %7190, %7458 ], [ %7487, %7493 ]
  %7462 = phi %struct.SkAnalyticEdge* [ %7452, %7458 ], [ %7495, %7493 ]
  %7463 = phi %struct.SkAnalyticEdge* [ %7195, %7458 ], [ %7489, %7493 ]
  %7464 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7462, i64 0, i32 1
  %7465 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7464, align 8
  %7466 = icmp eq %struct.SkAnalyticEdge* %7465, null
  br i1 %7466, label %7480, label %7467

; <label>:7467:                                   ; preds = %7460
  %7468 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7462, i64 0, i32 3
  %7469 = load i32, i32* %7468, align 8
  %7470 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7462, i64 0, i32 4
  %7471 = load i32, i32* %7470, align 4
  %7472 = add nsw i32 %7471, %7469
  %7473 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7463, i64 0, i32 3
  %7474 = load i32, i32* %7473, align 8
  %7475 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7463, i64 0, i32 4
  %7476 = load i32, i32* %7475, align 4
  %7477 = add nsw i32 %7476, %7474
  %7478 = icmp sgt i32 %7472, %7477
  %7479 = select i1 %7478, i32 %7459, i32 %7461
  br label %7480

; <label>:7480:                                   ; preds = %7467, %7460
  %7481 = phi i32 [ %7461, %7460 ], [ %7479, %7467 ]
  %7482 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7463, i64 0, i32 8
  %7483 = load i32, i32* %7482, align 4
  %7484 = icmp sgt i32 %7483, %6693
  %7485 = icmp sgt i32 %7481, %7483
  %7486 = and i1 %7484, %7485
  %7487 = select i1 %7486, i32 %7483, i32 %7481
  %7488 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7463, i64 0, i32 0
  %7489 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7488, align 8
  %7490 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7489, i64 0, i32 7
  %7491 = load i32, i32* %7490, align 8
  %7492 = icmp sgt i32 %7491, %6693
  br i1 %7492, label %7496, label %7493

; <label>:7493:                                   ; preds = %7480
  %7494 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7489, i64 0, i32 1
  %7495 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7494, align 8
  br label %7460

; <label>:7496:                                   ; preds = %7480
  %7497 = icmp sgt i32 %7487, %7491
  %7498 = select i1 %7497, i32 %7491, i32 %7487
  br label %7577

; <label>:7499:                                   ; preds = %7450, %7504
  %7500 = phi %struct.SkAnalyticEdge* [ %7502, %7504 ], [ %7452, %7450 ]
  %7501 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7500, i64 0, i32 1
  %7502 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7501, align 8
  %7503 = icmp eq %struct.SkAnalyticEdge* %7502, null
  br i1 %7503, label %7508, label %7504

; <label>:7504:                                   ; preds = %7499
  %7505 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7500, i64 0, i32 3
  %7506 = load i32, i32* %7505, align 8
  %7507 = icmp sgt i32 %7506, %7456
  br i1 %7507, label %7499, label %7508

; <label>:7508:                                   ; preds = %7504, %7499
  %7509 = add nsw i32 %6693, 16384
  br label %7510

; <label>:7510:                                   ; preds = %7563, %7508
  %7511 = phi i32 [ %7190, %7508 ], [ %7570, %7563 ]
  %7512 = phi %struct.SkAnalyticEdge* [ %7500, %7508 ], [ %7513, %7563 ]
  %7513 = phi %struct.SkAnalyticEdge* [ %7195, %7508 ], [ %7515, %7563 ]
  %7514 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7513, i64 0, i32 0
  %7515 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7514, align 8
  %7516 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7513, i64 0, i32 3
  %7517 = ptrtoint %struct.SkAnalyticEdge* %7515 to i64
  br label %7518

; <label>:7518:                                   ; preds = %7523, %7510
  %7519 = phi %struct.SkAnalyticEdge* [ %7512, %7510 ], [ %7521, %7523 ]
  %7520 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7519, i64 0, i32 0
  %7521 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7520, align 8
  %7522 = icmp eq %struct.SkAnalyticEdge* %7521, %7513
  br i1 %7522, label %7543, label %7523

; <label>:7523:                                   ; preds = %7518
  %7524 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7521, i64 0, i32 3
  %7525 = load i32, i32* %7524, align 8
  %7526 = load i32, i32* %7516, align 8
  %7527 = icmp slt i32 %7525, %7526
  br i1 %7527, label %7518, label %7528

; <label>:7528:                                   ; preds = %7523
  %7529 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7519, i64 0, i32 0
  %7530 = bitcast %struct.SkAnalyticEdge* %7513 to i64*
  %7531 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7513, i64 0, i32 1
  %7532 = bitcast %struct.SkAnalyticEdge** %7531 to i64**
  %7533 = load i64*, i64** %7532, align 8
  store i64 %7517, i64* %7533, align 8
  %7534 = bitcast %struct.SkAnalyticEdge** %7531 to i64*
  %7535 = load i64, i64* %7534, align 8
  %7536 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7514, align 8
  %7537 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7536, i64 0, i32 1
  %7538 = bitcast %struct.SkAnalyticEdge** %7537 to i64*
  store i64 %7535, i64* %7538, align 8
  store %struct.SkAnalyticEdge* %7519, %struct.SkAnalyticEdge** %7531, align 8
  %7539 = bitcast %struct.SkAnalyticEdge* %7519 to i64*
  %7540 = load i64, i64* %7539, align 8
  store i64 %7540, i64* %7530, align 8
  %7541 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7529, align 8
  %7542 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7541, i64 0, i32 1
  store %struct.SkAnalyticEdge* %7513, %struct.SkAnalyticEdge** %7542, align 8
  store %struct.SkAnalyticEdge* %7513, %struct.SkAnalyticEdge** %7529, align 8
  br label %7545

; <label>:7543:                                   ; preds = %7518
  %7544 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7513, i64 0, i32 1
  br label %7545

; <label>:7545:                                   ; preds = %7543, %7528
  %7546 = phi %struct.SkAnalyticEdge** [ %7544, %7543 ], [ %7531, %7528 ]
  %7547 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7546, align 8
  %7548 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7547, i64 0, i32 1
  %7549 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %7548, align 8
  %7550 = icmp eq %struct.SkAnalyticEdge* %7549, null
  br i1 %7550, label %7563, label %7551

; <label>:7551:                                   ; preds = %7545
  %7552 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7547, i64 0, i32 3
  %7553 = load i32, i32* %7552, align 8
  %7554 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7547, i64 0, i32 4
  %7555 = load i32, i32* %7554, align 4
  %7556 = add nsw i32 %7555, %7553
  %7557 = load i32, i32* %7516, align 8
  %7558 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7513, i64 0, i32 4
  %7559 = load i32, i32* %7558, align 4
  %7560 = add nsw i32 %7559, %7557
  %7561 = icmp sgt i32 %7556, %7560
  %7562 = select i1 %7561, i32 %7509, i32 %7511
  br label %7563

; <label>:7563:                                   ; preds = %7551, %7545
  %7564 = phi i32 [ %7511, %7545 ], [ %7562, %7551 ]
  %7565 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7513, i64 0, i32 8
  %7566 = load i32, i32* %7565, align 4
  %7567 = icmp sgt i32 %7566, %6693
  %7568 = icmp sgt i32 %7564, %7566
  %7569 = and i1 %7567, %7568
  %7570 = select i1 %7569, i32 %7566, i32 %7564
  %7571 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %7515, i64 0, i32 7
  %7572 = load i32, i32* %7571, align 8
  %7573 = icmp sgt i32 %7572, %6693
  br i1 %7573, label %7574, label %7510

; <label>:7574:                                   ; preds = %7563
  %7575 = icmp sgt i32 %7570, %7572
  %7576 = select i1 %7575, i32 %7572, i32 %7570
  br label %7577

; <label>:7577:                                   ; preds = %7574, %7496, %7447
  %7578 = phi i32 [ %7449, %7447 ], [ %7576, %7574 ], [ %7498, %7496 ]
  br label %6676

; <label>:7579:                                   ; preds = %7442, %5551, %5512, %5533
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5340) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5339) #12
  br label %7580

; <label>:7580:                                   ; preds = %5304, %5308, %5322, %5326, %7579
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5285, align 8
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* nonnull %5287) #12
  %7581 = getelementptr inbounds %class.SkAnalyticEdgeBuilder, %class.SkAnalyticEdgeBuilder* %14, i64 0, i32 0, i32 2
  %7582 = bitcast %class.SkTDArray.12* %7581 to i8**
  %7583 = load i8*, i8** %7582, align 8
  call void @_Z7sk_freePv(i8* %7583) #12
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %5284) #12
  call void @_ZN23RunBasedAdditiveBlitterD2Ev(%class.RunBasedAdditiveBlitter* nonnull %5279) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %5278) #12
  br label %7584

; <label>:7584:                                   ; preds = %135, %5273, %7580, %2952
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19MaskAdditiveBlitterD2Ev(%class.MaskAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3
  %7 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %8 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %8, i64 8
  %10 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %9, align 8
  tail call void %10(%class.SkBlitter* %4, %struct.SkMask* nonnull dereferenceable(32) %5, %struct.SkIRect* nonnull dereferenceable(16) %6) #12
  %11 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23RunBasedAdditiveBlitterD2Ev(%class.RunBasedAdditiveBlitter*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV23RunBasedAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %86, label %8

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %10 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %9, i64 0, i32 0
  %11 = load i16*, i16** %10, align 8
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  %14 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %15 = load i8*, i8** %14, align 8
  br i1 %13, label %16, label %27

; <label>:16:                                     ; preds = %27, %8
  %17 = phi i16* [ %11, %8 ], [ %37, %27 ]
  %18 = phi i8* [ %15, %8 ], [ %46, %27 ]
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %47

; <label>:21:                                     ; preds = %16
  %22 = load i16, i16* %17, align 2
  %23 = sext i16 %22 to i64
  %24 = getelementptr inbounds i16, i16* %17, i64 %23
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %83, label %47

; <label>:27:                                     ; preds = %8, %27
  %28 = phi i8* [ %46, %27 ], [ %15, %8 ]
  %29 = phi i64 [ %42, %27 ], [ 0, %8 ]
  %30 = phi i32 [ %41, %27 ], [ 0, %8 ]
  %31 = getelementptr inbounds i8, i8* %28, i64 %29
  %32 = load i8, i8* %31, align 1
  %33 = icmp ugt i8 %32, -9
  %34 = icmp ult i8 %32, 8
  %35 = select i1 %34, i8 0, i8 %32
  %36 = select i1 %33, i8 -1, i8 %35
  store i8 %36, i8* %31, align 1
  %37 = load i16*, i16** %10, align 8
  %38 = getelementptr inbounds i16, i16* %37, i64 %29
  %39 = load i16, i16* %38, align 2
  %40 = sext i16 %39 to i32
  %41 = add nsw i32 %30, %40
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, i16* %37, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 0
  %46 = load i8*, i8** %14, align 8
  br i1 %45, label %16, label %27

; <label>:47:                                     ; preds = %21, %16
  %48 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %49 = load %class.SkBlitter*, %class.SkBlitter** %48, align 8
  %50 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = load i32, i32* %3, align 8
  %53 = bitcast %class.SkBlitter* %49 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %54 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %54, i64 4
  %56 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %55, align 8
  tail call void %56(%class.SkBlitter* %49, i32 %51, i32 %52, i8* %18, i16* %17) #12
  %57 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 1
  %60 = add nsw i32 %58, 2
  %61 = sdiv i32 %60, 2
  %62 = add nsw i32 %59, %61
  %63 = shl i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = add nsw i32 %66, 1
  %68 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = srem i32 %67, %69
  store i32 %70, i32* %65, align 8
  %71 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  %72 = load i8*, i8** %71, align 8
  %73 = sext i32 %70 to i64
  %74 = mul nsw i64 %64, %73
  %75 = getelementptr inbounds i8, i8* %72, i64 %74
  %76 = bitcast i8* %75 to i16*
  %77 = bitcast %class.SkAlphaRuns* %9 to i8**
  store i8* %75, i8** %77, align 8
  %78 = sext i32 %58 to i64
  %79 = getelementptr inbounds i16, i16* %76, i64 %78
  %80 = getelementptr inbounds i16, i16* %79, i64 1
  %81 = bitcast i8** %14 to i16**
  store i16* %80, i16** %81, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %9, i32 %58) #12
  %82 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %82, align 8
  br label %83

; <label>:83:                                     ; preds = %47, %21
  %84 = load i32, i32* %5, align 4
  %85 = add nsw i32 %84, -1
  store i32 %85, i32* %3, align 8
  br label %86

; <label>:86:                                     ; preds = %1, %83
  %87 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %87) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19MaskAdditiveBlitterD0Ev(%class.MaskAdditiveBlitter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV19MaskAdditiveBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  %4 = load %class.SkBlitter*, %class.SkBlitter** %3, align 8
  %5 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3
  %7 = bitcast %class.SkBlitter* %4 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %8 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %8, i64 8
  %10 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %9, align 8
  tail call void %10(%class.SkBlitter* %4, %struct.SkMask* nonnull dereferenceable(32) %5, %struct.SkIRect* nonnull dereferenceable(16) %6) #12
  %11 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %11) #12
  %12 = bitcast %class.MaskAdditiveBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #13
  ret void
}

declare void @_ZN9SkBlitter18blitCoverageDeltasEP19SkCoverageDeltaListRK7SkIRectbbb(%class.SkBlitter*, %class.SkCoverageDeltaList*, %struct.SkIRect* dereferenceable(16), i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #2

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter5blitHEiii(%class.AdditiveBlitter*, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter9blitAntiHEiiPKhPKs(%class.AdditiveBlitter*, i32, i32, i8*, i16*) unnamed_addr #3 comdat align 2 {
  ret void
}

declare void @_ZN9SkBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #2

declare %class.SkPixmap* @_ZN9SkBlitter17justAnOpaqueColorEPj(%class.SkBlitter*, i32*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #12
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #12
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  store i16 1, i16* %10, align 2
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  store i16 1, i16* %11, align 2
  %12 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  store i16 0, i16* %12, align 2
  %13 = trunc i32 %3 to i8
  store i8 %13, i8* %9, align 1
  %14 = trunc i32 %4 to i8
  %15 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i8 %14, i8* %15, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 4
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %9, i16* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #12
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  store i16 1, i16* %10, align 2
  %11 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  store i16 0, i16* %11, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %9, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 4
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %9, i16* nonnull %10) #12
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %9, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 4
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %9, i16* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #12
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #2

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #3 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %9, label %7

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %16

; <label>:9:                                      ; preds = %2
  %10 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #12
  %11 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  store i8* %10, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %15, label %14

; <label>:14:                                     ; preds = %9
  tail call void @_Z7sk_freePv(i8* nonnull %12) #12
  br label %15

; <label>:15:                                     ; preds = %14, %9
  store i64 %1, i64* %4, align 8
  br label %16

; <label>:16:                                     ; preds = %7, %15
  %17 = phi i8** [ %8, %7 ], [ %11, %15 ]
  %18 = load i8*, i8** %17, align 8
  ret i8* %18
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden %class.SkBlitter* @_ZN19MaskAdditiveBlitter14getRealBlitterEb(%class.MaskAdditiveBlitter*, i1 zeroext) unnamed_addr #3 comdat align 2 {
  br i1 %1, label %3, label %6

; <label>:3:                                      ; preds = %2
  %4 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 1
  %5 = load %class.SkBlitter*, %class.SkBlitter** %4, align 8
  br label %8

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 0, i32 0
  br label %8

; <label>:8:                                      ; preds = %6, %3
  %9 = phi %class.SkBlitter* [ %5, %3 ], [ %7, %6 ]
  ret %class.SkBlitter* %9
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN19MaskAdditiveBlitter8getWidthEv(%class.MaskAdditiveBlitter*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.MaskAdditiveBlitter, %class.MaskAdditiveBlitter* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = sub i32 %3, %5
  ret i32 %6
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19MaskAdditiveBlitter18flush_if_y_changedEii(%class.MaskAdditiveBlitter*, i32, i32) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter5blitVEiiih(%class.AdditiveBlitter*, i32, i32, i32, i8 zeroext) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter8blitRectEiiii(%class.AdditiveBlitter*, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15AdditiveBlitter12blitAntiRectEiiiihh(%class.AdditiveBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23RunBasedAdditiveBlitter18flush_if_y_changedEii(%class.RunBasedAdditiveBlitter*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = xor i32 %2, %1
  %5 = icmp ugt i32 %4, 65535
  br i1 %5, label %6, label %90

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %90, label %12

; <label>:12:                                     ; preds = %6
  %13 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11
  %14 = getelementptr inbounds %class.SkAlphaRuns, %class.SkAlphaRuns* %13, i64 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  %18 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 11, i32 1
  %19 = load i8*, i8** %18, align 8
  br i1 %17, label %20, label %31

; <label>:20:                                     ; preds = %31, %12
  %21 = phi i16* [ %15, %12 ], [ %41, %31 ]
  %22 = phi i8* [ %19, %12 ], [ %50, %31 ]
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %51

; <label>:25:                                     ; preds = %20
  %26 = load i16, i16* %21, align 2
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds i16, i16* %21, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 0
  br i1 %30, label %87, label %51

; <label>:31:                                     ; preds = %12, %31
  %32 = phi i8* [ %50, %31 ], [ %19, %12 ]
  %33 = phi i64 [ %46, %31 ], [ 0, %12 ]
  %34 = phi i32 [ %45, %31 ], [ 0, %12 ]
  %35 = getelementptr inbounds i8, i8* %32, i64 %33
  %36 = load i8, i8* %35, align 1
  %37 = icmp ugt i8 %36, -9
  %38 = icmp ult i8 %36, 8
  %39 = select i1 %38, i8 0, i8 %36
  %40 = select i1 %37, i8 -1, i8 %39
  store i8 %40, i8* %35, align 1
  %41 = load i16*, i16** %14, align 8
  %42 = getelementptr inbounds i16, i16* %41, i64 %33
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = add nsw i32 %34, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i16, i16* %41, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 0
  %50 = load i8*, i8** %18, align 8
  br i1 %49, label %20, label %31

; <label>:51:                                     ; preds = %25, %20
  %52 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 1
  %53 = load %class.SkBlitter*, %class.SkBlitter** %52, align 8
  %54 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 4
  %55 = load i32, i32* %54, align 8
  %56 = load i32, i32* %7, align 8
  %57 = bitcast %class.SkBlitter* %53 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %58 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %58, i64 4
  %60 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %59, align 8
  tail call void %60(%class.SkBlitter* %53, i32 %55, i32 %56, i8* %22, i16* %21) #12
  %61 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, 1
  %64 = add nsw i32 %62, 2
  %65 = sdiv i32 %64, 2
  %66 = add nsw i32 %63, %65
  %67 = shl i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = add nsw i32 %70, 1
  %72 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = srem i32 %71, %73
  store i32 %74, i32* %69, align 8
  %75 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 8
  %76 = load i8*, i8** %75, align 8
  %77 = sext i32 %74 to i64
  %78 = mul nsw i64 %68, %77
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = bitcast i8* %79 to i16*
  %81 = bitcast %class.SkAlphaRuns* %13 to i8**
  store i8* %79, i8** %81, align 8
  %82 = sext i32 %62 to i64
  %83 = getelementptr inbounds i16, i16* %80, i64 %82
  %84 = getelementptr inbounds i16, i16* %83, i64 1
  %85 = bitcast i8** %18 to i16**
  store i16* %84, i16** %85, align 8
  tail call void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns* nonnull %13, i32 %62) #12
  %86 = getelementptr inbounds %class.RunBasedAdditiveBlitter, %class.RunBasedAdditiveBlitter* %0, i64 0, i32 12
  store i32 0, i32* %86, align 8
  br label %87

; <label>:87:                                     ; preds = %51, %25
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, -1
  store i32 %89, i32* %7, align 8
  br label %90

; <label>:90:                                     ; preds = %87, %6, %3
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SafeRLEAdditiveBlitterD0Ev(%class.SafeRLEAdditiveBlitter*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.SafeRLEAdditiveBlitter* %0 to %class.RunBasedAdditiveBlitter*
  tail call void @_ZN23RunBasedAdditiveBlitterD2Ev(%class.RunBasedAdditiveBlitter* %2) #12
  %3 = bitcast %class.SafeRLEAdditiveBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #7

declare void @__cxa_pure_virtual() unnamed_addr

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN11SkAlphaRuns5resetEi(%class.SkAlphaRuns*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbPNS_9DirectionE(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN9SkBlitter15blitFatAntiRectERK6SkRect(%class.SkBlitter*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare i32 @_ZN13SkEdgeBuilder10buildEdgesERK6SkPathPK7SkIRect(%class.SkEdgeBuilder*, %class.SkPath* dereferenceable(16), %struct.SkIRect*) local_unnamed_addr #2

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD2Ev(%class.SkEdgeBuilder*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV13SkEdgeBuilder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 3, i32 0
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* nonnull %3) #12
  %4 = getelementptr inbounds %class.SkEdgeBuilder, %class.SkEdgeBuilder* %0, i64 0, i32 2
  %5 = bitcast %class.SkTDArray.12* %4 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void @_Z7sk_freePv(i8* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13SkEdgeBuilderD0Ev(%class.SkEdgeBuilder*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #7

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z12SkTIntroSortIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEviPT_S5_T0_(i32, %struct.SkAnalyticEdge**, %struct.SkAnalyticEdge**) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %struct.SkAnalyticEdge** %2 to i64
  %5 = ptrtoint %struct.SkAnalyticEdge** %1 to i64
  %6 = sub i64 %4, %5
  %7 = icmp slt i64 %6, 256
  br i1 %7, label %10, label %8

; <label>:8:                                      ; preds = %3
  %9 = bitcast %struct.SkAnalyticEdge** %2 to i64*
  br label %70

; <label>:10:                                     ; preds = %215, %3
  %11 = phi %struct.SkAnalyticEdge** [ %1, %3 ], [ %221, %215 ]
  %12 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %11, i64 1
  %13 = icmp ugt %struct.SkAnalyticEdge** %12, %2
  br i1 %13, label %225, label %14

; <label>:14:                                     ; preds = %10, %67
  %15 = phi %struct.SkAnalyticEdge** [ %68, %67 ], [ %12, %10 ]
  %16 = phi %struct.SkAnalyticEdge** [ %15, %67 ], [ %11, %10 ]
  %17 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %15, align 8
  %18 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %16, align 8
  %19 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %17, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 7
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  %24 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %17, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = select i1 %23, i32 %25, i32 %20
  %29 = select i1 %23, i32 %27, i32 %22
  %30 = icmp eq i32 %28, %29
  %31 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %17, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %18, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = select i1 %30, i32 %32, i32 %28
  %36 = select i1 %30, i32 %34, i32 %29
  %37 = icmp slt i32 %35, %36
  %38 = ptrtoint %struct.SkAnalyticEdge* %17 to i64
  br i1 %37, label %39, label %67

; <label>:39:                                     ; preds = %14, %46
  %40 = phi %struct.SkAnalyticEdge** [ %41, %46 ], [ %15, %14 ]
  %41 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %40, i64 -1
  %42 = bitcast %struct.SkAnalyticEdge** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %struct.SkAnalyticEdge** %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = icmp ugt %struct.SkAnalyticEdge** %41, %11
  br i1 %45, label %46, label %65

; <label>:46:                                     ; preds = %39
  %47 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %40, i64 -2
  %48 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %47, align 8
  %49 = load i32, i32* %19, align 8
  %50 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %48, i64 0, i32 7
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %49, %51
  %53 = load i32, i32* %24, align 8
  %54 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %48, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = select i1 %52, i32 %53, i32 %49
  %57 = select i1 %52, i32 %55, i32 %51
  %58 = icmp eq i32 %56, %57
  %59 = load i32, i32* %31, align 4
  %60 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %48, i64 0, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = select i1 %58, i32 %59, i32 %56
  %63 = select i1 %58, i32 %61, i32 %57
  %64 = icmp slt i32 %62, %63
  br i1 %64, label %39, label %65

; <label>:65:                                     ; preds = %46, %39
  %66 = bitcast %struct.SkAnalyticEdge** %41 to i64*
  store i64 %38, i64* %66, align 8
  br label %67

; <label>:67:                                     ; preds = %65, %14
  %68 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %15, i64 1
  %69 = icmp ugt %struct.SkAnalyticEdge** %68, %2
  br i1 %69, label %225, label %14

; <label>:70:                                     ; preds = %8, %215
  %71 = phi i64 [ %6, %8 ], [ %223, %215 ]
  %72 = phi i32 [ %0, %8 ], [ %171, %215 ]
  %73 = phi %struct.SkAnalyticEdge** [ %1, %8 ], [ %221, %215 ]
  %74 = icmp eq i32 %72, 0
  br i1 %74, label %75, label %170

; <label>:75:                                     ; preds = %70
  %76 = lshr exact i64 %71, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = lshr i64 %77, 1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %82, label %84

; <label>:80:                                     ; preds = %159
  %81 = icmp eq i64 %71, 0
  br i1 %81, label %225, label %82

; <label>:82:                                     ; preds = %75, %80
  %83 = bitcast %struct.SkAnalyticEdge** %73 to i64*
  br label %162

; <label>:84:                                     ; preds = %75, %159
  %85 = phi i64 [ %86, %159 ], [ %78, %75 ]
  %86 = add nsw i64 %85, -1
  %87 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %86
  %88 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %87, align 8
  %89 = shl i64 %85, 1
  %90 = icmp ugt i64 %89, %77
  br i1 %90, label %159, label %91

; <label>:91:                                     ; preds = %84
  %92 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %88, i64 0, i32 7
  %93 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %88, i64 0, i32 3
  %94 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %88, i64 0, i32 4
  br label %95

; <label>:95:                                     ; preds = %150, %91
  %96 = phi i64 [ %89, %91 ], [ %155, %150 ]
  %97 = phi i64 [ %85, %91 ], [ %127, %150 ]
  %98 = icmp ugt i64 %96, %76
  br i1 %98, label %126, label %99

; <label>:99:                                     ; preds = %95
  %100 = add i64 %96, -1
  %101 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %100
  %102 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %101, align 8
  %103 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %96
  %104 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %103, align 8
  %105 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %102, i64 0, i32 7
  %106 = load i32, i32* %105, align 8
  %107 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %104, i64 0, i32 7
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %106, %108
  %110 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %102, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %104, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = select i1 %109, i32 %111, i32 %106
  %115 = select i1 %109, i32 %113, i32 %108
  %116 = icmp eq i32 %114, %115
  %117 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %102, i64 0, i32 4
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %104, i64 0, i32 4
  %120 = load i32, i32* %119, align 4
  %121 = select i1 %116, i32 %118, i32 %114
  %122 = select i1 %116, i32 %120, i32 %115
  %123 = icmp slt i32 %121, %122
  %124 = zext i1 %123 to i64
  %125 = or i64 %96, %124
  br label %126

; <label>:126:                                    ; preds = %95, %99
  %127 = phi i64 [ %96, %95 ], [ %125, %99 ]
  %128 = add i64 %127, -1
  %129 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %128
  %130 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %129, align 8
  %131 = load i32, i32* %92, align 8
  %132 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %130, i64 0, i32 7
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %131, %133
  %135 = load i32, i32* %93, align 8
  %136 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %130, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = select i1 %134, i32 %135, i32 %131
  %139 = select i1 %134, i32 %137, i32 %133
  %140 = icmp eq i32 %138, %139
  %141 = load i32, i32* %94, align 4
  %142 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %130, i64 0, i32 4
  %143 = load i32, i32* %142, align 4
  %144 = select i1 %140, i32 %141, i32 %138
  %145 = select i1 %140, i32 %143, i32 %139
  %146 = icmp slt i32 %144, %145
  br i1 %146, label %150, label %147

; <label>:147:                                    ; preds = %126
  %148 = add i64 %97, -1
  %149 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %148
  br label %159

; <label>:150:                                    ; preds = %126
  %151 = ptrtoint %struct.SkAnalyticEdge* %130 to i64
  %152 = add i64 %97, -1
  %153 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %152
  %154 = bitcast %struct.SkAnalyticEdge** %153 to i64*
  store i64 %151, i64* %154, align 8
  %155 = shl i64 %127, 1
  %156 = icmp ugt i64 %155, %77
  br i1 %156, label %157, label %95

; <label>:157:                                    ; preds = %150
  %158 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %128
  br label %159

; <label>:159:                                    ; preds = %157, %84, %147
  %160 = phi %struct.SkAnalyticEdge** [ %87, %84 ], [ %149, %147 ], [ %158, %157 ]
  store %struct.SkAnalyticEdge* %88, %struct.SkAnalyticEdge** %160, align 8
  %161 = icmp eq i64 %86, 0
  br i1 %161, label %80, label %84

; <label>:162:                                    ; preds = %162, %82
  %163 = phi i64 [ %76, %82 ], [ %168, %162 ]
  %164 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %163
  %165 = load i64, i64* %83, align 8
  %166 = bitcast %struct.SkAnalyticEdge** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %83, align 8
  store i64 %165, i64* %166, align 8
  tail call void @_Z18SkTHeapSort_SiftUpIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEvPT_mmT0_(%struct.SkAnalyticEdge** nonnull %73, i64 1, i64 %163) #12
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %225, label %162

; <label>:170:                                    ; preds = %70
  %171 = add nsw i32 %72, -1
  %172 = lshr i64 %71, 4
  %173 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %73, i64 %172
  %174 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %173, align 8
  %175 = bitcast %struct.SkAnalyticEdge** %173 to i64*
  %176 = ptrtoint %struct.SkAnalyticEdge* %174 to i64
  %177 = load i64, i64* %9, align 8
  store i64 %177, i64* %175, align 8
  store i64 %176, i64* %9, align 8
  %178 = icmp ult %struct.SkAnalyticEdge** %73, %2
  br i1 %178, label %179, label %215

; <label>:179:                                    ; preds = %170
  %180 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %174, i64 0, i32 7
  %181 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %174, i64 0, i32 3
  %182 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %174, i64 0, i32 4
  br label %183

; <label>:183:                                    ; preds = %209, %179
  %184 = phi %struct.SkAnalyticEdge** [ %73, %179 ], [ %210, %209 ]
  %185 = phi %struct.SkAnalyticEdge** [ %73, %179 ], [ %211, %209 ]
  %186 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %185, align 8
  %187 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %186, i64 0, i32 7
  %188 = load i32, i32* %187, align 8
  %189 = load i32, i32* %180, align 8
  %190 = icmp eq i32 %188, %189
  %191 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %186, i64 0, i32 3
  %192 = load i32, i32* %191, align 8
  %193 = load i32, i32* %181, align 8
  %194 = select i1 %190, i32 %192, i32 %188
  %195 = select i1 %190, i32 %193, i32 %189
  %196 = icmp eq i32 %194, %195
  %197 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %186, i64 0, i32 4
  %198 = load i32, i32* %197, align 4
  %199 = load i32, i32* %182, align 4
  %200 = select i1 %196, i32 %198, i32 %194
  %201 = select i1 %196, i32 %199, i32 %195
  %202 = icmp slt i32 %200, %201
  br i1 %202, label %203, label %209

; <label>:203:                                    ; preds = %183
  %204 = ptrtoint %struct.SkAnalyticEdge* %186 to i64
  %205 = bitcast %struct.SkAnalyticEdge** %185 to i64*
  %206 = bitcast %struct.SkAnalyticEdge** %184 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %205, align 8
  store i64 %204, i64* %206, align 8
  %208 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %184, i64 1
  br label %209

; <label>:209:                                    ; preds = %203, %183
  %210 = phi %struct.SkAnalyticEdge** [ %208, %203 ], [ %184, %183 ]
  %211 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %185, i64 1
  %212 = icmp ult %struct.SkAnalyticEdge** %211, %2
  br i1 %212, label %183, label %213

; <label>:213:                                    ; preds = %209
  %214 = load i64, i64* %9, align 8
  br label %215

; <label>:215:                                    ; preds = %170, %213
  %216 = phi i64 [ %176, %170 ], [ %214, %213 ]
  %217 = phi %struct.SkAnalyticEdge** [ %73, %170 ], [ %210, %213 ]
  %218 = bitcast %struct.SkAnalyticEdge** %217 to i64*
  %219 = load i64, i64* %218, align 8
  store i64 %216, i64* %218, align 8
  store i64 %219, i64* %9, align 8
  %220 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %217, i64 -1
  tail call void @_Z12SkTIntroSortIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEviPT_S5_T0_(i32 %171, %struct.SkAnalyticEdge** %73, %struct.SkAnalyticEdge** nonnull %220)
  %221 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %217, i64 1
  %222 = ptrtoint %struct.SkAnalyticEdge** %221 to i64
  %223 = sub i64 %4, %222
  %224 = icmp slt i64 %223, 256
  br i1 %224, label %10, label %70

; <label>:225:                                    ; preds = %162, %67, %80, %10
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1) #9

; Function Attrs: norecurse nounwind ssp uwtable
define linkonce_odr hidden void @_Z18SkTHeapSort_SiftUpIP14SkAnalyticEdge19SkTPointerCompareLTIS0_EEvPT_mmT0_(%struct.SkAnalyticEdge**, i64, i64) local_unnamed_addr #3 comdat {
  %4 = add i64 %1, -1
  %5 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %4
  %6 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %5, align 8
  %7 = shl i64 %1, 1
  %8 = icmp ugt i64 %7, %2
  br i1 %8, label %9, label %17

; <label>:9:                                      ; preds = %48, %3
  %10 = phi i64 [ %1, %3 ], [ %49, %48 ]
  %11 = lshr i64 %10, 1
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %88, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6, i64 0, i32 7
  %15 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6, i64 0, i32 3
  %16 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %6, i64 0, i32 4
  br label %59

; <label>:17:                                     ; preds = %3, %48
  %18 = phi i64 [ %57, %48 ], [ %7, %3 ]
  %19 = phi i64 [ %49, %48 ], [ %1, %3 ]
  %20 = icmp ult i64 %18, %2
  br i1 %20, label %21, label %48

; <label>:21:                                     ; preds = %17
  %22 = add i64 %18, -1
  %23 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %22
  %24 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %23, align 8
  %25 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %18
  %26 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %25, align 8
  %27 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %24, i64 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %26, i64 0, i32 7
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %24, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %26, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = select i1 %31, i32 %33, i32 %28
  %37 = select i1 %31, i32 %35, i32 %30
  %38 = icmp eq i32 %36, %37
  %39 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %24, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %26, i64 0, i32 4
  %42 = load i32, i32* %41, align 4
  %43 = select i1 %38, i32 %40, i32 %36
  %44 = select i1 %38, i32 %42, i32 %37
  %45 = icmp slt i32 %43, %44
  %46 = zext i1 %45 to i64
  %47 = or i64 %18, %46
  br label %48

; <label>:48:                                     ; preds = %21, %17
  %49 = phi i64 [ %18, %17 ], [ %47, %21 ]
  %50 = add i64 %49, -1
  %51 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %50
  %52 = bitcast %struct.SkAnalyticEdge** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %19, -1
  %55 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %54
  %56 = bitcast %struct.SkAnalyticEdge** %55 to i64*
  store i64 %53, i64* %56, align 8
  %57 = shl i64 %49, 1
  %58 = icmp ugt i64 %57, %2
  br i1 %58, label %9, label %17

; <label>:59:                                     ; preds = %13, %81
  %60 = phi i64 [ %11, %13 ], [ %86, %81 ]
  %61 = phi i64 [ %10, %13 ], [ %60, %81 ]
  %62 = add nsw i64 %60, -1
  %63 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %62
  %64 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %63, align 8
  %65 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %64, i64 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = load i32, i32* %14, align 8
  %68 = icmp eq i32 %66, %67
  %69 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %64, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = load i32, i32* %15, align 8
  %72 = select i1 %68, i32 %70, i32 %66
  %73 = select i1 %68, i32 %71, i32 %67
  %74 = icmp eq i32 %72, %73
  %75 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %64, i64 0, i32 4
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* %16, align 4
  %78 = select i1 %74, i32 %76, i32 %72
  %79 = select i1 %74, i32 %77, i32 %73
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %88

; <label>:81:                                     ; preds = %59
  %82 = ptrtoint %struct.SkAnalyticEdge* %64 to i64
  %83 = add i64 %61, -1
  %84 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %83
  %85 = bitcast %struct.SkAnalyticEdge** %84 to i64*
  store i64 %82, i64* %85, align 8
  %86 = lshr i64 %60, 1
  %87 = icmp ult i64 %86, %1
  br i1 %87, label %88, label %59

; <label>:88:                                     ; preds = %59, %81, %9
  %89 = phi i64 [ %10, %9 ], [ %60, %81 ], [ %61, %59 ]
  %90 = add i64 %89, -1
  %91 = getelementptr inbounds %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %0, i64 %90
  store %struct.SkAnalyticEdge* %6, %struct.SkAnalyticEdge** %91, align 8
  ret void
}

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN14SkAnalyticEdge6updateEib(%struct.SkAnalyticEdge*, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZL14isSmoothEnoughP14SkAnalyticEdgeS0_i(%struct.SkAnalyticEdge* nocapture readonly, %struct.SkAnalyticEdge* nocapture readonly) unnamed_addr #10 {
  %3 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8
  %5 = icmp slt i8 %4, 0
  br i1 %5, label %6, label %47

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1
  %8 = bitcast %struct.SkAnalyticEdge* %7 to %struct.SkEdge*
  %9 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 7
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 9
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, 0
  %15 = sub nsw i32 0, %13
  %16 = select i1 %14, i32 %15, i32 %13
  %17 = lshr i32 %16, 1
  %18 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 11
  %19 = load i32, i32* %18, align 8
  %20 = icmp slt i32 %19, 0
  %21 = sub nsw i32 0, %19
  %22 = select i1 %20, i32 %21, i32 %19
  %23 = lshr i32 %22, %11
  %24 = icmp slt i32 %17, %23
  br i1 %24, label %101, label %25

; <label>:25:                                     ; preds = %6
  %26 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 10
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  %29 = sub nsw i32 0, %27
  %30 = select i1 %28, i32 %29, i32 %27
  %31 = lshr i32 %30, 1
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 12
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, 0
  %35 = sub nsw i32 0, %33
  %36 = select i1 %34, i32 %35, i32 %33
  %37 = lshr i32 %36, %11
  %38 = icmp slt i32 %31, %37
  br i1 %38, label %101, label %39

; <label>:39:                                     ; preds = %25
  %40 = ashr i32 %33, %11
  %41 = sub nsw i32 %27, %40
  %42 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %8, i64 0, i32 8
  %43 = load i8, i8* %42, align 2
  %44 = zext i8 %43 to i32
  %45 = ashr i32 %41, %44
  %46 = icmp sgt i32 %45, 65535
  br label %101

; <label>:47:                                     ; preds = %2
  %48 = icmp eq i8 %4, 0
  br i1 %48, label %84, label %49

; <label>:49:                                     ; preds = %47
  %50 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1
  %51 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 9
  %52 = load i32, i32* %51, align 8
  %53 = icmp slt i32 %52, 0
  %54 = sub nsw i32 0, %52
  %55 = select i1 %53, i32 %54, i32 %52
  %56 = lshr i32 %55, 1
  %57 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 11
  %58 = load i32, i32* %57, align 8
  %59 = icmp slt i32 %58, 0
  %60 = sub nsw i32 0, %58
  %61 = select i1 %59, i32 %60, i32 %58
  %62 = icmp slt i32 %56, %61
  br i1 %62, label %101, label %63

; <label>:63:                                     ; preds = %49
  %64 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 10
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 0, %65
  %68 = select i1 %66, i32 %67, i32 %65
  %69 = lshr i32 %68, 1
  %70 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 1, i32 12
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, 0
  %73 = sub nsw i32 0, %71
  %74 = select i1 %72, i32 %73, i32 %71
  %75 = icmp slt i32 %69, %74
  br i1 %75, label %101, label %76

; <label>:76:                                     ; preds = %63
  %77 = sub nsw i32 %65, %71
  %78 = bitcast %struct.SkAnalyticEdge* %50 to %struct.SkEdge*
  %79 = getelementptr inbounds %struct.SkEdge, %struct.SkEdge* %78, i64 0, i32 7
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = ashr i32 %77, %81
  %83 = icmp sgt i32 %82, 65535
  br label %101

; <label>:84:                                     ; preds = %47
  %85 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 4
  %88 = load i32, i32* %87, align 4
  %89 = sub nsw i32 %86, %88
  %90 = icmp slt i32 %89, 0
  %91 = sub nsw i32 0, %89
  %92 = select i1 %90, i32 %91, i32 %89
  %93 = icmp slt i32 %92, 65537
  br i1 %93, label %94, label %101

; <label>:94:                                     ; preds = %84
  %95 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 8
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %1, i64 0, i32 7
  %98 = load i32, i32* %97, align 8
  %99 = sub nsw i32 %96, %98
  %100 = icmp sgt i32 %99, 65535
  br label %101

; <label>:101:                                    ; preds = %84, %94, %76, %49, %63, %39, %6, %25
  %102 = phi i1 [ false, %25 ], [ false, %6 ], [ %46, %39 ], [ false, %63 ], [ false, %49 ], [ %83, %76 ], [ false, %84 ], [ %100, %94 ]
  ret i1 %102
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter*, i32, i32, i32, i32, i32, i32, i32, i8 zeroext, i8* nocapture, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 {
  %14 = alloca [128 x i8], align 16
  %15 = ashr i32 %2, 16
  %16 = add nsw i32 %5, 65535
  %17 = ashr i32 %16, 16
  %18 = sub nsw i32 %17, %15
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %69

; <label>:20:                                     ; preds = %13
  %21 = sub i32 %3, %2
  %22 = sub i32 %21, %4
  %23 = add i32 %22, %5
  %24 = lshr i32 %23, 9
  %25 = trunc i32 %24 to i8
  %26 = icmp ne i8 %8, -1
  %27 = or i1 %26, %11
  br i1 %10, label %28, label %48

; <label>:28:                                     ; preds = %20
  %29 = sext i32 %15 to i64
  %30 = getelementptr inbounds i8, i8* %9, i64 %29
  br i1 %27, label %32, label %31

; <label>:31:                                     ; preds = %28
  store i8 %25, i8* %30, align 1
  br label %848

; <label>:32:                                     ; preds = %28
  %33 = and i32 %24, 255
  %34 = zext i8 %8 to i32
  %35 = mul nuw nsw i32 %33, %34
  %36 = lshr i32 %35, 8
  %37 = load i8, i8* %30, align 1
  %38 = zext i8 %37 to i32
  %39 = add nuw nsw i32 %36, %38
  br i1 %12, label %40, label %44

; <label>:40:                                     ; preds = %32
  %41 = icmp ult i32 %39, 255
  %42 = select i1 %41, i32 %39, i32 255
  %43 = trunc i32 %42 to i8
  store i8 %43, i8* %30, align 1
  br label %848

; <label>:44:                                     ; preds = %32
  %45 = lshr i32 %39, 8
  %46 = sub nsw i32 %39, %45
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %30, align 1
  br label %848

; <label>:48:                                     ; preds = %20
  br i1 %27, label %59, label %49

; <label>:49:                                     ; preds = %48
  %50 = bitcast %class.AdditiveBlitter* %0 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %51 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %50, align 8
  %52 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %51, i64 15
  %53 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %52, align 8
  %54 = tail call %class.SkBlitter* %53(%class.AdditiveBlitter* %0, i1 zeroext false) #12
  %55 = bitcast %class.SkBlitter* %54 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %56 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %56, i64 5
  %58 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %57, align 8
  tail call void %58(%class.SkBlitter* %54, i32 %15, i32 %1, i32 1, i8 zeroext %25) #12
  br label %848

; <label>:59:                                     ; preds = %48
  %60 = and i32 %24, 255
  %61 = zext i8 %8 to i32
  %62 = mul nuw nsw i32 %60, %61
  %63 = lshr i32 %62, 8
  %64 = trunc i32 %63 to i8
  %65 = bitcast %class.AdditiveBlitter* %0 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %66 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %65, align 8
  %67 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %66, i64 17
  %68 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %67, align 8
  tail call void %68(%class.AdditiveBlitter* %0, i32 %15, i32 %1, i8 zeroext %64) #12
  br label %848

; <label>:69:                                     ; preds = %13
  %70 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %70) #12
  %71 = icmp slt i32 %18, 32
  br i1 %71, label %77, label %72

; <label>:72:                                     ; preds = %69
  %73 = add nsw i32 %18, 1
  %74 = sext i32 %73 to i64
  %75 = shl nsw i64 %74, 2
  %76 = tail call i8* @_Znam(i64 %75) #13
  br label %77

; <label>:77:                                     ; preds = %69, %72
  %78 = phi i8* [ %76, %72 ], [ %70, %69 ]
  %79 = sext i32 %18 to i64
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = getelementptr inbounds i8, i8* %80, i64 1
  %82 = shl nsw i32 %18, 1
  %83 = add nsw i32 %82, 2
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %78, i64 %84
  %86 = bitcast i8* %85 to i16*
  %87 = icmp sgt i32 %18, 0
  br i1 %87, label %88, label %189

; <label>:88:                                     ; preds = %77
  %89 = zext i32 %18 to i64
  %90 = icmp ult i32 %18, 16
  br i1 %90, label %91, label %108

; <label>:91:                                     ; preds = %187, %108, %88
  %92 = phi i64 [ 0, %108 ], [ 0, %88 ], [ %117, %187 ]
  %93 = xor i64 %92, -1
  %94 = add nsw i64 %93, %89
  %95 = and i64 %89, 3
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %105, label %97

; <label>:97:                                     ; preds = %91, %97
  %98 = phi i64 [ %102, %97 ], [ %92, %91 ]
  %99 = phi i64 [ %103, %97 ], [ %95, %91 ]
  %100 = getelementptr inbounds i16, i16* %86, i64 %98
  store i16 1, i16* %100, align 2
  %101 = getelementptr inbounds i8, i8* %78, i64 %98
  store i8 %8, i8* %101, align 1
  %102 = add nuw nsw i64 %98, 1
  %103 = add i64 %99, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %97, !llvm.loop !22

; <label>:105:                                    ; preds = %97, %91
  %106 = phi i64 [ %92, %91 ], [ %102, %97 ]
  %107 = icmp ult i64 %94, 3
  br i1 %107, label %189, label %195

; <label>:108:                                    ; preds = %88
  %109 = shl nuw nsw i64 %89, 1
  %110 = add nsw i64 %109, %84
  %111 = getelementptr i8, i8* %78, i64 %110
  %112 = getelementptr i8, i8* %78, i64 %89
  %113 = icmp ult i8* %85, %112
  %114 = icmp ult i8* %78, %111
  %115 = and i1 %113, %114
  br i1 %115, label %91, label %116

; <label>:116:                                    ; preds = %108
  %117 = and i64 %89, 4294967280
  %118 = insertelement <8 x i8> undef, i8 %8, i32 0
  %119 = shufflevector <8 x i8> %118, <8 x i8> undef, <8 x i32> zeroinitializer
  %120 = insertelement <8 x i8> undef, i8 %8, i32 0
  %121 = shufflevector <8 x i8> %120, <8 x i8> undef, <8 x i32> zeroinitializer
  %122 = add nsw i64 %117, -16
  %123 = lshr exact i64 %122, 4
  %124 = add nuw nsw i64 %123, 1
  %125 = and i64 %124, 3
  %126 = icmp ult i64 %122, 48
  br i1 %126, label %170, label %127

; <label>:127:                                    ; preds = %116
  %128 = sub nsw i64 %124, %125
  br label %129

; <label>:129:                                    ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %167, %129 ]
  %131 = phi i64 [ %128, %127 ], [ %168, %129 ]
  %132 = getelementptr inbounds i16, i16* %86, i64 %130
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %133, align 2, !alias.scope !23, !noalias !26
  %134 = getelementptr inbounds i16, i16* %132, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %135, align 2, !alias.scope !23, !noalias !26
  %136 = getelementptr inbounds i8, i8* %78, i64 %130
  %137 = bitcast i8* %136 to <8 x i8>*
  store <8 x i8> %119, <8 x i8>* %137, align 1, !alias.scope !26
  %138 = getelementptr inbounds i8, i8* %136, i64 8
  %139 = bitcast i8* %138 to <8 x i8>*
  store <8 x i8> %121, <8 x i8>* %139, align 1, !alias.scope !26
  %140 = or i64 %130, 16
  %141 = getelementptr inbounds i16, i16* %86, i64 %140
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %142, align 2, !alias.scope !23, !noalias !26
  %143 = getelementptr inbounds i16, i16* %141, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %144, align 2, !alias.scope !23, !noalias !26
  %145 = getelementptr inbounds i8, i8* %78, i64 %140
  %146 = bitcast i8* %145 to <8 x i8>*
  store <8 x i8> %119, <8 x i8>* %146, align 1, !alias.scope !26
  %147 = getelementptr inbounds i8, i8* %145, i64 8
  %148 = bitcast i8* %147 to <8 x i8>*
  store <8 x i8> %121, <8 x i8>* %148, align 1, !alias.scope !26
  %149 = or i64 %130, 32
  %150 = getelementptr inbounds i16, i16* %86, i64 %149
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %151, align 2, !alias.scope !23, !noalias !26
  %152 = getelementptr inbounds i16, i16* %150, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %153, align 2, !alias.scope !23, !noalias !26
  %154 = getelementptr inbounds i8, i8* %78, i64 %149
  %155 = bitcast i8* %154 to <8 x i8>*
  store <8 x i8> %119, <8 x i8>* %155, align 1, !alias.scope !26
  %156 = getelementptr inbounds i8, i8* %154, i64 8
  %157 = bitcast i8* %156 to <8 x i8>*
  store <8 x i8> %121, <8 x i8>* %157, align 1, !alias.scope !26
  %158 = or i64 %130, 48
  %159 = getelementptr inbounds i16, i16* %86, i64 %158
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %160, align 2, !alias.scope !23, !noalias !26
  %161 = getelementptr inbounds i16, i16* %159, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %162, align 2, !alias.scope !23, !noalias !26
  %163 = getelementptr inbounds i8, i8* %78, i64 %158
  %164 = bitcast i8* %163 to <8 x i8>*
  store <8 x i8> %119, <8 x i8>* %164, align 1, !alias.scope !26
  %165 = getelementptr inbounds i8, i8* %163, i64 8
  %166 = bitcast i8* %165 to <8 x i8>*
  store <8 x i8> %121, <8 x i8>* %166, align 1, !alias.scope !26
  %167 = add i64 %130, 64
  %168 = add i64 %131, -4
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %129, !llvm.loop !28

; <label>:170:                                    ; preds = %129, %116
  %171 = phi i64 [ 0, %116 ], [ %167, %129 ]
  %172 = icmp eq i64 %125, 0
  br i1 %172, label %187, label %173

; <label>:173:                                    ; preds = %170, %173
  %174 = phi i64 [ %184, %173 ], [ %171, %170 ]
  %175 = phi i64 [ %185, %173 ], [ %125, %170 ]
  %176 = getelementptr inbounds i16, i16* %86, i64 %174
  %177 = bitcast i16* %176 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %177, align 2, !alias.scope !23, !noalias !26
  %178 = getelementptr inbounds i16, i16* %176, i64 8
  %179 = bitcast i16* %178 to <8 x i16>*
  store <8 x i16> <i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1>, <8 x i16>* %179, align 2, !alias.scope !23, !noalias !26
  %180 = getelementptr inbounds i8, i8* %78, i64 %174
  %181 = bitcast i8* %180 to <8 x i8>*
  store <8 x i8> %119, <8 x i8>* %181, align 1, !alias.scope !26
  %182 = getelementptr inbounds i8, i8* %180, i64 8
  %183 = bitcast i8* %182 to <8 x i8>*
  store <8 x i8> %121, <8 x i8>* %183, align 1, !alias.scope !26
  %184 = add i64 %174, 16
  %185 = add i64 %175, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %173, !llvm.loop !29

; <label>:187:                                    ; preds = %173, %170
  %188 = icmp eq i64 %117, %89
  br i1 %188, label %189, label %91

; <label>:189:                                    ; preds = %105, %195, %187, %77
  %190 = getelementptr inbounds i16, i16* %86, i64 %79
  store i16 0, i16* %190, align 2
  %191 = add nsw i32 %4, 65535
  %192 = ashr i32 %191, 16
  %193 = add nsw i32 %15, 2
  %194 = icmp eq i32 %193, %192
  br i1 %194, label %210, label %237

; <label>:195:                                    ; preds = %105, %195
  %196 = phi i64 [ %208, %195 ], [ %106, %105 ]
  %197 = getelementptr inbounds i16, i16* %86, i64 %196
  store i16 1, i16* %197, align 2
  %198 = getelementptr inbounds i8, i8* %78, i64 %196
  store i8 %8, i8* %198, align 1
  %199 = add nuw nsw i64 %196, 1
  %200 = getelementptr inbounds i16, i16* %86, i64 %199
  store i16 1, i16* %200, align 2
  %201 = getelementptr inbounds i8, i8* %78, i64 %199
  store i8 %8, i8* %201, align 1
  %202 = add nsw i64 %196, 2
  %203 = getelementptr inbounds i16, i16* %86, i64 %202
  store i16 1, i16* %203, align 2
  %204 = getelementptr inbounds i8, i8* %78, i64 %202
  store i8 %8, i8* %204, align 1
  %205 = add nsw i64 %196, 3
  %206 = getelementptr inbounds i16, i16* %86, i64 %205
  store i16 1, i16* %206, align 2
  %207 = getelementptr inbounds i8, i8* %78, i64 %205
  store i8 %8, i8* %207, align 1
  %208 = add nsw i64 %196, 4
  %209 = icmp eq i64 %208, %89
  br i1 %209, label %189, label %195, !llvm.loop !30

; <label>:210:                                    ; preds = %189
  %211 = add i32 %2, 65536
  %212 = and i32 %211, -65536
  %213 = sub nsw i32 %212, %2
  %214 = sub i32 %4, %2
  %215 = sub i32 %214, %213
  %216 = ashr i32 %213, 11
  %217 = mul nsw i32 %216, %216
  %218 = ashr i32 %6, 11
  %219 = mul nsw i32 %217, %218
  %220 = lshr i32 %219, 8
  %221 = trunc i32 %220 to i8
  %222 = sub i8 %8, %221
  %223 = ashr i32 %215, 11
  %224 = mul nsw i32 %223, %223
  %225 = mul nsw i32 %224, %218
  %226 = lshr i32 %225, 8
  %227 = trunc i32 %226 to i8
  %228 = load i8, i8* %78, align 1
  %229 = icmp ugt i8 %228, %222
  %230 = select i1 %229, i8 %228, i8 %222
  %231 = sub i8 %230, %222
  store i8 %231, i8* %78, align 1
  %232 = getelementptr inbounds i8, i8* %78, i64 1
  %233 = load i8, i8* %232, align 1
  %234 = icmp ugt i8 %233, %227
  %235 = select i1 %234, i8 %233, i8 %227
  %236 = sub i8 %235, %227
  store i8 %236, i8* %232, align 1
  br label %509

; <label>:237:                                    ; preds = %189
  %238 = sext i32 %15 to i64
  %239 = getelementptr inbounds i8, i8* %81, i64 %238
  %240 = sub nsw i64 0, %238
  %241 = getelementptr inbounds i8, i8* %239, i64 %240
  %242 = and i32 %2, -65536
  %243 = sub nsw i32 %2, %242
  %244 = sub nsw i32 %4, %242
  %245 = add nsw i32 %244, 65535
  %246 = ashr i32 %245, 16
  switch i32 %246, label %255 [
    i32 0, label %367
    i32 1, label %247
  ]

; <label>:247:                                    ; preds = %237
  %248 = add nsw i32 %244, %243
  %249 = lshr i32 %248, 9
  %250 = and i32 %249, 255
  %251 = zext i8 %8 to i32
  %252 = mul nuw nsw i32 %250, %251
  %253 = lshr i32 %252, 8
  %254 = trunc i32 %253 to i8
  br label %365

; <label>:255:                                    ; preds = %237
  %256 = sub nsw i32 65536, %243
  %257 = add nsw i32 %246, -1
  %258 = shl i32 %257, 16
  %259 = sub nsw i32 %244, %258
  %260 = sext i32 %259 to i64
  %261 = sext i32 %6 to i64
  %262 = mul nsw i64 %260, %261
  %263 = lshr i64 %262, 16
  %264 = shl i64 %263, 32
  %265 = ashr exact i64 %264, 32
  %266 = mul nsw i64 %265, %260
  %267 = lshr i64 %266, 25
  %268 = trunc i64 %267 to i8
  %269 = sext i32 %257 to i64
  %270 = getelementptr inbounds i8, i8* %241, i64 %269
  store i8 %268, i8* %270, align 1
  %271 = icmp sgt i32 %244, 131072
  br i1 %271, label %272, label %348

; <label>:272:                                    ; preds = %255
  %273 = ashr i32 %6, 1
  %274 = trunc i64 %263 to i32
  %275 = add nsw i32 %273, %274
  %276 = add nsw i32 %246, -2
  %277 = sext i32 %276 to i64
  %278 = add nsw i64 %277, 2
  %279 = xor i64 %277, -1
  %280 = icmp sgt i64 %279, -2
  %281 = select i1 %280, i64 %279, i64 -2
  %282 = add nsw i64 %281, %278
  %283 = icmp ult i64 %282, 16
  br i1 %283, label %284, label %287

; <label>:284:                                    ; preds = %346, %272
  %285 = phi i64 [ %277, %272 ], [ %289, %346 ]
  %286 = phi i32 [ %275, %272 ], [ %293, %346 ]
  br label %356

; <label>:287:                                    ; preds = %272
  %288 = and i64 %282, -16
  %289 = sub nsw i64 %277, %288
  %290 = trunc i64 %288 to i32
  %291 = mul i32 %290, %6
  %292 = add i32 %273, %291
  %293 = add i32 %292, %274
  %294 = insertelement <16 x i32> undef, i32 %275, i32 0
  %295 = shufflevector <16 x i32> %294, <16 x i32> undef, <16 x i32> zeroinitializer
  %296 = insertelement <16 x i32> undef, i32 %6, i32 0
  %297 = shufflevector <16 x i32> %296, <16 x i32> undef, <16 x i32> zeroinitializer
  %298 = mul <16 x i32> %297, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %299 = add <16 x i32> %295, %298
  %300 = shl i32 %6, 4
  %301 = insertelement <16 x i32> undef, i32 %300, i32 0
  %302 = shufflevector <16 x i32> %301, <16 x i32> undef, <16 x i32> zeroinitializer
  %303 = add nsw i64 %288, -16
  %304 = lshr exact i64 %303, 4
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 1
  %307 = icmp eq i64 %303, 0
  br i1 %307, label %334, label %308

; <label>:308:                                    ; preds = %287
  %309 = sub nsw i64 %305, %306
  %310 = getelementptr inbounds i8, i8* %241, i64 -15
  %311 = getelementptr inbounds i8, i8* %241, i64 -15
  br label %312

; <label>:312:                                    ; preds = %312, %308
  %313 = phi i64 [ 0, %308 ], [ %330, %312 ]
  %314 = phi <16 x i32> [ %299, %308 ], [ %331, %312 ]
  %315 = phi i64 [ %309, %308 ], [ %332, %312 ]
  %316 = sub i64 %277, %313
  %317 = lshr <16 x i32> %314, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %318 = trunc <16 x i32> %317 to <16 x i8>
  %319 = shufflevector <16 x i8> %318, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %320 = getelementptr inbounds i8, i8* %310, i64 %316
  %321 = bitcast i8* %320 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %321, align 1
  %322 = or i64 %313, 16
  %323 = add <16 x i32> %314, %302
  %324 = sub i64 %277, %322
  %325 = lshr <16 x i32> %323, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %326 = trunc <16 x i32> %325 to <16 x i8>
  %327 = shufflevector <16 x i8> %326, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %328 = getelementptr inbounds i8, i8* %311, i64 %324
  %329 = bitcast i8* %328 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %329, align 1
  %330 = add i64 %313, 32
  %331 = add <16 x i32> %323, %302
  %332 = add i64 %315, -2
  %333 = icmp eq i64 %332, 0
  br i1 %333, label %334, label %312, !llvm.loop !31

; <label>:334:                                    ; preds = %312, %287
  %335 = phi i64 [ 0, %287 ], [ %330, %312 ]
  %336 = phi <16 x i32> [ %299, %287 ], [ %331, %312 ]
  %337 = icmp eq i64 %306, 0
  br i1 %337, label %346, label %338

; <label>:338:                                    ; preds = %334
  %339 = sub i64 %277, %335
  %340 = lshr <16 x i32> %336, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %341 = trunc <16 x i32> %340 to <16 x i8>
  %342 = getelementptr inbounds i8, i8* %241, i64 -15
  %343 = shufflevector <16 x i8> %341, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %344 = getelementptr inbounds i8, i8* %342, i64 %339
  %345 = bitcast i8* %344 to <16 x i8>*
  store <16 x i8> %343, <16 x i8>* %345, align 1
  br label %346

; <label>:346:                                    ; preds = %334, %338
  %347 = icmp eq i64 %282, %288
  br i1 %347, label %348, label %284

; <label>:348:                                    ; preds = %356, %346, %255
  %349 = ashr i32 %256, 11
  %350 = mul nsw i32 %349, %349
  %351 = ashr i32 %6, 11
  %352 = mul nsw i32 %350, %351
  %353 = lshr i32 %352, 8
  %354 = trunc i32 %353 to i8
  %355 = sub i8 %8, %354
  br label %365

; <label>:356:                                    ; preds = %284, %356
  %357 = phi i64 [ %363, %356 ], [ %285, %284 ]
  %358 = phi i32 [ %362, %356 ], [ %286, %284 ]
  %359 = lshr i32 %358, 8
  %360 = trunc i32 %359 to i8
  %361 = getelementptr inbounds i8, i8* %241, i64 %357
  store i8 %360, i8* %361, align 1
  %362 = add nsw i32 %358, %6
  %363 = add i64 %357, -1
  %364 = icmp sgt i64 %357, 1
  br i1 %364, label %356, label %348, !llvm.loop !32

; <label>:365:                                    ; preds = %348, %247
  %366 = phi i8 [ %355, %348 ], [ %254, %247 ]
  store i8 %366, i8* %241, align 1
  br label %367

; <label>:367:                                    ; preds = %237, %365
  %368 = icmp slt i32 %15, %192
  br i1 %368, label %369, label %509

; <label>:369:                                    ; preds = %367
  %370 = sext i32 %192 to i64
  %371 = sub nsw i64 %370, %238
  %372 = icmp ult i64 %371, 32
  br i1 %372, label %468, label %373

; <label>:373:                                    ; preds = %369
  %374 = sub nsw i64 %370, %238
  %375 = getelementptr i8, i8* %78, i64 %374
  %376 = add nsw i32 %192, %17
  %377 = add nsw i32 %376, 1
  %378 = sext i32 %377 to i64
  %379 = shl nsw i64 %238, 1
  %380 = sub nsw i64 %378, %379
  %381 = getelementptr i8, i8* %78, i64 %380
  %382 = icmp ult i8* %78, %381
  %383 = icmp ult i8* %81, %375
  %384 = and i1 %382, %383
  br i1 %384, label %468, label %385

; <label>:385:                                    ; preds = %373
  %386 = and i64 %371, -32
  %387 = add nsw i64 %386, %238
  %388 = add nsw i64 %386, -32
  %389 = lshr exact i64 %388, 5
  %390 = add nuw nsw i64 %389, 1
  %391 = and i64 %390, 1
  %392 = icmp eq i64 %388, 0
  br i1 %392, label %442, label %393

; <label>:393:                                    ; preds = %385
  %394 = sub nsw i64 %390, %391
  br label %395

; <label>:395:                                    ; preds = %395, %393
  %396 = phi i64 [ 0, %393 ], [ %439, %395 ]
  %397 = phi i64 [ %394, %393 ], [ %440, %395 ]
  %398 = getelementptr inbounds i8, i8* %78, i64 %396
  %399 = bitcast i8* %398 to <16 x i8>*
  %400 = load <16 x i8>, <16 x i8>* %399, align 1, !alias.scope !33, !noalias !36
  %401 = getelementptr inbounds i8, i8* %398, i64 16
  %402 = bitcast i8* %401 to <16 x i8>*
  %403 = load <16 x i8>, <16 x i8>* %402, align 1, !alias.scope !33, !noalias !36
  %404 = getelementptr inbounds i8, i8* %81, i64 %396
  %405 = bitcast i8* %404 to <16 x i8>*
  %406 = load <16 x i8>, <16 x i8>* %405, align 1, !alias.scope !36
  %407 = getelementptr inbounds i8, i8* %404, i64 16
  %408 = bitcast i8* %407 to <16 x i8>*
  %409 = load <16 x i8>, <16 x i8>* %408, align 1, !alias.scope !36
  %410 = icmp ugt <16 x i8> %400, %406
  %411 = icmp ugt <16 x i8> %403, %409
  %412 = select <16 x i1> %410, <16 x i8> %400, <16 x i8> %406
  %413 = select <16 x i1> %411, <16 x i8> %403, <16 x i8> %409
  %414 = sub <16 x i8> %412, %406
  %415 = sub <16 x i8> %413, %409
  %416 = bitcast i8* %398 to <16 x i8>*
  store <16 x i8> %414, <16 x i8>* %416, align 1, !alias.scope !33, !noalias !36
  %417 = bitcast i8* %401 to <16 x i8>*
  store <16 x i8> %415, <16 x i8>* %417, align 1, !alias.scope !33, !noalias !36
  %418 = or i64 %396, 32
  %419 = getelementptr inbounds i8, i8* %78, i64 %418
  %420 = bitcast i8* %419 to <16 x i8>*
  %421 = load <16 x i8>, <16 x i8>* %420, align 1, !alias.scope !33, !noalias !36
  %422 = getelementptr inbounds i8, i8* %419, i64 16
  %423 = bitcast i8* %422 to <16 x i8>*
  %424 = load <16 x i8>, <16 x i8>* %423, align 1, !alias.scope !33, !noalias !36
  %425 = getelementptr inbounds i8, i8* %81, i64 %418
  %426 = bitcast i8* %425 to <16 x i8>*
  %427 = load <16 x i8>, <16 x i8>* %426, align 1, !alias.scope !36
  %428 = getelementptr inbounds i8, i8* %425, i64 16
  %429 = bitcast i8* %428 to <16 x i8>*
  %430 = load <16 x i8>, <16 x i8>* %429, align 1, !alias.scope !36
  %431 = icmp ugt <16 x i8> %421, %427
  %432 = icmp ugt <16 x i8> %424, %430
  %433 = select <16 x i1> %431, <16 x i8> %421, <16 x i8> %427
  %434 = select <16 x i1> %432, <16 x i8> %424, <16 x i8> %430
  %435 = sub <16 x i8> %433, %427
  %436 = sub <16 x i8> %434, %430
  %437 = bitcast i8* %419 to <16 x i8>*
  store <16 x i8> %435, <16 x i8>* %437, align 1, !alias.scope !33, !noalias !36
  %438 = bitcast i8* %422 to <16 x i8>*
  store <16 x i8> %436, <16 x i8>* %438, align 1, !alias.scope !33, !noalias !36
  %439 = add i64 %396, 64
  %440 = add i64 %397, -2
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %442, label %395, !llvm.loop !38

; <label>:442:                                    ; preds = %395, %385
  %443 = phi i64 [ 0, %385 ], [ %439, %395 ]
  %444 = icmp eq i64 %391, 0
  br i1 %444, label %466, label %445

; <label>:445:                                    ; preds = %442
  %446 = getelementptr inbounds i8, i8* %78, i64 %443
  %447 = bitcast i8* %446 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !alias.scope !33, !noalias !36
  %449 = getelementptr inbounds i8, i8* %446, i64 16
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1, !alias.scope !33, !noalias !36
  %452 = getelementptr inbounds i8, i8* %81, i64 %443
  %453 = bitcast i8* %452 to <16 x i8>*
  %454 = load <16 x i8>, <16 x i8>* %453, align 1, !alias.scope !36
  %455 = getelementptr inbounds i8, i8* %452, i64 16
  %456 = bitcast i8* %455 to <16 x i8>*
  %457 = load <16 x i8>, <16 x i8>* %456, align 1, !alias.scope !36
  %458 = icmp ugt <16 x i8> %448, %454
  %459 = icmp ugt <16 x i8> %451, %457
  %460 = select <16 x i1> %458, <16 x i8> %448, <16 x i8> %454
  %461 = select <16 x i1> %459, <16 x i8> %451, <16 x i8> %457
  %462 = sub <16 x i8> %460, %454
  %463 = sub <16 x i8> %461, %457
  %464 = bitcast i8* %446 to <16 x i8>*
  store <16 x i8> %462, <16 x i8>* %464, align 1, !alias.scope !33, !noalias !36
  %465 = bitcast i8* %449 to <16 x i8>*
  store <16 x i8> %463, <16 x i8>* %465, align 1, !alias.scope !33, !noalias !36
  br label %466

; <label>:466:                                    ; preds = %442, %445
  %467 = icmp eq i64 %371, %386
  br i1 %467, label %509, label %468

; <label>:468:                                    ; preds = %466, %373, %369
  %469 = phi i64 [ %238, %373 ], [ %238, %369 ], [ %387, %466 ]
  %470 = sub nsw i64 %370, %469
  %471 = xor i64 %469, -1
  %472 = and i64 %470, 1
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %484, label %474

; <label>:474:                                    ; preds = %468
  %475 = sub nsw i64 %469, %238
  %476 = getelementptr inbounds i8, i8* %78, i64 %475
  %477 = load i8, i8* %476, align 1
  %478 = getelementptr inbounds i8, i8* %81, i64 %475
  %479 = load i8, i8* %478, align 1
  %480 = icmp ugt i8 %477, %479
  %481 = select i1 %480, i8 %477, i8 %479
  %482 = sub i8 %481, %479
  store i8 %482, i8* %476, align 1
  %483 = add nsw i64 %469, 1
  br label %484

; <label>:484:                                    ; preds = %468, %474
  %485 = phi i64 [ %469, %468 ], [ %483, %474 ]
  %486 = sub nsw i64 0, %370
  %487 = icmp eq i64 %471, %486
  br i1 %487, label %509, label %488

; <label>:488:                                    ; preds = %484, %488
  %489 = phi i64 [ %507, %488 ], [ %485, %484 ]
  %490 = sub nsw i64 %489, %238
  %491 = getelementptr inbounds i8, i8* %78, i64 %490
  %492 = load i8, i8* %491, align 1
  %493 = getelementptr inbounds i8, i8* %81, i64 %490
  %494 = load i8, i8* %493, align 1
  %495 = icmp ugt i8 %492, %494
  %496 = select i1 %495, i8 %492, i8 %494
  %497 = sub i8 %496, %494
  store i8 %497, i8* %491, align 1
  %498 = add nsw i64 %489, 1
  %499 = sub nsw i64 %498, %238
  %500 = getelementptr inbounds i8, i8* %78, i64 %499
  %501 = load i8, i8* %500, align 1
  %502 = getelementptr inbounds i8, i8* %81, i64 %499
  %503 = load i8, i8* %502, align 1
  %504 = icmp ugt i8 %501, %503
  %505 = select i1 %504, i8 %501, i8 %503
  %506 = sub i8 %505, %503
  store i8 %506, i8* %500, align 1
  %507 = add nsw i64 %489, 2
  %508 = icmp eq i64 %507, %370
  br i1 %508, label %509, label %488, !llvm.loop !39

; <label>:509:                                    ; preds = %484, %488, %466, %367, %210
  %510 = ashr i32 %3, 16
  %511 = add nsw i32 %510, 2
  %512 = icmp eq i32 %511, %17
  br i1 %512, label %513, label %545

; <label>:513:                                    ; preds = %509
  %514 = add i32 %3, 65536
  %515 = and i32 %514, -65536
  %516 = sub nsw i32 %515, %3
  %517 = sub i32 %5, %3
  %518 = sub i32 %517, %516
  %519 = ashr i32 %516, 11
  %520 = mul nsw i32 %519, %519
  %521 = ashr i32 %7, 11
  %522 = mul nsw i32 %520, %521
  %523 = lshr i32 %522, 8
  %524 = trunc i32 %523 to i8
  %525 = ashr i32 %518, 11
  %526 = mul nsw i32 %525, %525
  %527 = mul nsw i32 %526, %521
  %528 = lshr i32 %527, 8
  %529 = trunc i32 %528 to i8
  %530 = sub i8 %8, %529
  %531 = add nsw i32 %18, -2
  %532 = sext i32 %531 to i64
  %533 = getelementptr inbounds i8, i8* %78, i64 %532
  %534 = load i8, i8* %533, align 1
  %535 = icmp ugt i8 %534, %524
  %536 = select i1 %535, i8 %534, i8 %524
  %537 = sub i8 %536, %524
  store i8 %537, i8* %533, align 1
  %538 = add nsw i32 %18, -1
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds i8, i8* %78, i64 %539
  %541 = load i8, i8* %540, align 1
  %542 = icmp ugt i8 %541, %530
  %543 = select i1 %542, i8 %541, i8 %530
  %544 = sub i8 %543, %530
  store i8 %544, i8* %540, align 1
  br label %775

; <label>:545:                                    ; preds = %509
  %546 = sext i32 %510 to i64
  %547 = getelementptr inbounds i8, i8* %81, i64 %546
  %548 = sext i32 %15 to i64
  %549 = sub nsw i64 0, %548
  %550 = getelementptr inbounds i8, i8* %547, i64 %549
  %551 = and i32 %3, -65536
  %552 = sub nsw i32 %3, %551
  %553 = sub nsw i32 %5, %551
  %554 = add nsw i32 %553, 65535
  %555 = ashr i32 %554, 16
  switch i32 %555, label %565 [
    i32 0, label %682
    i32 1, label %556
  ]

; <label>:556:                                    ; preds = %545
  %557 = add i32 %552, %553
  %558 = sub i32 0, %557
  %559 = lshr i32 %558, 9
  %560 = and i32 %559, 255
  %561 = zext i8 %8 to i32
  %562 = mul nuw nsw i32 %560, %561
  %563 = lshr i32 %562, 8
  %564 = trunc i32 %563 to i8
  store i8 %564, i8* %550, align 1
  br label %682

; <label>:565:                                    ; preds = %545
  %566 = sub nsw i32 65536, %552
  %567 = add nsw i32 %555, -1
  %568 = shl i32 %567, 16
  %569 = sub nsw i32 %553, %568
  %570 = sext i32 %566 to i64
  %571 = sext i32 %7 to i64
  %572 = mul nsw i64 %571, %570
  %573 = lshr i64 %572, 16
  %574 = shl i64 %573, 32
  %575 = ashr exact i64 %574, 32
  %576 = mul nsw i64 %575, %570
  %577 = lshr i64 %576, 25
  %578 = trunc i64 %577 to i8
  store i8 %578, i8* %550, align 1
  %579 = icmp sgt i32 %553, 131072
  br i1 %579, label %582, label %580

; <label>:580:                                    ; preds = %565
  %581 = sext i32 %567 to i64
  br label %663

; <label>:582:                                    ; preds = %565
  %583 = ashr i32 %7, 1
  %584 = trunc i64 %573 to i32
  %585 = add nsw i32 %583, %584
  %586 = sext i32 %567 to i64
  %587 = icmp sgt i64 %586, 2
  %588 = select i1 %587, i64 %586, i64 2
  %589 = add nsw i64 %588, -1
  %590 = icmp ult i64 %589, 32
  br i1 %590, label %591, label %594

; <label>:591:                                    ; preds = %661, %582
  %592 = phi i64 [ 1, %582 ], [ %596, %661 ]
  %593 = phi i32 [ %585, %582 ], [ %600, %661 ]
  br label %673

; <label>:594:                                    ; preds = %582
  %595 = and i64 %589, -32
  %596 = or i64 %595, 1
  %597 = trunc i64 %595 to i32
  %598 = mul i32 %597, %7
  %599 = add i32 %583, %598
  %600 = add i32 %599, %584
  %601 = insertelement <16 x i32> undef, i32 %585, i32 0
  %602 = shufflevector <16 x i32> %601, <16 x i32> undef, <16 x i32> zeroinitializer
  %603 = insertelement <16 x i32> undef, i32 %7, i32 0
  %604 = shufflevector <16 x i32> %603, <16 x i32> undef, <16 x i32> zeroinitializer
  %605 = mul <16 x i32> %604, <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  %606 = add <16 x i32> %602, %605
  %607 = shl i32 %7, 4
  %608 = insertelement <16 x i32> undef, i32 %607, i32 0
  %609 = shufflevector <16 x i32> %608, <16 x i32> undef, <16 x i32> zeroinitializer
  %610 = add nsw i64 %595, -32
  %611 = lshr exact i64 %610, 5
  %612 = add nuw nsw i64 %611, 1
  %613 = and i64 %612, 1
  %614 = icmp eq i64 %610, 0
  br i1 %614, label %646, label %615

; <label>:615:                                    ; preds = %594
  %616 = sub nsw i64 %612, %613
  br label %617

; <label>:617:                                    ; preds = %617, %615
  %618 = phi i64 [ 0, %615 ], [ %642, %617 ]
  %619 = phi <16 x i32> [ %606, %615 ], [ %643, %617 ]
  %620 = phi i64 [ %616, %615 ], [ %644, %617 ]
  %621 = or i64 %618, 1
  %622 = add <16 x i32> %619, %609
  %623 = lshr <16 x i32> %619, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %624 = lshr <16 x i32> %622, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %625 = trunc <16 x i32> %623 to <16 x i8>
  %626 = trunc <16 x i32> %624 to <16 x i8>
  %627 = getelementptr inbounds i8, i8* %550, i64 %621
  %628 = bitcast i8* %627 to <16 x i8>*
  store <16 x i8> %625, <16 x i8>* %628, align 1
  %629 = getelementptr inbounds i8, i8* %627, i64 16
  %630 = bitcast i8* %629 to <16 x i8>*
  store <16 x i8> %626, <16 x i8>* %630, align 1
  %631 = add <16 x i32> %622, %609
  %632 = or i64 %618, 33
  %633 = add <16 x i32> %631, %609
  %634 = lshr <16 x i32> %631, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %635 = lshr <16 x i32> %633, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %636 = trunc <16 x i32> %634 to <16 x i8>
  %637 = trunc <16 x i32> %635 to <16 x i8>
  %638 = getelementptr inbounds i8, i8* %550, i64 %632
  %639 = bitcast i8* %638 to <16 x i8>*
  store <16 x i8> %636, <16 x i8>* %639, align 1
  %640 = getelementptr inbounds i8, i8* %638, i64 16
  %641 = bitcast i8* %640 to <16 x i8>*
  store <16 x i8> %637, <16 x i8>* %641, align 1
  %642 = add i64 %618, 64
  %643 = add <16 x i32> %633, %609
  %644 = add i64 %620, -2
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %617, !llvm.loop !40

; <label>:646:                                    ; preds = %617, %594
  %647 = phi i64 [ 0, %594 ], [ %642, %617 ]
  %648 = phi <16 x i32> [ %606, %594 ], [ %643, %617 ]
  %649 = icmp eq i64 %613, 0
  br i1 %649, label %661, label %650

; <label>:650:                                    ; preds = %646
  %651 = or i64 %647, 1
  %652 = add <16 x i32> %648, %609
  %653 = lshr <16 x i32> %648, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %654 = lshr <16 x i32> %652, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %655 = trunc <16 x i32> %653 to <16 x i8>
  %656 = trunc <16 x i32> %654 to <16 x i8>
  %657 = getelementptr inbounds i8, i8* %550, i64 %651
  %658 = bitcast i8* %657 to <16 x i8>*
  store <16 x i8> %655, <16 x i8>* %658, align 1
  %659 = getelementptr inbounds i8, i8* %657, i64 16
  %660 = bitcast i8* %659 to <16 x i8>*
  store <16 x i8> %656, <16 x i8>* %660, align 1
  br label %661

; <label>:661:                                    ; preds = %646, %650
  %662 = icmp eq i64 %589, %595
  br i1 %662, label %663, label %591

; <label>:663:                                    ; preds = %673, %661, %580
  %664 = phi i64 [ %581, %580 ], [ %586, %661 ], [ %586, %673 ]
  %665 = ashr i32 %569, 11
  %666 = ashr i32 %7, 11
  %667 = mul i32 %665, %666
  %668 = mul i32 %667, %665
  %669 = lshr i32 %668, 8
  %670 = trunc i32 %669 to i8
  %671 = sub i8 %8, %670
  %672 = getelementptr inbounds i8, i8* %550, i64 %664
  store i8 %671, i8* %672, align 1
  br label %682

; <label>:673:                                    ; preds = %591, %673
  %674 = phi i64 [ %680, %673 ], [ %592, %591 ]
  %675 = phi i32 [ %679, %673 ], [ %593, %591 ]
  %676 = lshr i32 %675, 8
  %677 = trunc i32 %676 to i8
  %678 = getelementptr inbounds i8, i8* %550, i64 %674
  store i8 %677, i8* %678, align 1
  %679 = add nsw i32 %675, %7
  %680 = add nuw nsw i64 %674, 1
  %681 = icmp slt i64 %680, %586
  br i1 %681, label %673, label %663, !llvm.loop !41

; <label>:682:                                    ; preds = %545, %556, %663
  %683 = icmp slt i32 %510, %17
  br i1 %683, label %684, label %775

; <label>:684:                                    ; preds = %682
  %685 = sext i32 %17 to i64
  %686 = sub nsw i64 %685, %546
  %687 = icmp ult i64 %686, 32
  br i1 %687, label %734, label %688

; <label>:688:                                    ; preds = %684
  %689 = sub nsw i64 %546, %548
  %690 = getelementptr i8, i8* %78, i64 %689
  %691 = add nsw i64 %685, %546
  %692 = add nsw i64 %691, 1
  %693 = shl nsw i64 %548, 1
  %694 = sub nsw i64 %692, %693
  %695 = getelementptr i8, i8* %78, i64 %694
  %696 = shl nsw i64 %685, 1
  %697 = or i64 %696, 1
  %698 = sub nsw i64 %697, %693
  %699 = getelementptr i8, i8* %78, i64 %698
  %700 = icmp ult i8* %690, %699
  %701 = icmp ult i8* %695, %80
  %702 = and i1 %700, %701
  br i1 %702, label %734, label %703

; <label>:703:                                    ; preds = %688
  %704 = and i64 %686, -32
  %705 = add nsw i64 %704, %546
  br label %706

; <label>:706:                                    ; preds = %706, %703
  %707 = phi i64 [ 0, %703 ], [ %730, %706 ]
  %708 = add i64 %707, %546
  %709 = sub nsw i64 %708, %548
  %710 = getelementptr inbounds i8, i8* %78, i64 %709
  %711 = bitcast i8* %710 to <16 x i8>*
  %712 = load <16 x i8>, <16 x i8>* %711, align 1, !alias.scope !42, !noalias !45
  %713 = getelementptr inbounds i8, i8* %710, i64 16
  %714 = bitcast i8* %713 to <16 x i8>*
  %715 = load <16 x i8>, <16 x i8>* %714, align 1, !alias.scope !42, !noalias !45
  %716 = getelementptr inbounds i8, i8* %81, i64 %709
  %717 = bitcast i8* %716 to <16 x i8>*
  %718 = load <16 x i8>, <16 x i8>* %717, align 1, !alias.scope !45
  %719 = getelementptr inbounds i8, i8* %716, i64 16
  %720 = bitcast i8* %719 to <16 x i8>*
  %721 = load <16 x i8>, <16 x i8>* %720, align 1, !alias.scope !45
  %722 = icmp ugt <16 x i8> %712, %718
  %723 = icmp ugt <16 x i8> %715, %721
  %724 = select <16 x i1> %722, <16 x i8> %712, <16 x i8> %718
  %725 = select <16 x i1> %723, <16 x i8> %715, <16 x i8> %721
  %726 = sub <16 x i8> %724, %718
  %727 = sub <16 x i8> %725, %721
  %728 = bitcast i8* %710 to <16 x i8>*
  store <16 x i8> %726, <16 x i8>* %728, align 1, !alias.scope !42, !noalias !45
  %729 = bitcast i8* %713 to <16 x i8>*
  store <16 x i8> %727, <16 x i8>* %729, align 1, !alias.scope !42, !noalias !45
  %730 = add i64 %707, 32
  %731 = icmp eq i64 %730, %704
  br i1 %731, label %732, label %706, !llvm.loop !47

; <label>:732:                                    ; preds = %706
  %733 = icmp eq i64 %686, %704
  br i1 %733, label %775, label %734

; <label>:734:                                    ; preds = %732, %688, %684
  %735 = phi i64 [ %546, %688 ], [ %546, %684 ], [ %705, %732 ]
  %736 = sub nsw i64 %685, %735
  %737 = xor i64 %735, -1
  %738 = and i64 %736, 1
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %750, label %740

; <label>:740:                                    ; preds = %734
  %741 = sub nsw i64 %735, %548
  %742 = getelementptr inbounds i8, i8* %78, i64 %741
  %743 = load i8, i8* %742, align 1
  %744 = getelementptr inbounds i8, i8* %81, i64 %741
  %745 = load i8, i8* %744, align 1
  %746 = icmp ugt i8 %743, %745
  %747 = select i1 %746, i8 %743, i8 %745
  %748 = sub i8 %747, %745
  store i8 %748, i8* %742, align 1
  %749 = add nsw i64 %735, 1
  br label %750

; <label>:750:                                    ; preds = %734, %740
  %751 = phi i64 [ %735, %734 ], [ %749, %740 ]
  %752 = sub nsw i64 0, %685
  %753 = icmp eq i64 %737, %752
  br i1 %753, label %775, label %754

; <label>:754:                                    ; preds = %750, %754
  %755 = phi i64 [ %773, %754 ], [ %751, %750 ]
  %756 = sub nsw i64 %755, %548
  %757 = getelementptr inbounds i8, i8* %78, i64 %756
  %758 = load i8, i8* %757, align 1
  %759 = getelementptr inbounds i8, i8* %81, i64 %756
  %760 = load i8, i8* %759, align 1
  %761 = icmp ugt i8 %758, %760
  %762 = select i1 %761, i8 %758, i8 %760
  %763 = sub i8 %762, %760
  store i8 %763, i8* %757, align 1
  %764 = add nsw i64 %755, 1
  %765 = sub nsw i64 %764, %548
  %766 = getelementptr inbounds i8, i8* %78, i64 %765
  %767 = load i8, i8* %766, align 1
  %768 = getelementptr inbounds i8, i8* %81, i64 %765
  %769 = load i8, i8* %768, align 1
  %770 = icmp ugt i8 %767, %769
  %771 = select i1 %770, i8 %767, i8 %769
  %772 = sub i8 %771, %769
  store i8 %772, i8* %766, align 1
  %773 = add nsw i64 %755, 2
  %774 = icmp eq i64 %773, %685
  br i1 %774, label %775, label %754, !llvm.loop !48

; <label>:775:                                    ; preds = %750, %754, %732, %682, %513
  br i1 %10, label %776, label %826

; <label>:776:                                    ; preds = %775
  br i1 %87, label %777, label %847

; <label>:777:                                    ; preds = %776
  %778 = sext i32 %15 to i64
  %779 = zext i32 %18 to i64
  %780 = icmp ult i32 %18, 16
  br i1 %780, label %806, label %781

; <label>:781:                                    ; preds = %777
  %782 = and i64 %779, 4294967280
  br label %783

; <label>:783:                                    ; preds = %783, %781
  %784 = phi i64 [ 0, %781 ], [ %802, %783 ]
  %785 = add nsw i64 %784, %778
  %786 = getelementptr inbounds i8, i8* %9, i64 %785
  %787 = getelementptr inbounds i8, i8* %78, i64 %784
  %788 = bitcast i8* %787 to <16 x i8>*
  %789 = load <16 x i8>, <16 x i8>* %788, align 1
  %790 = bitcast i8* %786 to <16 x i8>*
  %791 = load <16 x i8>, <16 x i8>* %790, align 1
  %792 = zext <16 x i8> %791 to <16 x i32>
  %793 = zext <16 x i8> %789 to <16 x i32>
  %794 = add nuw nsw <16 x i32> %792, %793
  %795 = lshr <16 x i32> %794, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %796 = sub nsw <16 x i32> %794, %795
  %797 = icmp ult <16 x i32> %794, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %798 = select <16 x i1> %797, <16 x i32> %794, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %799 = select i1 %12, <16 x i32> %798, <16 x i32> %796
  %800 = trunc <16 x i32> %799 to <16 x i8>
  %801 = bitcast i8* %786 to <16 x i8>*
  store <16 x i8> %800, <16 x i8>* %801, align 1
  %802 = add i64 %784, 16
  %803 = icmp eq i64 %802, %782
  br i1 %803, label %804, label %783, !llvm.loop !49

; <label>:804:                                    ; preds = %783
  %805 = icmp eq i64 %782, %779
  br i1 %805, label %844, label %806

; <label>:806:                                    ; preds = %804, %777
  %807 = phi i64 [ 0, %777 ], [ %782, %804 ]
  br label %808

; <label>:808:                                    ; preds = %806, %808
  %809 = phi i64 [ %824, %808 ], [ %807, %806 ]
  %810 = add nsw i64 %809, %778
  %811 = getelementptr inbounds i8, i8* %9, i64 %810
  %812 = getelementptr inbounds i8, i8* %78, i64 %809
  %813 = load i8, i8* %812, align 1
  %814 = load i8, i8* %811, align 1
  %815 = zext i8 %814 to i32
  %816 = zext i8 %813 to i32
  %817 = add nuw nsw i32 %815, %816
  %818 = lshr i32 %817, 8
  %819 = sub nsw i32 %817, %818
  %820 = icmp ult i32 %817, 255
  %821 = select i1 %820, i32 %817, i32 255
  %822 = select i1 %12, i32 %821, i32 %819
  %823 = trunc i32 %822 to i8
  store i8 %823, i8* %811, align 1
  %824 = add nuw nsw i64 %809, 1
  %825 = icmp eq i64 %824, %779
  br i1 %825, label %844, label %808, !llvm.loop !50

; <label>:826:                                    ; preds = %775
  %827 = icmp ne i8 %8, -1
  %828 = or i1 %827, %11
  br i1 %828, label %839, label %829

; <label>:829:                                    ; preds = %826
  %830 = bitcast %class.AdditiveBlitter* %0 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %831 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %830, align 8
  %832 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %831, i64 15
  %833 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %832, align 8
  %834 = tail call %class.SkBlitter* %833(%class.AdditiveBlitter* %0, i1 zeroext false) #12
  %835 = bitcast %class.SkBlitter* %834 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %836 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %835, align 8
  %837 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %836, i64 4
  %838 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %837, align 8
  call void %838(%class.SkBlitter* %834, i32 %15, i32 %1, i8* nonnull %78, i16* nonnull %86) #12
  br label %844

; <label>:839:                                    ; preds = %826
  %840 = bitcast %class.AdditiveBlitter* %0 to void (%class.AdditiveBlitter*, i32, i32, i8*, i32)***
  %841 = load void (%class.AdditiveBlitter*, i32, i32, i8*, i32)**, void (%class.AdditiveBlitter*, i32, i32, i8*, i32)*** %840, align 8
  %842 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8*, i32)*, void (%class.AdditiveBlitter*, i32, i32, i8*, i32)** %841, i64 16
  %843 = load void (%class.AdditiveBlitter*, i32, i32, i8*, i32)*, void (%class.AdditiveBlitter*, i32, i32, i8*, i32)** %842, align 8
  call void %843(%class.AdditiveBlitter* %0, i32 %15, i32 %1, i8* nonnull %78, i32 %18) #12
  br label %844

; <label>:844:                                    ; preds = %808, %804, %829, %839
  %845 = icmp sgt i32 %18, 31
  br i1 %845, label %846, label %847

; <label>:846:                                    ; preds = %844
  call void @_ZdaPv(i8* nonnull %78) #13
  br label %847

; <label>:847:                                    ; preds = %776, %846, %844
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %70) #12
  br label %848

; <label>:848:                                    ; preds = %59, %49, %44, %40, %31, %847
  ret void
}

; Function Attrs: nobuiltin
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZL20blit_saved_trapezoidP14SkAnalyticEdgeiiiP15AdditiveBlitterPhbbii(%struct.SkAnalyticEdge*, i32, i32, i32, %class.AdditiveBlitter*, i8* nocapture, i1 zeroext, i1 zeroext, i32, i32) unnamed_addr #6 {
  %11 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 2
  %12 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %11, align 8
  %13 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = ashr i32 %14, 16
  %16 = and i32 %14, -65536
  %17 = sub nsw i32 %1, %16
  %18 = mul nsw i32 %17, 255
  %19 = add nsw i32 %18, 32768
  %20 = lshr i32 %19, 16
  %21 = trunc i32 %20 to i8
  %22 = sub nsw i32 %14, %16
  %23 = mul nsw i32 %22, 255
  %24 = add nsw i32 %23, 32768
  %25 = lshr i32 %24, 16
  %26 = trunc i32 %25 to i8
  %27 = sub i8 %21, %26
  %28 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 10
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %8
  %31 = select i1 %30, i32 %29, i32 %8
  %32 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 10
  %33 = load i32, i32* %32, align 4
  %34 = icmp slt i32 %33, %9
  %35 = select i1 %34, i32 %33, i32 %9
  %36 = icmp slt i32 %8, %2
  %37 = select i1 %36, i32 %2, i32 %8
  %38 = icmp slt i32 %3, %9
  %39 = select i1 %38, i32 %3, i32 %9
  %40 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 12
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 12
  %43 = load i32, i32* %42, align 4
  br i1 %7, label %90, label %44

; <label>:44:                                     ; preds = %10
  %45 = icmp eq i8 %27, -1
  br i1 %45, label %46, label %90

; <label>:46:                                     ; preds = %44
  %47 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 1
  %48 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %47, align 8
  %49 = icmp eq %struct.SkAnalyticEdge* %48, null
  br i1 %49, label %67, label %50

; <label>:50:                                     ; preds = %46
  %51 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 7
  %52 = load i32, i32* %51, align 8
  %53 = icmp slt i32 %52, %1
  br i1 %53, label %54, label %67

; <label>:54:                                     ; preds = %50
  %55 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %48, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = add nsw i32 %56, 65536
  %58 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %0, i64 0, i32 4
  %61 = load i32, i32* %60, align 4
  %62 = icmp slt i32 %61, 0
  %63 = sub nsw i32 0, %61
  %64 = select i1 %62, i32 %63, i32 %61
  %65 = sub nsw i32 %59, %64
  %66 = icmp slt i32 %57, %65
  br i1 %66, label %67, label %90

; <label>:67:                                     ; preds = %54, %46, %50
  %68 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 0
  %69 = load %struct.SkAnalyticEdge*, %struct.SkAnalyticEdge** %68, align 8
  %70 = icmp ne %struct.SkAnalyticEdge* %69, null
  %71 = icmp ne %struct.SkAnalyticEdge* %12, null
  %72 = and i1 %71, %70
  br i1 %72, label %73, label %90

; <label>:73:                                     ; preds = %67
  %74 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %69, i64 0, i32 7
  %75 = load i32, i32* %74, align 8
  %76 = icmp slt i32 %75, %1
  br i1 %76, label %77, label %90

; <label>:77:                                     ; preds = %73
  %78 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %12, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add nsw i32 %79, 65536
  %81 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %69, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %struct.SkAnalyticEdge, %struct.SkAnalyticEdge* %69, i64 0, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %84, 0
  %86 = sub nsw i32 0, %84
  %87 = select i1 %85, i32 %86, i32 %84
  %88 = sub nsw i32 %82, %87
  %89 = icmp sge i32 %80, %88
  br label %90

; <label>:90:                                     ; preds = %54, %77, %73, %67, %44, %10
  %91 = phi i1 [ true, %10 ], [ false, %44 ], [ true, %54 ], [ false, %73 ], [ false, %67 ], [ %89, %77 ]
  %92 = icmp sgt i32 %31, %35
  br i1 %92, label %451, label %93

; <label>:93:                                     ; preds = %90
  %94 = icmp sgt i32 %37, %39
  br i1 %94, label %95, label %108

; <label>:95:                                     ; preds = %93
  %96 = icmp sgt i32 %31, %37
  %97 = select i1 %96, i32 %37, i32 %31
  %98 = select i1 %96, i32 %31, i32 %37
  %99 = icmp sgt i32 %35, %39
  %100 = select i1 %99, i32 %39, i32 %35
  %101 = select i1 %99, i32 %35, i32 %39
  %102 = icmp slt i32 %100, %97
  %103 = select i1 %102, i32 %97, i32 %100
  %104 = icmp slt i32 %98, %101
  %105 = select i1 %104, i32 %98, i32 %101
  %106 = add nsw i32 %103, %105
  %107 = ashr i32 %106, 1
  br label %108

; <label>:108:                                    ; preds = %95, %93
  %109 = phi i32 [ %107, %95 ], [ %37, %93 ]
  %110 = phi i32 [ %107, %95 ], [ %39, %93 ]
  %111 = icmp eq i32 %31, %35
  %112 = icmp eq i32 %109, %110
  %113 = and i1 %111, %112
  br i1 %113, label %451, label %114

; <label>:114:                                    ; preds = %108
  %115 = icmp slt i32 %109, %31
  %116 = select i1 %115, i32 %109, i32 %31
  %117 = select i1 %115, i32 %31, i32 %109
  %118 = icmp slt i32 %110, %35
  %119 = select i1 %118, i32 %110, i32 %35
  %120 = select i1 %118, i32 %35, i32 %110
  %121 = add nsw i32 %117, 65535
  %122 = and i32 %121, -65536
  %123 = and i32 %119, -65536
  %124 = icmp slt i32 %123, %122
  br i1 %124, label %450, label %125

; <label>:125:                                    ; preds = %114
  %126 = icmp sgt i32 %122, %116
  br i1 %126, label %127, label %238

; <label>:127:                                    ; preds = %125
  %128 = sub nsw i32 %122, %116
  %129 = add nsw i32 %128, 65535
  %130 = ashr i32 %129, 16
  switch i32 %130, label %237 [
    i32 1, label %131
    i32 2, label %175
  ]

; <label>:131:                                    ; preds = %127
  %132 = sub i32 %122, %117
  %133 = add nsw i32 %132, %128
  %134 = lshr i32 %133, 9
  %135 = trunc i32 %134 to i8
  %136 = ashr i32 %116, 16
  %137 = icmp ne i8 %27, -1
  %138 = or i1 %137, %91
  br i1 %6, label %139, label %154

; <label>:139:                                    ; preds = %131
  %140 = sext i32 %136 to i64
  %141 = getelementptr inbounds i8, i8* %5, i64 %140
  br i1 %138, label %143, label %142

; <label>:142:                                    ; preds = %139
  store i8 %135, i8* %141, align 1
  br label %238

; <label>:143:                                    ; preds = %139
  %144 = and i32 %134, 255
  %145 = zext i8 %27 to i32
  %146 = mul nuw nsw i32 %144, %145
  %147 = lshr i32 %146, 8
  %148 = load i8, i8* %141, align 1
  %149 = zext i8 %148 to i32
  %150 = add nuw nsw i32 %147, %149
  %151 = icmp ult i32 %150, 255
  %152 = select i1 %151, i32 %150, i32 255
  %153 = trunc i32 %152 to i8
  store i8 %153, i8* %141, align 1
  br label %238

; <label>:154:                                    ; preds = %131
  br i1 %138, label %165, label %155

; <label>:155:                                    ; preds = %154
  %156 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %157 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %156, align 8
  %158 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %157, i64 15
  %159 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %158, align 8
  %160 = tail call %class.SkBlitter* %159(%class.AdditiveBlitter* %4, i1 zeroext false) #12
  %161 = bitcast %class.SkBlitter* %160 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %162 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %161, align 8
  %163 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %162, i64 5
  %164 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %163, align 8
  tail call void %164(%class.SkBlitter* %160, i32 %136, i32 %15, i32 1, i8 zeroext %135) #12
  br label %238

; <label>:165:                                    ; preds = %154
  %166 = and i32 %134, 255
  %167 = zext i8 %27 to i32
  %168 = mul nuw nsw i32 %166, %167
  %169 = lshr i32 %168, 8
  %170 = trunc i32 %169 to i8
  %171 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %172 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %171, align 8
  %173 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %172, i64 17
  %174 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %173, align 8
  tail call void %174(%class.AdditiveBlitter* %4, i32 %136, i32 %15, i8 zeroext %170) #12
  br label %238

; <label>:175:                                    ; preds = %127
  %176 = sub i32 -65536, %116
  %177 = add i32 %122, %176
  %178 = sub i32 %117, %116
  %179 = sub i32 %178, %177
  %180 = ashr i32 %177, 11
  %181 = ashr i32 %41, 11
  %182 = mul i32 %180, %181
  %183 = mul i32 %182, %180
  %184 = lshr i32 %183, 8
  %185 = trunc i32 %184 to i8
  %186 = ashr i32 %179, 11
  %187 = mul i32 %186, %181
  %188 = mul i32 %187, %186
  %189 = lshr i32 %188, 8
  %190 = trunc i32 %189 to i8
  %191 = sub i8 %27, %190
  %192 = ashr i32 %116, 16
  br i1 %6, label %193, label %213

; <label>:193:                                    ; preds = %175
  %194 = sext i32 %192 to i64
  %195 = getelementptr inbounds i8, i8* %5, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i32
  %198 = and i32 %184, 255
  %199 = add nuw nsw i32 %198, %197
  %200 = icmp ult i32 %199, 255
  %201 = select i1 %200, i32 %199, i32 255
  %202 = trunc i32 %201 to i8
  store i8 %202, i8* %195, align 1
  %203 = add nsw i32 %192, 1
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %5, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = zext i8 %191 to i32
  %209 = add nuw nsw i32 %207, %208
  %210 = icmp ult i32 %209, 255
  %211 = select i1 %210, i32 %209, i32 255
  %212 = trunc i32 %211 to i8
  store i8 %212, i8* %205, align 1
  br label %238

; <label>:213:                                    ; preds = %175
  %214 = icmp ne i8 %27, -1
  %215 = or i1 %214, %91
  br i1 %215, label %228, label %216

; <label>:216:                                    ; preds = %213
  %217 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %218 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %217, align 8
  %219 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %218, i64 15
  %220 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %219, align 8
  %221 = tail call %class.SkBlitter* %220(%class.AdditiveBlitter* %4, i1 zeroext false) #12
  %222 = and i32 %184, 255
  %223 = zext i8 %191 to i32
  %224 = bitcast %class.SkBlitter* %221 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %225 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %224, align 8
  %226 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %225, i64 10
  %227 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %226, align 8
  tail call void %227(%class.SkBlitter* %221, i32 %192, i32 %15, i32 %222, i32 %223) #12
  br label %238

; <label>:228:                                    ; preds = %213
  %229 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %230 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %229, align 8
  %231 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %230, i64 17
  %232 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %231, align 8
  tail call void %232(%class.AdditiveBlitter* %4, i32 %192, i32 %15, i8 zeroext %185) #12
  %233 = add nsw i32 %192, 1
  %234 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %229, align 8
  %235 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %234, i64 17
  %236 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %235, align 8
  tail call void %236(%class.AdditiveBlitter* %4, i32 %233, i32 %15, i8 zeroext %191) #12
  br label %238

; <label>:237:                                    ; preds = %127
  tail call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* %4, i32 %15, i32 %116, i32 %122, i32 %117, i32 %122, i32 %41, i32 2147483647, i8 zeroext %27, i8* %5, i1 zeroext %6, i1 zeroext %91, i1 zeroext true) #12
  br label %238

; <label>:238:                                    ; preds = %237, %228, %216, %193, %165, %155, %143, %142, %125
  %239 = icmp sgt i32 %123, %122
  br i1 %239, label %240, label %337

; <label>:240:                                    ; preds = %238
  %241 = ashr i32 %121, 16
  %242 = sub nsw i32 %123, %122
  %243 = ashr exact i32 %242, 16
  br i1 %6, label %244, label %319

; <label>:244:                                    ; preds = %240
  %245 = icmp sgt i32 %242, 0
  br i1 %245, label %246, label %337

; <label>:246:                                    ; preds = %244
  %247 = zext i8 %27 to i32
  %248 = sext i32 %241 to i64
  %249 = zext i32 %243 to i64
  %250 = icmp ult i32 %243, 16
  br i1 %250, label %305, label %251

; <label>:251:                                    ; preds = %246
  %252 = and i64 %249, 4294967280
  %253 = insertelement <16 x i32> undef, i32 %247, i32 0
  %254 = shufflevector <16 x i32> %253, <16 x i32> undef, <16 x i32> zeroinitializer
  %255 = add nsw i64 %252, -16
  %256 = lshr exact i64 %255, 4
  %257 = add nuw nsw i64 %256, 1
  %258 = and i64 %257, 1
  %259 = icmp eq i64 %255, 0
  br i1 %259, label %289, label %260

; <label>:260:                                    ; preds = %251
  %261 = sub nsw i64 %257, %258
  br label %262

; <label>:262:                                    ; preds = %262, %260
  %263 = phi i64 [ 0, %260 ], [ %286, %262 ]
  %264 = phi i64 [ %261, %260 ], [ %287, %262 ]
  %265 = add nsw i64 %263, %248
  %266 = getelementptr inbounds i8, i8* %5, i64 %265
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1
  %269 = zext <16 x i8> %268 to <16 x i32>
  %270 = add nuw nsw <16 x i32> %254, %269
  %271 = icmp ult <16 x i32> %270, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %272 = select <16 x i1> %271, <16 x i32> %270, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %273 = trunc <16 x i32> %272 to <16 x i8>
  %274 = bitcast i8* %266 to <16 x i8>*
  store <16 x i8> %273, <16 x i8>* %274, align 1
  %275 = or i64 %263, 16
  %276 = add nsw i64 %275, %248
  %277 = getelementptr inbounds i8, i8* %5, i64 %276
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1
  %280 = zext <16 x i8> %279 to <16 x i32>
  %281 = add nuw nsw <16 x i32> %254, %280
  %282 = icmp ult <16 x i32> %281, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %283 = select <16 x i1> %282, <16 x i32> %281, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %284 = trunc <16 x i32> %283 to <16 x i8>
  %285 = bitcast i8* %277 to <16 x i8>*
  store <16 x i8> %284, <16 x i8>* %285, align 1
  %286 = add i64 %263, 32
  %287 = add i64 %264, -2
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %262, !llvm.loop !51

; <label>:289:                                    ; preds = %262, %251
  %290 = phi i64 [ 0, %251 ], [ %286, %262 ]
  %291 = icmp eq i64 %258, 0
  br i1 %291, label %303, label %292

; <label>:292:                                    ; preds = %289
  %293 = add nsw i64 %290, %248
  %294 = getelementptr inbounds i8, i8* %5, i64 %293
  %295 = bitcast i8* %294 to <16 x i8>*
  %296 = load <16 x i8>, <16 x i8>* %295, align 1
  %297 = zext <16 x i8> %296 to <16 x i32>
  %298 = add nuw nsw <16 x i32> %254, %297
  %299 = icmp ult <16 x i32> %298, <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %300 = select <16 x i1> %299, <16 x i32> %298, <16 x i32> <i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255, i32 255>
  %301 = trunc <16 x i32> %300 to <16 x i8>
  %302 = bitcast i8* %294 to <16 x i8>*
  store <16 x i8> %301, <16 x i8>* %302, align 1
  br label %303

; <label>:303:                                    ; preds = %289, %292
  %304 = icmp eq i64 %252, %249
  br i1 %304, label %337, label %305

; <label>:305:                                    ; preds = %303, %246
  %306 = phi i64 [ 0, %246 ], [ %252, %303 ]
  br label %307

; <label>:307:                                    ; preds = %305, %307
  %308 = phi i64 [ %317, %307 ], [ %306, %305 ]
  %309 = add nsw i64 %308, %248
  %310 = getelementptr inbounds i8, i8* %5, i64 %309
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i32
  %313 = add nuw nsw i32 %312, %247
  %314 = icmp ult i32 %313, 255
  %315 = select i1 %314, i32 %313, i32 255
  %316 = trunc i32 %315 to i8
  store i8 %316, i8* %310, align 1
  %317 = add nuw nsw i64 %308, 1
  %318 = icmp eq i64 %317, %249
  br i1 %318, label %337, label %307, !llvm.loop !52

; <label>:319:                                    ; preds = %240
  %320 = icmp ne i8 %27, -1
  %321 = or i1 %320, %91
  br i1 %321, label %332, label %322

; <label>:322:                                    ; preds = %319
  %323 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %324 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %323, align 8
  %325 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %324, i64 15
  %326 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %325, align 8
  %327 = tail call %class.SkBlitter* %326(%class.AdditiveBlitter* %4, i1 zeroext false) #12
  %328 = bitcast %class.SkBlitter* %327 to void (%class.SkBlitter*, i32, i32, i32)***
  %329 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %328, align 8
  %330 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %329, i64 3
  %331 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %330, align 8
  tail call void %331(%class.SkBlitter* %327, i32 %241, i32 %15, i32 %243) #12
  br label %337

; <label>:332:                                    ; preds = %319
  %333 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i32, i8)***
  %334 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i32, i8)*** %333, align 8
  %335 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %334, i64 18
  %336 = load void (%class.AdditiveBlitter*, i32, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i32, i8)** %335, align 8
  tail call void %336(%class.AdditiveBlitter* %4, i32 %241, i32 %15, i32 %243, i8 zeroext %27) #12
  br label %337

; <label>:337:                                    ; preds = %307, %303, %332, %322, %244, %238
  %338 = icmp sgt i32 %120, %123
  br i1 %338, label %339, label %451

; <label>:339:                                    ; preds = %337
  %340 = sub nsw i32 %120, %123
  %341 = add nsw i32 %340, 65535
  %342 = ashr i32 %341, 16
  switch i32 %342, label %449 [
    i32 1, label %343
    i32 2, label %387
  ]

; <label>:343:                                    ; preds = %339
  %344 = sub i32 %119, %123
  %345 = add nsw i32 %344, %340
  %346 = lshr i32 %345, 9
  %347 = trunc i32 %346 to i8
  %348 = ashr i32 %119, 16
  %349 = icmp ne i8 %27, -1
  %350 = or i1 %349, %91
  br i1 %6, label %351, label %366

; <label>:351:                                    ; preds = %343
  %352 = sext i32 %348 to i64
  %353 = getelementptr inbounds i8, i8* %5, i64 %352
  br i1 %350, label %355, label %354

; <label>:354:                                    ; preds = %351
  store i8 %347, i8* %353, align 1
  br label %451

; <label>:355:                                    ; preds = %351
  %356 = and i32 %346, 255
  %357 = zext i8 %27 to i32
  %358 = mul nuw nsw i32 %356, %357
  %359 = lshr i32 %358, 8
  %360 = load i8, i8* %353, align 1
  %361 = zext i8 %360 to i32
  %362 = add nuw nsw i32 %359, %361
  %363 = icmp ult i32 %362, 255
  %364 = select i1 %363, i32 %362, i32 255
  %365 = trunc i32 %364 to i8
  store i8 %365, i8* %353, align 1
  br label %451

; <label>:366:                                    ; preds = %343
  br i1 %350, label %377, label %367

; <label>:367:                                    ; preds = %366
  %368 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %369 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %368, align 8
  %370 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %369, i64 15
  %371 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %370, align 8
  %372 = tail call %class.SkBlitter* %371(%class.AdditiveBlitter* %4, i1 zeroext false) #12
  %373 = bitcast %class.SkBlitter* %372 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %374 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %373, align 8
  %375 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %374, i64 5
  %376 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %375, align 8
  tail call void %376(%class.SkBlitter* %372, i32 %348, i32 %15, i32 1, i8 zeroext %347) #12
  br label %451

; <label>:377:                                    ; preds = %366
  %378 = and i32 %346, 255
  %379 = zext i8 %27 to i32
  %380 = mul nuw nsw i32 %378, %379
  %381 = lshr i32 %380, 8
  %382 = trunc i32 %381 to i8
  %383 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %384 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %383, align 8
  %385 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %384, i64 17
  %386 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %385, align 8
  tail call void %386(%class.AdditiveBlitter* %4, i32 %348, i32 %15, i8 zeroext %382) #12
  br label %451

; <label>:387:                                    ; preds = %339
  %388 = sub i32 65536, %119
  %389 = add i32 %388, %123
  %390 = sub i32 %120, %119
  %391 = sub i32 %390, %389
  %392 = ashr i32 %389, 11
  %393 = ashr i32 %43, 11
  %394 = mul i32 %392, %393
  %395 = mul i32 %394, %392
  %396 = lshr i32 %395, 8
  %397 = trunc i32 %396 to i8
  %398 = sub i8 %27, %397
  %399 = ashr i32 %391, 11
  %400 = mul i32 %399, %393
  %401 = mul i32 %400, %399
  %402 = lshr i32 %401, 8
  %403 = trunc i32 %402 to i8
  %404 = ashr i32 %119, 16
  br i1 %6, label %405, label %425

; <label>:405:                                    ; preds = %387
  %406 = sext i32 %404 to i64
  %407 = getelementptr inbounds i8, i8* %5, i64 %406
  %408 = load i8, i8* %407, align 1
  %409 = zext i8 %408 to i32
  %410 = zext i8 %398 to i32
  %411 = add nuw nsw i32 %409, %410
  %412 = icmp ult i32 %411, 255
  %413 = select i1 %412, i32 %411, i32 255
  %414 = trunc i32 %413 to i8
  store i8 %414, i8* %407, align 1
  %415 = add nsw i32 %404, 1
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8, i8* %5, i64 %416
  %418 = load i8, i8* %417, align 1
  %419 = zext i8 %418 to i32
  %420 = and i32 %402, 255
  %421 = add nuw nsw i32 %420, %419
  %422 = icmp ult i32 %421, 255
  %423 = select i1 %422, i32 %421, i32 255
  %424 = trunc i32 %423 to i8
  store i8 %424, i8* %417, align 1
  br label %451

; <label>:425:                                    ; preds = %387
  %426 = icmp ne i8 %27, -1
  %427 = or i1 %426, %91
  br i1 %427, label %440, label %428

; <label>:428:                                    ; preds = %425
  %429 = bitcast %class.AdditiveBlitter* %4 to %class.SkBlitter* (%class.AdditiveBlitter*, i1)***
  %430 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)**, %class.SkBlitter* (%class.AdditiveBlitter*, i1)*** %429, align 8
  %431 = getelementptr inbounds %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %430, i64 15
  %432 = load %class.SkBlitter* (%class.AdditiveBlitter*, i1)*, %class.SkBlitter* (%class.AdditiveBlitter*, i1)** %431, align 8
  %433 = tail call %class.SkBlitter* %432(%class.AdditiveBlitter* %4, i1 zeroext false) #12
  %434 = zext i8 %398 to i32
  %435 = and i32 %402, 255
  %436 = bitcast %class.SkBlitter* %433 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %437 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %436, align 8
  %438 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %437, i64 10
  %439 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %438, align 8
  tail call void %439(%class.SkBlitter* %433, i32 %404, i32 %15, i32 %434, i32 %435) #12
  br label %451

; <label>:440:                                    ; preds = %425
  %441 = bitcast %class.AdditiveBlitter* %4 to void (%class.AdditiveBlitter*, i32, i32, i8)***
  %442 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %441, align 8
  %443 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %442, i64 17
  %444 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %443, align 8
  tail call void %444(%class.AdditiveBlitter* %4, i32 %404, i32 %15, i8 zeroext %398) #12
  %445 = add nsw i32 %404, 1
  %446 = load void (%class.AdditiveBlitter*, i32, i32, i8)**, void (%class.AdditiveBlitter*, i32, i32, i8)*** %441, align 8
  %447 = getelementptr inbounds void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %446, i64 17
  %448 = load void (%class.AdditiveBlitter*, i32, i32, i8)*, void (%class.AdditiveBlitter*, i32, i32, i8)** %447, align 8
  tail call void %448(%class.AdditiveBlitter* %4, i32 %445, i32 %15, i8 zeroext %403) #12
  br label %451

; <label>:449:                                    ; preds = %339
  tail call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* %4, i32 %15, i32 %123, i32 %119, i32 %123, i32 %120, i32 2147483647, i32 %43, i8 zeroext %27, i8* %5, i1 zeroext %6, i1 zeroext %91, i1 zeroext true) #12
  br label %451

; <label>:450:                                    ; preds = %114
  tail call fastcc void @_ZL22blit_aaa_trapezoid_rowP15AdditiveBlitteriiiiiiihPhbbb(%class.AdditiveBlitter* %4, i32 %15, i32 %116, i32 %119, i32 %117, i32 %120, i32 %41, i32 %43, i8 zeroext %27, i8* %5, i1 zeroext %6, i1 zeroext %91, i1 zeroext true) #12
  br label %451

; <label>:451:                                    ; preds = %90, %108, %337, %354, %355, %367, %377, %405, %428, %440, %449, %450
  store %struct.SkAnalyticEdge* null, %struct.SkAnalyticEdge** %11, align 8
  ret void
}

declare zeroext i1 @_ZN19SkAnalyticCubicEdge11updateCubicEb(%struct.SkAnalyticCubicEdge*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN23SkAnalyticQuadraticEdge15updateQuadraticEv(%struct.SkAnalyticQuadraticEdge*) local_unnamed_addr #2

declare zeroext i8 @_ZNK6SkPath20internalGetConvexityEv(%class.SkPath*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
!9 = !{i32 0, i32 33}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !5, !3}
!16 = distinct !{!16, !3}
!17 = distinct !{!17, !5, !3}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !5, !3}
!20 = distinct !{!20, !3}
!21 = distinct !{!21, !5, !3}
!22 = distinct !{!22, !7}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !7}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !5, !3}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !3}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !3}
!41 = distinct !{!41, !5, !3}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !3}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !5, !3}
!51 = distinct !{!51, !3}
!52 = distinct !{!52, !5, !3}
