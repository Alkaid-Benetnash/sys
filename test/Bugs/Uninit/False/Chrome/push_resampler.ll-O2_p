; ModuleID = '../../third_party/webrtc/common_audio/resampler/push_resampler.cc'
source_filename = "../../third_party/webrtc/common_audio/resampler/push_resampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::PushResampler" = type { i32 (...)**, i32, i32, i64, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::PushResampler<short>::ChannelResampler" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector.19", %"class.std::__1::vector.19" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::PushSincResampler"* }
%"class.webrtc::PushSincResampler" = type { %"class.webrtc::SincResamplerCallback", %"class.std::__1::unique_ptr.3", %"class.std::__1::unique_ptr.11", float*, i16*, i64, i8, i64 }
%"class.webrtc::SincResamplerCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.webrtc::SincResampler"* }
%"class.webrtc::SincResampler" = type { i32 (...)**, double, double, i8, %"class.webrtc::SincResamplerCallback"*, i64, i64, i64, %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6", %"class.std::__1::unique_ptr.6", float*, float*, float*, float*, float* }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { float* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::vector.19" = type { %"class.std::__1::__vector_base.20" }
%"class.std::__1::__vector_base.20" = type { i16*, i16*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i16* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::PushResampler<short>::ChannelResampler"* }
%"class.webrtc::PushResampler.28" = type { i32 (...)**, i32, i32, i64, %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"class.std::__1::__compressed_pair.31" }
%"struct.webrtc::PushResampler<float>::ChannelResampler" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector.36", %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { float*, float*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.webrtc::PushResampler<float>::ChannelResampler"* }
%"class.absl::InlinedVector" = type { %"class.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::AllocatorAndTag", %"union.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Rep" }
%"class.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::AllocatorAndTag" = type { %"class.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Tag" }
%"class.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Tag" = type { i64 }
%"union.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Rep" = type { %"struct.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Rep::InlinedRep" }
%"struct.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Rep::InlinedRep" = type { [8 x %"struct.std::__1::aligned_storage<8, 8>::type"] }
%"struct.std::__1::aligned_storage<8, 8>::type" = type { [8 x i8] }
%"class.absl::InlinedVector.45" = type { %"class.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::AllocatorAndTag", %"union.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Rep" }
%"class.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::AllocatorAndTag" = type { %"class.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Tag" }
%"class.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Tag" = type { i64 }
%"union.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Rep" = type { %"struct.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Rep::InlinedRep" }
%"struct.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Rep::InlinedRep" = type { [8 x %"struct.std::__1::aligned_storage<8, 8>::type"] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6webrtc13PushResamplerIsEC5Ev = comdat any

$_ZN6webrtc13PushResamplerIsED5Ev = comdat any

$_ZN6webrtc13PushResamplerIsE18InitializeIfNeededEiim = comdat any

$_ZN6webrtc13PushResamplerIsE8ResampleEPKsmPsm = comdat any

$_ZN6webrtc13PushResamplerIfEC5Ev = comdat any

$_ZN6webrtc13PushResamplerIfED5Ev = comdat any

$_ZN6webrtc13PushResamplerIfE18InitializeIfNeededEiim = comdat any

$_ZN6webrtc13PushResamplerIfE8ResampleEPKfmPfm = comdat any

$_ZNSt3__16vectorIN6webrtc13PushResamplerIsE16ChannelResamplerENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN6webrtc13PushResamplerIfE16ChannelResamplerENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

$_ZTVN6webrtc13PushResamplerIsEE = comdat any

$_ZTVN6webrtc13PushResamplerIfEE = comdat any

@_ZTVN6webrtc13PushResamplerIsEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::PushResampler"*)* @_ZN6webrtc13PushResamplerIsED2Ev to i8*), i8* bitcast (void (%"class.webrtc::PushResampler"*)* @_ZN6webrtc13PushResamplerIsED0Ev to i8*)] }, comdat, align 8
@_ZTVN6webrtc13PushResamplerIfEE = weak_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::PushResampler.28"*)* @_ZN6webrtc13PushResamplerIfED2Ev to i8*), i8* bitcast (void (%"class.webrtc::PushResampler.28"*)* @_ZN6webrtc13PushResamplerIfED0Ev to i8*)] }, comdat, align 8

@_ZN6webrtc13PushResamplerIsEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.webrtc::PushResampler"*), void (%"class.webrtc::PushResampler"*)* @_ZN6webrtc13PushResamplerIsEC2Ev
@_ZN6webrtc13PushResamplerIsED1Ev = weak_odr hidden unnamed_addr alias void (%"class.webrtc::PushResampler"*), void (%"class.webrtc::PushResampler"*)* @_ZN6webrtc13PushResamplerIsED2Ev
@_ZN6webrtc13PushResamplerIfEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.webrtc::PushResampler.28"*), void (%"class.webrtc::PushResampler.28"*)* @_ZN6webrtc13PushResamplerIfEC2Ev
@_ZN6webrtc13PushResamplerIfED1Ev = weak_odr hidden unnamed_addr alias void (%"class.webrtc::PushResampler.28"*), void (%"class.webrtc::PushResampler.28"*)* @_ZN6webrtc13PushResamplerIfED2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6webrtc13PushResamplerIsEC2Ev(%"class.webrtc::PushResampler"*) unnamed_addr #0 comdat($_ZN6webrtc13PushResamplerIsEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc13PushResamplerIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6webrtc13PushResamplerIsED2Ev(%"class.webrtc::PushResampler"*) unnamed_addr #0 comdat($_ZN6webrtc13PushResamplerIsED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc13PushResamplerIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %4, align 8
  %6 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, null
  br i1 %6, label %48, label %7

; <label>:7:                                      ; preds = %1
  %8 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5 to i8*
  %9 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %9, align 8
  %11 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %10, %5
  br i1 %11, label %46, label %12

; <label>:12:                                     ; preds = %7, %41
  %13 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %14, %41 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = icmp eq i16* %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %12
  %19 = ptrtoint i16* %16 to i64
  %20 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 1
  %21 = bitcast i16** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i16* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

; <label>:23:                                     ; preds = %18, %12
  %24 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = icmp eq i16* %25, null
  br i1 %26, label %32, label %27

; <label>:27:                                     ; preds = %23
  %28 = ptrtoint i16* %25 to i64
  %29 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 1
  %30 = bitcast i16** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast i16* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

; <label>:32:                                     ; preds = %27, %23
  %33 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %33, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %33, align 8
  %35 = icmp eq %"class.webrtc::PushSincResampler"* %34, null
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %32
  %37 = bitcast %"class.webrtc::PushSincResampler"* %34 to void (%"class.webrtc::PushSincResampler"*)***
  %38 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %38, i64 1
  %40 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %39, align 8
  tail call void %40(%"class.webrtc::PushSincResampler"* nonnull %34) #8
  br label %41

; <label>:41:                                     ; preds = %36, %32
  %42 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %14, %5
  br i1 %42, label %43, label %12

; <label>:43:                                     ; preds = %41
  %44 = bitcast %"class.std::__1::vector"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

; <label>:46:                                     ; preds = %43, %7
  %47 = phi i8* [ %45, %43 ], [ %8, %7 ]
  store %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %9, align 8
  tail call void @_ZdlPv(i8* %47) #7
  br label %48

; <label>:48:                                     ; preds = %1, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6webrtc13PushResamplerIsED0Ev(%"class.webrtc::PushResampler"*) unnamed_addr #0 comdat($_ZN6webrtc13PushResamplerIsED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc13PushResamplerIsEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %4, align 8
  %6 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, null
  br i1 %6, label %48, label %7

; <label>:7:                                      ; preds = %1
  %8 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5 to i8*
  %9 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %9, align 8
  %11 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %10, %5
  br i1 %11, label %46, label %12

; <label>:12:                                     ; preds = %7, %41
  %13 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %14, %41 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = icmp eq i16* %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %12
  %19 = ptrtoint i16* %16 to i64
  %20 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 1
  %21 = bitcast i16** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i16* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

; <label>:23:                                     ; preds = %18, %12
  %24 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = icmp eq i16* %25, null
  br i1 %26, label %32, label %27

; <label>:27:                                     ; preds = %23
  %28 = ptrtoint i16* %25 to i64
  %29 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 1
  %30 = bitcast i16** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast i16* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

; <label>:32:                                     ; preds = %27, %23
  %33 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %33, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %33, align 8
  %35 = icmp eq %"class.webrtc::PushSincResampler"* %34, null
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %32
  %37 = bitcast %"class.webrtc::PushSincResampler"* %34 to void (%"class.webrtc::PushSincResampler"*)***
  %38 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %38, i64 1
  %40 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %39, align 8
  tail call void %40(%"class.webrtc::PushSincResampler"* nonnull %34) #8
  br label %41

; <label>:41:                                     ; preds = %36, %32
  %42 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %14, %5
  br i1 %42, label %43, label %12

; <label>:43:                                     ; preds = %41
  %44 = bitcast %"class.std::__1::vector"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

; <label>:46:                                     ; preds = %43, %7
  %47 = phi i8* [ %45, %43 ], [ %8, %7 ]
  store %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %9, align 8
  tail call void @_ZdlPv(i8* %47) #7
  br label %48

; <label>:48:                                     ; preds = %1, %46
  %49 = bitcast %"class.webrtc::PushResampler"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6webrtc13PushResamplerIsE18InitializeIfNeededEiim(%"class.webrtc::PushResampler"*, i32, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.webrtc::PushResampler<short>::ChannelResampler", align 8
  %6 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %9, label %17

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %3
  br i1 %16, label %190, label %17

; <label>:17:                                     ; preds = %13, %9, %4
  %18 = icmp slt i32 %1, 1
  %19 = icmp slt i32 %2, 1
  %20 = or i1 %18, %19
  %21 = icmp eq i64 %3, 0
  %22 = or i1 %20, %21
  br i1 %22, label %190, label %23

; <label>:23:                                     ; preds = %17
  store i32 %1, i32* %6, align 8
  %24 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 2
  store i32 %2, i32* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 3
  store i64 %3, i64* %25, align 8
  %26 = udiv i32 %1, 100
  %27 = zext i32 %26 to i64
  %28 = udiv i32 %2, 100
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %30, i64 0, i32 0, i32 0
  %32 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %31, align 8
  %33 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4, i32 0, i32 1
  %34 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %33, align 8
  %35 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %34, %32
  br i1 %35, label %67, label %36

; <label>:36:                                     ; preds = %23, %65
  %37 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %38, %65 ], [ %34, %23 ]
  %38 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %37, i64 -1
  %39 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %37, i64 -1, i32 2, i32 0, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = icmp eq i16* %40, null
  br i1 %41, label %47, label %42

; <label>:42:                                     ; preds = %36
  %43 = ptrtoint i16* %40 to i64
  %44 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %37, i64 -1, i32 2, i32 0, i32 1
  %45 = bitcast i16** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast i16* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #7
  br label %47

; <label>:47:                                     ; preds = %42, %36
  %48 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %37, i64 -1, i32 1, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = icmp eq i16* %49, null
  br i1 %50, label %56, label %51

; <label>:51:                                     ; preds = %47
  %52 = ptrtoint i16* %49 to i64
  %53 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %37, i64 -1, i32 1, i32 0, i32 1
  %54 = bitcast i16** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i16* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #7
  br label %56

; <label>:56:                                     ; preds = %51, %47
  %57 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %57, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %57, align 8
  %59 = icmp eq %"class.webrtc::PushSincResampler"* %58, null
  br i1 %59, label %65, label %60

; <label>:60:                                     ; preds = %56
  %61 = bitcast %"class.webrtc::PushSincResampler"* %58 to void (%"class.webrtc::PushSincResampler"*)***
  %62 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %62, i64 1
  %64 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %63, align 8
  tail call void %64(%"class.webrtc::PushSincResampler"* nonnull %58) #8
  br label %65

; <label>:65:                                     ; preds = %60, %56
  %66 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %38, %32
  br i1 %66, label %67, label %36

; <label>:67:                                     ; preds = %65, %23
  store %"struct.webrtc::PushResampler<short>::ChannelResampler"* %32, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %33, align 8
  %68 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5 to i8*
  %69 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 1
  %72 = bitcast %"class.std::__1::vector.19"* %71 to i64*
  %73 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 1, i32 0, i32 1
  %74 = bitcast i16** %73 to i64*
  %75 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast i16** %75 to i64*
  %77 = bitcast %"class.std::__1::vector.19"* %71 to i8*
  %78 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 2
  %79 = bitcast %"class.std::__1::vector.19"* %78 to i64*
  %80 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 2, i32 0, i32 1
  %81 = bitcast i16** %80 to i64*
  %82 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast i16** %82 to i64*
  %84 = bitcast %"class.std::__1::vector.19"* %78 to i8*
  %85 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 2, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5, i64 0, i32 1, i32 0, i32 0
  %87 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %5 to i8*
  br label %88

; <label>:88:                                     ; preds = %188, %67
  %89 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %32, %67 ], [ %189, %188 ]
  %90 = phi i64 [ 0, %67 ], [ %186, %188 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 56, i1 false)
  %91 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %69, align 8
  %92 = icmp ult %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, %91
  br i1 %92, label %93, label %116

; <label>:93:                                     ; preds = %88
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %70, align 8
  %94 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, i64 0, i32 1
  %95 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 32, i1 false)
  %96 = load i64, i64* %72, align 8
  %97 = bitcast %"class.std::__1::vector.19"* %94 to i64*
  store i64 %96, i64* %97, align 8
  %98 = load i64, i64* %74, align 8
  %99 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, i64 0, i32 1, i32 0, i32 1
  %100 = bitcast i16** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = load i64, i64* %76, align 8
  %102 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast i16** %102 to i64*
  store i64 %101, i64* %103, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #8
  %104 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, i64 0, i32 2
  %105 = bitcast %"class.std::__1::vector.19"* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #8
  %106 = load i64, i64* %79, align 8
  %107 = bitcast %"class.std::__1::vector.19"* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i64, i64* %81, align 8
  %109 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, i64 0, i32 2, i32 0, i32 1
  %110 = bitcast i16** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = load i64, i64* %83, align 8
  %112 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %89, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i16** %112 to i64*
  store i64 %111, i64* %113, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 24, i1 false) #8
  %114 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %33, align 8
  %115 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %114, i64 1
  store %"struct.webrtc::PushResampler<short>::ChannelResampler"* %115, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %33, align 8
  br label %122

; <label>:116:                                    ; preds = %88
  call void @_ZNSt3__16vectorIN6webrtc13PushResamplerIsE16ChannelResamplerENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* nonnull %30, %"struct.webrtc::PushResampler<short>::ChannelResampler"* nonnull dereferenceable(56) %5) #8
  %117 = load i16*, i16** %85, align 8
  %118 = icmp eq i16* %117, null
  br i1 %118, label %122, label %119

; <label>:119:                                    ; preds = %116
  %120 = bitcast i16* %117 to i8*
  %121 = ptrtoint i16* %117 to i64
  store i64 %121, i64* %81, align 8
  call void @_ZdlPv(i8* %120) #7
  br label %122

; <label>:122:                                    ; preds = %93, %119, %116
  %123 = load i16*, i16** %86, align 8
  %124 = icmp eq i16* %123, null
  br i1 %124, label %128, label %125

; <label>:125:                                    ; preds = %122
  %126 = ptrtoint i16* %123 to i64
  store i64 %126, i64* %74, align 8
  %127 = bitcast i16* %123 to i8*
  call void @_ZdlPv(i8* %127) #7
  br label %128

; <label>:128:                                    ; preds = %125, %122
  %129 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %70, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %70, align 8
  %130 = icmp eq %"class.webrtc::PushSincResampler"* %129, null
  br i1 %130, label %136, label %131

; <label>:131:                                    ; preds = %128
  %132 = bitcast %"class.webrtc::PushSincResampler"* %129 to void (%"class.webrtc::PushSincResampler"*)***
  %133 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %133, i64 1
  %135 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %134, align 8
  call void %135(%"class.webrtc::PushSincResampler"* nonnull %129) #8
  br label %136

; <label>:136:                                    ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #8
  %137 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %33, align 8
  %138 = call i8* @_Znwm(i64 64) #7, !noalias !2
  %139 = bitcast i8* %138 to %"class.webrtc::PushSincResampler"*
  call void @_ZN6webrtc17PushSincResamplerC1Emm(%"class.webrtc::PushSincResampler"* nonnull %139, i64 %27, i64 %29) #8, !noalias !2
  %140 = ptrtoint i8* %138 to i64
  %141 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %137, i64 -1
  %142 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %142, align 8
  %144 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %141 to i64*
  store i64 %140, i64* %144, align 8
  %145 = icmp eq %"class.webrtc::PushSincResampler"* %143, null
  br i1 %145, label %151, label %146

; <label>:146:                                    ; preds = %136
  %147 = bitcast %"class.webrtc::PushSincResampler"* %143 to void (%"class.webrtc::PushSincResampler"*)***
  %148 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %148, i64 1
  %150 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %149, align 8
  call void %150(%"class.webrtc::PushSincResampler"* nonnull %143) #8
  br label %151

; <label>:151:                                    ; preds = %146, %136
  %152 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %137, i64 -1, i32 1
  %153 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %137, i64 -1, i32 1, i32 0, i32 1
  %154 = bitcast i16** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.std::__1::vector.19"* %152 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %155, %157
  %159 = ashr exact i64 %158, 1
  %160 = icmp ult i64 %159, %27
  %161 = inttoptr i64 %157 to i16*
  br i1 %160, label %162, label %164

; <label>:162:                                    ; preds = %151
  %163 = sub nsw i64 %27, %159
  call void @_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm(%"class.std::__1::vector.19"* nonnull %152, i64 %163) #8
  br label %168

; <label>:164:                                    ; preds = %151
  %165 = icmp ugt i64 %159, %27
  br i1 %165, label %166, label %168

; <label>:166:                                    ; preds = %164
  %167 = getelementptr inbounds i16, i16* %161, i64 %27
  store i16* %167, i16** %153, align 8
  br label %168

; <label>:168:                                    ; preds = %162, %164, %166
  %169 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %137, i64 -1, i32 2
  %170 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %137, i64 -1, i32 2, i32 0, i32 1
  %171 = bitcast i16** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.std::__1::vector.19"* %169 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = ashr exact i64 %175, 1
  %177 = icmp ult i64 %176, %29
  %178 = inttoptr i64 %174 to i16*
  br i1 %177, label %179, label %181

; <label>:179:                                    ; preds = %168
  %180 = sub nsw i64 %29, %176
  call void @_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm(%"class.std::__1::vector.19"* nonnull %169, i64 %180) #8
  br label %185

; <label>:181:                                    ; preds = %168
  %182 = icmp ugt i64 %176, %29
  br i1 %182, label %183, label %185

; <label>:183:                                    ; preds = %181
  %184 = getelementptr inbounds i16, i16* %178, i64 %29
  store i16* %184, i16** %170, align 8
  br label %185

; <label>:185:                                    ; preds = %179, %181, %183
  %186 = add nuw i64 %90, 1
  %187 = icmp eq i64 %186, %3
  br i1 %187, label %190, label %188

; <label>:188:                                    ; preds = %185
  %189 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %33, align 8
  br label %88

; <label>:190:                                    ; preds = %185, %17, %13
  %191 = phi i32 [ 0, %13 ], [ -1, %17 ], [ 0, %185 ]
  ret i32 %191
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6webrtc13PushResamplerIsE8ResampleEPKsmPsm(%"class.webrtc::PushResampler"*, i16*, i64, i16*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.absl::InlinedVector", align 8
  %7 = alloca %"class.absl::InlinedVector", align 8
  %8 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 2
  %11 = load i32, i32* %9, align 8
  %12 = load i32, i32* %10, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %5
  %15 = bitcast i16* %3 to i8*
  %16 = bitcast i16* %1 to i8*
  %17 = shl i64 %2, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %15, i8* align 2 %16, i64 %17, i1 false)
  br label %818

; <label>:18:                                     ; preds = %5
  %19 = load i64, i64* %8, align 8
  %20 = udiv i64 %2, %19
  %21 = udiv i64 %4, %19
  %22 = bitcast %"class.absl::InlinedVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %24, align 8
  %26 = getelementptr inbounds %"class.webrtc::PushResampler", %"class.webrtc::PushResampler"* %0, i64 0, i32 4, i32 0, i32 1
  %27 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %26, align 8
  %28 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %25, %27
  br i1 %28, label %29, label %33

; <label>:29:                                     ; preds = %18
  %30 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 1, i32 0, i32 0, i64 1
  %31 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 1, i32 0, i32 0, i64 0
  %32 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %31 to i16**
  br label %48

; <label>:33:                                     ; preds = %18
  %34 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 1
  %35 = bitcast %"union.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Rep"* %34 to i64*
  %36 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 1, i32 0, i32 0, i64 0
  %37 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %36 to i16**
  %38 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %6, i64 0, i32 1, i32 0, i32 0, i64 1
  %39 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %38 to i16***
  %40 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %38 to i8**
  br label %187

; <label>:41:                                     ; preds = %400
  %42 = load i64, i64* %8, align 8
  %43 = load i64, i64* %23, align 8
  %44 = load i16**, i16*** %39, align 8
  %45 = and i64 %43, 1
  %46 = icmp eq i64 %45, 0
  %47 = select i1 %46, i16** %37, i16** %44
  br label %48

; <label>:48:                                     ; preds = %29, %41
  %49 = phi %"struct.std::__1::aligned_storage<8, 8>::type"* [ %30, %29 ], [ %38, %41 ]
  %50 = phi i16** [ %32, %29 ], [ %47, %41 ]
  %51 = phi i64 [ %19, %29 ], [ %42, %41 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %180, label %53

; <label>:53:                                     ; preds = %48
  %54 = icmp ugt i64 %19, %2
  %55 = and i64 %20, -16
  %56 = mul i64 %51, %55
  %57 = add i64 %20, -16
  %58 = lshr i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = icmp ugt i64 %20, 15
  %61 = icmp eq i64 %51, 1
  %62 = and i1 %60, %61
  %63 = and i64 %20, 3
  %64 = icmp eq i64 %63, 0
  %65 = and i64 %20, -16
  %66 = and i64 %59, 1
  %67 = icmp eq i64 %58, 0
  %68 = sub nsw i64 %59, %66
  %69 = icmp eq i64 %66, 0
  %70 = icmp eq i64 %20, %65
  br label %71

; <label>:71:                                     ; preds = %153, %53
  %72 = phi i64 [ 0, %53 ], [ %154, %153 ]
  %73 = getelementptr i16, i16* %1, i64 %72
  %74 = getelementptr inbounds i16*, i16** %50, i64 %72
  %75 = load i16*, i16** %74, align 8
  br i1 %54, label %153, label %76

; <label>:76:                                     ; preds = %71
  br i1 %62, label %77, label %84

; <label>:77:                                     ; preds = %76
  %78 = getelementptr i16, i16* %75, i64 %20
  %79 = add i64 %20, %72
  %80 = getelementptr i16, i16* %1, i64 %79
  %81 = icmp ult i16* %75, %80
  %82 = icmp ult i16* %73, %78
  %83 = and i1 %81, %82
  br i1 %83, label %84, label %104

; <label>:84:                                     ; preds = %76, %152, %77
  %85 = phi i64 [ 0, %77 ], [ 0, %76 ], [ %65, %152 ]
  %86 = phi i64 [ %72, %77 ], [ %72, %76 ], [ %105, %152 ]
  %87 = xor i64 %85, -1
  %88 = add i64 %20, %87
  br i1 %64, label %100, label %89

; <label>:89:                                     ; preds = %84, %89
  %90 = phi i64 [ %97, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %96, %89 ], [ %86, %84 ]
  %92 = phi i64 [ %98, %89 ], [ %63, %84 ]
  %93 = getelementptr inbounds i16, i16* %1, i64 %91
  %94 = load i16, i16* %93, align 2
  %95 = getelementptr inbounds i16, i16* %75, i64 %90
  store i16 %94, i16* %95, align 2
  %96 = add i64 %91, %51
  %97 = add nuw i64 %90, 1
  %98 = add i64 %92, -1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %89, !llvm.loop !5

; <label>:100:                                    ; preds = %89, %84
  %101 = phi i64 [ %85, %84 ], [ %97, %89 ]
  %102 = phi i64 [ %86, %84 ], [ %96, %89 ]
  %103 = icmp ult i64 %88, 3
  br i1 %103, label %153, label %156

; <label>:104:                                    ; preds = %77
  %105 = add i64 %56, %72
  br i1 %67, label %137, label %106

; <label>:106:                                    ; preds = %104, %106
  %107 = phi i64 [ %134, %106 ], [ 0, %104 ]
  %108 = phi i64 [ %135, %106 ], [ %68, %104 ]
  %109 = mul i64 %51, %107
  %110 = add i64 %72, %109
  %111 = getelementptr inbounds i16, i16* %1, i64 %110
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !7
  %114 = getelementptr inbounds i16, i16* %111, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !7
  %117 = getelementptr inbounds i16, i16* %75, i64 %107
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %118, align 2, !alias.scope !10, !noalias !7
  %119 = getelementptr inbounds i16, i16* %117, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !10, !noalias !7
  %121 = or i64 %107, 16
  %122 = mul i64 %51, %121
  %123 = add i64 %72, %122
  %124 = getelementptr inbounds i16, i16* %1, i64 %123
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !7
  %127 = getelementptr inbounds i16, i16* %124, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !7
  %130 = getelementptr inbounds i16, i16* %75, i64 %121
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %131, align 2, !alias.scope !10, !noalias !7
  %132 = getelementptr inbounds i16, i16* %130, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %133, align 2, !alias.scope !10, !noalias !7
  %134 = add i64 %107, 32
  %135 = add i64 %108, -2
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %106, !llvm.loop !12

; <label>:137:                                    ; preds = %106, %104
  %138 = phi i64 [ 0, %104 ], [ %134, %106 ]
  br i1 %69, label %152, label %139

; <label>:139:                                    ; preds = %137
  %140 = mul i64 %51, %138
  %141 = add i64 %72, %140
  %142 = getelementptr inbounds i16, i16* %1, i64 %141
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !7
  %145 = getelementptr inbounds i16, i16* %142, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !7
  %148 = getelementptr inbounds i16, i16* %75, i64 %138
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %149, align 2, !alias.scope !10, !noalias !7
  %150 = getelementptr inbounds i16, i16* %148, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !10, !noalias !7
  br label %152

; <label>:152:                                    ; preds = %137, %139
  br i1 %70, label %153, label %84

; <label>:153:                                    ; preds = %100, %156, %152, %71
  %154 = add nuw i64 %72, 1
  %155 = icmp eq i64 %154, %51
  br i1 %155, label %180, label %71

; <label>:156:                                    ; preds = %100, %156
  %157 = phi i64 [ %178, %156 ], [ %101, %100 ]
  %158 = phi i64 [ %177, %156 ], [ %102, %100 ]
  %159 = getelementptr inbounds i16, i16* %1, i64 %158
  %160 = load i16, i16* %159, align 2
  %161 = getelementptr inbounds i16, i16* %75, i64 %157
  store i16 %160, i16* %161, align 2
  %162 = add i64 %158, %51
  %163 = add nuw i64 %157, 1
  %164 = getelementptr inbounds i16, i16* %1, i64 %162
  %165 = load i16, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %75, i64 %163
  store i16 %165, i16* %166, align 2
  %167 = add i64 %162, %51
  %168 = add i64 %157, 2
  %169 = getelementptr inbounds i16, i16* %1, i64 %167
  %170 = load i16, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %75, i64 %168
  store i16 %170, i16* %171, align 2
  %172 = add i64 %167, %51
  %173 = add i64 %157, 3
  %174 = getelementptr inbounds i16, i16* %1, i64 %172
  %175 = load i16, i16* %174, align 2
  %176 = getelementptr inbounds i16, i16* %75, i64 %173
  store i16 %175, i16* %176, align 2
  %177 = add i64 %172, %51
  %178 = add i64 %157, 4
  %179 = icmp eq i64 %178, %20
  br i1 %179, label %153, label %156, !llvm.loop !14

; <label>:180:                                    ; preds = %153, %48
  %181 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %24, align 8
  %182 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %26, align 8
  %183 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %181, %182
  br i1 %183, label %184, label %429

; <label>:184:                                    ; preds = %180
  %185 = bitcast %"class.absl::InlinedVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %185) #8
  %186 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %412

; <label>:187:                                    ; preds = %403, %33
  %188 = phi i64 [ undef, %33 ], [ %405, %403 ]
  %189 = phi i64 [ 0, %33 ], [ %404, %403 ]
  %190 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %25, %33 ], [ %401, %403 ]
  %191 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %190, i64 0, i32 1, i32 0, i32 0
  %192 = bitcast i16** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = lshr i64 %189, 1
  %195 = and i64 %189, 1
  %196 = icmp eq i64 %195, 0
  %197 = select i1 %196, i64 8, i64 %188
  %198 = icmp eq i64 %194, %197
  br i1 %198, label %199, label %391, !prof !15

; <label>:199:                                    ; preds = %187
  br i1 %196, label %204, label %200

; <label>:200:                                    ; preds = %199
  %201 = shl i64 %188, 1
  %202 = icmp ugt i64 %201, 2305843009213693951
  br i1 %202, label %203, label %204

; <label>:203:                                    ; preds = %200
  call void @abort() #9
  unreachable

; <label>:204:                                    ; preds = %200, %199
  %205 = phi i64 [ %201, %200 ], [ 16, %199 ]
  %206 = shl i64 %205, 3
  %207 = call i8* @_Znwm(i64 %206) #7
  %208 = bitcast i8* %207 to i16**
  %209 = getelementptr inbounds i16*, i16** %208, i64 %194
  %210 = bitcast i16** %209 to i64*
  store i64 %193, i64* %210, align 8
  %211 = load i16**, i16*** %39, align 8
  %212 = select i1 %196, i16** %37, i16** %211
  %213 = bitcast i16** %212 to i8*
  %214 = getelementptr inbounds i16*, i16** %212, i64 %194
  %215 = icmp eq i64 %194, 0
  br i1 %215, label %385, label %216

; <label>:216:                                    ; preds = %204
  %217 = shl i64 %194, 3
  %218 = add i64 %217, -8
  %219 = lshr exact i64 %218, 3
  %220 = add nuw nsw i64 %219, 1
  %221 = icmp ult i64 %220, 4
  br i1 %221, label %314, label %222

; <label>:222:                                    ; preds = %216
  %223 = shl i64 %194, 3
  %224 = add i64 %223, -8
  %225 = lshr exact i64 %224, 3
  %226 = getelementptr i8, i8* %207, i64 %223
  %227 = getelementptr i16*, i16** %212, i64 1
  %228 = getelementptr i16*, i16** %227, i64 %225
  %229 = bitcast i16** %228 to i8*
  %230 = icmp ult i8* %207, %229
  %231 = icmp ugt i8* %226, %213
  %232 = and i1 %230, %231
  br i1 %232, label %314, label %233

; <label>:233:                                    ; preds = %222
  %234 = and i64 %220, 4611686018427387900
  %235 = getelementptr i16*, i16** %208, i64 %234
  %236 = getelementptr i16*, i16** %212, i64 %234
  %237 = add nsw i64 %234, -4
  %238 = lshr exact i64 %237, 2
  %239 = add nuw nsw i64 %238, 1
  %240 = and i64 %239, 3
  %241 = icmp ult i64 %237, 12
  br i1 %241, label %293, label %242

; <label>:242:                                    ; preds = %233
  %243 = sub nsw i64 %239, %240
  br label %244

; <label>:244:                                    ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %290, %244 ]
  %246 = phi i64 [ %243, %242 ], [ %291, %244 ]
  %247 = getelementptr i16*, i16** %208, i64 %245
  %248 = getelementptr i16*, i16** %212, i64 %245
  %249 = bitcast i16** %248 to <2 x i64>*
  %250 = load <2 x i64>, <2 x i64>* %249, align 8, !alias.scope !16
  %251 = getelementptr i16*, i16** %248, i64 2
  %252 = bitcast i16** %251 to <2 x i64>*
  %253 = load <2 x i64>, <2 x i64>* %252, align 8, !alias.scope !16
  %254 = bitcast i16** %247 to <2 x i64>*
  store <2 x i64> %250, <2 x i64>* %254, align 8, !alias.scope !19, !noalias !16
  %255 = getelementptr i16*, i16** %247, i64 2
  %256 = bitcast i16** %255 to <2 x i64>*
  store <2 x i64> %253, <2 x i64>* %256, align 8, !alias.scope !19, !noalias !16
  %257 = or i64 %245, 4
  %258 = getelementptr i16*, i16** %208, i64 %257
  %259 = getelementptr i16*, i16** %212, i64 %257
  %260 = bitcast i16** %259 to <2 x i64>*
  %261 = load <2 x i64>, <2 x i64>* %260, align 8, !alias.scope !16
  %262 = getelementptr i16*, i16** %259, i64 2
  %263 = bitcast i16** %262 to <2 x i64>*
  %264 = load <2 x i64>, <2 x i64>* %263, align 8, !alias.scope !16
  %265 = bitcast i16** %258 to <2 x i64>*
  store <2 x i64> %261, <2 x i64>* %265, align 8, !alias.scope !19, !noalias !16
  %266 = getelementptr i16*, i16** %258, i64 2
  %267 = bitcast i16** %266 to <2 x i64>*
  store <2 x i64> %264, <2 x i64>* %267, align 8, !alias.scope !19, !noalias !16
  %268 = or i64 %245, 8
  %269 = getelementptr i16*, i16** %208, i64 %268
  %270 = getelementptr i16*, i16** %212, i64 %268
  %271 = bitcast i16** %270 to <2 x i64>*
  %272 = load <2 x i64>, <2 x i64>* %271, align 8, !alias.scope !16
  %273 = getelementptr i16*, i16** %270, i64 2
  %274 = bitcast i16** %273 to <2 x i64>*
  %275 = load <2 x i64>, <2 x i64>* %274, align 8, !alias.scope !16
  %276 = bitcast i16** %269 to <2 x i64>*
  store <2 x i64> %272, <2 x i64>* %276, align 8, !alias.scope !19, !noalias !16
  %277 = getelementptr i16*, i16** %269, i64 2
  %278 = bitcast i16** %277 to <2 x i64>*
  store <2 x i64> %275, <2 x i64>* %278, align 8, !alias.scope !19, !noalias !16
  %279 = or i64 %245, 12
  %280 = getelementptr i16*, i16** %208, i64 %279
  %281 = getelementptr i16*, i16** %212, i64 %279
  %282 = bitcast i16** %281 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !16
  %284 = getelementptr i16*, i16** %281, i64 2
  %285 = bitcast i16** %284 to <2 x i64>*
  %286 = load <2 x i64>, <2 x i64>* %285, align 8, !alias.scope !16
  %287 = bitcast i16** %280 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %287, align 8, !alias.scope !19, !noalias !16
  %288 = getelementptr i16*, i16** %280, i64 2
  %289 = bitcast i16** %288 to <2 x i64>*
  store <2 x i64> %286, <2 x i64>* %289, align 8, !alias.scope !19, !noalias !16
  %290 = add i64 %245, 16
  %291 = add i64 %246, -4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %244, !llvm.loop !21

; <label>:293:                                    ; preds = %244, %233
  %294 = phi i64 [ 0, %233 ], [ %290, %244 ]
  %295 = icmp eq i64 %240, 0
  br i1 %295, label %312, label %296

; <label>:296:                                    ; preds = %293, %296
  %297 = phi i64 [ %309, %296 ], [ %294, %293 ]
  %298 = phi i64 [ %310, %296 ], [ %240, %293 ]
  %299 = getelementptr i16*, i16** %208, i64 %297
  %300 = getelementptr i16*, i16** %212, i64 %297
  %301 = bitcast i16** %300 to <2 x i64>*
  %302 = load <2 x i64>, <2 x i64>* %301, align 8, !alias.scope !16
  %303 = getelementptr i16*, i16** %300, i64 2
  %304 = bitcast i16** %303 to <2 x i64>*
  %305 = load <2 x i64>, <2 x i64>* %304, align 8, !alias.scope !16
  %306 = bitcast i16** %299 to <2 x i64>*
  store <2 x i64> %302, <2 x i64>* %306, align 8, !alias.scope !19, !noalias !16
  %307 = getelementptr i16*, i16** %299, i64 2
  %308 = bitcast i16** %307 to <2 x i64>*
  store <2 x i64> %305, <2 x i64>* %308, align 8, !alias.scope !19, !noalias !16
  %309 = add i64 %297, 4
  %310 = add i64 %298, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %296, !llvm.loop !22

; <label>:312:                                    ; preds = %296, %293
  %313 = icmp eq i64 %220, %234
  br i1 %313, label %385, label %314

; <label>:314:                                    ; preds = %312, %222, %216
  %315 = phi i16** [ %208, %222 ], [ %208, %216 ], [ %235, %312 ]
  %316 = phi i16** [ %212, %222 ], [ %212, %216 ], [ %236, %312 ]
  %317 = ptrtoint i16** %316 to i64
  %318 = getelementptr i16*, i16** %212, i64 -1
  %319 = getelementptr i16*, i16** %318, i64 %194
  %320 = ptrtoint i16** %319 to i64
  %321 = sub i64 %320, %317
  %322 = lshr i64 %321, 3
  %323 = add nuw nsw i64 %322, 1
  %324 = and i64 %323, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

; <label>:326:                                    ; preds = %314, %326
  %327 = phi i16** [ %333, %326 ], [ %315, %314 ]
  %328 = phi i16** [ %334, %326 ], [ %316, %314 ]
  %329 = phi i64 [ %335, %326 ], [ %324, %314 ]
  %330 = bitcast i16** %328 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = bitcast i16** %327 to i64*
  store i64 %331, i64* %332, align 8
  %333 = getelementptr inbounds i16*, i16** %327, i64 1
  %334 = getelementptr inbounds i16*, i16** %328, i64 1
  %335 = add i64 %329, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !23

; <label>:337:                                    ; preds = %326, %314
  %338 = phi i16** [ %315, %314 ], [ %333, %326 ]
  %339 = phi i16** [ %316, %314 ], [ %334, %326 ]
  %340 = icmp ult i64 %321, 56
  br i1 %340, label %385, label %341

; <label>:341:                                    ; preds = %337, %341
  %342 = phi i16** [ %382, %341 ], [ %338, %337 ]
  %343 = phi i16** [ %383, %341 ], [ %339, %337 ]
  %344 = bitcast i16** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = bitcast i16** %342 to i64*
  store i64 %345, i64* %346, align 8
  %347 = getelementptr inbounds i16*, i16** %342, i64 1
  %348 = getelementptr inbounds i16*, i16** %343, i64 1
  %349 = bitcast i16** %348 to i64*
  %350 = load i64, i64* %349, align 8
  %351 = bitcast i16** %347 to i64*
  store i64 %350, i64* %351, align 8
  %352 = getelementptr inbounds i16*, i16** %342, i64 2
  %353 = getelementptr inbounds i16*, i16** %343, i64 2
  %354 = bitcast i16** %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = bitcast i16** %352 to i64*
  store i64 %355, i64* %356, align 8
  %357 = getelementptr inbounds i16*, i16** %342, i64 3
  %358 = getelementptr inbounds i16*, i16** %343, i64 3
  %359 = bitcast i16** %358 to i64*
  %360 = load i64, i64* %359, align 8
  %361 = bitcast i16** %357 to i64*
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds i16*, i16** %342, i64 4
  %363 = getelementptr inbounds i16*, i16** %343, i64 4
  %364 = bitcast i16** %363 to i64*
  %365 = load i64, i64* %364, align 8
  %366 = bitcast i16** %362 to i64*
  store i64 %365, i64* %366, align 8
  %367 = getelementptr inbounds i16*, i16** %342, i64 5
  %368 = getelementptr inbounds i16*, i16** %343, i64 5
  %369 = bitcast i16** %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = bitcast i16** %367 to i64*
  store i64 %370, i64* %371, align 8
  %372 = getelementptr inbounds i16*, i16** %342, i64 6
  %373 = getelementptr inbounds i16*, i16** %343, i64 6
  %374 = bitcast i16** %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = bitcast i16** %372 to i64*
  store i64 %375, i64* %376, align 8
  %377 = getelementptr inbounds i16*, i16** %342, i64 7
  %378 = getelementptr inbounds i16*, i16** %343, i64 7
  %379 = bitcast i16** %378 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = bitcast i16** %377 to i64*
  store i64 %380, i64* %381, align 8
  %382 = getelementptr inbounds i16*, i16** %342, i64 8
  %383 = getelementptr inbounds i16*, i16** %343, i64 8
  %384 = icmp eq i16** %383, %214
  br i1 %384, label %385, label %341, !llvm.loop !24

; <label>:385:                                    ; preds = %337, %341, %312, %204
  br i1 %196, label %388, label %386

; <label>:386:                                    ; preds = %385
  %387 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %387) #7
  br label %388

; <label>:388:                                    ; preds = %385, %386
  store i64 %205, i64* %35, align 8
  store i8* %207, i8** %40, align 8
  %389 = add i64 %189, 2
  %390 = or i64 %389, 1
  store i64 %390, i64* %23, align 8
  br label %400

; <label>:391:                                    ; preds = %187
  %392 = add i64 %189, 2
  %393 = and i64 %392, -2
  %394 = or i64 %392, 1
  %395 = load i16**, i16*** %39, align 8
  %396 = select i1 %196, i64 %393, i64 %394
  %397 = select i1 %196, i16** %37, i16** %395
  store i64 %396, i64* %23, align 8
  %398 = getelementptr inbounds i16*, i16** %397, i64 %194
  %399 = bitcast i16** %398 to i64*
  store i64 %193, i64* %399, align 8
  br label %400

; <label>:400:                                    ; preds = %388, %391
  %401 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %190, i64 1
  %402 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %401, %27
  br i1 %402, label %41, label %403

; <label>:403:                                    ; preds = %400
  %404 = load i64, i64* %23, align 8
  %405 = load i64, i64* %35, align 8
  br label %187

; <label>:406:                                    ; preds = %429
  %407 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %24, align 8
  %408 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %26, align 8
  %409 = bitcast %"class.absl::InlinedVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %409) #8
  %410 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %410, align 8
  %411 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %407, %408
  br i1 %411, label %412, label %421

; <label>:412:                                    ; preds = %406, %184
  %413 = phi i64* [ %186, %184 ], [ %410, %406 ]
  %414 = phi i8* [ %185, %184 ], [ %409, %406 ]
  %415 = phi i64 [ 0, %184 ], [ %437, %406 ]
  %416 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 1, i32 0, i32 0, i64 1
  %417 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %416 to i16***
  %418 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  %419 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %418 to i16**
  %420 = load i16**, i16*** %417, align 8
  br label %444

; <label>:421:                                    ; preds = %406
  %422 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 1
  %423 = bitcast %"union.absl::InlinedVector<short *, 8, std::__1::allocator<short *> >::Rep"* %422 to i64*
  %424 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  %425 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %424 to i16**
  %426 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %7, i64 0, i32 1, i32 0, i32 0, i64 1
  %427 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %426 to i16***
  %428 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %426 to i8**
  br label %601

; <label>:429:                                    ; preds = %180, %429
  %430 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %438, %429 ], [ %181, %180 ]
  %431 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %430, i64 0, i32 0, i32 0, i32 0, i32 0
  %432 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %431, align 8
  %433 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %430, i64 0, i32 1, i32 0, i32 0
  %434 = load i16*, i16** %433, align 8
  %435 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %430, i64 0, i32 2, i32 0, i32 0
  %436 = load i16*, i16** %435, align 8
  %437 = call i64 @_ZN6webrtc17PushSincResampler8ResampleEPKsmPsm(%"class.webrtc::PushSincResampler"* %432, i16* %434, i64 %20, i16* %436, i64 %21) #8
  %438 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %430, i64 1
  %439 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %438, %182
  br i1 %439, label %406, label %429

; <label>:440:                                    ; preds = %814
  %441 = and i64 %817, 1
  %442 = icmp eq i64 %441, 0
  %443 = load i16**, i16*** %427, align 8
  br i1 %442, label %444, label %450

; <label>:444:                                    ; preds = %412, %440
  %445 = phi i16** [ %420, %412 ], [ %443, %440 ]
  %446 = phi i16** [ %419, %412 ], [ %425, %440 ]
  %447 = phi i64 [ %415, %412 ], [ %437, %440 ]
  %448 = phi i8* [ %414, %412 ], [ %409, %440 ]
  %449 = phi i64* [ %413, %412 ], [ %410, %440 ]
  br label %450

; <label>:450:                                    ; preds = %440, %444
  %451 = phi i16** [ %445, %444 ], [ %443, %440 ]
  %452 = phi i1 [ true, %444 ], [ false, %440 ]
  %453 = phi i64 [ %447, %444 ], [ %437, %440 ]
  %454 = phi i8* [ %448, %444 ], [ %409, %440 ]
  %455 = phi i64* [ %449, %444 ], [ %410, %440 ]
  %456 = phi i16** [ %446, %444 ], [ %443, %440 ]
  %457 = load i64, i64* %8, align 8
  %458 = icmp eq i64 %457, 0
  %459 = bitcast i16** %451 to i8*
  br i1 %458, label %589, label %460

; <label>:460:                                    ; preds = %450
  %461 = icmp eq i64 %453, 0
  %462 = and i64 %453, -16
  %463 = mul i64 %457, %462
  %464 = add i64 %453, -16
  %465 = lshr i64 %464, 4
  %466 = add nuw nsw i64 %465, 1
  %467 = icmp ugt i64 %453, 15
  %468 = icmp eq i64 %457, 1
  %469 = and i1 %467, %468
  %470 = and i64 %453, 3
  %471 = icmp eq i64 %470, 0
  %472 = and i64 %453, -16
  %473 = and i64 %466, 1
  %474 = icmp eq i64 %465, 0
  %475 = sub nsw i64 %466, %473
  %476 = icmp eq i64 %473, 0
  %477 = icmp eq i64 %453, %472
  br label %478

; <label>:478:                                    ; preds = %560, %460
  %479 = phi i64 [ 0, %460 ], [ %561, %560 ]
  %480 = add i64 %463, %479
  %481 = getelementptr i16, i16* %3, i64 %479
  %482 = add i64 %453, %479
  %483 = getelementptr i16, i16* %3, i64 %482
  %484 = getelementptr inbounds i16*, i16** %456, i64 %479
  %485 = load i16*, i16** %484, align 8
  br i1 %461, label %560, label %486

; <label>:486:                                    ; preds = %478
  br i1 %469, label %487, label %492

; <label>:487:                                    ; preds = %486
  %488 = getelementptr i16, i16* %485, i64 %453
  %489 = icmp ult i16* %481, %488
  %490 = icmp ult i16* %485, %483
  %491 = and i1 %489, %490
  br i1 %491, label %492, label %512

; <label>:492:                                    ; preds = %486, %559, %487
  %493 = phi i64 [ 0, %487 ], [ 0, %486 ], [ %472, %559 ]
  %494 = phi i64 [ %479, %487 ], [ %479, %486 ], [ %480, %559 ]
  %495 = xor i64 %493, -1
  %496 = add i64 %453, %495
  br i1 %471, label %508, label %497

; <label>:497:                                    ; preds = %492, %497
  %498 = phi i64 [ %505, %497 ], [ %493, %492 ]
  %499 = phi i64 [ %504, %497 ], [ %494, %492 ]
  %500 = phi i64 [ %506, %497 ], [ %470, %492 ]
  %501 = getelementptr inbounds i16, i16* %485, i64 %498
  %502 = load i16, i16* %501, align 2
  %503 = getelementptr inbounds i16, i16* %3, i64 %499
  store i16 %502, i16* %503, align 2
  %504 = add i64 %499, %457
  %505 = add nuw i64 %498, 1
  %506 = add i64 %500, -1
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %497, !llvm.loop !25

; <label>:508:                                    ; preds = %497, %492
  %509 = phi i64 [ %493, %492 ], [ %505, %497 ]
  %510 = phi i64 [ %494, %492 ], [ %504, %497 ]
  %511 = icmp ult i64 %496, 3
  br i1 %511, label %560, label %563

; <label>:512:                                    ; preds = %487
  br i1 %474, label %544, label %513

; <label>:513:                                    ; preds = %512, %513
  %514 = phi i64 [ %541, %513 ], [ 0, %512 ]
  %515 = phi i64 [ %542, %513 ], [ %475, %512 ]
  %516 = mul i64 %457, %514
  %517 = add i64 %479, %516
  %518 = getelementptr inbounds i16, i16* %485, i64 %514
  %519 = bitcast i16* %518 to <8 x i16>*
  %520 = load <8 x i16>, <8 x i16>* %519, align 2, !alias.scope !26
  %521 = getelementptr inbounds i16, i16* %518, i64 8
  %522 = bitcast i16* %521 to <8 x i16>*
  %523 = load <8 x i16>, <8 x i16>* %522, align 2, !alias.scope !26
  %524 = getelementptr inbounds i16, i16* %3, i64 %517
  %525 = bitcast i16* %524 to <8 x i16>*
  store <8 x i16> %520, <8 x i16>* %525, align 2, !alias.scope !29, !noalias !26
  %526 = getelementptr inbounds i16, i16* %524, i64 8
  %527 = bitcast i16* %526 to <8 x i16>*
  store <8 x i16> %523, <8 x i16>* %527, align 2, !alias.scope !29, !noalias !26
  %528 = or i64 %514, 16
  %529 = mul i64 %457, %528
  %530 = add i64 %479, %529
  %531 = getelementptr inbounds i16, i16* %485, i64 %528
  %532 = bitcast i16* %531 to <8 x i16>*
  %533 = load <8 x i16>, <8 x i16>* %532, align 2, !alias.scope !26
  %534 = getelementptr inbounds i16, i16* %531, i64 8
  %535 = bitcast i16* %534 to <8 x i16>*
  %536 = load <8 x i16>, <8 x i16>* %535, align 2, !alias.scope !26
  %537 = getelementptr inbounds i16, i16* %3, i64 %530
  %538 = bitcast i16* %537 to <8 x i16>*
  store <8 x i16> %533, <8 x i16>* %538, align 2, !alias.scope !29, !noalias !26
  %539 = getelementptr inbounds i16, i16* %537, i64 8
  %540 = bitcast i16* %539 to <8 x i16>*
  store <8 x i16> %536, <8 x i16>* %540, align 2, !alias.scope !29, !noalias !26
  %541 = add i64 %514, 32
  %542 = add i64 %515, -2
  %543 = icmp eq i64 %542, 0
  br i1 %543, label %544, label %513, !llvm.loop !31

; <label>:544:                                    ; preds = %513, %512
  %545 = phi i64 [ 0, %512 ], [ %541, %513 ]
  br i1 %476, label %559, label %546

; <label>:546:                                    ; preds = %544
  %547 = mul i64 %457, %545
  %548 = add i64 %479, %547
  %549 = getelementptr inbounds i16, i16* %485, i64 %545
  %550 = bitcast i16* %549 to <8 x i16>*
  %551 = load <8 x i16>, <8 x i16>* %550, align 2, !alias.scope !26
  %552 = getelementptr inbounds i16, i16* %549, i64 8
  %553 = bitcast i16* %552 to <8 x i16>*
  %554 = load <8 x i16>, <8 x i16>* %553, align 2, !alias.scope !26
  %555 = getelementptr inbounds i16, i16* %3, i64 %548
  %556 = bitcast i16* %555 to <8 x i16>*
  store <8 x i16> %551, <8 x i16>* %556, align 2, !alias.scope !29, !noalias !26
  %557 = getelementptr inbounds i16, i16* %555, i64 8
  %558 = bitcast i16* %557 to <8 x i16>*
  store <8 x i16> %554, <8 x i16>* %558, align 2, !alias.scope !29, !noalias !26
  br label %559

; <label>:559:                                    ; preds = %544, %546
  br i1 %477, label %560, label %492

; <label>:560:                                    ; preds = %508, %563, %559, %478
  %561 = add nuw i64 %479, 1
  %562 = icmp eq i64 %561, %457
  br i1 %562, label %587, label %478

; <label>:563:                                    ; preds = %508, %563
  %564 = phi i64 [ %585, %563 ], [ %509, %508 ]
  %565 = phi i64 [ %584, %563 ], [ %510, %508 ]
  %566 = getelementptr inbounds i16, i16* %485, i64 %564
  %567 = load i16, i16* %566, align 2
  %568 = getelementptr inbounds i16, i16* %3, i64 %565
  store i16 %567, i16* %568, align 2
  %569 = add i64 %565, %457
  %570 = add nuw i64 %564, 1
  %571 = getelementptr inbounds i16, i16* %485, i64 %570
  %572 = load i16, i16* %571, align 2
  %573 = getelementptr inbounds i16, i16* %3, i64 %569
  store i16 %572, i16* %573, align 2
  %574 = add i64 %569, %457
  %575 = add i64 %564, 2
  %576 = getelementptr inbounds i16, i16* %485, i64 %575
  %577 = load i16, i16* %576, align 2
  %578 = getelementptr inbounds i16, i16* %3, i64 %574
  store i16 %577, i16* %578, align 2
  %579 = add i64 %574, %457
  %580 = add i64 %564, 3
  %581 = getelementptr inbounds i16, i16* %485, i64 %580
  %582 = load i16, i16* %581, align 2
  %583 = getelementptr inbounds i16, i16* %3, i64 %579
  store i16 %582, i16* %583, align 2
  %584 = add i64 %579, %457
  %585 = add i64 %564, 4
  %586 = icmp eq i64 %585, %453
  br i1 %586, label %560, label %563, !llvm.loop !32

; <label>:587:                                    ; preds = %560
  %588 = load i64, i64* %8, align 8
  br label %589

; <label>:589:                                    ; preds = %587, %450
  %590 = phi i64 [ %588, %587 ], [ 0, %450 ]
  %591 = mul i64 %590, %453
  br i1 %452, label %593, label %592

; <label>:592:                                    ; preds = %589
  call void @_ZdlPv(i8* %459) #7
  br label %593

; <label>:593:                                    ; preds = %589, %592
  store i64 0, i64* %455, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %454) #8
  %594 = load i64, i64* %23, align 8
  %595 = and i64 %594, 1
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %600, label %597

; <label>:597:                                    ; preds = %593
  %598 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %49 to i8**
  %599 = load i8*, i8** %598, align 8
  call void @_ZdlPv(i8* %599) #7
  br label %600

; <label>:600:                                    ; preds = %593, %597
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #8
  br label %818

; <label>:601:                                    ; preds = %814, %421
  %602 = phi i64 [ 0, %421 ], [ %817, %814 ]
  %603 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %407, %421 ], [ %815, %814 ]
  %604 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %603, i64 0, i32 2, i32 0, i32 0
  %605 = bitcast i16** %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = lshr i64 %602, 1
  %608 = and i64 %602, 1
  %609 = icmp eq i64 %608, 0
  %610 = load i64, i64* %423, align 8
  %611 = select i1 %609, i64 8, i64 %610
  %612 = icmp eq i64 %607, %611
  br i1 %612, label %613, label %805, !prof !15

; <label>:613:                                    ; preds = %601
  br i1 %609, label %618, label %614

; <label>:614:                                    ; preds = %613
  %615 = shl i64 %610, 1
  %616 = icmp ugt i64 %615, 2305843009213693951
  br i1 %616, label %617, label %618

; <label>:617:                                    ; preds = %614
  call void @abort() #9
  unreachable

; <label>:618:                                    ; preds = %614, %613
  %619 = phi i64 [ %615, %614 ], [ 16, %613 ]
  %620 = shl i64 %619, 3
  %621 = call i8* @_Znwm(i64 %620) #7
  %622 = bitcast i8* %621 to i16**
  %623 = getelementptr inbounds i16*, i16** %622, i64 %607
  %624 = bitcast i16** %623 to i64*
  store i64 %606, i64* %624, align 8
  %625 = load i16**, i16*** %427, align 8
  %626 = select i1 %609, i16** %425, i16** %625
  %627 = bitcast i16** %626 to i8*
  %628 = getelementptr inbounds i16*, i16** %626, i64 %607
  %629 = icmp eq i64 %607, 0
  br i1 %629, label %799, label %630

; <label>:630:                                    ; preds = %618
  %631 = shl i64 %607, 3
  %632 = add i64 %631, -8
  %633 = lshr exact i64 %632, 3
  %634 = add nuw nsw i64 %633, 1
  %635 = icmp ult i64 %634, 4
  br i1 %635, label %728, label %636

; <label>:636:                                    ; preds = %630
  %637 = shl i64 %607, 3
  %638 = add i64 %637, -8
  %639 = lshr exact i64 %638, 3
  %640 = getelementptr i8, i8* %621, i64 %637
  %641 = getelementptr i16*, i16** %626, i64 1
  %642 = getelementptr i16*, i16** %641, i64 %639
  %643 = bitcast i16** %642 to i8*
  %644 = icmp ult i8* %621, %643
  %645 = icmp ugt i8* %640, %627
  %646 = and i1 %644, %645
  br i1 %646, label %728, label %647

; <label>:647:                                    ; preds = %636
  %648 = and i64 %634, 4611686018427387900
  %649 = getelementptr i16*, i16** %622, i64 %648
  %650 = getelementptr i16*, i16** %626, i64 %648
  %651 = add nsw i64 %648, -4
  %652 = lshr exact i64 %651, 2
  %653 = add nuw nsw i64 %652, 1
  %654 = and i64 %653, 3
  %655 = icmp ult i64 %651, 12
  br i1 %655, label %707, label %656

; <label>:656:                                    ; preds = %647
  %657 = sub nsw i64 %653, %654
  br label %658

; <label>:658:                                    ; preds = %658, %656
  %659 = phi i64 [ 0, %656 ], [ %704, %658 ]
  %660 = phi i64 [ %657, %656 ], [ %705, %658 ]
  %661 = getelementptr i16*, i16** %622, i64 %659
  %662 = getelementptr i16*, i16** %626, i64 %659
  %663 = bitcast i16** %662 to <2 x i64>*
  %664 = load <2 x i64>, <2 x i64>* %663, align 8, !alias.scope !33
  %665 = getelementptr i16*, i16** %662, i64 2
  %666 = bitcast i16** %665 to <2 x i64>*
  %667 = load <2 x i64>, <2 x i64>* %666, align 8, !alias.scope !33
  %668 = bitcast i16** %661 to <2 x i64>*
  store <2 x i64> %664, <2 x i64>* %668, align 8, !alias.scope !36, !noalias !33
  %669 = getelementptr i16*, i16** %661, i64 2
  %670 = bitcast i16** %669 to <2 x i64>*
  store <2 x i64> %667, <2 x i64>* %670, align 8, !alias.scope !36, !noalias !33
  %671 = or i64 %659, 4
  %672 = getelementptr i16*, i16** %622, i64 %671
  %673 = getelementptr i16*, i16** %626, i64 %671
  %674 = bitcast i16** %673 to <2 x i64>*
  %675 = load <2 x i64>, <2 x i64>* %674, align 8, !alias.scope !33
  %676 = getelementptr i16*, i16** %673, i64 2
  %677 = bitcast i16** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !33
  %679 = bitcast i16** %672 to <2 x i64>*
  store <2 x i64> %675, <2 x i64>* %679, align 8, !alias.scope !36, !noalias !33
  %680 = getelementptr i16*, i16** %672, i64 2
  %681 = bitcast i16** %680 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %681, align 8, !alias.scope !36, !noalias !33
  %682 = or i64 %659, 8
  %683 = getelementptr i16*, i16** %622, i64 %682
  %684 = getelementptr i16*, i16** %626, i64 %682
  %685 = bitcast i16** %684 to <2 x i64>*
  %686 = load <2 x i64>, <2 x i64>* %685, align 8, !alias.scope !33
  %687 = getelementptr i16*, i16** %684, i64 2
  %688 = bitcast i16** %687 to <2 x i64>*
  %689 = load <2 x i64>, <2 x i64>* %688, align 8, !alias.scope !33
  %690 = bitcast i16** %683 to <2 x i64>*
  store <2 x i64> %686, <2 x i64>* %690, align 8, !alias.scope !36, !noalias !33
  %691 = getelementptr i16*, i16** %683, i64 2
  %692 = bitcast i16** %691 to <2 x i64>*
  store <2 x i64> %689, <2 x i64>* %692, align 8, !alias.scope !36, !noalias !33
  %693 = or i64 %659, 12
  %694 = getelementptr i16*, i16** %622, i64 %693
  %695 = getelementptr i16*, i16** %626, i64 %693
  %696 = bitcast i16** %695 to <2 x i64>*
  %697 = load <2 x i64>, <2 x i64>* %696, align 8, !alias.scope !33
  %698 = getelementptr i16*, i16** %695, i64 2
  %699 = bitcast i16** %698 to <2 x i64>*
  %700 = load <2 x i64>, <2 x i64>* %699, align 8, !alias.scope !33
  %701 = bitcast i16** %694 to <2 x i64>*
  store <2 x i64> %697, <2 x i64>* %701, align 8, !alias.scope !36, !noalias !33
  %702 = getelementptr i16*, i16** %694, i64 2
  %703 = bitcast i16** %702 to <2 x i64>*
  store <2 x i64> %700, <2 x i64>* %703, align 8, !alias.scope !36, !noalias !33
  %704 = add i64 %659, 16
  %705 = add i64 %660, -4
  %706 = icmp eq i64 %705, 0
  br i1 %706, label %707, label %658, !llvm.loop !38

; <label>:707:                                    ; preds = %658, %647
  %708 = phi i64 [ 0, %647 ], [ %704, %658 ]
  %709 = icmp eq i64 %654, 0
  br i1 %709, label %726, label %710

; <label>:710:                                    ; preds = %707, %710
  %711 = phi i64 [ %723, %710 ], [ %708, %707 ]
  %712 = phi i64 [ %724, %710 ], [ %654, %707 ]
  %713 = getelementptr i16*, i16** %622, i64 %711
  %714 = getelementptr i16*, i16** %626, i64 %711
  %715 = bitcast i16** %714 to <2 x i64>*
  %716 = load <2 x i64>, <2 x i64>* %715, align 8, !alias.scope !33
  %717 = getelementptr i16*, i16** %714, i64 2
  %718 = bitcast i16** %717 to <2 x i64>*
  %719 = load <2 x i64>, <2 x i64>* %718, align 8, !alias.scope !33
  %720 = bitcast i16** %713 to <2 x i64>*
  store <2 x i64> %716, <2 x i64>* %720, align 8, !alias.scope !36, !noalias !33
  %721 = getelementptr i16*, i16** %713, i64 2
  %722 = bitcast i16** %721 to <2 x i64>*
  store <2 x i64> %719, <2 x i64>* %722, align 8, !alias.scope !36, !noalias !33
  %723 = add i64 %711, 4
  %724 = add i64 %712, -1
  %725 = icmp eq i64 %724, 0
  br i1 %725, label %726, label %710, !llvm.loop !39

; <label>:726:                                    ; preds = %710, %707
  %727 = icmp eq i64 %634, %648
  br i1 %727, label %799, label %728

; <label>:728:                                    ; preds = %726, %636, %630
  %729 = phi i16** [ %622, %636 ], [ %622, %630 ], [ %649, %726 ]
  %730 = phi i16** [ %626, %636 ], [ %626, %630 ], [ %650, %726 ]
  %731 = ptrtoint i16** %730 to i64
  %732 = getelementptr i16*, i16** %626, i64 -1
  %733 = getelementptr i16*, i16** %732, i64 %607
  %734 = ptrtoint i16** %733 to i64
  %735 = sub i64 %734, %731
  %736 = lshr i64 %735, 3
  %737 = add nuw nsw i64 %736, 1
  %738 = and i64 %737, 7
  %739 = icmp eq i64 %738, 0
  br i1 %739, label %751, label %740

; <label>:740:                                    ; preds = %728, %740
  %741 = phi i16** [ %747, %740 ], [ %729, %728 ]
  %742 = phi i16** [ %748, %740 ], [ %730, %728 ]
  %743 = phi i64 [ %749, %740 ], [ %738, %728 ]
  %744 = bitcast i16** %742 to i64*
  %745 = load i64, i64* %744, align 8
  %746 = bitcast i16** %741 to i64*
  store i64 %745, i64* %746, align 8
  %747 = getelementptr inbounds i16*, i16** %741, i64 1
  %748 = getelementptr inbounds i16*, i16** %742, i64 1
  %749 = add i64 %743, -1
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %751, label %740, !llvm.loop !40

; <label>:751:                                    ; preds = %740, %728
  %752 = phi i16** [ %729, %728 ], [ %747, %740 ]
  %753 = phi i16** [ %730, %728 ], [ %748, %740 ]
  %754 = icmp ult i64 %735, 56
  br i1 %754, label %799, label %755

; <label>:755:                                    ; preds = %751, %755
  %756 = phi i16** [ %796, %755 ], [ %752, %751 ]
  %757 = phi i16** [ %797, %755 ], [ %753, %751 ]
  %758 = bitcast i16** %757 to i64*
  %759 = load i64, i64* %758, align 8
  %760 = bitcast i16** %756 to i64*
  store i64 %759, i64* %760, align 8
  %761 = getelementptr inbounds i16*, i16** %756, i64 1
  %762 = getelementptr inbounds i16*, i16** %757, i64 1
  %763 = bitcast i16** %762 to i64*
  %764 = load i64, i64* %763, align 8
  %765 = bitcast i16** %761 to i64*
  store i64 %764, i64* %765, align 8
  %766 = getelementptr inbounds i16*, i16** %756, i64 2
  %767 = getelementptr inbounds i16*, i16** %757, i64 2
  %768 = bitcast i16** %767 to i64*
  %769 = load i64, i64* %768, align 8
  %770 = bitcast i16** %766 to i64*
  store i64 %769, i64* %770, align 8
  %771 = getelementptr inbounds i16*, i16** %756, i64 3
  %772 = getelementptr inbounds i16*, i16** %757, i64 3
  %773 = bitcast i16** %772 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = bitcast i16** %771 to i64*
  store i64 %774, i64* %775, align 8
  %776 = getelementptr inbounds i16*, i16** %756, i64 4
  %777 = getelementptr inbounds i16*, i16** %757, i64 4
  %778 = bitcast i16** %777 to i64*
  %779 = load i64, i64* %778, align 8
  %780 = bitcast i16** %776 to i64*
  store i64 %779, i64* %780, align 8
  %781 = getelementptr inbounds i16*, i16** %756, i64 5
  %782 = getelementptr inbounds i16*, i16** %757, i64 5
  %783 = bitcast i16** %782 to i64*
  %784 = load i64, i64* %783, align 8
  %785 = bitcast i16** %781 to i64*
  store i64 %784, i64* %785, align 8
  %786 = getelementptr inbounds i16*, i16** %756, i64 6
  %787 = getelementptr inbounds i16*, i16** %757, i64 6
  %788 = bitcast i16** %787 to i64*
  %789 = load i64, i64* %788, align 8
  %790 = bitcast i16** %786 to i64*
  store i64 %789, i64* %790, align 8
  %791 = getelementptr inbounds i16*, i16** %756, i64 7
  %792 = getelementptr inbounds i16*, i16** %757, i64 7
  %793 = bitcast i16** %792 to i64*
  %794 = load i64, i64* %793, align 8
  %795 = bitcast i16** %791 to i64*
  store i64 %794, i64* %795, align 8
  %796 = getelementptr inbounds i16*, i16** %756, i64 8
  %797 = getelementptr inbounds i16*, i16** %757, i64 8
  %798 = icmp eq i16** %797, %628
  br i1 %798, label %799, label %755, !llvm.loop !41

; <label>:799:                                    ; preds = %751, %755, %726, %618
  br i1 %609, label %802, label %800

; <label>:800:                                    ; preds = %799
  %801 = load i8*, i8** %428, align 8
  call void @_ZdlPv(i8* %801) #7
  br label %802

; <label>:802:                                    ; preds = %799, %800
  store i64 %619, i64* %423, align 8
  store i8* %621, i8** %428, align 8
  %803 = add i64 %602, 2
  %804 = or i64 %803, 1
  store i64 %804, i64* %410, align 8
  br label %814

; <label>:805:                                    ; preds = %601
  %806 = add i64 %602, 2
  %807 = and i64 %806, -2
  %808 = or i64 %806, 1
  %809 = load i16**, i16*** %427, align 8
  %810 = select i1 %609, i64 %807, i64 %808
  %811 = select i1 %609, i16** %425, i16** %809
  store i64 %810, i64* %410, align 8
  %812 = getelementptr inbounds i16*, i16** %811, i64 %607
  %813 = bitcast i16** %812 to i64*
  store i64 %606, i64* %813, align 8
  br label %814

; <label>:814:                                    ; preds = %802, %805
  %815 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %603, i64 1
  %816 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %815, %408
  %817 = load i64, i64* %410, align 8
  br i1 %816, label %440, label %601

; <label>:818:                                    ; preds = %600, %14
  %819 = phi i64 [ %2, %14 ], [ %591, %600 ]
  %820 = trunc i64 %819 to i32
  ret i32 %820
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

declare i64 @_ZN6webrtc17PushSincResampler8ResampleEPKsmPsm(%"class.webrtc::PushSincResampler"*, i16*, i64, i16*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6webrtc13PushResamplerIfEC2Ev(%"class.webrtc::PushResampler.28"*) unnamed_addr #0 comdat($_ZN6webrtc13PushResamplerIfEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc13PushResamplerIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 1
  %4 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6webrtc13PushResamplerIfED2Ev(%"class.webrtc::PushResampler.28"*) unnamed_addr #0 comdat($_ZN6webrtc13PushResamplerIfED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc13PushResamplerIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %4, align 8
  %6 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, null
  br i1 %6, label %48, label %7

; <label>:7:                                      ; preds = %1
  %8 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5 to i8*
  %9 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %9, align 8
  %11 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %10, %5
  br i1 %11, label %46, label %12

; <label>:12:                                     ; preds = %7, %41
  %13 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %14, %41 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 0
  %16 = load float*, float** %15, align 8
  %17 = icmp eq float* %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %12
  %19 = ptrtoint float* %16 to i64
  %20 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 1
  %21 = bitcast float** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast float* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

; <label>:23:                                     ; preds = %18, %12
  %24 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %32, label %27

; <label>:27:                                     ; preds = %23
  %28 = ptrtoint float* %25 to i64
  %29 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 1
  %30 = bitcast float** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast float* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

; <label>:32:                                     ; preds = %27, %23
  %33 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %33, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %33, align 8
  %35 = icmp eq %"class.webrtc::PushSincResampler"* %34, null
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %32
  %37 = bitcast %"class.webrtc::PushSincResampler"* %34 to void (%"class.webrtc::PushSincResampler"*)***
  %38 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %38, i64 1
  %40 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %39, align 8
  tail call void %40(%"class.webrtc::PushSincResampler"* nonnull %34) #8
  br label %41

; <label>:41:                                     ; preds = %36, %32
  %42 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %14, %5
  br i1 %42, label %43, label %12

; <label>:43:                                     ; preds = %41
  %44 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

; <label>:46:                                     ; preds = %43, %7
  %47 = phi i8* [ %45, %43 ], [ %8, %7 ]
  store %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %9, align 8
  tail call void @_ZdlPv(i8* %47) #7
  br label %48

; <label>:48:                                     ; preds = %1, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6webrtc13PushResamplerIfED0Ev(%"class.webrtc::PushResampler.28"*) unnamed_addr #0 comdat($_ZN6webrtc13PushResamplerIfED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc13PushResamplerIfEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %4, align 8
  %6 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, null
  br i1 %6, label %48, label %7

; <label>:7:                                      ; preds = %1
  %8 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5 to i8*
  %9 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %9, align 8
  %11 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %10, %5
  br i1 %11, label %46, label %12

; <label>:12:                                     ; preds = %7, %41
  %13 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %14, %41 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 0
  %16 = load float*, float** %15, align 8
  %17 = icmp eq float* %16, null
  br i1 %17, label %23, label %18

; <label>:18:                                     ; preds = %12
  %19 = ptrtoint float* %16 to i64
  %20 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 2, i32 0, i32 1
  %21 = bitcast float** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast float* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

; <label>:23:                                     ; preds = %18, %12
  %24 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %32, label %27

; <label>:27:                                     ; preds = %23
  %28 = ptrtoint float* %25 to i64
  %29 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %13, i64 -1, i32 1, i32 0, i32 1
  %30 = bitcast float** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast float* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

; <label>:32:                                     ; preds = %27, %23
  %33 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %33, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %33, align 8
  %35 = icmp eq %"class.webrtc::PushSincResampler"* %34, null
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %32
  %37 = bitcast %"class.webrtc::PushSincResampler"* %34 to void (%"class.webrtc::PushSincResampler"*)***
  %38 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %38, i64 1
  %40 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %39, align 8
  tail call void %40(%"class.webrtc::PushSincResampler"* nonnull %34) #8
  br label %41

; <label>:41:                                     ; preds = %36, %32
  %42 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %14, %5
  br i1 %42, label %43, label %12

; <label>:43:                                     ; preds = %41
  %44 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %45 = load i8*, i8** %44, align 8
  br label %46

; <label>:46:                                     ; preds = %43, %7
  %47 = phi i8* [ %45, %43 ], [ %8, %7 ]
  store %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %9, align 8
  tail call void @_ZdlPv(i8* %47) #7
  br label %48

; <label>:48:                                     ; preds = %1, %46
  %49 = bitcast %"class.webrtc::PushResampler.28"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6webrtc13PushResamplerIfE18InitializeIfNeededEiim(%"class.webrtc::PushResampler.28"*, i32, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"struct.webrtc::PushResampler<float>::ChannelResampler", align 8
  %6 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %1
  br i1 %8, label %9, label %17

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %2
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %3
  br i1 %16, label %190, label %17

; <label>:17:                                     ; preds = %13, %9, %4
  %18 = icmp slt i32 %1, 1
  %19 = icmp slt i32 %2, 1
  %20 = or i1 %18, %19
  %21 = icmp eq i64 %3, 0
  %22 = or i1 %20, %21
  br i1 %22, label %190, label %23

; <label>:23:                                     ; preds = %17
  store i32 %1, i32* %6, align 8
  %24 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 2
  store i32 %2, i32* %24, align 4
  %25 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 3
  store i64 %3, i64* %25, align 8
  %26 = udiv i32 %1, 100
  %27 = zext i32 %26 to i64
  %28 = udiv i32 %2, 100
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %30, i64 0, i32 0, i32 0
  %32 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %31, align 8
  %33 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4, i32 0, i32 1
  %34 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %33, align 8
  %35 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %34, %32
  br i1 %35, label %67, label %36

; <label>:36:                                     ; preds = %23, %65
  %37 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %38, %65 ], [ %34, %23 ]
  %38 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %37, i64 -1
  %39 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %37, i64 -1, i32 2, i32 0, i32 0
  %40 = load float*, float** %39, align 8
  %41 = icmp eq float* %40, null
  br i1 %41, label %47, label %42

; <label>:42:                                     ; preds = %36
  %43 = ptrtoint float* %40 to i64
  %44 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %37, i64 -1, i32 2, i32 0, i32 1
  %45 = bitcast float** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast float* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #7
  br label %47

; <label>:47:                                     ; preds = %42, %36
  %48 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %37, i64 -1, i32 1, i32 0, i32 0
  %49 = load float*, float** %48, align 8
  %50 = icmp eq float* %49, null
  br i1 %50, label %56, label %51

; <label>:51:                                     ; preds = %47
  %52 = ptrtoint float* %49 to i64
  %53 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %37, i64 -1, i32 1, i32 0, i32 1
  %54 = bitcast float** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast float* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #7
  br label %56

; <label>:56:                                     ; preds = %51, %47
  %57 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %57, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %57, align 8
  %59 = icmp eq %"class.webrtc::PushSincResampler"* %58, null
  br i1 %59, label %65, label %60

; <label>:60:                                     ; preds = %56
  %61 = bitcast %"class.webrtc::PushSincResampler"* %58 to void (%"class.webrtc::PushSincResampler"*)***
  %62 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %62, i64 1
  %64 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %63, align 8
  tail call void %64(%"class.webrtc::PushSincResampler"* nonnull %58) #8
  br label %65

; <label>:65:                                     ; preds = %60, %56
  %66 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %38, %32
  br i1 %66, label %67, label %36

; <label>:67:                                     ; preds = %65, %23
  store %"struct.webrtc::PushResampler<float>::ChannelResampler"* %32, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %33, align 8
  %68 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5 to i8*
  %69 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 1
  %72 = bitcast %"class.std::__1::vector.36"* %71 to i64*
  %73 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 1, i32 0, i32 1
  %74 = bitcast float** %73 to i64*
  %75 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %76 = bitcast float** %75 to i64*
  %77 = bitcast %"class.std::__1::vector.36"* %71 to i8*
  %78 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 2
  %79 = bitcast %"class.std::__1::vector.36"* %78 to i64*
  %80 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 2, i32 0, i32 1
  %81 = bitcast float** %80 to i64*
  %82 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %83 = bitcast float** %82 to i64*
  %84 = bitcast %"class.std::__1::vector.36"* %78 to i8*
  %85 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 2, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5, i64 0, i32 1, i32 0, i32 0
  %87 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %5 to i8*
  br label %88

; <label>:88:                                     ; preds = %188, %67
  %89 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %32, %67 ], [ %189, %188 ]
  %90 = phi i64 [ 0, %67 ], [ %186, %188 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %68) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 56, i1 false)
  %91 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %69, align 8
  %92 = icmp ult %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, %91
  br i1 %92, label %93, label %116

; <label>:93:                                     ; preds = %88
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %70, align 8
  %94 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, i64 0, i32 1
  %95 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 32, i1 false)
  %96 = load i64, i64* %72, align 8
  %97 = bitcast %"class.std::__1::vector.36"* %94 to i64*
  store i64 %96, i64* %97, align 8
  %98 = load i64, i64* %74, align 8
  %99 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, i64 0, i32 1, i32 0, i32 1
  %100 = bitcast float** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = load i64, i64* %76, align 8
  %102 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast float** %102 to i64*
  store i64 %101, i64* %103, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 24, i1 false) #8
  %104 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, i64 0, i32 2
  %105 = bitcast %"class.std::__1::vector.36"* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #8
  %106 = load i64, i64* %79, align 8
  %107 = bitcast %"class.std::__1::vector.36"* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i64, i64* %81, align 8
  %109 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, i64 0, i32 2, i32 0, i32 1
  %110 = bitcast float** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = load i64, i64* %83, align 8
  %112 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %89, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast float** %112 to i64*
  store i64 %111, i64* %113, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 24, i1 false) #8
  %114 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %33, align 8
  %115 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %114, i64 1
  store %"struct.webrtc::PushResampler<float>::ChannelResampler"* %115, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %33, align 8
  br label %122

; <label>:116:                                    ; preds = %88
  call void @_ZNSt3__16vectorIN6webrtc13PushResamplerIfE16ChannelResamplerENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"* nonnull %30, %"struct.webrtc::PushResampler<float>::ChannelResampler"* nonnull dereferenceable(56) %5) #8
  %117 = load float*, float** %85, align 8
  %118 = icmp eq float* %117, null
  br i1 %118, label %122, label %119

; <label>:119:                                    ; preds = %116
  %120 = bitcast float* %117 to i8*
  %121 = ptrtoint float* %117 to i64
  store i64 %121, i64* %81, align 8
  call void @_ZdlPv(i8* %120) #7
  br label %122

; <label>:122:                                    ; preds = %93, %119, %116
  %123 = load float*, float** %86, align 8
  %124 = icmp eq float* %123, null
  br i1 %124, label %128, label %125

; <label>:125:                                    ; preds = %122
  %126 = ptrtoint float* %123 to i64
  store i64 %126, i64* %74, align 8
  %127 = bitcast float* %123 to i8*
  call void @_ZdlPv(i8* %127) #7
  br label %128

; <label>:128:                                    ; preds = %125, %122
  %129 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %70, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %70, align 8
  %130 = icmp eq %"class.webrtc::PushSincResampler"* %129, null
  br i1 %130, label %136, label %131

; <label>:131:                                    ; preds = %128
  %132 = bitcast %"class.webrtc::PushSincResampler"* %129 to void (%"class.webrtc::PushSincResampler"*)***
  %133 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %133, i64 1
  %135 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %134, align 8
  call void %135(%"class.webrtc::PushSincResampler"* nonnull %129) #8
  br label %136

; <label>:136:                                    ; preds = %128, %131
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %68) #8
  %137 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %33, align 8
  %138 = call i8* @_Znwm(i64 64) #7, !noalias !42
  %139 = bitcast i8* %138 to %"class.webrtc::PushSincResampler"*
  call void @_ZN6webrtc17PushSincResamplerC1Emm(%"class.webrtc::PushSincResampler"* nonnull %139, i64 %27, i64 %29) #8, !noalias !42
  %140 = ptrtoint i8* %138 to i64
  %141 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %137, i64 -1
  %142 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %142, align 8
  %144 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %141 to i64*
  store i64 %140, i64* %144, align 8
  %145 = icmp eq %"class.webrtc::PushSincResampler"* %143, null
  br i1 %145, label %151, label %146

; <label>:146:                                    ; preds = %136
  %147 = bitcast %"class.webrtc::PushSincResampler"* %143 to void (%"class.webrtc::PushSincResampler"*)***
  %148 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %148, i64 1
  %150 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %149, align 8
  call void %150(%"class.webrtc::PushSincResampler"* nonnull %143) #8
  br label %151

; <label>:151:                                    ; preds = %146, %136
  %152 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %137, i64 -1, i32 1
  %153 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %137, i64 -1, i32 1, i32 0, i32 1
  %154 = bitcast float** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.std::__1::vector.36"* %152 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = sub i64 %155, %157
  %159 = ashr exact i64 %158, 2
  %160 = icmp ult i64 %159, %27
  %161 = inttoptr i64 %157 to float*
  br i1 %160, label %162, label %164

; <label>:162:                                    ; preds = %151
  %163 = sub nsw i64 %27, %159
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.36"* nonnull %152, i64 %163) #8
  br label %168

; <label>:164:                                    ; preds = %151
  %165 = icmp ugt i64 %159, %27
  br i1 %165, label %166, label %168

; <label>:166:                                    ; preds = %164
  %167 = getelementptr inbounds float, float* %161, i64 %27
  store float* %167, float** %153, align 8
  br label %168

; <label>:168:                                    ; preds = %162, %164, %166
  %169 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %137, i64 -1, i32 2
  %170 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %137, i64 -1, i32 2, i32 0, i32 1
  %171 = bitcast float** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.std::__1::vector.36"* %169 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = ashr exact i64 %175, 2
  %177 = icmp ult i64 %176, %29
  %178 = inttoptr i64 %174 to float*
  br i1 %177, label %179, label %181

; <label>:179:                                    ; preds = %168
  %180 = sub nsw i64 %29, %176
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.36"* nonnull %169, i64 %180) #8
  br label %185

; <label>:181:                                    ; preds = %168
  %182 = icmp ugt i64 %176, %29
  br i1 %182, label %183, label %185

; <label>:183:                                    ; preds = %181
  %184 = getelementptr inbounds float, float* %178, i64 %29
  store float* %184, float** %170, align 8
  br label %185

; <label>:185:                                    ; preds = %179, %181, %183
  %186 = add nuw i64 %90, 1
  %187 = icmp eq i64 %186, %3
  br i1 %187, label %190, label %188

; <label>:188:                                    ; preds = %185
  %189 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %33, align 8
  br label %88

; <label>:190:                                    ; preds = %185, %17, %13
  %191 = phi i32 [ 0, %13 ], [ -1, %17 ], [ 0, %185 ]
  ret i32 %191
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6webrtc13PushResamplerIfE8ResampleEPKfmPfm(%"class.webrtc::PushResampler.28"*, float*, i64, float*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.absl::InlinedVector.45", align 8
  %7 = alloca %"class.absl::InlinedVector.45", align 8
  %8 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 2
  %11 = load i32, i32* %9, align 8
  %12 = load i32, i32* %10, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %5
  %15 = bitcast float* %3 to i8*
  %16 = bitcast float* %1 to i8*
  %17 = shl i64 %2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 %17, i1 false)
  br label %694

; <label>:18:                                     ; preds = %5
  %19 = load i64, i64* %8, align 8
  %20 = udiv i64 %2, %19
  %21 = udiv i64 %4, %19
  %22 = bitcast %"class.absl::InlinedVector.45"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %24, align 8
  %26 = getelementptr inbounds %"class.webrtc::PushResampler.28", %"class.webrtc::PushResampler.28"* %0, i64 0, i32 4, i32 0, i32 1
  %27 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %26, align 8
  %28 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %25, %27
  br i1 %28, label %29, label %33

; <label>:29:                                     ; preds = %18
  %30 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %6, i64 0, i32 1, i32 0, i32 0, i64 1
  %31 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %6, i64 0, i32 1, i32 0, i32 0, i64 0
  %32 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %31 to float**
  br label %48

; <label>:33:                                     ; preds = %18
  %34 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %6, i64 0, i32 1
  %35 = bitcast %"union.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Rep"* %34 to i64*
  %36 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %6, i64 0, i32 1, i32 0, i32 0, i64 0
  %37 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %36 to float**
  %38 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %6, i64 0, i32 1, i32 0, i32 0, i64 1
  %39 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %38 to float***
  %40 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %38 to i8**
  br label %125

; <label>:41:                                     ; preds = %338
  %42 = load i64, i64* %8, align 8
  %43 = load i64, i64* %23, align 8
  %44 = load float**, float*** %39, align 8
  %45 = and i64 %43, 1
  %46 = icmp eq i64 %45, 0
  %47 = select i1 %46, float** %37, float** %44
  br label %48

; <label>:48:                                     ; preds = %29, %41
  %49 = phi %"struct.std::__1::aligned_storage<8, 8>::type"* [ %30, %29 ], [ %38, %41 ]
  %50 = phi float** [ %32, %29 ], [ %47, %41 ]
  %51 = phi i64 [ %19, %29 ], [ %42, %41 ]
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %118, label %53

; <label>:53:                                     ; preds = %48
  %54 = icmp ugt i64 %19, %2
  %55 = add i64 %20, -1
  %56 = and i64 %20, 3
  %57 = icmp ult i64 %55, 3
  %58 = sub i64 %20, %56
  %59 = icmp eq i64 %56, 0
  br label %60

; <label>:60:                                     ; preds = %81, %53
  %61 = phi i64 [ 0, %53 ], [ %82, %81 ]
  %62 = getelementptr inbounds float*, float** %50, i64 %61
  %63 = load float*, float** %62, align 8
  br i1 %54, label %81, label %64

; <label>:64:                                     ; preds = %60
  br i1 %57, label %65, label %84

; <label>:65:                                     ; preds = %84, %64
  %66 = phi i64 [ 0, %64 ], [ %115, %84 ]
  %67 = phi i64 [ %61, %64 ], [ %114, %84 ]
  br i1 %59, label %81, label %68

; <label>:68:                                     ; preds = %65, %68
  %69 = phi i64 [ %78, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %77, %68 ], [ %67, %65 ]
  %71 = phi i64 [ %79, %68 ], [ %56, %65 ]
  %72 = getelementptr inbounds float, float* %1, i64 %70
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds float, float* %63, i64 %69
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = add i64 %70, %51
  %78 = add nuw i64 %69, 1
  %79 = add i64 %71, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !45

; <label>:81:                                     ; preds = %65, %68, %60
  %82 = add nuw i64 %61, 1
  %83 = icmp eq i64 %82, %51
  br i1 %83, label %118, label %60

; <label>:84:                                     ; preds = %64, %84
  %85 = phi i64 [ %115, %84 ], [ 0, %64 ]
  %86 = phi i64 [ %114, %84 ], [ %61, %64 ]
  %87 = phi i64 [ %116, %84 ], [ %58, %64 ]
  %88 = getelementptr inbounds float, float* %1, i64 %86
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds float, float* %63, i64 %85
  %92 = bitcast float* %91 to i32*
  store i32 %90, i32* %92, align 4
  %93 = add i64 %86, %51
  %94 = or i64 %85, 1
  %95 = getelementptr inbounds float, float* %1, i64 %93
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds float, float* %63, i64 %94
  %99 = bitcast float* %98 to i32*
  store i32 %97, i32* %99, align 4
  %100 = add i64 %93, %51
  %101 = or i64 %85, 2
  %102 = getelementptr inbounds float, float* %1, i64 %100
  %103 = bitcast float* %102 to i32*
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds float, float* %63, i64 %101
  %106 = bitcast float* %105 to i32*
  store i32 %104, i32* %106, align 4
  %107 = add i64 %100, %51
  %108 = or i64 %85, 3
  %109 = getelementptr inbounds float, float* %1, i64 %107
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds float, float* %63, i64 %108
  %113 = bitcast float* %112 to i32*
  store i32 %111, i32* %113, align 4
  %114 = add i64 %107, %51
  %115 = add i64 %85, 4
  %116 = add i64 %87, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %65, label %84

; <label>:118:                                    ; preds = %81, %48
  %119 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %24, align 8
  %120 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %26, align 8
  %121 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %119, %120
  br i1 %121, label %122, label %367

; <label>:122:                                    ; preds = %118
  %123 = bitcast %"class.absl::InlinedVector.45"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %123) #8
  %124 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %124, align 8
  br label %350

; <label>:125:                                    ; preds = %341, %33
  %126 = phi i64 [ undef, %33 ], [ %343, %341 ]
  %127 = phi i64 [ 0, %33 ], [ %342, %341 ]
  %128 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %25, %33 ], [ %339, %341 ]
  %129 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %128, i64 0, i32 1, i32 0, i32 0
  %130 = bitcast float** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = lshr i64 %127, 1
  %133 = and i64 %127, 1
  %134 = icmp eq i64 %133, 0
  %135 = select i1 %134, i64 8, i64 %126
  %136 = icmp eq i64 %132, %135
  br i1 %136, label %137, label %329, !prof !15

; <label>:137:                                    ; preds = %125
  br i1 %134, label %142, label %138

; <label>:138:                                    ; preds = %137
  %139 = shl i64 %126, 1
  %140 = icmp ugt i64 %139, 2305843009213693951
  br i1 %140, label %141, label %142

; <label>:141:                                    ; preds = %138
  call void @abort() #9
  unreachable

; <label>:142:                                    ; preds = %138, %137
  %143 = phi i64 [ %139, %138 ], [ 16, %137 ]
  %144 = shl i64 %143, 3
  %145 = call i8* @_Znwm(i64 %144) #7
  %146 = bitcast i8* %145 to float**
  %147 = getelementptr inbounds float*, float** %146, i64 %132
  %148 = bitcast float** %147 to i64*
  store i64 %131, i64* %148, align 8
  %149 = load float**, float*** %39, align 8
  %150 = select i1 %134, float** %37, float** %149
  %151 = bitcast float** %150 to i8*
  %152 = getelementptr inbounds float*, float** %150, i64 %132
  %153 = icmp eq i64 %132, 0
  br i1 %153, label %323, label %154

; <label>:154:                                    ; preds = %142
  %155 = shl i64 %132, 3
  %156 = add i64 %155, -8
  %157 = lshr exact i64 %156, 3
  %158 = add nuw nsw i64 %157, 1
  %159 = icmp ult i64 %158, 4
  br i1 %159, label %252, label %160

; <label>:160:                                    ; preds = %154
  %161 = shl i64 %132, 3
  %162 = add i64 %161, -8
  %163 = lshr exact i64 %162, 3
  %164 = getelementptr i8, i8* %145, i64 %161
  %165 = getelementptr float*, float** %150, i64 1
  %166 = getelementptr float*, float** %165, i64 %163
  %167 = bitcast float** %166 to i8*
  %168 = icmp ult i8* %145, %167
  %169 = icmp ugt i8* %164, %151
  %170 = and i1 %168, %169
  br i1 %170, label %252, label %171

; <label>:171:                                    ; preds = %160
  %172 = and i64 %158, 4611686018427387900
  %173 = getelementptr float*, float** %146, i64 %172
  %174 = getelementptr float*, float** %150, i64 %172
  %175 = add nsw i64 %172, -4
  %176 = lshr exact i64 %175, 2
  %177 = add nuw nsw i64 %176, 1
  %178 = and i64 %177, 3
  %179 = icmp ult i64 %175, 12
  br i1 %179, label %231, label %180

; <label>:180:                                    ; preds = %171
  %181 = sub nsw i64 %177, %178
  br label %182

; <label>:182:                                    ; preds = %182, %180
  %183 = phi i64 [ 0, %180 ], [ %228, %182 ]
  %184 = phi i64 [ %181, %180 ], [ %229, %182 ]
  %185 = getelementptr float*, float** %146, i64 %183
  %186 = getelementptr float*, float** %150, i64 %183
  %187 = bitcast float** %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !46
  %189 = getelementptr float*, float** %186, i64 2
  %190 = bitcast float** %189 to <2 x i64>*
  %191 = load <2 x i64>, <2 x i64>* %190, align 8, !alias.scope !46
  %192 = bitcast float** %185 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %192, align 8, !alias.scope !49, !noalias !46
  %193 = getelementptr float*, float** %185, i64 2
  %194 = bitcast float** %193 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %194, align 8, !alias.scope !49, !noalias !46
  %195 = or i64 %183, 4
  %196 = getelementptr float*, float** %146, i64 %195
  %197 = getelementptr float*, float** %150, i64 %195
  %198 = bitcast float** %197 to <2 x i64>*
  %199 = load <2 x i64>, <2 x i64>* %198, align 8, !alias.scope !46
  %200 = getelementptr float*, float** %197, i64 2
  %201 = bitcast float** %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8, !alias.scope !46
  %203 = bitcast float** %196 to <2 x i64>*
  store <2 x i64> %199, <2 x i64>* %203, align 8, !alias.scope !49, !noalias !46
  %204 = getelementptr float*, float** %196, i64 2
  %205 = bitcast float** %204 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %205, align 8, !alias.scope !49, !noalias !46
  %206 = or i64 %183, 8
  %207 = getelementptr float*, float** %146, i64 %206
  %208 = getelementptr float*, float** %150, i64 %206
  %209 = bitcast float** %208 to <2 x i64>*
  %210 = load <2 x i64>, <2 x i64>* %209, align 8, !alias.scope !46
  %211 = getelementptr float*, float** %208, i64 2
  %212 = bitcast float** %211 to <2 x i64>*
  %213 = load <2 x i64>, <2 x i64>* %212, align 8, !alias.scope !46
  %214 = bitcast float** %207 to <2 x i64>*
  store <2 x i64> %210, <2 x i64>* %214, align 8, !alias.scope !49, !noalias !46
  %215 = getelementptr float*, float** %207, i64 2
  %216 = bitcast float** %215 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %216, align 8, !alias.scope !49, !noalias !46
  %217 = or i64 %183, 12
  %218 = getelementptr float*, float** %146, i64 %217
  %219 = getelementptr float*, float** %150, i64 %217
  %220 = bitcast float** %219 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 8, !alias.scope !46
  %222 = getelementptr float*, float** %219, i64 2
  %223 = bitcast float** %222 to <2 x i64>*
  %224 = load <2 x i64>, <2 x i64>* %223, align 8, !alias.scope !46
  %225 = bitcast float** %218 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %225, align 8, !alias.scope !49, !noalias !46
  %226 = getelementptr float*, float** %218, i64 2
  %227 = bitcast float** %226 to <2 x i64>*
  store <2 x i64> %224, <2 x i64>* %227, align 8, !alias.scope !49, !noalias !46
  %228 = add i64 %183, 16
  %229 = add i64 %184, -4
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %182, !llvm.loop !51

; <label>:231:                                    ; preds = %182, %171
  %232 = phi i64 [ 0, %171 ], [ %228, %182 ]
  %233 = icmp eq i64 %178, 0
  br i1 %233, label %250, label %234

; <label>:234:                                    ; preds = %231, %234
  %235 = phi i64 [ %247, %234 ], [ %232, %231 ]
  %236 = phi i64 [ %248, %234 ], [ %178, %231 ]
  %237 = getelementptr float*, float** %146, i64 %235
  %238 = getelementptr float*, float** %150, i64 %235
  %239 = bitcast float** %238 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !46
  %241 = getelementptr float*, float** %238, i64 2
  %242 = bitcast float** %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !46
  %244 = bitcast float** %237 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 8, !alias.scope !49, !noalias !46
  %245 = getelementptr float*, float** %237, i64 2
  %246 = bitcast float** %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 8, !alias.scope !49, !noalias !46
  %247 = add i64 %235, 4
  %248 = add i64 %236, -1
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %250, label %234, !llvm.loop !52

; <label>:250:                                    ; preds = %234, %231
  %251 = icmp eq i64 %158, %172
  br i1 %251, label %323, label %252

; <label>:252:                                    ; preds = %250, %160, %154
  %253 = phi float** [ %146, %160 ], [ %146, %154 ], [ %173, %250 ]
  %254 = phi float** [ %150, %160 ], [ %150, %154 ], [ %174, %250 ]
  %255 = ptrtoint float** %254 to i64
  %256 = getelementptr float*, float** %150, i64 -1
  %257 = getelementptr float*, float** %256, i64 %132
  %258 = ptrtoint float** %257 to i64
  %259 = sub i64 %258, %255
  %260 = lshr i64 %259, 3
  %261 = add nuw nsw i64 %260, 1
  %262 = and i64 %261, 7
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %275, label %264

; <label>:264:                                    ; preds = %252, %264
  %265 = phi float** [ %271, %264 ], [ %253, %252 ]
  %266 = phi float** [ %272, %264 ], [ %254, %252 ]
  %267 = phi i64 [ %273, %264 ], [ %262, %252 ]
  %268 = bitcast float** %266 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast float** %265 to i64*
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds float*, float** %265, i64 1
  %272 = getelementptr inbounds float*, float** %266, i64 1
  %273 = add i64 %267, -1
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %264, !llvm.loop !53

; <label>:275:                                    ; preds = %264, %252
  %276 = phi float** [ %253, %252 ], [ %271, %264 ]
  %277 = phi float** [ %254, %252 ], [ %272, %264 ]
  %278 = icmp ult i64 %259, 56
  br i1 %278, label %323, label %279

; <label>:279:                                    ; preds = %275, %279
  %280 = phi float** [ %320, %279 ], [ %276, %275 ]
  %281 = phi float** [ %321, %279 ], [ %277, %275 ]
  %282 = bitcast float** %281 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = bitcast float** %280 to i64*
  store i64 %283, i64* %284, align 8
  %285 = getelementptr inbounds float*, float** %280, i64 1
  %286 = getelementptr inbounds float*, float** %281, i64 1
  %287 = bitcast float** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast float** %285 to i64*
  store i64 %288, i64* %289, align 8
  %290 = getelementptr inbounds float*, float** %280, i64 2
  %291 = getelementptr inbounds float*, float** %281, i64 2
  %292 = bitcast float** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast float** %290 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds float*, float** %280, i64 3
  %296 = getelementptr inbounds float*, float** %281, i64 3
  %297 = bitcast float** %296 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = bitcast float** %295 to i64*
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds float*, float** %280, i64 4
  %301 = getelementptr inbounds float*, float** %281, i64 4
  %302 = bitcast float** %301 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast float** %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds float*, float** %280, i64 5
  %306 = getelementptr inbounds float*, float** %281, i64 5
  %307 = bitcast float** %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = bitcast float** %305 to i64*
  store i64 %308, i64* %309, align 8
  %310 = getelementptr inbounds float*, float** %280, i64 6
  %311 = getelementptr inbounds float*, float** %281, i64 6
  %312 = bitcast float** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = bitcast float** %310 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds float*, float** %280, i64 7
  %316 = getelementptr inbounds float*, float** %281, i64 7
  %317 = bitcast float** %316 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast float** %315 to i64*
  store i64 %318, i64* %319, align 8
  %320 = getelementptr inbounds float*, float** %280, i64 8
  %321 = getelementptr inbounds float*, float** %281, i64 8
  %322 = icmp eq float** %321, %152
  br i1 %322, label %323, label %279, !llvm.loop !54

; <label>:323:                                    ; preds = %275, %279, %250, %142
  br i1 %134, label %326, label %324

; <label>:324:                                    ; preds = %323
  %325 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %325) #7
  br label %326

; <label>:326:                                    ; preds = %323, %324
  store i64 %143, i64* %35, align 8
  store i8* %145, i8** %40, align 8
  %327 = add i64 %127, 2
  %328 = or i64 %327, 1
  store i64 %328, i64* %23, align 8
  br label %338

; <label>:329:                                    ; preds = %125
  %330 = add i64 %127, 2
  %331 = and i64 %330, -2
  %332 = or i64 %330, 1
  %333 = load float**, float*** %39, align 8
  %334 = select i1 %134, i64 %331, i64 %332
  %335 = select i1 %134, float** %37, float** %333
  store i64 %334, i64* %23, align 8
  %336 = getelementptr inbounds float*, float** %335, i64 %132
  %337 = bitcast float** %336 to i64*
  store i64 %131, i64* %337, align 8
  br label %338

; <label>:338:                                    ; preds = %326, %329
  %339 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %128, i64 1
  %340 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %339, %27
  br i1 %340, label %41, label %341

; <label>:341:                                    ; preds = %338
  %342 = load i64, i64* %23, align 8
  %343 = load i64, i64* %35, align 8
  br label %125

; <label>:344:                                    ; preds = %367
  %345 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %24, align 8
  %346 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %26, align 8
  %347 = bitcast %"class.absl::InlinedVector.45"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %347) #8
  %348 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %348, align 8
  %349 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %345, %346
  br i1 %349, label %350, label %359

; <label>:350:                                    ; preds = %344, %122
  %351 = phi i64* [ %124, %122 ], [ %348, %344 ]
  %352 = phi i8* [ %123, %122 ], [ %347, %344 ]
  %353 = phi i64 [ 0, %122 ], [ %375, %344 ]
  %354 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 1, i32 0, i32 0, i64 1
  %355 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %354 to float***
  %356 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  %357 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %356 to float**
  %358 = load float**, float*** %355, align 8
  br label %382

; <label>:359:                                    ; preds = %344
  %360 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 1
  %361 = bitcast %"union.absl::InlinedVector<float *, 8, std::__1::allocator<float *> >::Rep"* %360 to i64*
  %362 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 1, i32 0, i32 0, i64 0
  %363 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %362 to float**
  %364 = getelementptr inbounds %"class.absl::InlinedVector.45", %"class.absl::InlinedVector.45"* %7, i64 0, i32 1, i32 0, i32 0, i64 1
  %365 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %364 to float***
  %366 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %364 to i8**
  br label %477

; <label>:367:                                    ; preds = %118, %367
  %368 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %376, %367 ], [ %119, %118 ]
  %369 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %368, i64 0, i32 0, i32 0, i32 0, i32 0
  %370 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %369, align 8
  %371 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %368, i64 0, i32 1, i32 0, i32 0
  %372 = load float*, float** %371, align 8
  %373 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %368, i64 0, i32 2, i32 0, i32 0
  %374 = load float*, float** %373, align 8
  %375 = call i64 @_ZN6webrtc17PushSincResampler8ResampleEPKfmPfm(%"class.webrtc::PushSincResampler"* %370, float* %372, i64 %20, float* %374, i64 %21) #8
  %376 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %368, i64 1
  %377 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %376, %120
  br i1 %377, label %344, label %367

; <label>:378:                                    ; preds = %690
  %379 = and i64 %693, 1
  %380 = icmp eq i64 %379, 0
  %381 = load float**, float*** %365, align 8
  br i1 %380, label %382, label %388

; <label>:382:                                    ; preds = %350, %378
  %383 = phi float** [ %358, %350 ], [ %381, %378 ]
  %384 = phi float** [ %357, %350 ], [ %363, %378 ]
  %385 = phi i64 [ %353, %350 ], [ %375, %378 ]
  %386 = phi i8* [ %352, %350 ], [ %347, %378 ]
  %387 = phi i64* [ %351, %350 ], [ %348, %378 ]
  br label %388

; <label>:388:                                    ; preds = %378, %382
  %389 = phi float** [ %383, %382 ], [ %381, %378 ]
  %390 = phi i1 [ true, %382 ], [ false, %378 ]
  %391 = phi i64 [ %385, %382 ], [ %375, %378 ]
  %392 = phi i8* [ %386, %382 ], [ %347, %378 ]
  %393 = phi i64* [ %387, %382 ], [ %348, %378 ]
  %394 = phi float** [ %384, %382 ], [ %381, %378 ]
  %395 = load i64, i64* %8, align 8
  %396 = icmp eq i64 %395, 0
  %397 = bitcast float** %389 to i8*
  br i1 %396, label %465, label %398

; <label>:398:                                    ; preds = %388
  %399 = icmp eq i64 %391, 0
  %400 = add i64 %391, -1
  %401 = and i64 %391, 3
  %402 = icmp ult i64 %400, 3
  %403 = sub i64 %391, %401
  %404 = icmp eq i64 %401, 0
  br label %405

; <label>:405:                                    ; preds = %426, %398
  %406 = phi i64 [ 0, %398 ], [ %427, %426 ]
  %407 = getelementptr inbounds float*, float** %394, i64 %406
  %408 = load float*, float** %407, align 8
  br i1 %399, label %426, label %409

; <label>:409:                                    ; preds = %405
  br i1 %402, label %410, label %429

; <label>:410:                                    ; preds = %429, %409
  %411 = phi i64 [ 0, %409 ], [ %460, %429 ]
  %412 = phi i64 [ %406, %409 ], [ %459, %429 ]
  br i1 %404, label %426, label %413

; <label>:413:                                    ; preds = %410, %413
  %414 = phi i64 [ %423, %413 ], [ %411, %410 ]
  %415 = phi i64 [ %422, %413 ], [ %412, %410 ]
  %416 = phi i64 [ %424, %413 ], [ %401, %410 ]
  %417 = getelementptr inbounds float, float* %408, i64 %414
  %418 = bitcast float* %417 to i32*
  %419 = load i32, i32* %418, align 4
  %420 = getelementptr inbounds float, float* %3, i64 %415
  %421 = bitcast float* %420 to i32*
  store i32 %419, i32* %421, align 4
  %422 = add i64 %415, %395
  %423 = add nuw i64 %414, 1
  %424 = add i64 %416, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %413, !llvm.loop !55

; <label>:426:                                    ; preds = %410, %413, %405
  %427 = add nuw i64 %406, 1
  %428 = icmp eq i64 %427, %395
  br i1 %428, label %463, label %405

; <label>:429:                                    ; preds = %409, %429
  %430 = phi i64 [ %460, %429 ], [ 0, %409 ]
  %431 = phi i64 [ %459, %429 ], [ %406, %409 ]
  %432 = phi i64 [ %461, %429 ], [ %403, %409 ]
  %433 = getelementptr inbounds float, float* %408, i64 %430
  %434 = bitcast float* %433 to i32*
  %435 = load i32, i32* %434, align 4
  %436 = getelementptr inbounds float, float* %3, i64 %431
  %437 = bitcast float* %436 to i32*
  store i32 %435, i32* %437, align 4
  %438 = add i64 %431, %395
  %439 = or i64 %430, 1
  %440 = getelementptr inbounds float, float* %408, i64 %439
  %441 = bitcast float* %440 to i32*
  %442 = load i32, i32* %441, align 4
  %443 = getelementptr inbounds float, float* %3, i64 %438
  %444 = bitcast float* %443 to i32*
  store i32 %442, i32* %444, align 4
  %445 = add i64 %438, %395
  %446 = or i64 %430, 2
  %447 = getelementptr inbounds float, float* %408, i64 %446
  %448 = bitcast float* %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = getelementptr inbounds float, float* %3, i64 %445
  %451 = bitcast float* %450 to i32*
  store i32 %449, i32* %451, align 4
  %452 = add i64 %445, %395
  %453 = or i64 %430, 3
  %454 = getelementptr inbounds float, float* %408, i64 %453
  %455 = bitcast float* %454 to i32*
  %456 = load i32, i32* %455, align 4
  %457 = getelementptr inbounds float, float* %3, i64 %452
  %458 = bitcast float* %457 to i32*
  store i32 %456, i32* %458, align 4
  %459 = add i64 %452, %395
  %460 = add i64 %430, 4
  %461 = add i64 %432, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %410, label %429

; <label>:463:                                    ; preds = %426
  %464 = load i64, i64* %8, align 8
  br label %465

; <label>:465:                                    ; preds = %463, %388
  %466 = phi i64 [ %464, %463 ], [ 0, %388 ]
  %467 = mul i64 %466, %391
  br i1 %390, label %469, label %468

; <label>:468:                                    ; preds = %465
  call void @_ZdlPv(i8* %397) #7
  br label %469

; <label>:469:                                    ; preds = %465, %468
  store i64 0, i64* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %392) #8
  %470 = load i64, i64* %23, align 8
  %471 = and i64 %470, 1
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %476, label %473

; <label>:473:                                    ; preds = %469
  %474 = bitcast %"struct.std::__1::aligned_storage<8, 8>::type"* %49 to i8**
  %475 = load i8*, i8** %474, align 8
  call void @_ZdlPv(i8* %475) #7
  br label %476

; <label>:476:                                    ; preds = %469, %473
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #8
  br label %694

; <label>:477:                                    ; preds = %690, %359
  %478 = phi i64 [ 0, %359 ], [ %693, %690 ]
  %479 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %345, %359 ], [ %691, %690 ]
  %480 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %479, i64 0, i32 2, i32 0, i32 0
  %481 = bitcast float** %480 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = lshr i64 %478, 1
  %484 = and i64 %478, 1
  %485 = icmp eq i64 %484, 0
  %486 = load i64, i64* %361, align 8
  %487 = select i1 %485, i64 8, i64 %486
  %488 = icmp eq i64 %483, %487
  br i1 %488, label %489, label %681, !prof !15

; <label>:489:                                    ; preds = %477
  br i1 %485, label %494, label %490

; <label>:490:                                    ; preds = %489
  %491 = shl i64 %486, 1
  %492 = icmp ugt i64 %491, 2305843009213693951
  br i1 %492, label %493, label %494

; <label>:493:                                    ; preds = %490
  call void @abort() #9
  unreachable

; <label>:494:                                    ; preds = %490, %489
  %495 = phi i64 [ %491, %490 ], [ 16, %489 ]
  %496 = shl i64 %495, 3
  %497 = call i8* @_Znwm(i64 %496) #7
  %498 = bitcast i8* %497 to float**
  %499 = getelementptr inbounds float*, float** %498, i64 %483
  %500 = bitcast float** %499 to i64*
  store i64 %482, i64* %500, align 8
  %501 = load float**, float*** %365, align 8
  %502 = select i1 %485, float** %363, float** %501
  %503 = bitcast float** %502 to i8*
  %504 = getelementptr inbounds float*, float** %502, i64 %483
  %505 = icmp eq i64 %483, 0
  br i1 %505, label %675, label %506

; <label>:506:                                    ; preds = %494
  %507 = shl i64 %483, 3
  %508 = add i64 %507, -8
  %509 = lshr exact i64 %508, 3
  %510 = add nuw nsw i64 %509, 1
  %511 = icmp ult i64 %510, 4
  br i1 %511, label %604, label %512

; <label>:512:                                    ; preds = %506
  %513 = shl i64 %483, 3
  %514 = add i64 %513, -8
  %515 = lshr exact i64 %514, 3
  %516 = getelementptr i8, i8* %497, i64 %513
  %517 = getelementptr float*, float** %502, i64 1
  %518 = getelementptr float*, float** %517, i64 %515
  %519 = bitcast float** %518 to i8*
  %520 = icmp ult i8* %497, %519
  %521 = icmp ugt i8* %516, %503
  %522 = and i1 %520, %521
  br i1 %522, label %604, label %523

; <label>:523:                                    ; preds = %512
  %524 = and i64 %510, 4611686018427387900
  %525 = getelementptr float*, float** %498, i64 %524
  %526 = getelementptr float*, float** %502, i64 %524
  %527 = add nsw i64 %524, -4
  %528 = lshr exact i64 %527, 2
  %529 = add nuw nsw i64 %528, 1
  %530 = and i64 %529, 3
  %531 = icmp ult i64 %527, 12
  br i1 %531, label %583, label %532

; <label>:532:                                    ; preds = %523
  %533 = sub nsw i64 %529, %530
  br label %534

; <label>:534:                                    ; preds = %534, %532
  %535 = phi i64 [ 0, %532 ], [ %580, %534 ]
  %536 = phi i64 [ %533, %532 ], [ %581, %534 ]
  %537 = getelementptr float*, float** %498, i64 %535
  %538 = getelementptr float*, float** %502, i64 %535
  %539 = bitcast float** %538 to <2 x i64>*
  %540 = load <2 x i64>, <2 x i64>* %539, align 8, !alias.scope !56
  %541 = getelementptr float*, float** %538, i64 2
  %542 = bitcast float** %541 to <2 x i64>*
  %543 = load <2 x i64>, <2 x i64>* %542, align 8, !alias.scope !56
  %544 = bitcast float** %537 to <2 x i64>*
  store <2 x i64> %540, <2 x i64>* %544, align 8, !alias.scope !59, !noalias !56
  %545 = getelementptr float*, float** %537, i64 2
  %546 = bitcast float** %545 to <2 x i64>*
  store <2 x i64> %543, <2 x i64>* %546, align 8, !alias.scope !59, !noalias !56
  %547 = or i64 %535, 4
  %548 = getelementptr float*, float** %498, i64 %547
  %549 = getelementptr float*, float** %502, i64 %547
  %550 = bitcast float** %549 to <2 x i64>*
  %551 = load <2 x i64>, <2 x i64>* %550, align 8, !alias.scope !56
  %552 = getelementptr float*, float** %549, i64 2
  %553 = bitcast float** %552 to <2 x i64>*
  %554 = load <2 x i64>, <2 x i64>* %553, align 8, !alias.scope !56
  %555 = bitcast float** %548 to <2 x i64>*
  store <2 x i64> %551, <2 x i64>* %555, align 8, !alias.scope !59, !noalias !56
  %556 = getelementptr float*, float** %548, i64 2
  %557 = bitcast float** %556 to <2 x i64>*
  store <2 x i64> %554, <2 x i64>* %557, align 8, !alias.scope !59, !noalias !56
  %558 = or i64 %535, 8
  %559 = getelementptr float*, float** %498, i64 %558
  %560 = getelementptr float*, float** %502, i64 %558
  %561 = bitcast float** %560 to <2 x i64>*
  %562 = load <2 x i64>, <2 x i64>* %561, align 8, !alias.scope !56
  %563 = getelementptr float*, float** %560, i64 2
  %564 = bitcast float** %563 to <2 x i64>*
  %565 = load <2 x i64>, <2 x i64>* %564, align 8, !alias.scope !56
  %566 = bitcast float** %559 to <2 x i64>*
  store <2 x i64> %562, <2 x i64>* %566, align 8, !alias.scope !59, !noalias !56
  %567 = getelementptr float*, float** %559, i64 2
  %568 = bitcast float** %567 to <2 x i64>*
  store <2 x i64> %565, <2 x i64>* %568, align 8, !alias.scope !59, !noalias !56
  %569 = or i64 %535, 12
  %570 = getelementptr float*, float** %498, i64 %569
  %571 = getelementptr float*, float** %502, i64 %569
  %572 = bitcast float** %571 to <2 x i64>*
  %573 = load <2 x i64>, <2 x i64>* %572, align 8, !alias.scope !56
  %574 = getelementptr float*, float** %571, i64 2
  %575 = bitcast float** %574 to <2 x i64>*
  %576 = load <2 x i64>, <2 x i64>* %575, align 8, !alias.scope !56
  %577 = bitcast float** %570 to <2 x i64>*
  store <2 x i64> %573, <2 x i64>* %577, align 8, !alias.scope !59, !noalias !56
  %578 = getelementptr float*, float** %570, i64 2
  %579 = bitcast float** %578 to <2 x i64>*
  store <2 x i64> %576, <2 x i64>* %579, align 8, !alias.scope !59, !noalias !56
  %580 = add i64 %535, 16
  %581 = add i64 %536, -4
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %583, label %534, !llvm.loop !61

; <label>:583:                                    ; preds = %534, %523
  %584 = phi i64 [ 0, %523 ], [ %580, %534 ]
  %585 = icmp eq i64 %530, 0
  br i1 %585, label %602, label %586

; <label>:586:                                    ; preds = %583, %586
  %587 = phi i64 [ %599, %586 ], [ %584, %583 ]
  %588 = phi i64 [ %600, %586 ], [ %530, %583 ]
  %589 = getelementptr float*, float** %498, i64 %587
  %590 = getelementptr float*, float** %502, i64 %587
  %591 = bitcast float** %590 to <2 x i64>*
  %592 = load <2 x i64>, <2 x i64>* %591, align 8, !alias.scope !56
  %593 = getelementptr float*, float** %590, i64 2
  %594 = bitcast float** %593 to <2 x i64>*
  %595 = load <2 x i64>, <2 x i64>* %594, align 8, !alias.scope !56
  %596 = bitcast float** %589 to <2 x i64>*
  store <2 x i64> %592, <2 x i64>* %596, align 8, !alias.scope !59, !noalias !56
  %597 = getelementptr float*, float** %589, i64 2
  %598 = bitcast float** %597 to <2 x i64>*
  store <2 x i64> %595, <2 x i64>* %598, align 8, !alias.scope !59, !noalias !56
  %599 = add i64 %587, 4
  %600 = add i64 %588, -1
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %602, label %586, !llvm.loop !62

; <label>:602:                                    ; preds = %586, %583
  %603 = icmp eq i64 %510, %524
  br i1 %603, label %675, label %604

; <label>:604:                                    ; preds = %602, %512, %506
  %605 = phi float** [ %498, %512 ], [ %498, %506 ], [ %525, %602 ]
  %606 = phi float** [ %502, %512 ], [ %502, %506 ], [ %526, %602 ]
  %607 = ptrtoint float** %606 to i64
  %608 = getelementptr float*, float** %502, i64 -1
  %609 = getelementptr float*, float** %608, i64 %483
  %610 = ptrtoint float** %609 to i64
  %611 = sub i64 %610, %607
  %612 = lshr i64 %611, 3
  %613 = add nuw nsw i64 %612, 1
  %614 = and i64 %613, 7
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %627, label %616

; <label>:616:                                    ; preds = %604, %616
  %617 = phi float** [ %623, %616 ], [ %605, %604 ]
  %618 = phi float** [ %624, %616 ], [ %606, %604 ]
  %619 = phi i64 [ %625, %616 ], [ %614, %604 ]
  %620 = bitcast float** %618 to i64*
  %621 = load i64, i64* %620, align 8
  %622 = bitcast float** %617 to i64*
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds float*, float** %617, i64 1
  %624 = getelementptr inbounds float*, float** %618, i64 1
  %625 = add i64 %619, -1
  %626 = icmp eq i64 %625, 0
  br i1 %626, label %627, label %616, !llvm.loop !63

; <label>:627:                                    ; preds = %616, %604
  %628 = phi float** [ %605, %604 ], [ %623, %616 ]
  %629 = phi float** [ %606, %604 ], [ %624, %616 ]
  %630 = icmp ult i64 %611, 56
  br i1 %630, label %675, label %631

; <label>:631:                                    ; preds = %627, %631
  %632 = phi float** [ %672, %631 ], [ %628, %627 ]
  %633 = phi float** [ %673, %631 ], [ %629, %627 ]
  %634 = bitcast float** %633 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = bitcast float** %632 to i64*
  store i64 %635, i64* %636, align 8
  %637 = getelementptr inbounds float*, float** %632, i64 1
  %638 = getelementptr inbounds float*, float** %633, i64 1
  %639 = bitcast float** %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = bitcast float** %637 to i64*
  store i64 %640, i64* %641, align 8
  %642 = getelementptr inbounds float*, float** %632, i64 2
  %643 = getelementptr inbounds float*, float** %633, i64 2
  %644 = bitcast float** %643 to i64*
  %645 = load i64, i64* %644, align 8
  %646 = bitcast float** %642 to i64*
  store i64 %645, i64* %646, align 8
  %647 = getelementptr inbounds float*, float** %632, i64 3
  %648 = getelementptr inbounds float*, float** %633, i64 3
  %649 = bitcast float** %648 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = bitcast float** %647 to i64*
  store i64 %650, i64* %651, align 8
  %652 = getelementptr inbounds float*, float** %632, i64 4
  %653 = getelementptr inbounds float*, float** %633, i64 4
  %654 = bitcast float** %653 to i64*
  %655 = load i64, i64* %654, align 8
  %656 = bitcast float** %652 to i64*
  store i64 %655, i64* %656, align 8
  %657 = getelementptr inbounds float*, float** %632, i64 5
  %658 = getelementptr inbounds float*, float** %633, i64 5
  %659 = bitcast float** %658 to i64*
  %660 = load i64, i64* %659, align 8
  %661 = bitcast float** %657 to i64*
  store i64 %660, i64* %661, align 8
  %662 = getelementptr inbounds float*, float** %632, i64 6
  %663 = getelementptr inbounds float*, float** %633, i64 6
  %664 = bitcast float** %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = bitcast float** %662 to i64*
  store i64 %665, i64* %666, align 8
  %667 = getelementptr inbounds float*, float** %632, i64 7
  %668 = getelementptr inbounds float*, float** %633, i64 7
  %669 = bitcast float** %668 to i64*
  %670 = load i64, i64* %669, align 8
  %671 = bitcast float** %667 to i64*
  store i64 %670, i64* %671, align 8
  %672 = getelementptr inbounds float*, float** %632, i64 8
  %673 = getelementptr inbounds float*, float** %633, i64 8
  %674 = icmp eq float** %673, %504
  br i1 %674, label %675, label %631, !llvm.loop !64

; <label>:675:                                    ; preds = %627, %631, %602, %494
  br i1 %485, label %678, label %676

; <label>:676:                                    ; preds = %675
  %677 = load i8*, i8** %366, align 8
  call void @_ZdlPv(i8* %677) #7
  br label %678

; <label>:678:                                    ; preds = %675, %676
  store i64 %495, i64* %361, align 8
  store i8* %497, i8** %366, align 8
  %679 = add i64 %478, 2
  %680 = or i64 %679, 1
  store i64 %680, i64* %348, align 8
  br label %690

; <label>:681:                                    ; preds = %477
  %682 = add i64 %478, 2
  %683 = and i64 %682, -2
  %684 = or i64 %682, 1
  %685 = load float**, float*** %365, align 8
  %686 = select i1 %485, i64 %683, i64 %684
  %687 = select i1 %485, float** %363, float** %685
  store i64 %686, i64* %348, align 8
  %688 = getelementptr inbounds float*, float** %687, i64 %483
  %689 = bitcast float** %688 to i64*
  store i64 %482, i64* %689, align 8
  br label %690

; <label>:690:                                    ; preds = %678, %681
  %691 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %479, i64 1
  %692 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %691, %346
  %693 = load i64, i64* %348, align 8
  br i1 %692, label %378, label %477

; <label>:694:                                    ; preds = %476, %14
  %695 = phi i64 [ %2, %14 ], [ %467, %476 ]
  %696 = trunc i64 %695 to i32
  ret i32 %696
}

declare i64 @_ZN6webrtc17PushSincResampler8ResampleEPKfmPfm(%"class.webrtc::PushSincResampler"*, float*, i64, float*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc13PushResamplerIsE16ChannelResamplerENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

; <label>:21:                                     ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

; <label>:26:                                     ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #7
  %30 = bitcast i8* %29 to %"struct.webrtc::PushResampler<short>::ChannelResampler"*
  br label %31

; <label>:31:                                     ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %32
  %36 = ptrtoint %"struct.webrtc::PushResampler<short>::ChannelResampler"* %35 to i64
  %37 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %37, align 8
  %40 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9, i32 1
  %42 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9, i32 1, i32 0, i32 1
  %44 = bitcast i16** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #8
  %45 = bitcast %"class.std::__1::vector.19"* %42 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8
  %47 = bitcast %"class.std::__1::vector.19"* %41 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast i16** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9, i32 1, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast i16** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.19"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #8
  %54 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9, i32 2
  %55 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %1, i64 0, i32 2
  %56 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9, i32 2, i32 0, i32 1
  %57 = bitcast i16** %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #8
  %58 = bitcast %"class.std::__1::vector.19"* %55 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %"class.std::__1::vector.19"* %54 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast i16** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %33, i64 %9, i32 2, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast i16** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.std::__1::vector.19"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #8
  %67 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %34, i64 1
  %68 = ptrtoint %"struct.webrtc::PushResampler<short>::ChannelResampler"* %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %70 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %69, align 8
  %71 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %3, align 8
  %72 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %71, %70
  br i1 %72, label %73, label %75

; <label>:73:                                     ; preds = %31
  %74 = ptrtoint %"struct.webrtc::PushResampler<short>::ChannelResampler"* %70 to i64
  br label %122

; <label>:75:                                     ; preds = %31, %75
  %76 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %78, %75 ], [ %34, %31 ]
  %77 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %79, %75 ], [ %71, %31 ]
  %78 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1
  %79 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %80, align 8
  %83 = bitcast %"struct.webrtc::PushResampler<short>::ChannelResampler"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1, i32 1
  %86 = bitcast %"class.std::__1::vector.19"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #8
  %87 = bitcast %"class.std::__1::vector.19"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.19"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1, i32 1, i32 0, i32 1
  %91 = bitcast i16** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1, i32 1, i32 0, i32 1
  %94 = bitcast i16** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast i16** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast i16** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.std::__1::vector.19"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 24, i1 false) #8
  %101 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1, i32 2
  %102 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1, i32 2
  %103 = bitcast %"class.std::__1::vector.19"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 24, i1 false) #8
  %104 = bitcast %"class.std::__1::vector.19"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.19"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1, i32 2, i32 0, i32 1
  %108 = bitcast i16** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1, i32 2, i32 0, i32 1
  %111 = bitcast i16** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %77, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i16** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %76, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast i16** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"class.std::__1::vector.19"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 24, i1 false) #8
  %118 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %79, %70
  br i1 %118, label %119, label %75

; <label>:119:                                    ; preds = %75
  %120 = load i64, i64* %6, align 8
  %121 = load %"struct.webrtc::PushResampler<short>::ChannelResampler"*, %"struct.webrtc::PushResampler<short>::ChannelResampler"** %3, align 8
  br label %122

; <label>:122:                                    ; preds = %73, %119
  %123 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %70, %73 ], [ %121, %119 ]
  %124 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %34, %73 ], [ %78, %119 ]
  %125 = phi i64 [ %74, %73 ], [ %120, %119 ]
  %126 = ptrtoint %"struct.webrtc::PushResampler<short>::ChannelResampler"* %124 to i64
  store i64 %126, i64* %6, align 8
  store i64 %68, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %127 = inttoptr i64 %125 to %"struct.webrtc::PushResampler<short>::ChannelResampler"*
  %128 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %123, %127
  br i1 %128, label %160, label %129

; <label>:129:                                    ; preds = %122, %158
  %130 = phi %"struct.webrtc::PushResampler<short>::ChannelResampler"* [ %131, %158 ], [ %123, %122 ]
  %131 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %130, i64 -1
  %132 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %130, i64 -1, i32 2, i32 0, i32 0
  %133 = load i16*, i16** %132, align 8
  %134 = icmp eq i16* %133, null
  br i1 %134, label %140, label %135

; <label>:135:                                    ; preds = %129
  %136 = ptrtoint i16* %133 to i64
  %137 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %130, i64 -1, i32 2, i32 0, i32 1
  %138 = bitcast i16** %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = bitcast i16* %133 to i8*
  tail call void @_ZdlPv(i8* %139) #7
  br label %140

; <label>:140:                                    ; preds = %135, %129
  %141 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %130, i64 -1, i32 1, i32 0, i32 0
  %142 = load i16*, i16** %141, align 8
  %143 = icmp eq i16* %142, null
  br i1 %143, label %149, label %144

; <label>:144:                                    ; preds = %140
  %145 = ptrtoint i16* %142 to i64
  %146 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %130, i64 -1, i32 1, i32 0, i32 1
  %147 = bitcast i16** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = bitcast i16* %142 to i8*
  tail call void @_ZdlPv(i8* %148) #7
  br label %149

; <label>:149:                                    ; preds = %144, %140
  %150 = getelementptr inbounds %"struct.webrtc::PushResampler<short>::ChannelResampler", %"struct.webrtc::PushResampler<short>::ChannelResampler"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %150, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %150, align 8
  %152 = icmp eq %"class.webrtc::PushSincResampler"* %151, null
  br i1 %152, label %158, label %153

; <label>:153:                                    ; preds = %149
  %154 = bitcast %"class.webrtc::PushSincResampler"* %151 to void (%"class.webrtc::PushSincResampler"*)***
  %155 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %155, i64 1
  %157 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %156, align 8
  tail call void %157(%"class.webrtc::PushSincResampler"* nonnull %151) #8
  br label %158

; <label>:158:                                    ; preds = %153, %149
  %159 = icmp eq %"struct.webrtc::PushResampler<short>::ChannelResampler"* %131, %127
  br i1 %159, label %160, label %129

; <label>:160:                                    ; preds = %158, %122
  %161 = icmp eq i64 %125, 0
  br i1 %161, label %164, label %162

; <label>:162:                                    ; preds = %160
  %163 = inttoptr i64 %125 to i8*
  tail call void @_ZdlPv(i8* %163) #7
  br label %164

; <label>:164:                                    ; preds = %160, %162
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN6webrtc17PushSincResamplerC1Emm(%"class.webrtc::PushSincResampler"*, i64, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIsNS_9allocatorIsEEE8__appendEm(%"class.std::__1::vector.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.19", %"class.std::__1::vector.19"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %43, label %12

; <label>:12:                                     ; preds = %2
  %13 = inttoptr i64 %8 to i16*
  %14 = add i64 %1, -1
  %15 = and i64 %1, 3
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %26, label %17

; <label>:17:                                     ; preds = %12, %17
  %18 = phi i16* [ %22, %17 ], [ %13, %12 ]
  %19 = phi i64 [ %23, %17 ], [ %1, %12 ]
  %20 = phi i64 [ %24, %17 ], [ %15, %12 ]
  store i16 0, i16* %18, align 2
  %21 = load i16*, i16** %6, align 8
  %22 = getelementptr inbounds i16, i16* %21, i64 1
  store i16* %22, i16** %6, align 8
  %23 = add i64 %19, -1
  %24 = add i64 %20, -1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %17, !llvm.loop !65

; <label>:26:                                     ; preds = %17, %12
  %27 = phi i16* [ %13, %12 ], [ %22, %17 ]
  %28 = phi i64 [ %1, %12 ], [ %23, %17 ]
  %29 = icmp ult i64 %14, 3
  br i1 %29, label %85, label %30

; <label>:30:                                     ; preds = %26, %30
  %31 = phi i16* [ %40, %30 ], [ %27, %26 ]
  %32 = phi i64 [ %41, %30 ], [ %28, %26 ]
  store i16 0, i16* %31, align 2
  %33 = load i16*, i16** %6, align 8
  %34 = getelementptr inbounds i16, i16* %33, i64 1
  store i16* %34, i16** %6, align 8
  store i16 0, i16* %34, align 2
  %35 = load i16*, i16** %6, align 8
  %36 = getelementptr inbounds i16, i16* %35, i64 1
  store i16* %36, i16** %6, align 8
  store i16 0, i16* %36, align 2
  %37 = load i16*, i16** %6, align 8
  %38 = getelementptr inbounds i16, i16* %37, i64 1
  store i16* %38, i16** %6, align 8
  store i16 0, i16* %38, align 2
  %39 = load i16*, i16** %6, align 8
  %40 = getelementptr inbounds i16, i16* %39, i64 1
  store i16* %40, i16** %6, align 8
  %41 = add i64 %32, -4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %85, label %30

; <label>:43:                                     ; preds = %2
  %44 = bitcast %"class.std::__1::vector.19"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %8, %45
  %47 = ashr exact i64 %46, 1
  %48 = add i64 %47, %1
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %43
  %51 = bitcast %"class.std::__1::vector.19"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #9
  unreachable

; <label>:52:                                     ; preds = %43
  %53 = sub i64 %5, %45
  %54 = ashr exact i64 %53, 1
  %55 = icmp ult i64 %54, 4611686018427387903
  %56 = icmp ult i64 %53, %48
  %57 = select i1 %56, i64 %48, i64 %53
  %58 = select i1 %55, i64 %57, i64 9223372036854775807
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %67, label %60

; <label>:60:                                     ; preds = %52
  %61 = icmp slt i64 %58, 0
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %60
  tail call void @abort() #9
  unreachable

; <label>:63:                                     ; preds = %60
  %64 = shl i64 %58, 1
  %65 = tail call i8* @_Znwm(i64 %64) #7
  %66 = bitcast i8* %65 to i16*
  br label %67

; <label>:67:                                     ; preds = %52, %63
  %68 = phi i8* [ %65, %63 ], [ null, %52 ]
  %69 = phi i16* [ %66, %63 ], [ null, %52 ]
  %70 = getelementptr inbounds i16, i16* %69, i64 %47
  %71 = bitcast i16* %70 to i8*
  %72 = getelementptr inbounds i16, i16* %69, i64 %58
  %73 = shl i64 %1, 1
  call void @llvm.memset.p0i8.i64(i8* align 2 %71, i8 0, i64 %73, i1 false)
  %74 = ptrtoint i16* %72 to i64
  %75 = getelementptr i16, i16* %69, i64 %48
  %76 = ptrtoint i16* %75 to i64
  %77 = ptrtoint i16* %69 to i64
  %78 = icmp sgt i64 %46, 0
  br i1 %78, label %79, label %81

; <label>:79:                                     ; preds = %67
  %80 = inttoptr i64 %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %68, i8* align 2 %80, i64 %46, i1 false) #8
  br label %81

; <label>:81:                                     ; preds = %67, %79
  store i64 %77, i64* %44, align 8
  store i64 %76, i64* %7, align 8
  store i64 %74, i64* %4, align 8
  %82 = icmp eq i64 %45, 0
  br i1 %82, label %85, label %83

; <label>:83:                                     ; preds = %81
  %84 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %84) #7
  br label %85

; <label>:85:                                     ; preds = %26, %30, %83, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc13PushResamplerIfE16ChannelResamplerENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.29"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 329406144173384850
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #9
  unreachable

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 56
  %20 = icmp ult i64 %19, 164703072086692425
  br i1 %20, label %21, label %26

; <label>:21:                                     ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

; <label>:26:                                     ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 329406144173384850, %14 ]
  %28 = mul i64 %27, 56
  %29 = tail call i8* @_Znwm(i64 %28) #7
  %30 = bitcast i8* %29 to %"struct.webrtc::PushResampler<float>::ChannelResampler"*
  br label %31

; <label>:31:                                     ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %32
  %36 = ptrtoint %"struct.webrtc::PushResampler<float>::ChannelResampler"* %35 to i64
  %37 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %37, align 8
  %40 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9, i32 1
  %42 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %1, i64 0, i32 1
  %43 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9, i32 1, i32 0, i32 1
  %44 = bitcast float** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #8
  %45 = bitcast %"class.std::__1::vector.36"* %42 to <2 x i64>*
  %46 = load <2 x i64>, <2 x i64>* %45, align 8
  %47 = bitcast %"class.std::__1::vector.36"* %41 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %47, align 8
  %48 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast float** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9, i32 1, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast float** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.36"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #8
  %54 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9, i32 2
  %55 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %1, i64 0, i32 2
  %56 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9, i32 2, i32 0, i32 1
  %57 = bitcast float** %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 16, i1 false) #8
  %58 = bitcast %"class.std::__1::vector.36"* %55 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %"class.std::__1::vector.36"* %54 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %62 = bitcast float** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %33, i64 %9, i32 2, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast float** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = bitcast %"class.std::__1::vector.36"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #8
  %67 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %34, i64 1
  %68 = ptrtoint %"struct.webrtc::PushResampler<float>::ChannelResampler"* %67 to i64
  %69 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %70 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %69, align 8
  %71 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %3, align 8
  %72 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %71, %70
  br i1 %72, label %73, label %75

; <label>:73:                                     ; preds = %31
  %74 = ptrtoint %"struct.webrtc::PushResampler<float>::ChannelResampler"* %70 to i64
  br label %122

; <label>:75:                                     ; preds = %31, %75
  %76 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %78, %75 ], [ %34, %31 ]
  %77 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %79, %75 ], [ %71, %31 ]
  %78 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1
  %79 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1
  %80 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %79, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %80, align 8
  %83 = bitcast %"struct.webrtc::PushResampler<float>::ChannelResampler"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1, i32 1
  %86 = bitcast %"class.std::__1::vector.36"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #8
  %87 = bitcast %"class.std::__1::vector.36"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.36"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1, i32 1, i32 0, i32 1
  %91 = bitcast float** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1, i32 1, i32 0, i32 1
  %94 = bitcast float** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast float** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1, i32 1, i32 0, i32 2, i32 0, i32 0
  %99 = bitcast float** %98 to i64*
  store i64 %97, i64* %99, align 8
  %100 = bitcast %"class.std::__1::vector.36"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 24, i1 false) #8
  %101 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1, i32 2
  %102 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1, i32 2
  %103 = bitcast %"class.std::__1::vector.36"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 0, i64 24, i1 false) #8
  %104 = bitcast %"class.std::__1::vector.36"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.36"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1, i32 2, i32 0, i32 1
  %108 = bitcast float** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1, i32 2, i32 0, i32 1
  %111 = bitcast float** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %77, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast float** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %76, i64 -1, i32 2, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast float** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"class.std::__1::vector.36"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 24, i1 false) #8
  %118 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %79, %70
  br i1 %118, label %119, label %75

; <label>:119:                                    ; preds = %75
  %120 = load i64, i64* %6, align 8
  %121 = load %"struct.webrtc::PushResampler<float>::ChannelResampler"*, %"struct.webrtc::PushResampler<float>::ChannelResampler"** %3, align 8
  br label %122

; <label>:122:                                    ; preds = %73, %119
  %123 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %70, %73 ], [ %121, %119 ]
  %124 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %34, %73 ], [ %78, %119 ]
  %125 = phi i64 [ %74, %73 ], [ %120, %119 ]
  %126 = ptrtoint %"struct.webrtc::PushResampler<float>::ChannelResampler"* %124 to i64
  store i64 %126, i64* %6, align 8
  store i64 %68, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %127 = inttoptr i64 %125 to %"struct.webrtc::PushResampler<float>::ChannelResampler"*
  %128 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %123, %127
  br i1 %128, label %160, label %129

; <label>:129:                                    ; preds = %122, %158
  %130 = phi %"struct.webrtc::PushResampler<float>::ChannelResampler"* [ %131, %158 ], [ %123, %122 ]
  %131 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %130, i64 -1
  %132 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %130, i64 -1, i32 2, i32 0, i32 0
  %133 = load float*, float** %132, align 8
  %134 = icmp eq float* %133, null
  br i1 %134, label %140, label %135

; <label>:135:                                    ; preds = %129
  %136 = ptrtoint float* %133 to i64
  %137 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %130, i64 -1, i32 2, i32 0, i32 1
  %138 = bitcast float** %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = bitcast float* %133 to i8*
  tail call void @_ZdlPv(i8* %139) #7
  br label %140

; <label>:140:                                    ; preds = %135, %129
  %141 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %130, i64 -1, i32 1, i32 0, i32 0
  %142 = load float*, float** %141, align 8
  %143 = icmp eq float* %142, null
  br i1 %143, label %149, label %144

; <label>:144:                                    ; preds = %140
  %145 = ptrtoint float* %142 to i64
  %146 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %130, i64 -1, i32 1, i32 0, i32 1
  %147 = bitcast float** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = bitcast float* %142 to i8*
  tail call void @_ZdlPv(i8* %148) #7
  br label %149

; <label>:149:                                    ; preds = %144, %140
  %150 = getelementptr inbounds %"struct.webrtc::PushResampler<float>::ChannelResampler", %"struct.webrtc::PushResampler<float>::ChannelResampler"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"class.webrtc::PushSincResampler"*, %"class.webrtc::PushSincResampler"** %150, align 8
  store %"class.webrtc::PushSincResampler"* null, %"class.webrtc::PushSincResampler"** %150, align 8
  %152 = icmp eq %"class.webrtc::PushSincResampler"* %151, null
  br i1 %152, label %158, label %153

; <label>:153:                                    ; preds = %149
  %154 = bitcast %"class.webrtc::PushSincResampler"* %151 to void (%"class.webrtc::PushSincResampler"*)***
  %155 = load void (%"class.webrtc::PushSincResampler"*)**, void (%"class.webrtc::PushSincResampler"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %155, i64 1
  %157 = load void (%"class.webrtc::PushSincResampler"*)*, void (%"class.webrtc::PushSincResampler"*)** %156, align 8
  tail call void %157(%"class.webrtc::PushSincResampler"* nonnull %151) #8
  br label %158

; <label>:158:                                    ; preds = %153, %149
  %159 = icmp eq %"struct.webrtc::PushResampler<float>::ChannelResampler"* %131, %127
  br i1 %159, label %160, label %129

; <label>:160:                                    ; preds = %158, %122
  %161 = icmp eq i64 %125, 0
  br i1 %161, label %164, label %162

; <label>:162:                                    ; preds = %160
  %163 = inttoptr i64 %125 to i8*
  tail call void @_ZdlPv(i8* %163) #7
  br label %164

; <label>:164:                                    ; preds = %160, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.36"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %43, label %12

; <label>:12:                                     ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = add i64 %1, -1
  %15 = and i64 %1, 3
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %26, label %17

; <label>:17:                                     ; preds = %12, %17
  %18 = phi float* [ %22, %17 ], [ %13, %12 ]
  %19 = phi i64 [ %23, %17 ], [ %1, %12 ]
  %20 = phi i64 [ %24, %17 ], [ %15, %12 ]
  store float 0.000000e+00, float* %18, align 4
  %21 = load float*, float** %6, align 8
  %22 = getelementptr inbounds float, float* %21, i64 1
  store float* %22, float** %6, align 8
  %23 = add i64 %19, -1
  %24 = add i64 %20, -1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %17, !llvm.loop !66

; <label>:26:                                     ; preds = %17, %12
  %27 = phi float* [ %13, %12 ], [ %22, %17 ]
  %28 = phi i64 [ %1, %12 ], [ %23, %17 ]
  %29 = icmp ult i64 %14, 3
  br i1 %29, label %88, label %30

; <label>:30:                                     ; preds = %26, %30
  %31 = phi float* [ %40, %30 ], [ %27, %26 ]
  %32 = phi i64 [ %41, %30 ], [ %28, %26 ]
  store float 0.000000e+00, float* %31, align 4
  %33 = load float*, float** %6, align 8
  %34 = getelementptr inbounds float, float* %33, i64 1
  store float* %34, float** %6, align 8
  store float 0.000000e+00, float* %34, align 4
  %35 = load float*, float** %6, align 8
  %36 = getelementptr inbounds float, float* %35, i64 1
  store float* %36, float** %6, align 8
  store float 0.000000e+00, float* %36, align 4
  %37 = load float*, float** %6, align 8
  %38 = getelementptr inbounds float, float* %37, i64 1
  store float* %38, float** %6, align 8
  store float 0.000000e+00, float* %38, align 4
  %39 = load float*, float** %6, align 8
  %40 = getelementptr inbounds float, float* %39, i64 1
  store float* %40, float** %6, align 8
  %41 = add i64 %32, -4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %88, label %30

; <label>:43:                                     ; preds = %2
  %44 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %8, %45
  %47 = ashr exact i64 %46, 2
  %48 = add i64 %47, %1
  %49 = icmp ugt i64 %48, 4611686018427387903
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %43
  %51 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #9
  unreachable

; <label>:52:                                     ; preds = %43
  %53 = sub i64 %5, %45
  %54 = ashr exact i64 %53, 2
  %55 = icmp ult i64 %54, 2305843009213693951
  br i1 %55, label %56, label %64

; <label>:56:                                     ; preds = %52
  %57 = ashr exact i64 %53, 1
  %58 = icmp ult i64 %57, %48
  %59 = select i1 %58, i64 %48, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %69, label %61

; <label>:61:                                     ; preds = %56
  %62 = icmp ugt i64 %59, 4611686018427387903
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %61
  tail call void @abort() #9
  unreachable

; <label>:64:                                     ; preds = %52, %61
  %65 = phi i64 [ %59, %61 ], [ 4611686018427387903, %52 ]
  %66 = shl i64 %65, 2
  %67 = tail call i8* @_Znwm(i64 %66) #7
  %68 = bitcast i8* %67 to float*
  br label %69

; <label>:69:                                     ; preds = %56, %64
  %70 = phi i64 [ %65, %64 ], [ 0, %56 ]
  %71 = phi i8* [ %67, %64 ], [ null, %56 ]
  %72 = phi float* [ %68, %64 ], [ null, %56 ]
  %73 = getelementptr inbounds float, float* %72, i64 %47
  %74 = bitcast float* %73 to i8*
  %75 = getelementptr inbounds float, float* %72, i64 %70
  %76 = shl i64 %1, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 %76, i1 false)
  %77 = ptrtoint float* %75 to i64
  %78 = getelementptr float, float* %72, i64 %48
  %79 = ptrtoint float* %78 to i64
  %80 = ptrtoint float* %72 to i64
  %81 = icmp sgt i64 %46, 0
  br i1 %81, label %82, label %84

; <label>:82:                                     ; preds = %69
  %83 = inttoptr i64 %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %83, i64 %46, i1 false) #8
  br label %84

; <label>:84:                                     ; preds = %69, %82
  store i64 %80, i64* %44, align 8
  store i64 %79, i64* %7, align 8
  store i64 %77, i64* %4, align 8
  %85 = icmp eq i64 %45, 0
  br i1 %85, label %88, label %86

; <label>:86:                                     ; preds = %84
  %87 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %87) #7
  br label %88

; <label>:88:                                     ; preds = %26, %30, %86, %84
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__111make_uniqueIN6webrtc17PushSincResamplerEJRKmS4_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__111make_uniqueIN6webrtc17PushSincResamplerEJRKmS4_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = !{!8}
!8 = distinct !{!8, !9}
!9 = distinct !{!9, !"LVerDomain"}
!10 = !{!11}
!11 = distinct !{!11, !9}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.isvectorized", i32 1}
!14 = distinct !{!14, !13}
!15 = !{!"branch_weights", i32 1, i32 2000}
!16 = !{!17}
!17 = distinct !{!17, !18}
!18 = distinct !{!18, !"LVerDomain"}
!19 = !{!20}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !6}
!23 = distinct !{!23, !6}
!24 = distinct !{!24, !13}
!25 = distinct !{!25, !6}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !13}
!32 = distinct !{!32, !13}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !13}
!39 = distinct !{!39, !6}
!40 = distinct !{!40, !6}
!41 = distinct !{!41, !13}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__111make_uniqueIN6webrtc17PushSincResamplerEJRKmS4_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__111make_uniqueIN6webrtc17PushSincResamplerEJRKmS4_EEENS_11__unique_ifIT_E15__unique_singleEDpOT0_"}
!45 = distinct !{!45, !6}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !13}
!52 = distinct !{!52, !6}
!53 = distinct !{!53, !6}
!54 = distinct !{!54, !13}
!55 = distinct !{!55, !6}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !13}
!62 = distinct !{!62, !6}
!63 = distinct !{!63, !6}
!64 = distinct !{!64, !13}
!65 = distinct !{!65, !6}
!66 = distinct !{!66, !6}
