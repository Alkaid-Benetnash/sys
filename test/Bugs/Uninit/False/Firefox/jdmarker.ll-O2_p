; ModuleID = '/home/firefox/firefox/mozilla-unified/media/libjpeg/jdmarker.c'
source_filename = "/home/firefox/firefox/mozilla-unified/media/libjpeg/jdmarker.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.jpeg_decompress_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32, %struct.jpeg_source_mgr*, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8**, i32, i32, i32, i32, i32, [64 x i32]*, [4 x %struct.JQUANT_TBL*], [4 x %struct.JHUFF_TBL*], [4 x %struct.JHUFF_TBL*], i32, %struct.jpeg_component_info*, i32, i32, [16 x i8], [16 x i8], [16 x i8], i32, i32, i8, i8, i8, i16, i16, i32, i8, i32, %struct.jpeg_marker_struct*, i32, i32, i32, i32, i8*, i32, [4 x %struct.jpeg_component_info*], i32, i32, i32, [10 x i32], i32, i32, i32, i32, i32, %struct.jpeg_decomp_master*, %struct.jpeg_d_main_controller*, %struct.jpeg_d_coef_controller*, %struct.jpeg_d_post_controller*, %struct.jpeg_input_controller*, %struct.jpeg_marker_reader*, %struct.jpeg_entropy_decoder*, %struct.jpeg_inverse_dct*, %struct.jpeg_upsampler*, %struct.jpeg_color_deconverter*, %struct.jpeg_color_quantizer* }
%struct.jpeg_error_mgr = type { void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*, i8*)*, void (%struct.jpeg_common_struct*)*, i32, %union.anon, i32, i64, i8**, i32, i8**, i32, i32 }
%struct.jpeg_common_struct = type { %struct.jpeg_error_mgr*, %struct.jpeg_memory_mgr*, %struct.jpeg_progress_mgr*, i8*, i32, i32 }
%union.anon = type { [8 x i32], [48 x i8] }
%struct.jpeg_memory_mgr = type { i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)*, i8** (%struct.jpeg_common_struct*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, i32, i32, i32)*, %struct.jvirt_sarray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, %struct.jvirt_barray_control* (%struct.jpeg_common_struct*, i32, i32, i32, i32, i32)*, {}*, i8** (%struct.jpeg_common_struct*, %struct.jvirt_sarray_control*, i32, i32, i32)*, [64 x i16]** (%struct.jpeg_common_struct*, %struct.jvirt_barray_control*, i32, i32, i32)*, void (%struct.jpeg_common_struct*, i32)*, {}*, i64, i64 }
%struct.jvirt_sarray_control = type opaque
%struct.jvirt_barray_control = type opaque
%struct.jpeg_progress_mgr = type { {}*, i64, i64, i32, i32 }
%struct.jpeg_source_mgr = type { i8*, i64, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i64)*, {}*, void (%struct.jpeg_decompress_struct*)* }
%struct.JQUANT_TBL = type { [64 x i16], i32 }
%struct.JHUFF_TBL = type { [17 x i8], [256 x i8], i32 }
%struct.jpeg_component_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.JQUANT_TBL*, i8* }
%struct.jpeg_marker_struct = type { %struct.jpeg_marker_struct*, i8, i32, i32, i8* }
%struct.jpeg_decomp_master = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32, i32, [10 x i32], [10 x i32], i32 }
%struct.jpeg_d_main_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i32*, i32)* }
%struct.jpeg_d_coef_controller = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, i8***)*, %struct.jvirt_barray_control** }
%struct.jpeg_d_post_controller = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)* }
%struct.jpeg_input_controller = type { i32 (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)*, i32, i32 }
%struct.jpeg_marker_reader = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)*, i32, i32, i32, i32 }
%struct.jpeg_entropy_decoder = type { void (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*, [64 x i16]**)*, i32 }
%struct.jpeg_inverse_dct = type { void (%struct.jpeg_decompress_struct*)*, [10 x void (%struct.jpeg_decompress_struct*, %struct.jpeg_component_info*, i16*, i8**, i32)*] }
%struct.jpeg_upsampler = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32*, i32, i8**, i32*, i32)*, i32 }
%struct.jpeg_color_deconverter = type { void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*, i8***, i32, i8**, i32)* }
%struct.jpeg_color_quantizer = type { void (%struct.jpeg_decompress_struct*, i32)*, void (%struct.jpeg_decompress_struct*, i8**, i8**, i32)*, void (%struct.jpeg_decompress_struct*)*, void (%struct.jpeg_decompress_struct*)* }
%struct.my_marker_reader = type { %struct.jpeg_marker_reader, i32 (%struct.jpeg_decompress_struct*)*, [16 x i32 (%struct.jpeg_decompress_struct*)*], i32, [16 x i32], %struct.jpeg_marker_struct*, i32 }

@jpeg_natural_order = external hidden local_unnamed_addr constant [0 x i32], align 4

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @jpeg_resync_to_restart(%struct.jpeg_decompress_struct*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %6 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %6, i64 0, i32 5
  store i32 121, i32* %7, align 8
  %8 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %9 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %8, i64 0, i32 6, i32 0, i64 0
  store i32 %4, i32* %9, align 4
  %10 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %11 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %10, i64 0, i32 6, i32 0, i64 1
  store i32 %1, i32* %11, align 4
  %12 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %13 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %12, i64 0, i32 1
  %14 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %13, align 8
  %15 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %14(%struct.jpeg_common_struct* %15, i32 -1) #4
  %16 = add nsw i32 %1, 1
  %17 = and i32 %16, 7
  %18 = or i32 %17, 208
  %19 = add nsw i32 %1, 2
  %20 = and i32 %19, 7
  %21 = or i32 %20, 208
  %22 = add i32 %1, 7
  %23 = and i32 %22, 7
  %24 = or i32 %23, 208
  %25 = add i32 %1, 6
  %26 = and i32 %25, 7
  %27 = or i32 %26, 208
  br label %28

; <label>:28:                                     ; preds = %59, %2
  %29 = phi i32 [ %60, %59 ], [ %4, %2 ]
  %30 = icmp slt i32 %29, 192
  %31 = and i32 %29, -8
  %32 = icmp ne i32 %31, 208
  %33 = icmp eq i32 %29, %18
  %34 = or i1 %32, %33
  %35 = icmp eq i32 %29, %21
  %36 = or i1 %34, %35
  %37 = icmp eq i32 %29, %24
  %38 = icmp eq i32 %29, %27
  %39 = select i1 %38, i32 2, i32 1
  br label %40

; <label>:40:                                     ; preds = %28, %40
  %41 = or i1 %30, %36
  %42 = select i1 %30, i32 2, i32 3
  %43 = select i1 %37, i32 2, i32 %39
  %44 = select i1 %41, i32 %42, i32 %43
  %45 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %46 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %45, i64 0, i32 5
  store i32 97, i32* %46, align 8
  %47 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %48 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %47, i64 0, i32 6, i32 0, i64 0
  store i32 %29, i32* %48, align 4
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 6, i32 0, i64 1
  store i32 %44, i32* %50, align 4
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %5, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 1
  %53 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %52, align 8
  tail call void %53(%struct.jpeg_common_struct* %15, i32 4) #4
  %54 = trunc i32 %44 to i2
  switch i2 %54, label %40 [
    i2 1, label %55
    i2 -2, label %56
    i2 -1, label %61
  ]

; <label>:55:                                     ; preds = %40
  store i32 0, i32* %3, align 4
  br label %61

; <label>:56:                                     ; preds = %40
  %57 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* nonnull %0)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

; <label>:59:                                     ; preds = %56
  %60 = load i32, i32* %3, align 4
  br label %28

; <label>:61:                                     ; preds = %40, %56, %55
  %62 = phi i32 [ 1, %55 ], [ 1, %40 ], [ 0, %56 ]
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @next_marker(%struct.jpeg_decompress_struct*) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 3
  %9 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  br label %10

; <label>:10:                                     ; preds = %76, %1
  %11 = phi i8* [ %5, %1 ], [ %68, %76 ]
  %12 = phi i64 [ %7, %1 ], [ %67, %76 ]
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %21

; <label>:14:                                     ; preds = %10
  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %8, align 8
  %16 = tail call i32 %15(%struct.jpeg_decompress_struct* nonnull %0) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %100, label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %4, align 8
  %20 = load i64, i64* %6, align 8
  br label %21

; <label>:21:                                     ; preds = %18, %10
  %22 = phi i8* [ %19, %18 ], [ %11, %10 ]
  %23 = phi i64 [ %20, %18 ], [ %12, %10 ]
  %24 = load i8, i8* %22, align 1
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  %26 = add i64 %23, -1
  %27 = icmp eq i8 %24, -1
  br i1 %27, label %50, label %28

; <label>:28:                                     ; preds = %21, %43
  %29 = phi i64 [ %48, %43 ], [ %26, %21 ]
  %30 = phi i8* [ %47, %43 ], [ %25, %21 ]
  %31 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %32 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %31, i64 0, i32 6
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 4
  store i8* %30, i8** %4, align 8
  store i64 %29, i64* %6, align 8
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %36, label %43

; <label>:36:                                     ; preds = %28
  %37 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %8, align 8
  %38 = tail call i32 %37(%struct.jpeg_decompress_struct* nonnull %0) #4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %100, label %40

; <label>:40:                                     ; preds = %36
  %41 = load i8*, i8** %4, align 8
  %42 = load i64, i64* %6, align 8
  br label %43

; <label>:43:                                     ; preds = %40, %28
  %44 = phi i8* [ %41, %40 ], [ %30, %28 ]
  %45 = phi i64 [ %42, %40 ], [ %29, %28 ]
  %46 = load i8, i8* %44, align 1
  %47 = getelementptr inbounds i8, i8* %44, i64 1
  %48 = add i64 %45, -1
  %49 = icmp eq i8 %46, -1
  br i1 %49, label %50, label %28

; <label>:50:                                     ; preds = %43, %21
  %51 = phi i8* [ %25, %21 ], [ %47, %43 ]
  %52 = phi i64 [ %26, %21 ], [ %48, %43 ]
  br label %53

; <label>:53:                                     ; preds = %50, %64
  %54 = phi i8* [ %68, %64 ], [ %51, %50 ]
  %55 = phi i64 [ %67, %64 ], [ %52, %50 ]
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %64

; <label>:57:                                     ; preds = %53
  %58 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %8, align 8
  %59 = tail call i32 %58(%struct.jpeg_decompress_struct* %0) #4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %100, label %61

; <label>:61:                                     ; preds = %57
  %62 = load i8*, i8** %4, align 8
  %63 = load i64, i64* %6, align 8
  br label %64

; <label>:64:                                     ; preds = %61, %53
  %65 = phi i8* [ %62, %61 ], [ %54, %53 ]
  %66 = phi i64 [ %63, %61 ], [ %55, %53 ]
  %67 = add i64 %66, -1
  %68 = getelementptr inbounds i8, i8* %65, i64 1
  %69 = load i8, i8* %65, align 1
  %70 = icmp eq i8 %69, -1
  br i1 %70, label %53, label %71

; <label>:71:                                     ; preds = %64
  %72 = icmp eq i8 %69, 0
  %73 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %74 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %73, i64 0, i32 6
  %75 = load i32, i32* %74, align 4
  br i1 %72, label %76, label %78

; <label>:76:                                     ; preds = %71
  %77 = add i32 %75, 2
  store i32 %77, i32* %74, align 4
  store i8* %68, i8** %4, align 8
  store i64 %67, i64* %6, align 8
  br label %10

; <label>:78:                                     ; preds = %71
  %79 = zext i8 %69 to i32
  %80 = icmp eq i32 %75, 0
  br i1 %80, label %98, label %81

; <label>:81:                                     ; preds = %78
  %82 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 5
  store i32 116, i32* %84, align 8
  %85 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %86 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %85, i64 0, i32 6
  %87 = load i32, i32* %86, align 4
  %88 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %89 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %88, i64 0, i32 6, i32 0, i64 0
  store i32 %87, i32* %89, align 4
  %90 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %91 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %90, i64 0, i32 6, i32 0, i64 1
  store i32 %79, i32* %91, align 4
  %92 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %82, align 8
  %93 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %92, i64 0, i32 1
  %94 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %93, align 8
  %95 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %94(%struct.jpeg_common_struct* %95, i32 -1) #4
  %96 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %9, align 8
  %97 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %96, i64 0, i32 6
  store i32 0, i32* %97, align 4
  br label %98

; <label>:98:                                     ; preds = %78, %81
  %99 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  store i32 %79, i32* %99, align 4
  store i8* %68, i8** %4, align 8
  store i64 %67, i64* %6, align 8
  br label %100

; <label>:100:                                    ; preds = %14, %36, %57, %98
  %101 = phi i32 [ 1, %98 ], [ 0, %57 ], [ 0, %36 ], [ 0, %14 ]
  ret i32 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define hidden void @jinit_marker_reader(%struct.jpeg_decompress_struct*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %3 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %3, i64 0, i32 0
  %5 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %4, align 8
  %6 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %7 = tail call i8* %5(%struct.jpeg_common_struct* %6, i32 0, i64 264) #4
  %8 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %9 = bitcast %struct.jpeg_marker_reader** %8 to i8**
  store i8* %7, i8** %9, align 8
  %10 = bitcast i8* %7 to void (%struct.jpeg_decompress_struct*)**
  store void (%struct.jpeg_decompress_struct*)* @reset_marker_reader, void (%struct.jpeg_decompress_struct*)** %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 8
  %12 = bitcast i8* %11 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @read_markers, i32 (%struct.jpeg_decompress_struct*)* @read_restart_marker>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 40
  %14 = bitcast i8* %13 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 176
  %16 = getelementptr inbounds i8, i8* %7, i64 48
  %17 = getelementptr inbounds i8, i8* %7, i64 56
  %18 = bitcast i8* %17 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %18, align 8
  %19 = bitcast i8* %15 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 72
  %21 = getelementptr inbounds i8, i8* %7, i64 192
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = bitcast i8* %20 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 196
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %7, i64 88
  %27 = bitcast i8* %26 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)** %27, align 8
  %28 = getelementptr inbounds i8, i8* %7, i64 200
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %7, i64 96
  %31 = getelementptr inbounds i8, i8* %7, i64 204
  %32 = bitcast i8* %30 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 112
  %34 = bitcast i8* %33 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %34, align 8
  %35 = bitcast i8* %31 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %35, align 4
  %36 = getelementptr inbounds i8, i8* %7, i64 128
  %37 = getelementptr inbounds i8, i8* %7, i64 220
  %38 = bitcast i8* %36 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %38, align 8
  %39 = getelementptr inbounds i8, i8* %7, i64 144
  %40 = bitcast i8* %39 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @skip_variable, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %40, align 8
  %41 = bitcast i8* %37 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %41, align 4
  %42 = getelementptr inbounds i8, i8* %7, i64 236
  %43 = bitcast i8* %42 to i32*
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %7, i64 240
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 4
  %46 = bitcast i8* %16 to i32 (%struct.jpeg_decompress_struct*)**
  store i32 (%struct.jpeg_decompress_struct*)* @get_interesting_appn, i32 (%struct.jpeg_decompress_struct*)** %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 160
  %48 = bitcast i8* %47 to <2 x i32 (%struct.jpeg_decompress_struct*)*>*
  store <2 x i32 (%struct.jpeg_decompress_struct*)*> <i32 (%struct.jpeg_decompress_struct*)* @get_interesting_appn, i32 (%struct.jpeg_decompress_struct*)* @skip_variable>, <2 x i32 (%struct.jpeg_decompress_struct*)*>* %48, align 8
  %49 = bitcast %struct.jpeg_marker_reader** %8 to %struct.my_marker_reader**
  %50 = load %struct.my_marker_reader*, %struct.my_marker_reader** %49, align 8
  %51 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %51, align 8
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 0, i32 3
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 0, i32 4
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 0, i32 6
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %50, i64 0, i32 5
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %57, align 8
  ret void
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define internal void @reset_marker_reader(%struct.jpeg_decompress_struct* nocapture) #2 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %3 = bitcast %struct.jpeg_marker_reader** %2 to %struct.my_marker_reader**
  %4 = load %struct.my_marker_reader*, %struct.my_marker_reader** %3, align 8
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  store %struct.jpeg_component_info* null, %struct.jpeg_component_info** %5, align 8
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 0, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 0, i32 4
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 0, i32 6
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 5
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %11, align 8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @read_markers(%struct.jpeg_decompress_struct*) #0 {
  %2 = alloca [17 x i8], align 16
  %3 = alloca [256 x i8], align 16
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %5 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %6 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %8 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %9 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 0
  %10 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  %11 = bitcast %struct.jpeg_marker_reader** %5 to %struct.my_marker_reader**
  %12 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 47, i64 0
  %13 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 48, i64 0
  %14 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 49, i64 0
  %15 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 50
  %16 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 10
  %17 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 59
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 51
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 52
  %20 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 53
  %21 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 54
  %22 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 55
  %23 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 56
  %24 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  %25 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  %26 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 1
  %27 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 5
  %28 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 9
  %29 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 13
  %30 = load i32, i32* %4, align 4
  %31 = bitcast i8* %26 to <4 x i8>*
  %32 = bitcast i8* %27 to <4 x i8>*
  %33 = bitcast i8* %28 to <4 x i8>*
  %34 = bitcast i8* %29 to <4 x i8>*
  br label %35

; <label>:35:                                     ; preds = %1089, %1
  %36 = phi i32 [ 0, %1089 ], [ %30, %1 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %98

; <label>:38:                                     ; preds = %35
  %39 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %40 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %39, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %93

; <label>:43:                                     ; preds = %38
  %44 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %45 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 0
  %46 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %56

; <label>:49:                                     ; preds = %43
  %50 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 3
  %51 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %50, align 8
  %52 = tail call i32 %51(%struct.jpeg_decompress_struct* nonnull %0) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %1090, label %54

; <label>:54:                                     ; preds = %49
  %55 = load i64, i64* %46, align 8
  br label %56

; <label>:56:                                     ; preds = %54, %43
  %57 = phi i64 [ %55, %54 ], [ %47, %43 ]
  %58 = load i8*, i8** %45, align 8
  %59 = add i64 %57, -1
  %60 = getelementptr inbounds i8, i8* %58, i64 1
  %61 = load i8, i8* %58, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp eq i64 %59, 0
  br i1 %63, label %64, label %72

; <label>:64:                                     ; preds = %56
  %65 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %44, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %65, align 8
  %67 = tail call i32 %66(%struct.jpeg_decompress_struct* nonnull %0) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %1090, label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %45, align 8
  %71 = load i64, i64* %46, align 8
  br label %72

; <label>:72:                                     ; preds = %69, %56
  %73 = phi i8* [ %70, %69 ], [ %60, %56 ]
  %74 = phi i64 [ %71, %69 ], [ %59, %56 ]
  %75 = add i64 %74, -1
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  %77 = load i8, i8* %73, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp ne i8 %61, -1
  %80 = icmp ne i8 %77, -40
  %81 = or i1 %79, %80
  br i1 %81, label %82, label %92

; <label>:82:                                     ; preds = %72
  %83 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %83, i64 0, i32 5
  store i32 53, i32* %84, align 8
  %85 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %86 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %85, i64 0, i32 6, i32 0, i64 0
  store i32 %62, i32* %86, align 4
  %87 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %88 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %87, i64 0, i32 6, i32 0, i64 1
  store i32 %78, i32* %88, align 4
  %89 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %89, i64 0, i32 0
  %91 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %90, align 8
  tail call void %91(%struct.jpeg_common_struct* nonnull %8) #4
  br label %92

; <label>:92:                                     ; preds = %72, %82
  store i32 %78, i32* %4, align 4
  store i8* %76, i8** %45, align 8
  store i64 %75, i64* %46, align 8
  br label %96

; <label>:93:                                     ; preds = %38
  %94 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* nonnull %0)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %1090, label %96

; <label>:96:                                     ; preds = %93, %92
  %97 = load i32, i32* %4, align 4
  br label %98

; <label>:98:                                     ; preds = %96, %35
  %99 = phi i32 [ %97, %96 ], [ %36, %35 ]
  switch i32 %99, label %1080 [
    i32 216, label %100
    i32 192, label %120
    i32 193, label %120
    i32 194, label %123
    i32 201, label %126
    i32 202, label %129
    i32 195, label %132
    i32 197, label %132
    i32 198, label %132
    i32 199, label %132
    i32 200, label %132
    i32 203, label %132
    i32 205, label %132
    i32 206, label %132
    i32 207, label %132
    i32 218, label %141
    i32 217, label %414
    i32 204, label %420
    i32 196, label %475
    i32 219, label %692
    i32 221, label %915
    i32 224, label %1002
    i32 225, label %1002
    i32 226, label %1002
    i32 227, label %1002
    i32 228, label %1002
    i32 229, label %1002
    i32 230, label %1002
    i32 231, label %1002
    i32 232, label %1002
    i32 233, label %1002
    i32 234, label %1002
    i32 235, label %1002
    i32 236, label %1002
    i32 237, label %1002
    i32 238, label %1002
    i32 239, label %1002
    i32 254, label %1010
    i32 208, label %1016
    i32 209, label %1016
    i32 210, label %1016
    i32 211, label %1016
    i32 212, label %1016
    i32 213, label %1016
    i32 214, label %1016
    i32 215, label %1016
    i32 1, label %1016
    i32 220, label %1025
  ]

; <label>:100:                                    ; preds = %98
  %101 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %102 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %101, i64 0, i32 5
  store i32 102, i32* %102, align 8
  %103 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %104 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %103, i64 0, i32 1
  %105 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %104, align 8
  tail call void %105(%struct.jpeg_common_struct* %8, i32 1) #4
  %106 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %107 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %106, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %118, label %110

; <label>:110:                                    ; preds = %100
  %111 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %112 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %111, i64 0, i32 5
  store i32 61, i32* %112, align 8
  %113 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %114 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %113, i64 0, i32 0
  %115 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %114, align 8
  tail call void %115(%struct.jpeg_common_struct* nonnull %8) #4
  %116 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %117 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %116, i64 0, i32 3
  br label %118

; <label>:118:                                    ; preds = %100, %110
  %119 = phi i32* [ %107, %100 ], [ %117, %110 ]
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 0, i64 16, i1 false) #4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %13, i8 1, i64 16, i1 false) #4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 5, i64 16, i1 false) #4
  store i32 0, i32* %15, align 8
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 8
  store i32 0, i32* %18, align 4
  store i8 1, i8* %19, align 8
  store i8 1, i8* %20, align 1
  store i8 0, i8* %21, align 2
  store i16 1, i16* %22, align 4
  store i16 1, i16* %23, align 2
  store i32 0, i32* %24, align 8
  store i8 0, i8* %25, align 4
  store i32 1, i32* %119, align 8
  br label %1089

; <label>:120:                                    ; preds = %98, %98
  %121 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %0, i32 0, i32 0)
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %1090, label %1089

; <label>:123:                                    ; preds = %98
  %124 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %0, i32 1, i32 0)
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %1090, label %1089

; <label>:126:                                    ; preds = %98
  %127 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %0, i32 0, i32 1)
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %1090, label %1089

; <label>:129:                                    ; preds = %98
  %130 = tail call fastcc i32 @get_sof(%struct.jpeg_decompress_struct* nonnull %0, i32 1, i32 1)
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %1090, label %1089

; <label>:132:                                    ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98
  %133 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %133, i64 0, i32 5
  store i32 60, i32* %134, align 8
  %135 = load i32, i32* %4, align 4
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 6, i32 0, i64 0
  store i32 %135, i32* %137, align 4
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 0
  %140 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %139, align 8
  tail call void %140(%struct.jpeg_common_struct* %8) #4
  br label %1089

; <label>:141:                                    ; preds = %98
  %142 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %143 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %148 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %147, i64 0, i32 4
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %157

; <label>:151:                                    ; preds = %141
  %152 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %152, i64 0, i32 5
  store i32 62, i32* %153, align 8
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 0
  %156 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %155, align 8
  tail call void %156(%struct.jpeg_common_struct* nonnull %8) #4
  br label %157

; <label>:157:                                    ; preds = %151, %141
  %158 = icmp eq i64 %146, 0
  br i1 %158, label %159, label %167

; <label>:159:                                    ; preds = %157
  %160 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %161 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %160, align 8
  %162 = tail call i32 %161(%struct.jpeg_decompress_struct* nonnull %0) #4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %1090, label %164

; <label>:164:                                    ; preds = %159
  %165 = load i8*, i8** %143, align 8
  %166 = load i64, i64* %145, align 8
  br label %167

; <label>:167:                                    ; preds = %164, %157
  %168 = phi i8* [ %165, %164 ], [ %144, %157 ]
  %169 = phi i64 [ %166, %164 ], [ %146, %157 ]
  %170 = add i64 %169, -1
  %171 = getelementptr inbounds i8, i8* %168, i64 1
  %172 = load i8, i8* %168, align 1
  %173 = zext i8 %172 to i64
  %174 = shl nuw nsw i64 %173, 8
  %175 = icmp eq i64 %170, 0
  br i1 %175, label %176, label %184

; <label>:176:                                    ; preds = %167
  %177 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %178 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %177, align 8
  %179 = tail call i32 %178(%struct.jpeg_decompress_struct* nonnull %0) #4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %1090, label %181

; <label>:181:                                    ; preds = %176
  %182 = load i8*, i8** %143, align 8
  %183 = load i64, i64* %145, align 8
  br label %184

; <label>:184:                                    ; preds = %181, %167
  %185 = phi i8* [ %182, %181 ], [ %171, %167 ]
  %186 = phi i64 [ %183, %181 ], [ %170, %167 ]
  %187 = add i64 %186, -1
  %188 = getelementptr inbounds i8, i8* %185, i64 1
  %189 = load i8, i8* %185, align 1
  %190 = zext i8 %189 to i64
  %191 = or i64 %174, %190
  %192 = icmp eq i64 %187, 0
  br i1 %192, label %193, label %201

; <label>:193:                                    ; preds = %184
  %194 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %195 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %194, align 8
  %196 = tail call i32 %195(%struct.jpeg_decompress_struct* nonnull %0) #4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %1090, label %198

; <label>:198:                                    ; preds = %193
  %199 = load i8*, i8** %143, align 8
  %200 = load i64, i64* %145, align 8
  br label %201

; <label>:201:                                    ; preds = %198, %184
  %202 = phi i8* [ %199, %198 ], [ %188, %184 ]
  %203 = phi i64 [ %200, %198 ], [ %187, %184 ]
  %204 = load i8, i8* %202, align 1
  %205 = zext i8 %204 to i32
  %206 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %207 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %206, i64 0, i32 5
  store i32 103, i32* %207, align 8
  %208 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %209 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %208, i64 0, i32 6, i32 0, i64 0
  store i32 %205, i32* %209, align 4
  %210 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %211 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %210, i64 0, i32 1
  %212 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %211, align 8
  tail call void %212(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  %213 = shl nuw nsw i32 %205, 1
  %214 = add nuw nsw i32 %213, 6
  %215 = zext i32 %214 to i64
  %216 = icmp ne i64 %191, %215
  %217 = add i8 %204, -1
  %218 = icmp ugt i8 %217, 3
  %219 = or i1 %218, %216
  br i1 %219, label %220, label %226

; <label>:220:                                    ; preds = %201
  %221 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %222 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %221, i64 0, i32 5
  store i32 11, i32* %222, align 8
  %223 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %224 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %223, i64 0, i32 0
  %225 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %224, align 8
  tail call void %225(%struct.jpeg_common_struct* nonnull %8) #4
  br label %226

; <label>:226:                                    ; preds = %220, %201
  %227 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 66
  store i32 %205, i32* %227, align 8
  %228 = getelementptr %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 0
  %229 = bitcast %struct.jpeg_component_info** %228 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %229, i8 0, i64 32, i1 false) #4
  %230 = getelementptr inbounds i8, i8* %202, i64 1
  %231 = add i64 %203, -1
  %232 = icmp eq i8 %204, 0
  %233 = icmp eq i64 %231, 0
  br i1 %232, label %338, label %234

; <label>:234:                                    ; preds = %226
  %235 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %236 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %237 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  %238 = zext i8 %204 to i64
  %239 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 0
  %240 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 1
  %241 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 2
  %242 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 3
  br label %243

; <label>:243:                                    ; preds = %332, %234
  %244 = phi i64 [ 0, %234 ], [ %333, %332 ]
  %245 = phi i1 [ %233, %234 ], [ %337, %332 ]
  %246 = phi i64 [ %231, %234 ], [ %335, %332 ]
  %247 = phi i8* [ %230, %234 ], [ %334, %332 ]
  br i1 %245, label %248, label %255

; <label>:248:                                    ; preds = %243
  %249 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %235, align 8
  %250 = tail call i32 %249(%struct.jpeg_decompress_struct* nonnull %0) #4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %1090, label %252

; <label>:252:                                    ; preds = %248
  %253 = load i8*, i8** %143, align 8
  %254 = load i64, i64* %145, align 8
  br label %255

; <label>:255:                                    ; preds = %252, %243
  %256 = phi i8* [ %253, %252 ], [ %247, %243 ]
  %257 = phi i64 [ %254, %252 ], [ %246, %243 ]
  %258 = add i64 %257, -1
  %259 = getelementptr inbounds i8, i8* %256, i64 1
  %260 = load i8, i8* %256, align 1
  %261 = zext i8 %260 to i32
  %262 = icmp eq i64 %258, 0
  br i1 %262, label %263, label %270

; <label>:263:                                    ; preds = %255
  %264 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %235, align 8
  %265 = tail call i32 %264(%struct.jpeg_decompress_struct* nonnull %0) #4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %1090, label %267

; <label>:267:                                    ; preds = %263
  %268 = load i8*, i8** %143, align 8
  %269 = load i64, i64* %145, align 8
  br label %270

; <label>:270:                                    ; preds = %267, %255
  %271 = phi i8* [ %268, %267 ], [ %259, %255 ]
  %272 = phi i64 [ %269, %267 ], [ %258, %255 ]
  %273 = load i8, i8* %271, align 1
  %274 = zext i8 %273 to i32
  %275 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %236, align 8
  %276 = load i32, i32* %237, align 8
  %277 = icmp sgt i32 %276, 0
  br i1 %277, label %278, label %288

; <label>:278:                                    ; preds = %270
  %279 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 0, i32 0
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, %261
  br i1 %281, label %282, label %285

; <label>:282:                                    ; preds = %278
  %283 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %239, align 8
  %284 = icmp eq %struct.jpeg_component_info* %283, null
  br i1 %284, label %297, label %285

; <label>:285:                                    ; preds = %282, %278
  %286 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 1
  %287 = icmp sgt i32 %276, 1
  br i1 %287, label %1092, label %288

; <label>:288:                                    ; preds = %285, %1099, %1109, %1119, %270
  %289 = phi %struct.jpeg_component_info* [ %275, %270 ], [ %286, %285 ], [ %1100, %1099 ], [ %1110, %1109 ], [ %1120, %1119 ]
  %290 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %291 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %290, i64 0, i32 5
  store i32 5, i32* %291, align 8
  %292 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %293 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %292, i64 0, i32 6, i32 0, i64 0
  store i32 %261, i32* %293, align 4
  %294 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %295 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %294, i64 0, i32 0
  %296 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %295, align 8
  tail call void %296(%struct.jpeg_common_struct* nonnull %8) #4
  br label %297

; <label>:297:                                    ; preds = %282, %1096, %1106, %1116, %288
  %298 = phi %struct.jpeg_component_info* [ %289, %288 ], [ %275, %282 ], [ %286, %1096 ], [ %1100, %1106 ], [ %1110, %1116 ]
  %299 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 %244
  store %struct.jpeg_component_info* %298, %struct.jpeg_component_info** %299, align 8
  %300 = lshr i32 %274, 4
  %301 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %298, i64 0, i32 5
  store i32 %300, i32* %301, align 4
  %302 = and i32 %274, 15
  %303 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %298, i64 0, i32 6
  store i32 %302, i32* %303, align 8
  %304 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %305 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 6, i32 0, i64 0
  store i32 %261, i32* %305, align 4
  %306 = load i32, i32* %301, align 4
  %307 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 6, i32 0, i64 1
  store i32 %306, i32* %307, align 4
  %308 = load i32, i32* %303, align 8
  %309 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %304, i64 0, i32 6, i32 0, i64 2
  store i32 %308, i32* %309, align 4
  %310 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %311 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %310, i64 0, i32 5
  store i32 104, i32* %311, align 8
  %312 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %313 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %312, i64 0, i32 1
  %314 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %313, align 8
  tail call void %314(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  %315 = icmp eq i64 %244, 0
  br i1 %315, label %332, label %316

; <label>:316:                                    ; preds = %297, %329
  %317 = phi i64 [ %330, %329 ], [ 0, %297 ]
  %318 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 67, i64 %317
  %319 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %318, align 8
  %320 = icmp eq %struct.jpeg_component_info* %319, %298
  br i1 %320, label %321, label %329

; <label>:321:                                    ; preds = %316
  %322 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %323 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %322, i64 0, i32 5
  store i32 5, i32* %323, align 8
  %324 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %325 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %324, i64 0, i32 6, i32 0, i64 0
  store i32 %261, i32* %325, align 4
  %326 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %327 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %326, i64 0, i32 0
  %328 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %327, align 8
  tail call void %328(%struct.jpeg_common_struct* nonnull %8) #4
  br label %329

; <label>:329:                                    ; preds = %321, %316
  %330 = add nuw nsw i64 %317, 1
  %331 = icmp eq i64 %330, %244
  br i1 %331, label %332, label %316

; <label>:332:                                    ; preds = %329, %297
  %333 = add nuw nsw i64 %244, 1
  %334 = getelementptr inbounds i8, i8* %271, i64 1
  %335 = add i64 %272, -1
  %336 = icmp ult i64 %333, %238
  %337 = icmp eq i64 %335, 0
  br i1 %336, label %243, label %338

; <label>:338:                                    ; preds = %332, %226
  %339 = phi i8* [ %230, %226 ], [ %334, %332 ]
  %340 = phi i64 [ %231, %226 ], [ %335, %332 ]
  %341 = phi i1 [ %233, %226 ], [ %337, %332 ]
  br i1 %341, label %342, label %350

; <label>:342:                                    ; preds = %338
  %343 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %344 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %343, align 8
  %345 = tail call i32 %344(%struct.jpeg_decompress_struct* nonnull %0) #4
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %1090, label %347

; <label>:347:                                    ; preds = %342
  %348 = load i8*, i8** %143, align 8
  %349 = load i64, i64* %145, align 8
  br label %350

; <label>:350:                                    ; preds = %347, %338
  %351 = phi i8* [ %348, %347 ], [ %339, %338 ]
  %352 = phi i64 [ %349, %347 ], [ %340, %338 ]
  %353 = add i64 %352, -1
  %354 = getelementptr inbounds i8, i8* %351, i64 1
  %355 = load i8, i8* %351, align 1
  %356 = zext i8 %355 to i32
  %357 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 72
  store i32 %356, i32* %357, align 4
  %358 = icmp eq i64 %353, 0
  br i1 %358, label %359, label %367

; <label>:359:                                    ; preds = %350
  %360 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %361 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %360, align 8
  %362 = tail call i32 %361(%struct.jpeg_decompress_struct* nonnull %0) #4
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %1090, label %364

; <label>:364:                                    ; preds = %359
  %365 = load i8*, i8** %143, align 8
  %366 = load i64, i64* %145, align 8
  br label %367

; <label>:367:                                    ; preds = %364, %350
  %368 = phi i8* [ %365, %364 ], [ %354, %350 ]
  %369 = phi i64 [ %366, %364 ], [ %353, %350 ]
  %370 = add i64 %369, -1
  %371 = getelementptr inbounds i8, i8* %368, i64 1
  %372 = load i8, i8* %368, align 1
  %373 = zext i8 %372 to i32
  %374 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 73
  store i32 %373, i32* %374, align 8
  %375 = icmp eq i64 %370, 0
  br i1 %375, label %376, label %384

; <label>:376:                                    ; preds = %367
  %377 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %142, i64 0, i32 3
  %378 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %377, align 8
  %379 = tail call i32 %378(%struct.jpeg_decompress_struct* nonnull %0) #4
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %1090, label %381

; <label>:381:                                    ; preds = %376
  %382 = load i8*, i8** %143, align 8
  %383 = load i64, i64* %145, align 8
  br label %384

; <label>:384:                                    ; preds = %381, %367
  %385 = phi i8* [ %382, %381 ], [ %371, %367 ]
  %386 = phi i64 [ %383, %381 ], [ %370, %367 ]
  %387 = add i64 %386, -1
  %388 = getelementptr inbounds i8, i8* %385, i64 1
  %389 = load i8, i8* %385, align 1
  %390 = zext i8 %389 to i32
  %391 = lshr i32 %390, 4
  %392 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 74
  store i32 %391, i32* %392, align 4
  %393 = and i32 %390, 15
  %394 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 75
  store i32 %393, i32* %394, align 8
  %395 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %396 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 0
  %397 = load i32, i32* %357, align 4
  store i32 %397, i32* %396, align 4
  %398 = load i32, i32* %374, align 8
  %399 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 1
  store i32 %398, i32* %399, align 4
  %400 = load i32, i32* %392, align 4
  %401 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 2
  store i32 %400, i32* %401, align 4
  %402 = load i32, i32* %394, align 8
  %403 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %395, i64 0, i32 6, i32 0, i64 3
  store i32 %402, i32* %403, align 4
  %404 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %405 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %404, i64 0, i32 5
  store i32 105, i32* %405, align 8
  %406 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %407 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %406, i64 0, i32 1
  %408 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %407, align 8
  tail call void %408(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  %409 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %5, align 8
  %410 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %409, i64 0, i32 5
  store i32 0, i32* %410, align 8
  %411 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 35
  %412 = load i32, i32* %411, align 4
  %413 = add nsw i32 %412, 1
  store i32 %413, i32* %411, align 4
  store i8* %388, i8** %143, align 8
  store i64 %387, i64* %145, align 8
  store i32 0, i32* %4, align 4
  br label %1090

; <label>:414:                                    ; preds = %98
  %415 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %416 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %415, i64 0, i32 5
  store i32 85, i32* %416, align 8
  %417 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %418 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %417, i64 0, i32 1
  %419 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %418, align 8
  tail call void %419(%struct.jpeg_common_struct* %8, i32 1) #4
  store i32 0, i32* %4, align 4
  br label %1090

; <label>:420:                                    ; preds = %98
  %421 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %422 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 0
  %423 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 1
  %424 = load i64, i64* %423, align 8
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %433

; <label>:426:                                    ; preds = %420
  %427 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 3
  %428 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %427, align 8
  %429 = tail call i32 %428(%struct.jpeg_decompress_struct* nonnull %0) #4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %1090, label %431

; <label>:431:                                    ; preds = %426
  %432 = load i64, i64* %423, align 8
  br label %433

; <label>:433:                                    ; preds = %431, %420
  %434 = phi i64 [ %432, %431 ], [ %424, %420 ]
  %435 = load i8*, i8** %422, align 8
  %436 = add i64 %434, -1
  %437 = getelementptr inbounds i8, i8* %435, i64 1
  %438 = load i8, i8* %435, align 1
  %439 = zext i8 %438 to i64
  %440 = shl nuw nsw i64 %439, 8
  %441 = icmp eq i64 %436, 0
  br i1 %441, label %442, label %450

; <label>:442:                                    ; preds = %433
  %443 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %421, i64 0, i32 3
  %444 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %443, align 8
  %445 = tail call i32 %444(%struct.jpeg_decompress_struct* nonnull %0) #4
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %1090, label %447

; <label>:447:                                    ; preds = %442
  %448 = load i8*, i8** %422, align 8
  %449 = load i64, i64* %423, align 8
  br label %450

; <label>:450:                                    ; preds = %447, %433
  %451 = phi i8* [ %448, %447 ], [ %437, %433 ]
  %452 = phi i64 [ %449, %447 ], [ %436, %433 ]
  %453 = add i64 %452, -1
  %454 = getelementptr inbounds i8, i8* %451, i64 1
  %455 = load i8, i8* %451, align 1
  %456 = zext i8 %455 to i64
  %457 = or i64 %440, %456
  %458 = add nsw i64 %457, -2
  %459 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %460 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %459, i64 0, i32 5
  store i32 91, i32* %460, align 8
  %461 = load i32, i32* %4, align 4
  %462 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %463 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %462, i64 0, i32 6, i32 0, i64 0
  store i32 %461, i32* %463, align 4
  %464 = trunc i64 %458 to i32
  %465 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %466 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %465, i64 0, i32 6, i32 0, i64 1
  store i32 %464, i32* %466, align 4
  %467 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %468 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %467, i64 0, i32 1
  %469 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %468, align 8
  tail call void %469(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  store i8* %454, i8** %422, align 8
  store i64 %453, i64* %423, align 8
  %470 = icmp ugt i64 %457, 2
  br i1 %470, label %471, label %1089

; <label>:471:                                    ; preds = %450
  %472 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %473 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %472, i64 0, i32 4
  %474 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %473, align 8
  tail call void %474(%struct.jpeg_decompress_struct* nonnull %0, i64 %458) #4
  br label %1089

; <label>:475:                                    ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %9) #4
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %10) #4
  %476 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %477 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 0
  %478 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 1
  %479 = load i64, i64* %478, align 8
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %488

; <label>:481:                                    ; preds = %475
  %482 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 3
  %483 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %482, align 8
  %484 = tail call i32 %483(%struct.jpeg_decompress_struct* nonnull %0) #4
  %485 = icmp eq i32 %484, 0
  br i1 %485, label %690, label %486

; <label>:486:                                    ; preds = %481
  %487 = load i64, i64* %478, align 8
  br label %488

; <label>:488:                                    ; preds = %486, %475
  %489 = phi i64 [ %487, %486 ], [ %479, %475 ]
  %490 = load i8*, i8** %477, align 8
  %491 = add i64 %489, -1
  %492 = getelementptr inbounds i8, i8* %490, i64 1
  %493 = load i8, i8* %490, align 1
  %494 = zext i8 %493 to i64
  %495 = shl nuw nsw i64 %494, 8
  %496 = icmp eq i64 %491, 0
  br i1 %496, label %497, label %505

; <label>:497:                                    ; preds = %488
  %498 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 3
  %499 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %498, align 8
  %500 = tail call i32 %499(%struct.jpeg_decompress_struct* nonnull %0) #4
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %690, label %502

; <label>:502:                                    ; preds = %497
  %503 = load i8*, i8** %477, align 8
  %504 = load i64, i64* %478, align 8
  br label %505

; <label>:505:                                    ; preds = %502, %488
  %506 = phi i8* [ %503, %502 ], [ %492, %488 ]
  %507 = phi i64 [ %504, %502 ], [ %491, %488 ]
  %508 = add i64 %507, -1
  %509 = getelementptr inbounds i8, i8* %506, i64 1
  %510 = load i8, i8* %506, align 1
  %511 = zext i8 %510 to i64
  %512 = or i64 %495, %511
  %513 = add nsw i64 %512, -2
  %514 = icmp ugt i64 %512, 18
  br i1 %514, label %515, label %679

; <label>:515:                                    ; preds = %505
  %516 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %476, i64 0, i32 3
  br label %517

; <label>:517:                                    ; preds = %673, %515
  %518 = phi i64 [ %513, %515 ], [ %636, %673 ]
  %519 = phi i64 [ %508, %515 ], [ %632, %673 ]
  %520 = phi i8* [ %509, %515 ], [ %631, %673 ]
  %521 = icmp eq i64 %519, 0
  br i1 %521, label %522, label %529

; <label>:522:                                    ; preds = %517
  %523 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %516, align 8
  %524 = tail call i32 %523(%struct.jpeg_decompress_struct* %0) #4
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %690, label %526

; <label>:526:                                    ; preds = %522
  %527 = load i8*, i8** %477, align 8
  %528 = load i64, i64* %478, align 8
  br label %529

; <label>:529:                                    ; preds = %526, %517
  %530 = phi i8* [ %527, %526 ], [ %520, %517 ]
  %531 = phi i64 [ %528, %526 ], [ %519, %517 ]
  %532 = load i8, i8* %530, align 1
  %533 = zext i8 %532 to i32
  %534 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %535 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %534, i64 0, i32 5
  store i32 80, i32* %535, align 8
  %536 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %537 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %536, i64 0, i32 6, i32 0, i64 0
  store i32 %533, i32* %537, align 4
  %538 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %539 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %538, i64 0, i32 1
  %540 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %539, align 8
  tail call void %540(%struct.jpeg_common_struct* %8, i32 1) #4
  store i8 0, i8* %9, align 16
  %541 = getelementptr inbounds i8, i8* %530, i64 1
  %542 = add i64 %531, -1
  br label %543

; <label>:543:                                    ; preds = %556, %529
  %544 = phi i64 [ 1, %529 ], [ %563, %556 ]
  %545 = phi i64 [ %542, %529 ], [ %565, %556 ]
  %546 = phi i8* [ %541, %529 ], [ %564, %556 ]
  %547 = phi i32 [ 0, %529 ], [ %562, %556 ]
  %548 = icmp eq i64 %545, 0
  br i1 %548, label %549, label %556

; <label>:549:                                    ; preds = %543
  %550 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %516, align 8
  %551 = tail call i32 %550(%struct.jpeg_decompress_struct* %0) #4
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %690, label %553

; <label>:553:                                    ; preds = %549
  %554 = load i8*, i8** %477, align 8
  %555 = load i64, i64* %478, align 8
  br label %556

; <label>:556:                                    ; preds = %553, %543
  %557 = phi i8* [ %554, %553 ], [ %546, %543 ]
  %558 = phi i64 [ %555, %553 ], [ %545, %543 ]
  %559 = load i8, i8* %557, align 1
  %560 = getelementptr inbounds [17 x i8], [17 x i8]* %2, i64 0, i64 %544
  store i8 %559, i8* %560, align 1
  %561 = zext i8 %559 to i32
  %562 = add nuw nsw i32 %547, %561
  %563 = add nuw nsw i64 %544, 1
  %564 = getelementptr inbounds i8, i8* %557, i64 1
  %565 = add i64 %558, -1
  %566 = icmp ult i64 %563, 17
  br i1 %566, label %543, label %567

; <label>:567:                                    ; preds = %556
  %568 = add nsw i64 %518, -17
  %569 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %570 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %569, i64 0, i32 6, i32 0, i64 0
  %571 = load <4 x i8>, <4 x i8>* %31, align 1
  %572 = zext <4 x i8> %571 to <4 x i32>
  %573 = bitcast i32* %570 to <4 x i32>*
  store <4 x i32> %572, <4 x i32>* %573, align 4
  %574 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %569, i64 0, i32 6, i32 0, i64 4
  %575 = load <4 x i8>, <4 x i8>* %32, align 1
  %576 = zext <4 x i8> %575 to <4 x i32>
  %577 = bitcast i32* %574 to <4 x i32>*
  store <4 x i32> %576, <4 x i32>* %577, align 4
  %578 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %579 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %578, i64 0, i32 5
  store i32 86, i32* %579, align 8
  %580 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %581 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %580, i64 0, i32 1
  %582 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %581, align 8
  tail call void %582(%struct.jpeg_common_struct* %8, i32 2) #4
  %583 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %584 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %583, i64 0, i32 6, i32 0, i64 0
  %585 = load <4 x i8>, <4 x i8>* %33, align 1
  %586 = zext <4 x i8> %585 to <4 x i32>
  %587 = bitcast i32* %584 to <4 x i32>*
  store <4 x i32> %586, <4 x i32>* %587, align 4
  %588 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %583, i64 0, i32 6, i32 0, i64 4
  %589 = load <4 x i8>, <4 x i8>* %34, align 1
  %590 = zext <4 x i8> %589 to <4 x i32>
  %591 = bitcast i32* %588 to <4 x i32>*
  store <4 x i32> %590, <4 x i32>* %591, align 4
  %592 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %593 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %592, i64 0, i32 5
  store i32 86, i32* %593, align 8
  %594 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %595 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %594, i64 0, i32 1
  %596 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %595, align 8
  tail call void %596(%struct.jpeg_common_struct* %8, i32 2) #4
  %597 = icmp ugt i32 %562, 256
  %598 = zext i32 %562 to i64
  %599 = icmp slt i64 %568, %598
  %600 = or i1 %597, %599
  br i1 %600, label %601, label %607

; <label>:601:                                    ; preds = %567
  %602 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %603 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %602, i64 0, i32 5
  store i32 8, i32* %603, align 8
  %604 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %605 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %604, i64 0, i32 0
  %606 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %605, align 8
  tail call void %606(%struct.jpeg_common_struct* nonnull %8) #4
  br label %607

; <label>:607:                                    ; preds = %601, %567
  %608 = icmp eq i32 %562, 0
  br i1 %608, label %630, label %609

; <label>:609:                                    ; preds = %607, %621
  %610 = phi i64 [ %628, %621 ], [ 0, %607 ]
  %611 = phi i64 [ %624, %621 ], [ %565, %607 ]
  %612 = phi i8* [ %625, %621 ], [ %564, %607 ]
  %613 = icmp eq i64 %611, 0
  br i1 %613, label %614, label %621

; <label>:614:                                    ; preds = %609
  %615 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %516, align 8
  %616 = tail call i32 %615(%struct.jpeg_decompress_struct* %0) #4
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %690, label %618

; <label>:618:                                    ; preds = %614
  %619 = load i8*, i8** %477, align 8
  %620 = load i64, i64* %478, align 8
  br label %621

; <label>:621:                                    ; preds = %618, %609
  %622 = phi i8* [ %619, %618 ], [ %612, %609 ]
  %623 = phi i64 [ %620, %618 ], [ %611, %609 ]
  %624 = add i64 %623, -1
  %625 = getelementptr inbounds i8, i8* %622, i64 1
  %626 = load i8, i8* %622, align 1
  %627 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %610
  store i8 %626, i8* %627, align 1
  %628 = add nuw nsw i64 %610, 1
  %629 = icmp ult i64 %628, %598
  br i1 %629, label %609, label %630

; <label>:630:                                    ; preds = %621, %607
  %631 = phi i8* [ %564, %607 ], [ %625, %621 ]
  %632 = phi i64 [ %565, %607 ], [ %624, %621 ]
  %633 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %598
  %634 = sub nsw i32 256, %562
  %635 = sext i32 %634 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %633, i8 0, i64 %635, i1 false) #4
  %636 = sub nsw i64 %568, %598
  %637 = and i32 %533, 16
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %654, label %639

; <label>:639:                                    ; preds = %630
  %640 = add nsw i32 %533, -16
  %641 = and i8 %532, -4
  %642 = icmp eq i8 %641, 16
  br i1 %642, label %651, label %643

; <label>:643:                                    ; preds = %639
  %644 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %645 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %644, i64 0, i32 5
  store i32 30, i32* %645, align 8
  %646 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %647 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %646, i64 0, i32 6, i32 0, i64 0
  store i32 %640, i32* %647, align 4
  %648 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %649 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %648, i64 0, i32 0
  %650 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %649, align 8
  tail call void %650(%struct.jpeg_common_struct* %8) #4
  br label %651

; <label>:651:                                    ; preds = %643, %639
  %652 = sext i32 %640 to i64
  %653 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 42, i64 %652
  br label %667

; <label>:654:                                    ; preds = %630
  %655 = icmp ugt i8 %532, 3
  br i1 %655, label %656, label %664

; <label>:656:                                    ; preds = %654
  %657 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %658 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %657, i64 0, i32 5
  store i32 30, i32* %658, align 8
  %659 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %660 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %659, i64 0, i32 6, i32 0, i64 0
  store i32 %533, i32* %660, align 4
  %661 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %662 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %661, i64 0, i32 0
  %663 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %662, align 8
  tail call void %663(%struct.jpeg_common_struct* %8) #4
  br label %664

; <label>:664:                                    ; preds = %656, %654
  %665 = zext i8 %532 to i64
  %666 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 41, i64 %665
  br label %667

; <label>:667:                                    ; preds = %664, %651
  %668 = phi %struct.JHUFF_TBL** [ %653, %651 ], [ %666, %664 ]
  %669 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %668, align 8
  %670 = icmp eq %struct.JHUFF_TBL* %669, null
  br i1 %670, label %671, label %673

; <label>:671:                                    ; preds = %667
  %672 = tail call %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct* %8) #4
  store %struct.JHUFF_TBL* %672, %struct.JHUFF_TBL** %668, align 8
  br label %673

; <label>:673:                                    ; preds = %671, %667
  %674 = phi %struct.JHUFF_TBL* [ %672, %671 ], [ %669, %667 ]
  %675 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %674, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %675, i8* nonnull align 16 %9, i64 17, i1 false) #4
  %676 = load %struct.JHUFF_TBL*, %struct.JHUFF_TBL** %668, align 8
  %677 = getelementptr inbounds %struct.JHUFF_TBL, %struct.JHUFF_TBL* %676, i64 0, i32 1, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %677, i8* nonnull align 16 %10, i64 256, i1 false) #4
  %678 = icmp sgt i64 %636, 16
  br i1 %678, label %517, label %679

; <label>:679:                                    ; preds = %673, %505
  %680 = phi i8* [ %509, %505 ], [ %631, %673 ]
  %681 = phi i64 [ %508, %505 ], [ %632, %673 ]
  %682 = phi i64 [ %513, %505 ], [ %636, %673 ]
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %691, label %684

; <label>:684:                                    ; preds = %679
  %685 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %686 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %685, i64 0, i32 5
  store i32 11, i32* %686, align 8
  %687 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %688 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %687, i64 0, i32 0
  %689 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %688, align 8
  tail call void %689(%struct.jpeg_common_struct* %8) #4
  br label %691

; <label>:690:                                    ; preds = %481, %497, %522, %549, %614
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %9) #4
  br label %1090

; <label>:691:                                    ; preds = %679, %684
  store i8* %680, i8** %477, align 8
  store i64 %681, i64* %478, align 8
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %9) #4
  br label %1089

; <label>:692:                                    ; preds = %98
  %693 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %694 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %693, i64 0, i32 0
  %695 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %693, i64 0, i32 1
  %696 = load i64, i64* %695, align 8
  %697 = icmp eq i64 %696, 0
  br i1 %697, label %698, label %705

; <label>:698:                                    ; preds = %692
  %699 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %693, i64 0, i32 3
  %700 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %699, align 8
  %701 = tail call i32 %700(%struct.jpeg_decompress_struct* nonnull %0) #4
  %702 = icmp eq i32 %701, 0
  br i1 %702, label %1090, label %703

; <label>:703:                                    ; preds = %698
  %704 = load i64, i64* %695, align 8
  br label %705

; <label>:705:                                    ; preds = %703, %692
  %706 = phi i64 [ %704, %703 ], [ %696, %692 ]
  %707 = load i8*, i8** %694, align 8
  %708 = add i64 %706, -1
  %709 = getelementptr inbounds i8, i8* %707, i64 1
  %710 = load i8, i8* %707, align 1
  %711 = zext i8 %710 to i64
  %712 = shl nuw nsw i64 %711, 8
  %713 = icmp eq i64 %708, 0
  br i1 %713, label %714, label %722

; <label>:714:                                    ; preds = %705
  %715 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %693, i64 0, i32 3
  %716 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %715, align 8
  %717 = tail call i32 %716(%struct.jpeg_decompress_struct* nonnull %0) #4
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %1090, label %719

; <label>:719:                                    ; preds = %714
  %720 = load i8*, i8** %694, align 8
  %721 = load i64, i64* %695, align 8
  br label %722

; <label>:722:                                    ; preds = %719, %705
  %723 = phi i8* [ %720, %719 ], [ %709, %705 ]
  %724 = phi i64 [ %721, %719 ], [ %708, %705 ]
  %725 = add i64 %724, -1
  %726 = getelementptr inbounds i8, i8* %723, i64 1
  %727 = load i8, i8* %723, align 1
  %728 = zext i8 %727 to i64
  %729 = or i64 %712, %728
  %730 = add nsw i64 %729, -2
  %731 = icmp ugt i64 %729, 2
  br i1 %731, label %732, label %903

; <label>:732:                                    ; preds = %722
  %733 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %693, i64 0, i32 3
  br label %734

; <label>:734:                                    ; preds = %899, %732
  %735 = phi i64 [ %725, %732 ], [ %841, %899 ]
  %736 = phi i8* [ %726, %732 ], [ %840, %899 ]
  %737 = phi i64 [ %730, %732 ], [ %901, %899 ]
  %738 = icmp eq i64 %735, 0
  br i1 %738, label %739, label %746

; <label>:739:                                    ; preds = %734
  %740 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %733, align 8
  %741 = tail call i32 %740(%struct.jpeg_decompress_struct* nonnull %0) #4
  %742 = icmp eq i32 %741, 0
  br i1 %742, label %1090, label %743

; <label>:743:                                    ; preds = %739
  %744 = load i8*, i8** %694, align 8
  %745 = load i64, i64* %695, align 8
  br label %746

; <label>:746:                                    ; preds = %743, %734
  %747 = phi i8* [ %744, %743 ], [ %736, %734 ]
  %748 = phi i64 [ %745, %743 ], [ %735, %734 ]
  %749 = load i8, i8* %747, align 1
  %750 = zext i8 %749 to i32
  %751 = lshr i32 %750, 4
  %752 = and i32 %750, 15
  %753 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %754 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %753, i64 0, i32 5
  store i32 81, i32* %754, align 8
  %755 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %756 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %755, i64 0, i32 6, i32 0, i64 0
  store i32 %752, i32* %756, align 4
  %757 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %758 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %757, i64 0, i32 6, i32 0, i64 1
  store i32 %751, i32* %758, align 4
  %759 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %760 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %759, i64 0, i32 1
  %761 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %760, align 8
  tail call void %761(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  %762 = icmp ugt i32 %752, 3
  br i1 %762, label %763, label %771

; <label>:763:                                    ; preds = %746
  %764 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %765 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %764, i64 0, i32 5
  store i32 31, i32* %765, align 8
  %766 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %767 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %766, i64 0, i32 6, i32 0, i64 0
  store i32 %752, i32* %767, align 4
  %768 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %769 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %768, i64 0, i32 0
  %770 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %769, align 8
  tail call void %770(%struct.jpeg_common_struct* nonnull %8) #4
  br label %771

; <label>:771:                                    ; preds = %763, %746
  %772 = zext i32 %752 to i64
  %773 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 40, i64 %772
  %774 = load %struct.JQUANT_TBL*, %struct.JQUANT_TBL** %773, align 8
  %775 = icmp eq %struct.JQUANT_TBL* %774, null
  br i1 %775, label %776, label %778

; <label>:776:                                    ; preds = %771
  %777 = tail call %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct* nonnull %8) #4
  store %struct.JQUANT_TBL* %777, %struct.JQUANT_TBL** %773, align 8
  br label %778

; <label>:778:                                    ; preds = %776, %771
  %779 = phi %struct.JQUANT_TBL* [ %777, %776 ], [ %774, %771 ]
  %780 = getelementptr inbounds i8, i8* %747, i64 1
  %781 = add i64 %748, -1
  %782 = icmp eq i32 %751, 0
  br label %783

; <label>:783:                                    ; preds = %831, %778
  %784 = phi i64 [ 0, %778 ], [ %839, %831 ]
  %785 = phi i64 [ %781, %778 ], [ %841, %831 ]
  %786 = phi i8* [ %780, %778 ], [ %840, %831 ]
  %787 = icmp eq i64 %785, 0
  br i1 %782, label %818, label %788

; <label>:788:                                    ; preds = %783
  br i1 %787, label %789, label %796

; <label>:789:                                    ; preds = %788
  %790 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %733, align 8
  %791 = tail call i32 %790(%struct.jpeg_decompress_struct* %0) #4
  %792 = icmp eq i32 %791, 0
  br i1 %792, label %1090, label %793

; <label>:793:                                    ; preds = %789
  %794 = load i8*, i8** %694, align 8
  %795 = load i64, i64* %695, align 8
  br label %796

; <label>:796:                                    ; preds = %793, %788
  %797 = phi i8* [ %794, %793 ], [ %786, %788 ]
  %798 = phi i64 [ %795, %793 ], [ %785, %788 ]
  %799 = add i64 %798, -1
  %800 = getelementptr inbounds i8, i8* %797, i64 1
  %801 = load i8, i8* %797, align 1
  %802 = zext i8 %801 to i16
  %803 = shl nuw i16 %802, 8
  %804 = icmp eq i64 %799, 0
  br i1 %804, label %805, label %812

; <label>:805:                                    ; preds = %796
  %806 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %733, align 8
  %807 = tail call i32 %806(%struct.jpeg_decompress_struct* %0) #4
  %808 = icmp eq i32 %807, 0
  br i1 %808, label %1090, label %809

; <label>:809:                                    ; preds = %805
  %810 = load i8*, i8** %694, align 8
  %811 = load i64, i64* %695, align 8
  br label %812

; <label>:812:                                    ; preds = %809, %796
  %813 = phi i8* [ %810, %809 ], [ %800, %796 ]
  %814 = phi i64 [ %811, %809 ], [ %799, %796 ]
  %815 = load i8, i8* %813, align 1
  %816 = zext i8 %815 to i16
  %817 = or i16 %803, %816
  br label %831

; <label>:818:                                    ; preds = %783
  br i1 %787, label %819, label %826

; <label>:819:                                    ; preds = %818
  %820 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %733, align 8
  %821 = tail call i32 %820(%struct.jpeg_decompress_struct* %0) #4
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %1090, label %823

; <label>:823:                                    ; preds = %819
  %824 = load i8*, i8** %694, align 8
  %825 = load i64, i64* %695, align 8
  br label %826

; <label>:826:                                    ; preds = %823, %818
  %827 = phi i8* [ %824, %823 ], [ %786, %818 ]
  %828 = phi i64 [ %825, %823 ], [ %785, %818 ]
  %829 = load i8, i8* %827, align 1
  %830 = zext i8 %829 to i16
  br label %831

; <label>:831:                                    ; preds = %826, %812
  %832 = phi i16 [ %817, %812 ], [ %830, %826 ]
  %833 = phi i8* [ %813, %812 ], [ %827, %826 ]
  %834 = phi i64 [ %814, %812 ], [ %828, %826 ]
  %835 = getelementptr inbounds [0 x i32], [0 x i32]* @jpeg_natural_order, i64 0, i64 %784
  %836 = load i32, i32* %835, align 4
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %837
  store i16 %832, i16* %838, align 2
  %839 = add nuw nsw i64 %784, 1
  %840 = getelementptr inbounds i8, i8* %833, i64 1
  %841 = add i64 %834, -1
  %842 = icmp ult i64 %839, 64
  br i1 %842, label %783, label %843

; <label>:843:                                    ; preds = %831
  %844 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %845 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %844, i64 0, i32 7
  %846 = load i32, i32* %845, align 4
  %847 = icmp sgt i32 %846, 1
  br i1 %847, label %848, label %899

; <label>:848:                                    ; preds = %843, %897
  %849 = phi %struct.jpeg_error_mgr* [ %898, %897 ], [ %844, %843 ]
  %850 = phi i64 [ %895, %897 ], [ 0, %843 ]
  %851 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 0
  %852 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %850
  %853 = load i16, i16* %852, align 2
  %854 = zext i16 %853 to i32
  store i32 %854, i32* %851, align 4
  %855 = or i64 %850, 1
  %856 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %855
  %857 = load i16, i16* %856, align 2
  %858 = zext i16 %857 to i32
  %859 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 1
  store i32 %858, i32* %859, align 4
  %860 = or i64 %850, 2
  %861 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %860
  %862 = load i16, i16* %861, align 2
  %863 = zext i16 %862 to i32
  %864 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 2
  store i32 %863, i32* %864, align 4
  %865 = or i64 %850, 3
  %866 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %865
  %867 = load i16, i16* %866, align 2
  %868 = zext i16 %867 to i32
  %869 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 3
  store i32 %868, i32* %869, align 4
  %870 = or i64 %850, 4
  %871 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %870
  %872 = load i16, i16* %871, align 2
  %873 = zext i16 %872 to i32
  %874 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 4
  store i32 %873, i32* %874, align 4
  %875 = or i64 %850, 5
  %876 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %875
  %877 = load i16, i16* %876, align 2
  %878 = zext i16 %877 to i32
  %879 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 5
  store i32 %878, i32* %879, align 4
  %880 = or i64 %850, 6
  %881 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %880
  %882 = load i16, i16* %881, align 2
  %883 = zext i16 %882 to i32
  %884 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 6
  store i32 %883, i32* %884, align 4
  %885 = or i64 %850, 7
  %886 = getelementptr inbounds %struct.JQUANT_TBL, %struct.JQUANT_TBL* %779, i64 0, i32 0, i64 %885
  %887 = load i16, i16* %886, align 2
  %888 = zext i16 %887 to i32
  %889 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %849, i64 0, i32 6, i32 0, i64 7
  store i32 %888, i32* %889, align 4
  %890 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %891 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %890, i64 0, i32 5
  store i32 93, i32* %891, align 8
  %892 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %893 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %892, i64 0, i32 1
  %894 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %893, align 8
  tail call void %894(%struct.jpeg_common_struct* nonnull %8, i32 2) #4
  %895 = add nuw nsw i64 %850, 8
  %896 = icmp ult i64 %895, 64
  br i1 %896, label %897, label %899

; <label>:897:                                    ; preds = %848
  %898 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  br label %848

; <label>:899:                                    ; preds = %848, %843
  %900 = select i1 %782, i64 -65, i64 -129
  %901 = add i64 %900, %737
  %902 = icmp sgt i64 %901, 0
  br i1 %902, label %734, label %903

; <label>:903:                                    ; preds = %899, %722
  %904 = phi i64 [ %730, %722 ], [ %901, %899 ]
  %905 = phi i8* [ %726, %722 ], [ %840, %899 ]
  %906 = phi i64 [ %725, %722 ], [ %841, %899 ]
  %907 = icmp eq i64 %904, 0
  br i1 %907, label %914, label %908

; <label>:908:                                    ; preds = %903
  %909 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %910 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %909, i64 0, i32 5
  store i32 11, i32* %910, align 8
  %911 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %912 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %911, i64 0, i32 0
  %913 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %912, align 8
  tail call void %913(%struct.jpeg_common_struct* nonnull %8) #4
  br label %914

; <label>:914:                                    ; preds = %903, %908
  store i8* %905, i8** %694, align 8
  store i64 %906, i64* %695, align 8
  br label %1089

; <label>:915:                                    ; preds = %98
  %916 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %917 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %916, i64 0, i32 0
  %918 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %916, i64 0, i32 1
  %919 = load i64, i64* %918, align 8
  %920 = icmp eq i64 %919, 0
  br i1 %920, label %921, label %928

; <label>:921:                                    ; preds = %915
  %922 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %916, i64 0, i32 3
  %923 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %922, align 8
  %924 = tail call i32 %923(%struct.jpeg_decompress_struct* nonnull %0) #4
  %925 = icmp eq i32 %924, 0
  br i1 %925, label %1090, label %926

; <label>:926:                                    ; preds = %921
  %927 = load i64, i64* %918, align 8
  br label %928

; <label>:928:                                    ; preds = %926, %915
  %929 = phi i64 [ %927, %926 ], [ %919, %915 ]
  %930 = load i8*, i8** %917, align 8
  %931 = add i64 %929, -1
  %932 = getelementptr inbounds i8, i8* %930, i64 1
  %933 = load i8, i8* %930, align 1
  %934 = zext i8 %933 to i64
  %935 = shl nuw nsw i64 %934, 8
  %936 = icmp eq i64 %931, 0
  br i1 %936, label %937, label %945

; <label>:937:                                    ; preds = %928
  %938 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %916, i64 0, i32 3
  %939 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %938, align 8
  %940 = tail call i32 %939(%struct.jpeg_decompress_struct* nonnull %0) #4
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %1090, label %942

; <label>:942:                                    ; preds = %937
  %943 = load i8*, i8** %917, align 8
  %944 = load i64, i64* %918, align 8
  br label %945

; <label>:945:                                    ; preds = %942, %928
  %946 = phi i8* [ %943, %942 ], [ %932, %928 ]
  %947 = phi i64 [ %944, %942 ], [ %931, %928 ]
  %948 = add i64 %947, -1
  %949 = getelementptr inbounds i8, i8* %946, i64 1
  %950 = load i8, i8* %946, align 1
  %951 = zext i8 %950 to i64
  %952 = or i64 %935, %951
  %953 = icmp eq i64 %952, 4
  br i1 %953, label %960, label %954

; <label>:954:                                    ; preds = %945
  %955 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %956 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %955, i64 0, i32 5
  store i32 11, i32* %956, align 8
  %957 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %958 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %957, i64 0, i32 0
  %959 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %958, align 8
  tail call void %959(%struct.jpeg_common_struct* nonnull %8) #4
  br label %960

; <label>:960:                                    ; preds = %954, %945
  %961 = icmp eq i64 %948, 0
  br i1 %961, label %962, label %970

; <label>:962:                                    ; preds = %960
  %963 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %916, i64 0, i32 3
  %964 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %963, align 8
  %965 = tail call i32 %964(%struct.jpeg_decompress_struct* nonnull %0) #4
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %1090, label %967

; <label>:967:                                    ; preds = %962
  %968 = load i8*, i8** %917, align 8
  %969 = load i64, i64* %918, align 8
  br label %970

; <label>:970:                                    ; preds = %967, %960
  %971 = phi i8* [ %968, %967 ], [ %949, %960 ]
  %972 = phi i64 [ %969, %967 ], [ %948, %960 ]
  %973 = add i64 %972, -1
  %974 = getelementptr inbounds i8, i8* %971, i64 1
  %975 = load i8, i8* %971, align 1
  %976 = zext i8 %975 to i32
  %977 = shl nuw nsw i32 %976, 8
  %978 = icmp eq i64 %973, 0
  br i1 %978, label %979, label %987

; <label>:979:                                    ; preds = %970
  %980 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %916, i64 0, i32 3
  %981 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %980, align 8
  %982 = tail call i32 %981(%struct.jpeg_decompress_struct* nonnull %0) #4
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %1090, label %984

; <label>:984:                                    ; preds = %979
  %985 = load i8*, i8** %917, align 8
  %986 = load i64, i64* %918, align 8
  br label %987

; <label>:987:                                    ; preds = %970, %984
  %988 = phi i8* [ %985, %984 ], [ %974, %970 ]
  %989 = phi i64 [ %986, %984 ], [ %973, %970 ]
  %990 = add i64 %989, -1
  %991 = getelementptr inbounds i8, i8* %988, i64 1
  %992 = load i8, i8* %988, align 1
  %993 = zext i8 %992 to i32
  %994 = or i32 %977, %993
  %995 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %996 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %995, i64 0, i32 5
  store i32 82, i32* %996, align 8
  %997 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %998 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %997, i64 0, i32 6, i32 0, i64 0
  store i32 %994, i32* %998, align 4
  %999 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1000 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %999, i64 0, i32 1
  %1001 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1000, align 8
  tail call void %1001(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  store i32 %994, i32* %15, align 8
  store i8* %991, i8** %917, align 8
  store i64 %990, i64* %918, align 8
  br label %1089

; <label>:1002:                                   ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98, %98
  %1003 = load %struct.my_marker_reader*, %struct.my_marker_reader** %11, align 8
  %1004 = add nsw i32 %99, -224
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %1003, i64 0, i32 2, i64 %1005
  %1007 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1006, align 8
  %1008 = tail call i32 %1007(%struct.jpeg_decompress_struct* nonnull %0) #4
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1090, label %1089

; <label>:1010:                                   ; preds = %98
  %1011 = load %struct.my_marker_reader*, %struct.my_marker_reader** %11, align 8
  %1012 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %1011, i64 0, i32 1
  %1013 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1012, align 8
  %1014 = tail call i32 %1013(%struct.jpeg_decompress_struct* nonnull %0) #4
  %1015 = icmp eq i32 %1014, 0
  br i1 %1015, label %1090, label %1089

; <label>:1016:                                   ; preds = %98, %98, %98, %98, %98, %98, %98, %98, %98
  %1017 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1018 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1017, i64 0, i32 5
  store i32 92, i32* %1018, align 8
  %1019 = load i32, i32* %4, align 4
  %1020 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1021 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1020, i64 0, i32 6, i32 0, i64 0
  store i32 %1019, i32* %1021, align 4
  %1022 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1023 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1022, i64 0, i32 1
  %1024 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1023, align 8
  tail call void %1024(%struct.jpeg_common_struct* %8, i32 1) #4
  br label %1089

; <label>:1025:                                   ; preds = %98
  %1026 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %1027 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1026, i64 0, i32 0
  %1028 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1026, i64 0, i32 1
  %1029 = load i64, i64* %1028, align 8
  %1030 = icmp eq i64 %1029, 0
  br i1 %1030, label %1031, label %1038

; <label>:1031:                                   ; preds = %1025
  %1032 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1026, i64 0, i32 3
  %1033 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1032, align 8
  %1034 = tail call i32 %1033(%struct.jpeg_decompress_struct* nonnull %0) #4
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1090, label %1036

; <label>:1036:                                   ; preds = %1031
  %1037 = load i64, i64* %1028, align 8
  br label %1038

; <label>:1038:                                   ; preds = %1036, %1025
  %1039 = phi i64 [ %1037, %1036 ], [ %1029, %1025 ]
  %1040 = load i8*, i8** %1027, align 8
  %1041 = add i64 %1039, -1
  %1042 = getelementptr inbounds i8, i8* %1040, i64 1
  %1043 = load i8, i8* %1040, align 1
  %1044 = zext i8 %1043 to i64
  %1045 = shl nuw nsw i64 %1044, 8
  %1046 = icmp eq i64 %1041, 0
  br i1 %1046, label %1047, label %1055

; <label>:1047:                                   ; preds = %1038
  %1048 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1026, i64 0, i32 3
  %1049 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %1048, align 8
  %1050 = tail call i32 %1049(%struct.jpeg_decompress_struct* nonnull %0) #4
  %1051 = icmp eq i32 %1050, 0
  br i1 %1051, label %1090, label %1052

; <label>:1052:                                   ; preds = %1047
  %1053 = load i8*, i8** %1027, align 8
  %1054 = load i64, i64* %1028, align 8
  br label %1055

; <label>:1055:                                   ; preds = %1052, %1038
  %1056 = phi i8* [ %1053, %1052 ], [ %1042, %1038 ]
  %1057 = phi i64 [ %1054, %1052 ], [ %1041, %1038 ]
  %1058 = add i64 %1057, -1
  %1059 = getelementptr inbounds i8, i8* %1056, i64 1
  %1060 = load i8, i8* %1056, align 1
  %1061 = zext i8 %1060 to i64
  %1062 = or i64 %1045, %1061
  %1063 = add nsw i64 %1062, -2
  %1064 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1065 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1064, i64 0, i32 5
  store i32 91, i32* %1065, align 8
  %1066 = load i32, i32* %4, align 4
  %1067 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1068 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1067, i64 0, i32 6, i32 0, i64 0
  store i32 %1066, i32* %1068, align 4
  %1069 = trunc i64 %1063 to i32
  %1070 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1071 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1070, i64 0, i32 6, i32 0, i64 1
  store i32 %1069, i32* %1071, align 4
  %1072 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1073 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1072, i64 0, i32 1
  %1074 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %1073, align 8
  tail call void %1074(%struct.jpeg_common_struct* nonnull %8, i32 1) #4
  store i8* %1059, i8** %1027, align 8
  store i64 %1058, i64* %1028, align 8
  %1075 = icmp ugt i64 %1062, 2
  br i1 %1075, label %1076, label %1089

; <label>:1076:                                   ; preds = %1055
  %1077 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %6, align 8
  %1078 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %1077, i64 0, i32 4
  %1079 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %1078, align 8
  tail call void %1079(%struct.jpeg_decompress_struct* nonnull %0, i64 %1063) #4
  br label %1089

; <label>:1080:                                   ; preds = %98
  %1081 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1082 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1081, i64 0, i32 5
  store i32 68, i32* %1082, align 8
  %1083 = load i32, i32* %4, align 4
  %1084 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1085 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1084, i64 0, i32 6, i32 0, i64 0
  store i32 %1083, i32* %1085, align 4
  %1086 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %7, align 8
  %1087 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %1086, i64 0, i32 0
  %1088 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %1087, align 8
  tail call void %1088(%struct.jpeg_common_struct* %8) #4
  br label %1089

; <label>:1089:                                   ; preds = %1076, %1055, %987, %914, %691, %471, %450, %120, %123, %126, %129, %1002, %1010, %118, %1080, %1016, %132
  store i32 0, i32* %4, align 4
  br label %35

; <label>:1090:                                   ; preds = %1047, %1031, %979, %962, %937, %921, %714, %698, %442, %426, %64, %49, %1010, %1002, %129, %126, %123, %120, %93, %739, %819, %805, %789, %263, %248, %376, %359, %342, %193, %176, %159, %690, %414, %384
  %1091 = phi i32 [ 2, %414 ], [ 1, %384 ], [ 0, %690 ], [ 0, %159 ], [ 0, %176 ], [ 0, %193 ], [ 0, %342 ], [ 0, %359 ], [ 0, %376 ], [ 0, %248 ], [ 0, %263 ], [ 0, %789 ], [ 0, %805 ], [ 0, %819 ], [ 0, %739 ], [ 0, %93 ], [ 0, %120 ], [ 0, %123 ], [ 0, %126 ], [ 0, %129 ], [ 0, %1002 ], [ 0, %1010 ], [ 0, %49 ], [ 0, %64 ], [ 0, %426 ], [ 0, %442 ], [ 0, %698 ], [ 0, %714 ], [ 0, %921 ], [ 0, %937 ], [ 0, %962 ], [ 0, %979 ], [ 0, %1031 ], [ 0, %1047 ]
  ret i32 %1091

; <label>:1092:                                   ; preds = %285
  %1093 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %286, i64 0, i32 0
  %1094 = load i32, i32* %1093, align 8
  %1095 = icmp eq i32 %1094, %261
  br i1 %1095, label %1096, label %1099

; <label>:1096:                                   ; preds = %1092
  %1097 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %240, align 8
  %1098 = icmp eq %struct.jpeg_component_info* %1097, null
  br i1 %1098, label %297, label %1099

; <label>:1099:                                   ; preds = %1096, %1092
  %1100 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 2
  %1101 = icmp sgt i32 %276, 2
  br i1 %1101, label %1102, label %288

; <label>:1102:                                   ; preds = %1099
  %1103 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1100, i64 0, i32 0
  %1104 = load i32, i32* %1103, align 8
  %1105 = icmp eq i32 %1104, %261
  br i1 %1105, label %1106, label %1109

; <label>:1106:                                   ; preds = %1102
  %1107 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %241, align 8
  %1108 = icmp eq %struct.jpeg_component_info* %1107, null
  br i1 %1108, label %297, label %1109

; <label>:1109:                                   ; preds = %1106, %1102
  %1110 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 3
  %1111 = icmp sgt i32 %276, 3
  br i1 %1111, label %1112, label %288

; <label>:1112:                                   ; preds = %1109
  %1113 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %1110, i64 0, i32 0
  %1114 = load i32, i32* %1113, align 8
  %1115 = icmp eq i32 %1114, %261
  br i1 %1115, label %1116, label %1119

; <label>:1116:                                   ; preds = %1112
  %1117 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %242, align 8
  %1118 = icmp eq %struct.jpeg_component_info* %1117, null
  br i1 %1118, label %297, label %1119

; <label>:1119:                                   ; preds = %1116, %1112
  %1120 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %275, i64 4
  br label %288
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @read_restart_marker(%struct.jpeg_decompress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %10

; <label>:5:                                      ; preds = %1
  %6 = tail call fastcc i32 @next_marker(%struct.jpeg_decompress_struct* nonnull %0)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %45, label %8

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %2, align 4
  br label %10

; <label>:10:                                     ; preds = %8, %1
  %11 = phi i32 [ %9, %8 ], [ %3, %1 ]
  %12 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %13 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %14 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 208
  %17 = icmp eq i32 %11, %16
  br i1 %17, label %18, label %31

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %20 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %21 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %20, i64 0, i32 5
  store i32 98, i32* %21, align 8
  %22 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %23 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %26 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %25, i64 0, i32 6, i32 0, i64 0
  store i32 %24, i32* %26, align 4
  %27 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %19, align 8
  %28 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %27, i64 0, i32 1
  %29 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %28, align 8
  %30 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %29(%struct.jpeg_common_struct* %30, i32 3) #4
  store i32 0, i32* %2, align 4
  br label %39

; <label>:31:                                     ; preds = %10
  %32 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %33 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %32, align 8
  %34 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %33, i64 0, i32 5
  %35 = bitcast {}** %34 to i32 (%struct.jpeg_decompress_struct*, i32)**
  %36 = load i32 (%struct.jpeg_decompress_struct*, i32)*, i32 (%struct.jpeg_decompress_struct*, i32)** %35, align 8
  %37 = tail call i32 %36(%struct.jpeg_decompress_struct* nonnull %0, i32 %15) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

; <label>:39:                                     ; preds = %31, %18
  %40 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %12, align 8
  %41 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %40, i64 0, i32 5
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, 1
  %44 = and i32 %43, 7
  store i32 %44, i32* %41, align 8
  br label %45

; <label>:45:                                     ; preds = %31, %5, %39
  %46 = phi i32 [ 1, %39 ], [ 0, %5 ], [ 0, %31 ]
  ret i32 %46
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @skip_variable(%struct.jpeg_decompress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %3 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %4 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 0
  %5 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 3
  %10 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %9, align 8
  %11 = tail call i32 %10(%struct.jpeg_decompress_struct* nonnull %0) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %60, label %13

; <label>:13:                                     ; preds = %8
  %14 = load i64, i64* %5, align 8
  br label %15

; <label>:15:                                     ; preds = %13, %1
  %16 = phi i64 [ %14, %13 ], [ %6, %1 ]
  %17 = load i8*, i8** %4, align 8
  %18 = add i64 %16, -1
  %19 = getelementptr inbounds i8, i8* %17, i64 1
  %20 = load i8, i8* %17, align 1
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 8
  %23 = icmp eq i64 %18, 0
  br i1 %23, label %24, label %32

; <label>:24:                                     ; preds = %15
  %25 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %3, i64 0, i32 3
  %26 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %25, align 8
  %27 = tail call i32 %26(%struct.jpeg_decompress_struct* nonnull %0) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %60, label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %4, align 8
  %31 = load i64, i64* %5, align 8
  br label %32

; <label>:32:                                     ; preds = %29, %15
  %33 = phi i8* [ %30, %29 ], [ %19, %15 ]
  %34 = phi i64 [ %31, %29 ], [ %18, %15 ]
  %35 = add i64 %34, -1
  %36 = getelementptr inbounds i8, i8* %33, i64 1
  %37 = load i8, i8* %33, align 1
  %38 = zext i8 %37 to i64
  %39 = or i64 %22, %38
  %40 = add nsw i64 %39, -2
  %41 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %42 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %43 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %42, i64 0, i32 5
  store i32 91, i32* %43, align 8
  %44 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %45 = load i32, i32* %44, align 4
  %46 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %47 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %46, i64 0, i32 6, i32 0, i64 0
  store i32 %45, i32* %47, align 4
  %48 = trunc i64 %40 to i32
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 6, i32 0, i64 1
  store i32 %48, i32* %50, align 4
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %41, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 1
  %53 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %52, align 8
  %54 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %53(%struct.jpeg_common_struct* %54, i32 1) #4
  store i8* %36, i8** %4, align 8
  store i64 %35, i64* %5, align 8
  %55 = icmp ugt i64 %39, 2
  br i1 %55, label %56, label %60

; <label>:56:                                     ; preds = %32
  %57 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %2, align 8
  %58 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %57, i64 0, i32 4
  %59 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %58, align 8
  tail call void %59(%struct.jpeg_decompress_struct* nonnull %0, i64 %40) #4
  br label %60

; <label>:60:                                     ; preds = %32, %56, %24, %8
  %61 = phi i32 [ 0, %8 ], [ 0, %24 ], [ 1, %56 ], [ 1, %32 ]
  ret i32 %61
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @get_interesting_appn(%struct.jpeg_decompress_struct*) #0 {
  %2 = alloca [14 x i8], align 1
  %3 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 14, i8* nonnull %3) #4
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %5 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 0
  %7 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %17

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %12 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %11, align 8
  %13 = tail call i32 %12(%struct.jpeg_decompress_struct* nonnull %0) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %173, label %15

; <label>:15:                                     ; preds = %10
  %16 = load i64, i64* %7, align 8
  br label %17

; <label>:17:                                     ; preds = %15, %1
  %18 = phi i64 [ %16, %15 ], [ %8, %1 ]
  %19 = load i8*, i8** %6, align 8
  %20 = add i64 %18, -1
  %21 = getelementptr inbounds i8, i8* %19, i64 1
  %22 = load i8, i8* %19, align 1
  %23 = zext i8 %22 to i64
  %24 = shl nuw nsw i64 %23, 8
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %26, label %34

; <label>:26:                                     ; preds = %17
  %27 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %28 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %27, align 8
  %29 = tail call i32 %28(%struct.jpeg_decompress_struct* nonnull %0) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %173, label %31

; <label>:31:                                     ; preds = %26
  %32 = load i8*, i8** %6, align 8
  %33 = load i64, i64* %7, align 8
  br label %34

; <label>:34:                                     ; preds = %31, %17
  %35 = phi i8* [ %32, %31 ], [ %21, %17 ]
  %36 = phi i64 [ %33, %31 ], [ %20, %17 ]
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i64
  %39 = or i64 %24, %38
  %40 = add nsw i64 %39, -2
  %41 = icmp ugt i64 %39, 15
  %42 = icmp ugt i64 %39, 2
  %43 = trunc i64 %40 to i32
  %44 = select i1 %42, i32 %43, i32 0
  %45 = select i1 %41, i32 14, i32 %44
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = add i64 %36, -1
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %73, label %49

; <label>:49:                                     ; preds = %34
  %50 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %51 = zext i32 %45 to i64
  br label %52

; <label>:52:                                     ; preds = %49, %64
  %53 = phi i64 [ 0, %49 ], [ %69, %64 ]
  %54 = phi i64 [ %47, %49 ], [ %71, %64 ]
  %55 = phi i8* [ %46, %49 ], [ %70, %64 ]
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %64

; <label>:57:                                     ; preds = %52
  %58 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %50, align 8
  %59 = tail call i32 %58(%struct.jpeg_decompress_struct* %0) #4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %173, label %61

; <label>:61:                                     ; preds = %57
  %62 = load i8*, i8** %6, align 8
  %63 = load i64, i64* %7, align 8
  br label %64

; <label>:64:                                     ; preds = %61, %52
  %65 = phi i8* [ %62, %61 ], [ %55, %52 ]
  %66 = phi i64 [ %63, %61 ], [ %54, %52 ]
  %67 = load i8, i8* %65, align 1
  %68 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 %53
  store i8 %67, i8* %68, align 1
  %69 = add nuw nsw i64 %53, 1
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  %71 = add i64 %66, -1
  %72 = icmp ult i64 %69, %51
  br i1 %72, label %52, label %73

; <label>:73:                                     ; preds = %64, %34
  %74 = phi i64 [ 0, %34 ], [ %51, %64 ]
  %75 = phi i8* [ %46, %34 ], [ %70, %64 ]
  %76 = phi i64 [ %47, %34 ], [ %71, %64 ]
  %77 = sub nsw i64 %40, %74
  %78 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %79 = load i32, i32* %78, align 4
  switch i32 %79, label %156 [
    i32 224, label %80
    i32 238, label %81
  ]

; <label>:80:                                     ; preds = %73
  call fastcc void @examine_app0(%struct.jpeg_decompress_struct* nonnull %0, i8* nonnull %3, i32 %45, i64 %77)
  br label %167

; <label>:81:                                     ; preds = %73
  %82 = icmp ugt i32 %45, 11
  %83 = load i8, i8* %3, align 1
  %84 = icmp eq i8 %83, 65
  %85 = and i1 %82, %84
  br i1 %85, label %86, label %144

; <label>:86:                                     ; preds = %81
  %87 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 100
  br i1 %89, label %90, label %144

; <label>:90:                                     ; preds = %86
  %91 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 2
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 111
  br i1 %93, label %94, label %144

; <label>:94:                                     ; preds = %90
  %95 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 3
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 98
  br i1 %97, label %98, label %144

; <label>:98:                                     ; preds = %94
  %99 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 4
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 101
  br i1 %101, label %102, label %144

; <label>:102:                                    ; preds = %98
  %103 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 5
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i32
  %106 = shl nuw nsw i32 %105, 8
  %107 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 6
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = or i32 %106, %109
  %111 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 7
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 8
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %114, %117
  %119 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 9
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 8
  %123 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 10
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = or i32 %122, %125
  %127 = getelementptr inbounds [14 x i8], [14 x i8]* %2, i64 0, i64 11
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 0
  store i32 %110, i32* %132, align 4
  %133 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 1
  store i32 %118, i32* %133, align 4
  %134 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 2
  store i32 %126, i32* %134, align 4
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 6, i32 0, i64 3
  store i32 %129, i32* %135, align 4
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 5
  store i32 76, i32* %137, align 8
  %138 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %130, align 8
  %139 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %138, i64 0, i32 1
  %140 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %139, align 8
  %141 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %140(%struct.jpeg_common_struct* %141, i32 1) #4
  %142 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  store i32 1, i32* %142, align 8
  %143 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  store i8 %128, i8* %143, align 4
  br label %167

; <label>:144:                                    ; preds = %98, %94, %90, %86, %81
  %145 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %146 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %147 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %146, i64 0, i32 5
  store i32 78, i32* %147, align 8
  %148 = trunc i64 %77 to i32
  %149 = add i32 %45, %148
  %150 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %151 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %150, i64 0, i32 6, i32 0, i64 0
  store i32 %149, i32* %151, align 4
  %152 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %145, align 8
  %153 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %152, i64 0, i32 1
  %154 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %153, align 8
  %155 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %154(%struct.jpeg_common_struct* %155, i32 1) #4
  br label %167

; <label>:156:                                    ; preds = %73
  %157 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %158 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %158, i64 0, i32 5
  store i32 68, i32* %159, align 8
  %160 = load i32, i32* %78, align 4
  %161 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %162 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %161, i64 0, i32 6, i32 0, i64 0
  store i32 %160, i32* %162, align 4
  %163 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %157, align 8
  %164 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %163, i64 0, i32 0
  %165 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %164, align 8
  %166 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %165(%struct.jpeg_common_struct* %166) #4
  br label %167

; <label>:167:                                    ; preds = %144, %102, %156, %80
  store i8* %75, i8** %6, align 8
  store i64 %76, i64* %7, align 8
  %168 = icmp sgt i64 %77, 0
  br i1 %168, label %169, label %173

; <label>:169:                                    ; preds = %167
  %170 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %4, align 8
  %171 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %170, i64 0, i32 4
  %172 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %171, align 8
  tail call void %172(%struct.jpeg_decompress_struct* nonnull %0, i64 %77) #4
  br label %173

; <label>:173:                                    ; preds = %57, %167, %169, %26, %10
  %174 = phi i32 [ 0, %10 ], [ 0, %26 ], [ 1, %169 ], [ 1, %167 ], [ 0, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 14, i8* nonnull %3) #4
  ret i32 %174
}

; Function Attrs: nounwind sspstrong uwtable
define hidden void @jpeg_save_markers(%struct.jpeg_decompress_struct*, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %5 = bitcast %struct.jpeg_marker_reader** %4 to %struct.my_marker_reader**
  %6 = load %struct.my_marker_reader*, %struct.my_marker_reader** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %8 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %8, i64 0, i32 12
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -32
  %12 = zext i32 %2 to i64
  %13 = icmp slt i64 %11, %12
  %14 = trunc i64 %11 to i32
  %15 = select i1 %13, i32 %14, i32 %2
  %16 = icmp eq i32 %15, 0
  %17 = icmp eq i32 %1, 224
  br i1 %16, label %26, label %18

; <label>:18:                                     ; preds = %3
  %19 = icmp ult i32 %15, 14
  %20 = and i1 %17, %19
  br i1 %20, label %40, label %21

; <label>:21:                                     ; preds = %18
  %22 = icmp eq i32 %1, 238
  %23 = icmp ult i32 %15, 12
  %24 = and i1 %22, %23
  %25 = select i1 %24, i32 12, i32 %15
  br label %30

; <label>:26:                                     ; preds = %3
  %27 = icmp eq i32 %1, 238
  %28 = or i1 %17, %27
  %29 = select i1 %28, i32 (%struct.jpeg_decompress_struct*)* @get_interesting_appn, i32 (%struct.jpeg_decompress_struct*)* @skip_variable
  br label %30

; <label>:30:                                     ; preds = %21, %26
  %31 = phi i32 [ 0, %26 ], [ %25, %21 ]
  %32 = phi i32 (%struct.jpeg_decompress_struct*)* [ %29, %26 ], [ @save_marker, %21 ]
  %33 = icmp eq i32 %1, 254
  br i1 %33, label %34, label %37

; <label>:34:                                     ; preds = %30
  %35 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 1
  store i32 (%struct.jpeg_decompress_struct*)* %32, i32 (%struct.jpeg_decompress_struct*)** %35, align 8
  %36 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 3
  store i32 %31, i32* %36, align 8
  br label %57

; <label>:37:                                     ; preds = %30
  %38 = and i32 %1, -16
  %39 = icmp eq i32 %38, 224
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %18, %37
  %41 = phi i32 [ %31, %37 ], [ 14, %18 ]
  %42 = phi i32 (%struct.jpeg_decompress_struct*)* [ %32, %37 ], [ @save_marker, %18 ]
  %43 = add nsw i32 %1, -224
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 2, i64 %44
  store i32 (%struct.jpeg_decompress_struct*)* %42, i32 (%struct.jpeg_decompress_struct*)** %45, align 8
  %46 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 4, i64 %44
  store i32 %41, i32* %46, align 4
  br label %57

; <label>:47:                                     ; preds = %37
  %48 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %49 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %50 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %49, i64 0, i32 5
  store i32 68, i32* %50, align 8
  %51 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %52 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %51, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %52, align 4
  %53 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %48, align 8
  %54 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %53, i64 0, i32 0
  %55 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %54, align 8
  %56 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %55(%struct.jpeg_common_struct* %56) #4
  br label %57

; <label>:57:                                     ; preds = %40, %47, %34
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @save_marker(%struct.jpeg_decompress_struct*) #0 {
  %2 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %3 = bitcast %struct.jpeg_marker_reader** %2 to %struct.my_marker_reader**
  %4 = load %struct.my_marker_reader*, %struct.my_marker_reader** %3, align 8
  %5 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 5
  %6 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %5, align 8
  %7 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %8 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8
  %9 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq %struct.jpeg_marker_struct* %6, null
  br i1 %13, label %14, label %86

; <label>:14:                                     ; preds = %1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %14
  %17 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 3
  %18 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %17, align 8
  %19 = tail call i32 %18(%struct.jpeg_decompress_struct* nonnull %0) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %387, label %21

; <label>:21:                                     ; preds = %16
  %22 = load i8*, i8** %9, align 8
  %23 = load i64, i64* %11, align 8
  br label %24

; <label>:24:                                     ; preds = %21, %14
  %25 = phi i8* [ %22, %21 ], [ %10, %14 ]
  %26 = phi i64 [ %23, %21 ], [ %12, %14 ]
  %27 = add i64 %26, -1
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  %29 = load i8, i8* %25, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = icmp eq i64 %27, 0
  br i1 %32, label %33, label %41

; <label>:33:                                     ; preds = %24
  %34 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 3
  %35 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %34, align 8
  %36 = tail call i32 %35(%struct.jpeg_decompress_struct* nonnull %0) #4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %387, label %38

; <label>:38:                                     ; preds = %33
  %39 = load i8*, i8** %9, align 8
  %40 = load i64, i64* %11, align 8
  br label %41

; <label>:41:                                     ; preds = %38, %24
  %42 = phi i8* [ %39, %38 ], [ %28, %24 ]
  %43 = phi i64 [ %40, %38 ], [ %27, %24 ]
  %44 = add i64 %43, -1
  %45 = getelementptr inbounds i8, i8* %42, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = zext i8 %46 to i64
  %48 = or i64 %31, %47
  %49 = add nsw i64 %48, -2
  %50 = icmp ugt i64 %48, 1
  br i1 %50, label %51, label %282

; <label>:51:                                     ; preds = %41
  %52 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 254
  %55 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 3
  %56 = add nsw i32 %53, -224
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 4, i64 %57
  %59 = select i1 %54, i32* %55, i32* %58
  %60 = load i32, i32* %59, align 4
  %61 = trunc i64 %49 to i32
  %62 = icmp ugt i32 %60, %61
  %63 = select i1 %62, i32 %61, i32 %60
  %64 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %65 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %64, align 8
  %66 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %65, i64 0, i32 1
  %67 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %66, align 8
  %68 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  %69 = zext i32 %63 to i64
  %70 = add nuw nsw i64 %69, 32
  %71 = tail call i8* %67(%struct.jpeg_common_struct* %68, i32 1, i64 %70) #4
  %72 = bitcast i8* %71 to %struct.jpeg_marker_struct*
  %73 = bitcast i8* %71 to %struct.jpeg_marker_struct**
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %73, align 8
  %74 = load i32, i32* %52, align 4
  %75 = trunc i32 %74 to i8
  %76 = getelementptr inbounds i8, i8* %71, i64 8
  store i8 %75, i8* %76, align 8
  %77 = getelementptr inbounds i8, i8* %71, i64 12
  %78 = bitcast i8* %77 to i32*
  store i32 %61, i32* %78, align 4
  %79 = getelementptr inbounds i8, i8* %71, i64 16
  %80 = bitcast i8* %79 to i32*
  store i32 %63, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %71, i64 32
  %82 = getelementptr inbounds i8, i8* %71, i64 24
  %83 = bitcast i8* %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %struct.jpeg_marker_struct** %5 to i8**
  store i8* %71, i8** %84, align 8
  %85 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 6
  store i32 0, i32* %85, align 8
  br label %95

; <label>:86:                                     ; preds = %1
  %87 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 6
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %6, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %6, i64 0, i32 4
  %92 = load i8*, i8** %91, align 8
  %93 = zext i32 %88 to i64
  %94 = getelementptr inbounds i8, i8* %92, i64 %93
  br label %95

; <label>:95:                                     ; preds = %51, %86
  %96 = phi %struct.jpeg_marker_struct* [ %72, %51 ], [ %6, %86 ]
  %97 = phi i32 [ 0, %51 ], [ %88, %86 ]
  %98 = phi i32 [ %63, %51 ], [ %90, %86 ]
  %99 = phi i8* [ %81, %51 ], [ %94, %86 ]
  %100 = phi i64 [ %49, %51 ], [ 0, %86 ]
  %101 = phi i8* [ %45, %51 ], [ %10, %86 ]
  %102 = phi i64 [ %44, %51 ], [ %12, %86 ]
  %103 = icmp ult i32 %97, %98
  br i1 %103, label %104, label %258

; <label>:104:                                    ; preds = %95
  %105 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %4, i64 0, i32 6
  %106 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %8, i64 0, i32 3
  br label %113

; <label>:107:                                    ; preds = %245, %238, %126
  %108 = phi i32 [ %117, %126 ], [ %162, %238 ], [ %254, %245 ]
  %109 = phi i8* [ %116, %126 ], [ %160, %238 ], [ %252, %245 ]
  %110 = phi i8* [ %127, %126 ], [ %159, %238 ], [ %250, %245 ]
  %111 = phi i64 [ %128, %126 ], [ %158, %238 ], [ %253, %245 ]
  %112 = icmp ult i32 %108, %98
  br i1 %112, label %113, label %258

; <label>:113:                                    ; preds = %104, %107
  %114 = phi i64 [ %102, %104 ], [ %111, %107 ]
  %115 = phi i8* [ %101, %104 ], [ %110, %107 ]
  %116 = phi i8* [ %99, %104 ], [ %109, %107 ]
  %117 = phi i32 [ %97, %104 ], [ %108, %107 ]
  store i8* %115, i8** %9, align 8
  store i64 %114, i64* %11, align 8
  store i32 %117, i32* %105, align 8
  %118 = icmp eq i64 %114, 0
  br i1 %118, label %119, label %126

; <label>:119:                                    ; preds = %113
  %120 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %106, align 8
  %121 = tail call i32 %120(%struct.jpeg_decompress_struct* %0) #4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %387, label %123

; <label>:123:                                    ; preds = %119
  %124 = load i8*, i8** %9, align 8
  %125 = load i64, i64* %11, align 8
  br label %126

; <label>:126:                                    ; preds = %123, %113
  %127 = phi i8* [ %124, %123 ], [ %115, %113 ]
  %128 = phi i64 [ %125, %123 ], [ %114, %113 ]
  %129 = icmp ult i32 %117, %98
  %130 = icmp ne i64 %128, 0
  %131 = and i1 %129, %130
  br i1 %131, label %132, label %107

; <label>:132:                                    ; preds = %126
  %133 = sub i64 0, %128
  %134 = xor i32 %117, -1
  %135 = add i32 %98, %134
  %136 = zext i32 %135 to i64
  %137 = xor i64 %136, -1
  %138 = icmp ugt i64 %133, %137
  %139 = select i1 %138, i64 %133, i64 %137
  %140 = sub nsw i64 0, %139
  %141 = icmp ult i64 %140, 32
  br i1 %141, label %240, label %142

; <label>:142:                                    ; preds = %132
  %143 = sub i64 0, %128
  %144 = xor i32 %117, -1
  %145 = add i32 %98, %144
  %146 = zext i32 %145 to i64
  %147 = xor i64 %146, -1
  %148 = icmp ugt i64 %143, %147
  %149 = select i1 %148, i64 %143, i64 %147
  %150 = sub nsw i64 0, %149
  %151 = getelementptr i8, i8* %116, i64 %150
  %152 = getelementptr i8, i8* %127, i64 %150
  %153 = icmp ult i8* %116, %152
  %154 = icmp ult i8* %127, %151
  %155 = and i1 %153, %154
  br i1 %155, label %240, label %156

; <label>:156:                                    ; preds = %142
  %157 = and i64 %140, 8589934560
  %158 = sub i64 %128, %157
  %159 = getelementptr i8, i8* %127, i64 %157
  %160 = getelementptr i8, i8* %116, i64 %157
  %161 = trunc i64 %157 to i32
  %162 = add i32 %117, %161
  %163 = add nsw i64 %157, -32
  %164 = lshr exact i64 %163, 5
  %165 = add nuw nsw i64 %164, 1
  %166 = and i64 %165, 3
  %167 = icmp ult i64 %163, 96
  br i1 %167, label %219, label %168

; <label>:168:                                    ; preds = %156
  %169 = sub nsw i64 %165, %166
  br label %170

; <label>:170:                                    ; preds = %170, %168
  %171 = phi i64 [ 0, %168 ], [ %216, %170 ]
  %172 = phi i64 [ %169, %168 ], [ %217, %170 ]
  %173 = getelementptr i8, i8* %127, i64 %171
  %174 = getelementptr i8, i8* %116, i64 %171
  %175 = bitcast i8* %173 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !3
  %177 = getelementptr i8, i8* %173, i64 16
  %178 = bitcast i8* %177 to <16 x i8>*
  %179 = load <16 x i8>, <16 x i8>* %178, align 1, !alias.scope !3
  %180 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %180, align 1, !alias.scope !6, !noalias !3
  %181 = getelementptr i8, i8* %174, i64 16
  %182 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %179, <16 x i8>* %182, align 1, !alias.scope !6, !noalias !3
  %183 = or i64 %171, 32
  %184 = getelementptr i8, i8* %127, i64 %183
  %185 = getelementptr i8, i8* %116, i64 %183
  %186 = bitcast i8* %184 to <16 x i8>*
  %187 = load <16 x i8>, <16 x i8>* %186, align 1, !alias.scope !3
  %188 = getelementptr i8, i8* %184, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !3
  %191 = bitcast i8* %185 to <16 x i8>*
  store <16 x i8> %187, <16 x i8>* %191, align 1, !alias.scope !6, !noalias !3
  %192 = getelementptr i8, i8* %185, i64 16
  %193 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %193, align 1, !alias.scope !6, !noalias !3
  %194 = or i64 %171, 64
  %195 = getelementptr i8, i8* %127, i64 %194
  %196 = getelementptr i8, i8* %116, i64 %194
  %197 = bitcast i8* %195 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !3
  %199 = getelementptr i8, i8* %195, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  %201 = load <16 x i8>, <16 x i8>* %200, align 1, !alias.scope !3
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %202, align 1, !alias.scope !6, !noalias !3
  %203 = getelementptr i8, i8* %196, i64 16
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %201, <16 x i8>* %204, align 1, !alias.scope !6, !noalias !3
  %205 = or i64 %171, 96
  %206 = getelementptr i8, i8* %127, i64 %205
  %207 = getelementptr i8, i8* %116, i64 %205
  %208 = bitcast i8* %206 to <16 x i8>*
  %209 = load <16 x i8>, <16 x i8>* %208, align 1, !alias.scope !3
  %210 = getelementptr i8, i8* %206, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  %212 = load <16 x i8>, <16 x i8>* %211, align 1, !alias.scope !3
  %213 = bitcast i8* %207 to <16 x i8>*
  store <16 x i8> %209, <16 x i8>* %213, align 1, !alias.scope !6, !noalias !3
  %214 = getelementptr i8, i8* %207, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %212, <16 x i8>* %215, align 1, !alias.scope !6, !noalias !3
  %216 = add i64 %171, 128
  %217 = add i64 %172, -4
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %170, !llvm.loop !8

; <label>:219:                                    ; preds = %170, %156
  %220 = phi i64 [ 0, %156 ], [ %216, %170 ]
  %221 = icmp eq i64 %166, 0
  br i1 %221, label %238, label %222

; <label>:222:                                    ; preds = %219, %222
  %223 = phi i64 [ %235, %222 ], [ %220, %219 ]
  %224 = phi i64 [ %236, %222 ], [ %166, %219 ]
  %225 = getelementptr i8, i8* %127, i64 %223
  %226 = getelementptr i8, i8* %116, i64 %223
  %227 = bitcast i8* %225 to <16 x i8>*
  %228 = load <16 x i8>, <16 x i8>* %227, align 1, !alias.scope !3
  %229 = getelementptr i8, i8* %225, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  %231 = load <16 x i8>, <16 x i8>* %230, align 1, !alias.scope !3
  %232 = bitcast i8* %226 to <16 x i8>*
  store <16 x i8> %228, <16 x i8>* %232, align 1, !alias.scope !6, !noalias !3
  %233 = getelementptr i8, i8* %226, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %231, <16 x i8>* %234, align 1, !alias.scope !6, !noalias !3
  %235 = add i64 %223, 32
  %236 = add i64 %224, -1
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %222, !llvm.loop !10

; <label>:238:                                    ; preds = %222, %219
  %239 = icmp eq i64 %157, %140
  br i1 %239, label %107, label %240

; <label>:240:                                    ; preds = %238, %142, %132
  %241 = phi i64 [ %128, %142 ], [ %128, %132 ], [ %158, %238 ]
  %242 = phi i8* [ %127, %142 ], [ %127, %132 ], [ %159, %238 ]
  %243 = phi i8* [ %116, %142 ], [ %116, %132 ], [ %160, %238 ]
  %244 = phi i32 [ %117, %142 ], [ %117, %132 ], [ %162, %238 ]
  br label %245

; <label>:245:                                    ; preds = %240, %245
  %246 = phi i64 [ %253, %245 ], [ %241, %240 ]
  %247 = phi i8* [ %250, %245 ], [ %242, %240 ]
  %248 = phi i8* [ %252, %245 ], [ %243, %240 ]
  %249 = phi i32 [ %254, %245 ], [ %244, %240 ]
  %250 = getelementptr inbounds i8, i8* %247, i64 1
  %251 = load i8, i8* %247, align 1
  %252 = getelementptr inbounds i8, i8* %248, i64 1
  store i8 %251, i8* %248, align 1
  %253 = add i64 %246, -1
  %254 = add nuw i32 %249, 1
  %255 = icmp ult i32 %254, %98
  %256 = icmp ne i64 %253, 0
  %257 = and i1 %255, %256
  br i1 %257, label %245, label %107, !llvm.loop !12

; <label>:258:                                    ; preds = %107, %95
  %259 = phi i8* [ %99, %95 ], [ %109, %107 ]
  %260 = phi i8* [ %101, %95 ], [ %110, %107 ]
  %261 = phi i64 [ %102, %95 ], [ %111, %107 ]
  %262 = icmp eq %struct.jpeg_marker_struct* %96, null
  br i1 %262, label %282, label %263

; <label>:263:                                    ; preds = %258
  %264 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 60
  %265 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %264, align 8
  %266 = icmp eq %struct.jpeg_marker_struct* %265, null
  br i1 %266, label %274, label %267

; <label>:267:                                    ; preds = %263, %267
  %268 = phi %struct.jpeg_marker_struct* [ %270, %267 ], [ %265, %263 ]
  %269 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %268, i64 0, i32 0
  %270 = load %struct.jpeg_marker_struct*, %struct.jpeg_marker_struct** %269, align 8
  %271 = icmp eq %struct.jpeg_marker_struct* %270, null
  br i1 %271, label %272, label %267

; <label>:272:                                    ; preds = %267
  %273 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %268, i64 0, i32 0
  br label %274

; <label>:274:                                    ; preds = %263, %272
  %275 = phi %struct.jpeg_marker_struct** [ %273, %272 ], [ %264, %263 ]
  store %struct.jpeg_marker_struct* %96, %struct.jpeg_marker_struct** %275, align 8
  %276 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 4
  %277 = load i8*, i8** %276, align 8
  %278 = getelementptr inbounds %struct.jpeg_marker_struct, %struct.jpeg_marker_struct* %96, i64 0, i32 2
  %279 = load i32, i32* %278, align 4
  %280 = sub i32 %279, %98
  %281 = zext i32 %280 to i64
  br label %282

; <label>:282:                                    ; preds = %41, %258, %274
  %283 = phi i64 [ %261, %274 ], [ %261, %258 ], [ %44, %41 ]
  %284 = phi i8* [ %260, %274 ], [ %260, %258 ], [ %45, %41 ]
  %285 = phi i32 [ %98, %274 ], [ %98, %258 ], [ 0, %41 ]
  %286 = phi i8* [ %277, %274 ], [ %259, %258 ], [ null, %41 ]
  %287 = phi i64 [ %281, %274 ], [ %100, %258 ], [ %49, %41 ]
  store %struct.jpeg_marker_struct* null, %struct.jpeg_marker_struct** %5, align 8
  %288 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %289 = load i32, i32* %288, align 4
  switch i32 %289, label %366 [
    i32 224, label %290
    i32 238, label %291
  ]

; <label>:290:                                    ; preds = %282
  tail call fastcc void @examine_app0(%struct.jpeg_decompress_struct* nonnull %0, i8* %286, i32 %285, i64 %287)
  br label %381

; <label>:291:                                    ; preds = %282
  %292 = icmp ugt i32 %285, 11
  br i1 %292, label %293, label %354

; <label>:293:                                    ; preds = %291
  %294 = load i8, i8* %286, align 1
  %295 = icmp eq i8 %294, 65
  br i1 %295, label %296, label %354

; <label>:296:                                    ; preds = %293
  %297 = getelementptr inbounds i8, i8* %286, i64 1
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 100
  br i1 %299, label %300, label %354

; <label>:300:                                    ; preds = %296
  %301 = getelementptr inbounds i8, i8* %286, i64 2
  %302 = load i8, i8* %301, align 1
  %303 = icmp eq i8 %302, 111
  br i1 %303, label %304, label %354

; <label>:304:                                    ; preds = %300
  %305 = getelementptr inbounds i8, i8* %286, i64 3
  %306 = load i8, i8* %305, align 1
  %307 = icmp eq i8 %306, 98
  br i1 %307, label %308, label %354

; <label>:308:                                    ; preds = %304
  %309 = getelementptr inbounds i8, i8* %286, i64 4
  %310 = load i8, i8* %309, align 1
  %311 = icmp eq i8 %310, 101
  br i1 %311, label %312, label %354

; <label>:312:                                    ; preds = %308
  %313 = getelementptr inbounds i8, i8* %286, i64 5
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = shl nuw nsw i32 %315, 8
  %317 = getelementptr inbounds i8, i8* %286, i64 6
  %318 = load i8, i8* %317, align 1
  %319 = zext i8 %318 to i32
  %320 = or i32 %316, %319
  %321 = getelementptr inbounds i8, i8* %286, i64 7
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i32
  %324 = shl nuw nsw i32 %323, 8
  %325 = getelementptr inbounds i8, i8* %286, i64 8
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i32
  %328 = or i32 %324, %327
  %329 = getelementptr inbounds i8, i8* %286, i64 9
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = shl nuw nsw i32 %331, 8
  %333 = getelementptr inbounds i8, i8* %286, i64 10
  %334 = load i8, i8* %333, align 1
  %335 = zext i8 %334 to i32
  %336 = or i32 %332, %335
  %337 = getelementptr inbounds i8, i8* %286, i64 11
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %341 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %340, align 8
  %342 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 6, i32 0, i64 0
  store i32 %320, i32* %342, align 4
  %343 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 6, i32 0, i64 1
  store i32 %328, i32* %343, align 4
  %344 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 6, i32 0, i64 2
  store i32 %336, i32* %344, align 4
  %345 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %341, i64 0, i32 6, i32 0, i64 3
  store i32 %339, i32* %345, align 4
  %346 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %340, align 8
  %347 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %346, i64 0, i32 5
  store i32 76, i32* %347, align 8
  %348 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %340, align 8
  %349 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %348, i64 0, i32 1
  %350 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %349, align 8
  %351 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %350(%struct.jpeg_common_struct* %351, i32 1) #4
  %352 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 57
  store i32 1, i32* %352, align 8
  %353 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 58
  store i8 %338, i8* %353, align 4
  br label %381

; <label>:354:                                    ; preds = %308, %304, %300, %296, %293, %291
  %355 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %356 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %355, align 8
  %357 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %356, i64 0, i32 5
  store i32 78, i32* %357, align 8
  %358 = trunc i64 %287 to i32
  %359 = add i32 %285, %358
  %360 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %355, align 8
  %361 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %360, i64 0, i32 6, i32 0, i64 0
  store i32 %359, i32* %361, align 4
  %362 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %355, align 8
  %363 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %362, i64 0, i32 1
  %364 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %363, align 8
  %365 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %364(%struct.jpeg_common_struct* %365, i32 1) #4
  br label %381

; <label>:366:                                    ; preds = %282
  %367 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %368 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %367, align 8
  %369 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %368, i64 0, i32 5
  store i32 91, i32* %369, align 8
  %370 = load i32, i32* %288, align 4
  %371 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %367, align 8
  %372 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %371, i64 0, i32 6, i32 0, i64 0
  store i32 %370, i32* %372, align 4
  %373 = trunc i64 %287 to i32
  %374 = add i32 %285, %373
  %375 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %367, align 8
  %376 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %375, i64 0, i32 6, i32 0, i64 1
  store i32 %374, i32* %376, align 4
  %377 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %367, align 8
  %378 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %377, i64 0, i32 1
  %379 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %378, align 8
  %380 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %379(%struct.jpeg_common_struct* %380, i32 1) #4
  br label %381

; <label>:381:                                    ; preds = %354, %312, %366, %290
  store i8* %284, i8** %9, align 8
  store i64 %283, i64* %11, align 8
  %382 = icmp sgt i64 %287, 0
  br i1 %382, label %383, label %387

; <label>:383:                                    ; preds = %381
  %384 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %7, align 8
  %385 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %384, i64 0, i32 4
  %386 = load void (%struct.jpeg_decompress_struct*, i64)*, void (%struct.jpeg_decompress_struct*, i64)** %385, align 8
  tail call void %386(%struct.jpeg_decompress_struct* nonnull %0, i64 %287) #4
  br label %387

; <label>:387:                                    ; preds = %119, %381, %383, %33, %16
  %388 = phi i32 [ 0, %16 ], [ 0, %33 ], [ 1, %383 ], [ 1, %381 ], [ 0, %119 ]
  ret i32 %388
}

; Function Attrs: nounwind sspstrong uwtable
define hidden void @jpeg_set_marker_processor(%struct.jpeg_decompress_struct*, i32, i32 (%struct.jpeg_decompress_struct*)*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %5 = bitcast %struct.jpeg_marker_reader** %4 to %struct.my_marker_reader**
  %6 = load %struct.my_marker_reader*, %struct.my_marker_reader** %5, align 8
  %7 = icmp eq i32 %1, 254
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 1
  store i32 (%struct.jpeg_decompress_struct*)* %2, i32 (%struct.jpeg_decompress_struct*)** %9, align 8
  br label %27

; <label>:10:                                     ; preds = %3
  %11 = and i32 %1, -16
  %12 = icmp eq i32 %11, 224
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %10
  %14 = add nsw i32 %1, -224
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.my_marker_reader, %struct.my_marker_reader* %6, i64 0, i32 2, i64 %15
  store i32 (%struct.jpeg_decompress_struct*)* %2, i32 (%struct.jpeg_decompress_struct*)** %16, align 8
  br label %27

; <label>:17:                                     ; preds = %10
  %18 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %19 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %20 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %19, i64 0, i32 5
  store i32 68, i32* %20, align 8
  %21 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %22 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %21, i64 0, i32 6, i32 0, i64 0
  store i32 %1, i32* %22, align 4
  %23 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %18, align 8
  %24 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %23, i64 0, i32 0
  %25 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %24, align 8
  %26 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %25(%struct.jpeg_common_struct* %26) #4
  br label %27

; <label>:27:                                     ; preds = %13, %17, %8
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @get_sof(%struct.jpeg_decompress_struct*, i32, i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 6
  %5 = load %struct.jpeg_source_mgr*, %struct.jpeg_source_mgr** %4, align 8
  %6 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 45
  store i32 %1, i32* %10, align 8
  %11 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 46
  store i32 %2, i32* %11, align 4
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %13, label %21

; <label>:13:                                     ; preds = %3
  %14 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %15 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %14, align 8
  %16 = tail call i32 %15(%struct.jpeg_decompress_struct* nonnull %0) #4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %311, label %18

; <label>:18:                                     ; preds = %13
  %19 = load i8*, i8** %6, align 8
  %20 = load i64, i64* %8, align 8
  br label %21

; <label>:21:                                     ; preds = %18, %3
  %22 = phi i8* [ %19, %18 ], [ %7, %3 ]
  %23 = phi i64 [ %20, %18 ], [ %9, %3 ]
  %24 = add i64 %23, -1
  %25 = getelementptr inbounds i8, i8* %22, i64 1
  %26 = load i8, i8* %22, align 1
  %27 = zext i8 %26 to i64
  %28 = shl nuw nsw i64 %27, 8
  %29 = icmp eq i64 %24, 0
  br i1 %29, label %30, label %38

; <label>:30:                                     ; preds = %21
  %31 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %32 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %31, align 8
  %33 = tail call i32 %32(%struct.jpeg_decompress_struct* nonnull %0) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %311, label %35

; <label>:35:                                     ; preds = %30
  %36 = load i8*, i8** %6, align 8
  %37 = load i64, i64* %8, align 8
  br label %38

; <label>:38:                                     ; preds = %35, %21
  %39 = phi i8* [ %36, %35 ], [ %25, %21 ]
  %40 = phi i64 [ %37, %35 ], [ %24, %21 ]
  %41 = add i64 %40, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = load i8, i8* %39, align 1
  %44 = zext i8 %43 to i64
  %45 = or i64 %28, %44
  %46 = icmp eq i64 %41, 0
  br i1 %46, label %47, label %55

; <label>:47:                                     ; preds = %38
  %48 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %49 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %48, align 8
  %50 = tail call i32 %49(%struct.jpeg_decompress_struct* nonnull %0) #4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %311, label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %6, align 8
  %54 = load i64, i64* %8, align 8
  br label %55

; <label>:55:                                     ; preds = %52, %38
  %56 = phi i8* [ %53, %52 ], [ %42, %38 ]
  %57 = phi i64 [ %54, %52 ], [ %41, %38 ]
  %58 = add i64 %57, -1
  %59 = getelementptr inbounds i8, i8* %56, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = zext i8 %60 to i32
  %62 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 43
  store i32 %61, i32* %62, align 8
  %63 = icmp eq i64 %58, 0
  br i1 %63, label %64, label %72

; <label>:64:                                     ; preds = %55
  %65 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %66 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %65, align 8
  %67 = tail call i32 %66(%struct.jpeg_decompress_struct* nonnull %0) #4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %311, label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %6, align 8
  %71 = load i64, i64* %8, align 8
  br label %72

; <label>:72:                                     ; preds = %69, %55
  %73 = phi i8* [ %70, %69 ], [ %59, %55 ]
  %74 = phi i64 [ %71, %69 ], [ %58, %55 ]
  %75 = add i64 %74, -1
  %76 = getelementptr inbounds i8, i8* %73, i64 1
  %77 = load i8, i8* %73, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 8
  %80 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 8
  store i32 %79, i32* %80, align 4
  %81 = icmp eq i64 %75, 0
  br i1 %81, label %82, label %91

; <label>:82:                                     ; preds = %72
  %83 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %84 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %83, align 8
  %85 = tail call i32 %84(%struct.jpeg_decompress_struct* nonnull %0) #4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %311, label %87

; <label>:87:                                     ; preds = %82
  %88 = load i8*, i8** %6, align 8
  %89 = load i64, i64* %8, align 8
  %90 = load i32, i32* %80, align 4
  br label %91

; <label>:91:                                     ; preds = %87, %72
  %92 = phi i32 [ %90, %87 ], [ %79, %72 ]
  %93 = phi i8* [ %88, %87 ], [ %76, %72 ]
  %94 = phi i64 [ %89, %87 ], [ %75, %72 ]
  %95 = add i64 %94, -1
  %96 = getelementptr inbounds i8, i8* %93, i64 1
  %97 = load i8, i8* %93, align 1
  %98 = zext i8 %97 to i32
  %99 = add i32 %92, %98
  store i32 %99, i32* %80, align 4
  %100 = icmp eq i64 %95, 0
  br i1 %100, label %101, label %109

; <label>:101:                                    ; preds = %91
  %102 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %103 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %102, align 8
  %104 = tail call i32 %103(%struct.jpeg_decompress_struct* nonnull %0) #4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %311, label %106

; <label>:106:                                    ; preds = %101
  %107 = load i8*, i8** %6, align 8
  %108 = load i64, i64* %8, align 8
  br label %109

; <label>:109:                                    ; preds = %106, %91
  %110 = phi i8* [ %107, %106 ], [ %96, %91 ]
  %111 = phi i64 [ %108, %106 ], [ %95, %91 ]
  %112 = add i64 %111, -1
  %113 = getelementptr inbounds i8, i8* %110, i64 1
  %114 = load i8, i8* %110, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 7
  store i32 %116, i32* %117, align 8
  %118 = icmp eq i64 %112, 0
  br i1 %118, label %119, label %128

; <label>:119:                                    ; preds = %109
  %120 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %121 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %120, align 8
  %122 = tail call i32 %121(%struct.jpeg_decompress_struct* nonnull %0) #4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %311, label %124

; <label>:124:                                    ; preds = %119
  %125 = load i8*, i8** %6, align 8
  %126 = load i64, i64* %8, align 8
  %127 = load i32, i32* %117, align 8
  br label %128

; <label>:128:                                    ; preds = %124, %109
  %129 = phi i32 [ %127, %124 ], [ %116, %109 ]
  %130 = phi i8* [ %125, %124 ], [ %113, %109 ]
  %131 = phi i64 [ %126, %124 ], [ %112, %109 ]
  %132 = add i64 %131, -1
  %133 = getelementptr inbounds i8, i8* %130, i64 1
  %134 = load i8, i8* %130, align 1
  %135 = zext i8 %134 to i32
  %136 = add i32 %129, %135
  store i32 %136, i32* %117, align 8
  %137 = icmp eq i64 %132, 0
  br i1 %137, label %138, label %146

; <label>:138:                                    ; preds = %128
  %139 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  %140 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %139, align 8
  %141 = tail call i32 %140(%struct.jpeg_decompress_struct* nonnull %0) #4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %311, label %143

; <label>:143:                                    ; preds = %138
  %144 = load i8*, i8** %6, align 8
  %145 = load i64, i64* %8, align 8
  br label %146

; <label>:146:                                    ; preds = %143, %128
  %147 = phi i8* [ %144, %143 ], [ %133, %128 ]
  %148 = phi i64 [ %145, %143 ], [ %132, %128 ]
  %149 = load i8, i8* %147, align 1
  %150 = zext i8 %149 to i32
  %151 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 9
  store i32 %150, i32* %151, align 8
  %152 = add nsw i64 %45, -8
  %153 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %154 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %155 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 0
  %156 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 76
  %157 = load i32, i32* %156, align 4
  store i32 %157, i32* %155, align 4
  %158 = load i32, i32* %117, align 8
  %159 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 1
  store i32 %158, i32* %159, align 4
  %160 = load i32, i32* %80, align 4
  %161 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 2
  store i32 %160, i32* %161, align 4
  %162 = load i32, i32* %151, align 8
  %163 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %154, i64 0, i32 6, i32 0, i64 3
  store i32 %162, i32* %163, align 4
  %164 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %165 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %164, i64 0, i32 5
  store i32 100, i32* %165, align 8
  %166 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %167 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %166, i64 0, i32 1
  %168 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %167, align 8
  %169 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %168(%struct.jpeg_common_struct* %169, i32 1) #4
  %170 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 82
  %171 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %170, align 8
  %172 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %171, i64 0, i32 4
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %181, label %175

; <label>:175:                                    ; preds = %146
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 5
  store i32 58, i32* %177, align 8
  %178 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %179 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %178, i64 0, i32 0
  %180 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %179, align 8
  tail call void %180(%struct.jpeg_common_struct* %169) #4
  br label %181

; <label>:181:                                    ; preds = %146, %175
  %182 = load i32, i32* %80, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %190, label %184

; <label>:184:                                    ; preds = %181
  %185 = load i32, i32* %117, align 8
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

; <label>:187:                                    ; preds = %184
  %188 = load i32, i32* %151, align 8
  %189 = icmp slt i32 %188, 1
  br i1 %189, label %190, label %197

; <label>:190:                                    ; preds = %187, %184, %181
  %191 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %192 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %191, i64 0, i32 5
  store i32 32, i32* %192, align 8
  %193 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %194 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %193, i64 0, i32 0
  %195 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %194, align 8
  tail call void %195(%struct.jpeg_common_struct* nonnull %169) #4
  %196 = load i32, i32* %151, align 8
  br label %197

; <label>:197:                                    ; preds = %190, %187
  %198 = phi i32 [ %196, %190 ], [ %188, %187 ]
  %199 = mul nsw i32 %198, 3
  %200 = sext i32 %199 to i64
  %201 = icmp eq i64 %152, %200
  br i1 %201, label %208, label %202

; <label>:202:                                    ; preds = %197
  %203 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %204 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %203, i64 0, i32 5
  store i32 11, i32* %204, align 8
  %205 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %206 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %205, i64 0, i32 0
  %207 = load void (%struct.jpeg_common_struct*)*, void (%struct.jpeg_common_struct*)** %206, align 8
  tail call void %207(%struct.jpeg_common_struct* nonnull %169) #4
  br label %208

; <label>:208:                                    ; preds = %197, %202
  %209 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 44
  %210 = load %struct.jpeg_component_info*, %struct.jpeg_component_info** %209, align 8
  %211 = icmp eq %struct.jpeg_component_info* %210, null
  br i1 %211, label %212, label %223

; <label>:212:                                    ; preds = %208
  %213 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 1
  %214 = load %struct.jpeg_memory_mgr*, %struct.jpeg_memory_mgr** %213, align 8
  %215 = getelementptr inbounds %struct.jpeg_memory_mgr, %struct.jpeg_memory_mgr* %214, i64 0, i32 0
  %216 = load i8* (%struct.jpeg_common_struct*, i32, i64)*, i8* (%struct.jpeg_common_struct*, i32, i64)** %215, align 8
  %217 = load i32, i32* %151, align 8
  %218 = sext i32 %217 to i64
  %219 = mul nsw i64 %218, 96
  %220 = tail call i8* %216(%struct.jpeg_common_struct* nonnull %169, i32 1, i64 %219) #4
  %221 = bitcast %struct.jpeg_component_info** %209 to i8**
  store i8* %220, i8** %221, align 8
  %222 = bitcast i8* %220 to %struct.jpeg_component_info*
  br label %223

; <label>:223:                                    ; preds = %212, %208
  %224 = phi %struct.jpeg_component_info* [ %222, %212 ], [ %210, %208 ]
  %225 = getelementptr inbounds i8, i8* %147, i64 1
  %226 = add i64 %148, -1
  %227 = load i32, i32* %151, align 8
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %306

; <label>:229:                                    ; preds = %223
  %230 = getelementptr inbounds %struct.jpeg_source_mgr, %struct.jpeg_source_mgr* %5, i64 0, i32 3
  br label %231

; <label>:231:                                    ; preds = %229, %280
  %232 = phi i64 [ %226, %229 ], [ %303, %280 ]
  %233 = phi i8* [ %225, %229 ], [ %302, %280 ]
  %234 = phi i32 [ 0, %229 ], [ %300, %280 ]
  %235 = phi %struct.jpeg_component_info* [ %224, %229 ], [ %301, %280 ]
  %236 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i64 0, i32 1
  store i32 %234, i32* %236, align 4
  %237 = icmp eq i64 %232, 0
  br i1 %237, label %238, label %245

; <label>:238:                                    ; preds = %231
  %239 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %230, align 8
  %240 = tail call i32 %239(%struct.jpeg_decompress_struct* nonnull %0) #4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %311, label %242

; <label>:242:                                    ; preds = %238
  %243 = load i8*, i8** %6, align 8
  %244 = load i64, i64* %8, align 8
  br label %245

; <label>:245:                                    ; preds = %242, %231
  %246 = phi i8* [ %243, %242 ], [ %233, %231 ]
  %247 = phi i64 [ %244, %242 ], [ %232, %231 ]
  %248 = add i64 %247, -1
  %249 = getelementptr inbounds i8, i8* %246, i64 1
  %250 = load i8, i8* %246, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i64 0, i32 0
  store i32 %251, i32* %252, align 8
  %253 = icmp eq i64 %248, 0
  br i1 %253, label %254, label %261

; <label>:254:                                    ; preds = %245
  %255 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %230, align 8
  %256 = tail call i32 %255(%struct.jpeg_decompress_struct* nonnull %0) #4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %311, label %258

; <label>:258:                                    ; preds = %254
  %259 = load i8*, i8** %6, align 8
  %260 = load i64, i64* %8, align 8
  br label %261

; <label>:261:                                    ; preds = %258, %245
  %262 = phi i8* [ %259, %258 ], [ %249, %245 ]
  %263 = phi i64 [ %260, %258 ], [ %248, %245 ]
  %264 = add i64 %263, -1
  %265 = getelementptr inbounds i8, i8* %262, i64 1
  %266 = load i8, i8* %262, align 1
  %267 = zext i8 %266 to i32
  %268 = lshr i32 %267, 4
  %269 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i64 0, i32 2
  store i32 %268, i32* %269, align 8
  %270 = and i32 %267, 15
  %271 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i64 0, i32 3
  store i32 %270, i32* %271, align 4
  %272 = icmp eq i64 %264, 0
  br i1 %272, label %273, label %280

; <label>:273:                                    ; preds = %261
  %274 = load i32 (%struct.jpeg_decompress_struct*)*, i32 (%struct.jpeg_decompress_struct*)** %230, align 8
  %275 = tail call i32 %274(%struct.jpeg_decompress_struct* %0) #4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %311, label %277

; <label>:277:                                    ; preds = %273
  %278 = load i8*, i8** %6, align 8
  %279 = load i64, i64* %8, align 8
  br label %280

; <label>:280:                                    ; preds = %277, %261
  %281 = phi i8* [ %278, %277 ], [ %265, %261 ]
  %282 = phi i64 [ %279, %277 ], [ %264, %261 ]
  %283 = load i8, i8* %281, align 1
  %284 = zext i8 %283 to i32
  %285 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i64 0, i32 4
  store i32 %284, i32* %285, align 8
  %286 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %287 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 0
  %288 = load i32, i32* %252, align 8
  store i32 %288, i32* %287, align 4
  %289 = load i32, i32* %269, align 8
  %290 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 1
  store i32 %289, i32* %290, align 4
  %291 = load i32, i32* %271, align 4
  %292 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 2
  store i32 %291, i32* %292, align 4
  %293 = load i32, i32* %285, align 8
  %294 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %286, i64 0, i32 6, i32 0, i64 3
  store i32 %293, i32* %294, align 4
  %295 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %296 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %295, i64 0, i32 5
  store i32 101, i32* %296, align 8
  %297 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %153, align 8
  %298 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %297, i64 0, i32 1
  %299 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %298, align 8
  tail call void %299(%struct.jpeg_common_struct* nonnull %169, i32 1) #4
  %300 = add nuw nsw i32 %234, 1
  %301 = getelementptr inbounds %struct.jpeg_component_info, %struct.jpeg_component_info* %235, i64 1
  %302 = getelementptr inbounds i8, i8* %281, i64 1
  %303 = add i64 %282, -1
  %304 = load i32, i32* %151, align 8
  %305 = icmp slt i32 %300, %304
  br i1 %305, label %231, label %306

; <label>:306:                                    ; preds = %280, %223
  %307 = phi i8* [ %225, %223 ], [ %302, %280 ]
  %308 = phi i64 [ %226, %223 ], [ %303, %280 ]
  %309 = load %struct.jpeg_marker_reader*, %struct.jpeg_marker_reader** %170, align 8
  %310 = getelementptr inbounds %struct.jpeg_marker_reader, %struct.jpeg_marker_reader* %309, i64 0, i32 4
  store i32 1, i32* %310, align 4
  store i8* %307, i8** %6, align 8
  store i64 %308, i64* %8, align 8
  br label %311

; <label>:311:                                    ; preds = %273, %254, %238, %138, %119, %101, %82, %64, %47, %30, %13, %306
  %312 = phi i32 [ 1, %306 ], [ 0, %13 ], [ 0, %30 ], [ 0, %47 ], [ 0, %64 ], [ 0, %82 ], [ 0, %101 ], [ 0, %119 ], [ 0, %138 ], [ 0, %238 ], [ 0, %254 ], [ 0, %273 ]
  ret i32 %312
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

declare hidden %struct.JHUFF_TBL* @jpeg_alloc_huff_table(%struct.jpeg_common_struct*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

declare hidden %struct.JQUANT_TBL* @jpeg_alloc_quant_table(%struct.jpeg_common_struct*) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @examine_app0(%struct.jpeg_decompress_struct*, i8* nocapture readonly, i32, i64) unnamed_addr #0 {
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, %3
  %7 = icmp ugt i32 %2, 13
  br i1 %7, label %8, label %139

; <label>:8:                                      ; preds = %4
  %9 = load i8, i8* %1, align 1
  %10 = icmp eq i8 %9, 74
  br i1 %10, label %11, label %211

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds i8, i8* %1, i64 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 70
  br i1 %14, label %15, label %144

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 73
  br i1 %18, label %19, label %144

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds i8, i8* %1, i64 3
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 70
  br i1 %22, label %23, label %144

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds i8, i8* %1, i64 4
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %144

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 51
  store i32 1, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %1, i64 5
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 52
  store i8 %30, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %1, i64 6
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 53
  store i8 %33, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %1, i64 7
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 54
  store i8 %36, i8* %37, align 2
  %38 = getelementptr inbounds i8, i8* %1, i64 8
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw i16 %40, 8
  %42 = getelementptr inbounds i8, i8* %1, i64 9
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = or i16 %41, %44
  %46 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 55
  store i16 %45, i16* %46, align 4
  %47 = getelementptr inbounds i8, i8* %1, i64 10
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw i16 %49, 8
  %51 = getelementptr inbounds i8, i8* %1, i64 11
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = or i16 %50, %53
  %55 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 56
  store i16 %54, i16* %55, align 2
  %56 = icmp eq i8 %30, 1
  %57 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  br i1 %56, label %58, label %60

; <label>:58:                                     ; preds = %27
  %59 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  br label %77

; <label>:60:                                     ; preds = %27
  %61 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %62 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %61, i64 0, i32 5
  store i32 119, i32* %62, align 8
  %63 = load i8, i8* %31, align 8
  %64 = zext i8 %63 to i32
  %65 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %66 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %65, i64 0, i32 6, i32 0, i64 0
  store i32 %64, i32* %66, align 4
  %67 = load i8, i8* %34, align 1
  %68 = zext i8 %67 to i32
  %69 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %70 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %69, i64 0, i32 6, i32 0, i64 1
  store i32 %68, i32* %70, align 4
  %71 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %72 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %71, i64 0, i32 1
  %73 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %72, align 8
  %74 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %73(%struct.jpeg_common_struct* %74, i32 -1) #4
  %75 = load i8, i8* %31, align 8
  %76 = zext i8 %75 to i32
  br label %77

; <label>:77:                                     ; preds = %58, %60
  %78 = phi %struct.jpeg_common_struct* [ %59, %58 ], [ %74, %60 ]
  %79 = phi i32 [ 1, %58 ], [ %76, %60 ]
  %80 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %81 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 6, i32 0, i64 0
  store i32 %79, i32* %81, align 4
  %82 = load i8, i8* %34, align 1
  %83 = zext i8 %82 to i32
  %84 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 6, i32 0, i64 1
  store i32 %83, i32* %84, align 4
  %85 = load i16, i16* %46, align 4
  %86 = zext i16 %85 to i32
  %87 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 6, i32 0, i64 2
  store i32 %86, i32* %87, align 4
  %88 = load i16, i16* %55, align 2
  %89 = zext i16 %88 to i32
  %90 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 6, i32 0, i64 3
  store i32 %89, i32* %90, align 4
  %91 = load i8, i8* %37, align 2
  %92 = zext i8 %91 to i32
  %93 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %80, i64 0, i32 6, i32 0, i64 4
  store i32 %92, i32* %93, align 4
  %94 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %95 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %94, i64 0, i32 5
  store i32 87, i32* %95, align 8
  %96 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %97 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %96, i64 0, i32 1
  %98 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %97, align 8
  tail call void %98(%struct.jpeg_common_struct* %78, i32 1) #4
  %99 = getelementptr inbounds i8, i8* %1, i64 12
  %100 = load i8, i8* %99, align 1
  %101 = getelementptr inbounds i8, i8* %1, i64 13
  %102 = load i8, i8* %101, align 1
  %103 = or i8 %102, %100
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %121, label %105

; <label>:105:                                    ; preds = %77
  %106 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %107 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %106, i64 0, i32 5
  store i32 90, i32* %107, align 8
  %108 = load i8, i8* %99, align 1
  %109 = zext i8 %108 to i32
  %110 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %111 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %110, i64 0, i32 6, i32 0, i64 0
  store i32 %109, i32* %111, align 4
  %112 = load i8, i8* %101, align 1
  %113 = zext i8 %112 to i32
  %114 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %115 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %114, i64 0, i32 6, i32 0, i64 1
  store i32 %113, i32* %115, align 4
  %116 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %117 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %116, i64 0, i32 1
  %118 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %117, align 8
  tail call void %118(%struct.jpeg_common_struct* %78, i32 1) #4
  %119 = load i8, i8* %99, align 1
  %120 = load i8, i8* %101, align 1
  br label %121

; <label>:121:                                    ; preds = %77, %105
  %122 = phi i8 [ %102, %77 ], [ %120, %105 ]
  %123 = phi i8 [ %100, %77 ], [ %119, %105 ]
  %124 = add nsw i64 %6, -14
  %125 = zext i8 %123 to i64
  %126 = zext i8 %122 to i64
  %127 = mul nuw nsw i64 %125, 3
  %128 = mul nuw nsw i64 %127, %126
  %129 = icmp eq i64 %124, %128
  br i1 %129, label %222, label %130

; <label>:130:                                    ; preds = %121
  %131 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %132 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %131, i64 0, i32 5
  store i32 88, i32* %132, align 8
  %133 = trunc i64 %124 to i32
  %134 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %135 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %134, i64 0, i32 6, i32 0, i64 0
  store i32 %133, i32* %135, align 4
  %136 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %57, align 8
  %137 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %136, i64 0, i32 1
  %138 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %137, align 8
  tail call void %138(%struct.jpeg_common_struct* %78, i32 1) #4
  br label %222

; <label>:139:                                    ; preds = %4
  %140 = icmp ugt i32 %2, 5
  br i1 %140, label %141, label %211

; <label>:141:                                    ; preds = %139
  %142 = load i8, i8* %1, align 1
  %143 = icmp eq i8 %142, 74
  br i1 %143, label %144, label %211

; <label>:144:                                    ; preds = %23, %19, %15, %11, %141
  %145 = getelementptr inbounds i8, i8* %1, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp eq i8 %146, 70
  br i1 %147, label %148, label %211

; <label>:148:                                    ; preds = %144
  %149 = getelementptr inbounds i8, i8* %1, i64 2
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 88
  br i1 %151, label %152, label %211

; <label>:152:                                    ; preds = %148
  %153 = getelementptr inbounds i8, i8* %1, i64 3
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 88
  br i1 %155, label %156, label %211

; <label>:156:                                    ; preds = %152
  %157 = getelementptr inbounds i8, i8* %1, i64 4
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %211

; <label>:160:                                    ; preds = %156
  %161 = getelementptr inbounds i8, i8* %1, i64 5
  %162 = load i8, i8* %161, align 1
  switch i8 %162, label %196 [
    i8 16, label %163
    i8 17, label %174
    i8 19, label %185
  ]

; <label>:163:                                    ; preds = %160
  %164 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %165 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %164, align 8
  %166 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %165, i64 0, i32 5
  store i32 108, i32* %166, align 8
  %167 = trunc i64 %6 to i32
  %168 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %164, align 8
  %169 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %168, i64 0, i32 6, i32 0, i64 0
  store i32 %167, i32* %169, align 4
  %170 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %164, align 8
  %171 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %170, i64 0, i32 1
  %172 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %171, align 8
  %173 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %172(%struct.jpeg_common_struct* %173, i32 1) #4
  br label %222

; <label>:174:                                    ; preds = %160
  %175 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %176 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %177 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %176, i64 0, i32 5
  store i32 109, i32* %177, align 8
  %178 = trunc i64 %6 to i32
  %179 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %180 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %179, i64 0, i32 6, i32 0, i64 0
  store i32 %178, i32* %180, align 4
  %181 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %175, align 8
  %182 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %181, i64 0, i32 1
  %183 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %182, align 8
  %184 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %183(%struct.jpeg_common_struct* %184, i32 1) #4
  br label %222

; <label>:185:                                    ; preds = %160
  %186 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %187 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %186, align 8
  %188 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %187, i64 0, i32 5
  store i32 110, i32* %188, align 8
  %189 = trunc i64 %6 to i32
  %190 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %186, align 8
  %191 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %190, i64 0, i32 6, i32 0, i64 0
  store i32 %189, i32* %191, align 4
  %192 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %186, align 8
  %193 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %192, i64 0, i32 1
  %194 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %193, align 8
  %195 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %194(%struct.jpeg_common_struct* %195, i32 1) #4
  br label %222

; <label>:196:                                    ; preds = %160
  %197 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %198 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %197, align 8
  %199 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %198, i64 0, i32 5
  store i32 89, i32* %199, align 8
  %200 = load i8, i8* %161, align 1
  %201 = zext i8 %200 to i32
  %202 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %197, align 8
  %203 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %202, i64 0, i32 6, i32 0, i64 0
  store i32 %201, i32* %203, align 4
  %204 = trunc i64 %6 to i32
  %205 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %197, align 8
  %206 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %205, i64 0, i32 6, i32 0, i64 1
  store i32 %204, i32* %206, align 4
  %207 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %197, align 8
  %208 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %207, i64 0, i32 1
  %209 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %208, align 8
  %210 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %209(%struct.jpeg_common_struct* %210, i32 1) #4
  br label %222

; <label>:211:                                    ; preds = %8, %156, %152, %148, %144, %141, %139
  %212 = getelementptr inbounds %struct.jpeg_decompress_struct, %struct.jpeg_decompress_struct* %0, i64 0, i32 0
  %213 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %214 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %213, i64 0, i32 5
  store i32 77, i32* %214, align 8
  %215 = trunc i64 %6 to i32
  %216 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %217 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %216, i64 0, i32 6, i32 0, i64 0
  store i32 %215, i32* %217, align 4
  %218 = load %struct.jpeg_error_mgr*, %struct.jpeg_error_mgr** %212, align 8
  %219 = getelementptr inbounds %struct.jpeg_error_mgr, %struct.jpeg_error_mgr* %218, i64 0, i32 1
  %220 = load void (%struct.jpeg_common_struct*, i32)*, void (%struct.jpeg_common_struct*, i32)** %219, align 8
  %221 = bitcast %struct.jpeg_decompress_struct* %0 to %struct.jpeg_common_struct*
  tail call void %220(%struct.jpeg_common_struct* %221, i32 1) #4
  br label %222

; <label>:222:                                    ; preds = %121, %211, %196, %185, %174, %163, %130
  ret void
}

attributes #0 = { nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
