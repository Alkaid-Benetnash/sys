; ModuleID = '/home/firefox/firefox/mozilla-unified/obj-opt-x86_64-pc-linux-gnu/media/mtransport/third_party/nrappkit/nrappkit_nrappkit/Unified_c_nrappkit0.c'
source_filename = "/home/firefox/firefox/mozilla-unified/obj-opt-x86_64-pc-linux-gnu/media/mtransport/third_party/nrappkit/nrappkit_nrappkit/Unified_c_nrappkit0.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.log_type_ = type { i8*, [3 x i32], [3 x [128 x i8]] }
%struct.log_destination_ = type { i8*, i32, i32, i32 (i32, i32, i8*, %struct.__va_list_tag*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.nr_registry_module_ = type { i8*, %struct.nr_registry_module_vtbl_* }
%struct.nr_registry_module_vtbl_ = type { i32 (%struct.nr_registry_module_*)*, i32 (i8*, i8*)*, i32 (i8*, i8*)*, i32 (i8*, i16*)*, i32 (i8*, i16*)*, i32 (i8*, i32*)*, i32 (i8*, i32*)*, i32 (i8*, i64*)*, i32 (i8*, i64*)*, i32 (i8*, double*)*, i32 (i8*, i8*)*, i32 (i8*, i8*, i64, i64*)*, i32 (i8*, i8*, i64)*, i32 (i8*, i64*)*, i32 (i8*, i8*)*, i32 (i8*, i8)*, i32 (i8*, i8)*, i32 (i8*, i16)*, i32 (i8*, i16)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i64)*, i32 (i8*, i64)*, i32 (i8*, double)*, i32 (i8*)*, i32 (i8*, i8*, i64)*, i32 (i8*, i8*)*, i32 (i8*)*, i32 (i8*, i64*)*, i32 (i8*, [128 x i8]*, i64, i64*)*, i32 (i8*)*, i32 (i32)* }
%struct.r_assoc_ = type { i32, i32, i32 (i8*, i32, i32)*, %struct.r_assoc_el_**, i32 }
%struct.r_assoc_el_ = type { i8*, i32, i8*, %struct.r_assoc_el_*, %struct.r_assoc_el_*, i32 (i8**, i8*)*, i32 (i8*)* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.anon.8 = type { i32, i8* }
%struct.r_malloc_chunk = type opaque
%struct.r_malloc_chunk_ = type { i32, i8, i32, [1 x i8] }
%struct.Data_ = type { i8*, i64 }
%struct.entry = type { %struct.anon }
%struct.anon = type { %struct.entry*, %struct.entry** }
%struct.entry.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.entry.1*, %struct.entry.1** }
%struct.entry.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.entry.4*, %struct.entry.4** }
%struct.nr_registry_node_ = type { i8 }
%struct.nr_reg_cb_info_ = type { i8, void (i8*, i8, i8*)*, i8*, [128 x i8] }
%struct.r_assoc_iterator_ = type { %struct.r_assoc_*, i32, %struct.r_assoc_el_*, i32, %struct.r_assoc_el_* }
%struct.r_list_ = type { %struct.r_list_el_*, %struct.r_list_el_* }
%struct.r_list_el_ = type { i8*, %struct.r_list_el_*, %struct.r_list_el_*, i32 (i8**, i8*)*, i32 (i8**)* }
%struct.r_list_iterator_ = type { %struct.r_list_*, %struct.r_list_el_* }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.nr_scalar_registry_node_ = type { i8, %union.anon }
%union.anon = type { i64 }
%struct.nr_array_registry_node_ = type { i8, %struct.anon.7 }
%struct.anon.7 = type { i32, [1 x i8] }
%struct.nr_reg_find_children_arg_ = type { i64, [128 x i8]*, i64 }

@NR_LOG_LOGGING = hidden global i32 0, align 4
@log_type_ct = internal unnamed_addr global i32 0, align 4
@log_types = internal global [16 x %struct.log_type_] zeroinitializer, align 16
@.str = private unnamed_addr constant [20 x i8] c"logging.%s.facility\00", align 1
@log_destinations = internal unnamed_addr global [3 x %struct.log_destination_] [%struct.log_destination_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), i32 0, i32 5, i32 (i32, i32, i8*, %struct.__va_list_tag*)* @stderr_vlog }, %struct.log_destination_ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i32 1, i32 5, i32 (i32, i32, i8*, %struct.__va_list_tag*)* @syslog_vlog }, %struct.log_destination_ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i32 0, i32 5, i32 (i32, i32, i8*, %struct.__va_list_tag*)* @noop_vlog }], align 16
@.str.1 = private unnamed_addr constant [9 x i8] c"%s.level\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"%s[%d]=%s\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@r_log_env_verbose = internal unnamed_addr global i32 0, align 4
@log_level_strings = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [11 x i8] c"(%s/%s) %s\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"extra\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@NR_LOG_REGISTRY = hidden global i32 0, align 4
@NR_TOP_LEVEL_REGISTRY = hidden global [128 x i8] zeroinitializer, align 16
@reg_vtbl = internal unnamed_addr global %struct.nr_registry_module_* null, align 8
@.str.10 = private unnamed_addr constant [46 x i8] c"Can't reinitialize registry in different mode\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"registry\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"Couldn't initialize registry\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"Initialized registry\00", align 1
@typenames = internal unnamed_addr constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0)], align 16
@nr_registry = internal unnamed_addr global %struct.r_assoc_* null, align 8
@.str.14 = private unnamed_addr constant [52 x i8] c"Couldn't fetch node '%s' ('%s'), found '%s' instead\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"Couldn't fetch node '%s' ('%s')\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"Fetched node '%s' ('%s')\00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"\5C%03o\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"0x%02x\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"%lld\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"%#f\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"invalid name '%s'\00", align 1
@nr_reg_local_module = internal global %struct.nr_registry_module_ { i8* null, %struct.nr_registry_module_vtbl_* @nr_reg_local_vtbl }, align 8
@NR_REG_MODE_LOCAL = hidden local_unnamed_addr global i8* bitcast (%struct.nr_registry_module_* @nr_reg_local_module to i8*), align 8
@nr_registry_callbacks = internal unnamed_addr global %struct.r_assoc_* null, align 8
@.str.27 = private unnamed_addr constant [32 x i8] c"Couldn't init notifications: %s\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"*Unknown*\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"change\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"final\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"raising event '%s' on '%s'\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"No callbacks found\00", align 1
@CB_ACTIONS = internal unnamed_addr constant [4 x i8] c"\01\04\02@", align 1
@bin2hex_map = internal unnamed_addr constant [256 x [3 x i8]] [[3 x i8] c"00\00", [3 x i8] c"01\00", [3 x i8] c"02\00", [3 x i8] c"03\00", [3 x i8] c"04\00", [3 x i8] c"05\00", [3 x i8] c"06\00", [3 x i8] c"07\00", [3 x i8] c"08\00", [3 x i8] c"09\00", [3 x i8] c"0a\00", [3 x i8] c"0b\00", [3 x i8] c"0c\00", [3 x i8] c"0d\00", [3 x i8] c"0e\00", [3 x i8] c"0f\00", [3 x i8] c"10\00", [3 x i8] c"11\00", [3 x i8] c"12\00", [3 x i8] c"13\00", [3 x i8] c"14\00", [3 x i8] c"15\00", [3 x i8] c"16\00", [3 x i8] c"17\00", [3 x i8] c"18\00", [3 x i8] c"19\00", [3 x i8] c"1a\00", [3 x i8] c"1b\00", [3 x i8] c"1c\00", [3 x i8] c"1d\00", [3 x i8] c"1e\00", [3 x i8] c"1f\00", [3 x i8] c"20\00", [3 x i8] c"21\00", [3 x i8] c"22\00", [3 x i8] c"23\00", [3 x i8] c"24\00", [3 x i8] c"25\00", [3 x i8] c"26\00", [3 x i8] c"27\00", [3 x i8] c"28\00", [3 x i8] c"29\00", [3 x i8] c"2a\00", [3 x i8] c"2b\00", [3 x i8] c"2c\00", [3 x i8] c"2d\00", [3 x i8] c"2e\00", [3 x i8] c"2f\00", [3 x i8] c"30\00", [3 x i8] c"31\00", [3 x i8] c"32\00", [3 x i8] c"33\00", [3 x i8] c"34\00", [3 x i8] c"35\00", [3 x i8] c"36\00", [3 x i8] c"37\00", [3 x i8] c"38\00", [3 x i8] c"39\00", [3 x i8] c"3a\00", [3 x i8] c"3b\00", [3 x i8] c"3c\00", [3 x i8] c"3d\00", [3 x i8] c"3e\00", [3 x i8] c"3f\00", [3 x i8] c"40\00", [3 x i8] c"41\00", [3 x i8] c"42\00", [3 x i8] c"43\00", [3 x i8] c"44\00", [3 x i8] c"45\00", [3 x i8] c"46\00", [3 x i8] c"47\00", [3 x i8] c"48\00", [3 x i8] c"49\00", [3 x i8] c"4a\00", [3 x i8] c"4b\00", [3 x i8] c"4c\00", [3 x i8] c"4d\00", [3 x i8] c"4e\00", [3 x i8] c"4f\00", [3 x i8] c"50\00", [3 x i8] c"51\00", [3 x i8] c"52\00", [3 x i8] c"53\00", [3 x i8] c"54\00", [3 x i8] c"55\00", [3 x i8] c"56\00", [3 x i8] c"57\00", [3 x i8] c"58\00", [3 x i8] c"59\00", [3 x i8] c"5a\00", [3 x i8] c"5b\00", [3 x i8] c"5c\00", [3 x i8] c"5d\00", [3 x i8] c"5e\00", [3 x i8] c"5f\00", [3 x i8] c"60\00", [3 x i8] c"61\00", [3 x i8] c"62\00", [3 x i8] c"63\00", [3 x i8] c"64\00", [3 x i8] c"65\00", [3 x i8] c"66\00", [3 x i8] c"67\00", [3 x i8] c"68\00", [3 x i8] c"69\00", [3 x i8] c"6a\00", [3 x i8] c"6b\00", [3 x i8] c"6c\00", [3 x i8] c"6d\00", [3 x i8] c"6e\00", [3 x i8] c"6f\00", [3 x i8] c"70\00", [3 x i8] c"71\00", [3 x i8] c"72\00", [3 x i8] c"73\00", [3 x i8] c"74\00", [3 x i8] c"75\00", [3 x i8] c"76\00", [3 x i8] c"77\00", [3 x i8] c"78\00", [3 x i8] c"79\00", [3 x i8] c"7a\00", [3 x i8] c"7b\00", [3 x i8] c"7c\00", [3 x i8] c"7d\00", [3 x i8] c"7e\00", [3 x i8] c"7f\00", [3 x i8] c"80\00", [3 x i8] c"81\00", [3 x i8] c"82\00", [3 x i8] c"83\00", [3 x i8] c"84\00", [3 x i8] c"85\00", [3 x i8] c"86\00", [3 x i8] c"87\00", [3 x i8] c"88\00", [3 x i8] c"89\00", [3 x i8] c"8a\00", [3 x i8] c"8b\00", [3 x i8] c"8c\00", [3 x i8] c"8d\00", [3 x i8] c"8e\00", [3 x i8] c"8f\00", [3 x i8] c"90\00", [3 x i8] c"91\00", [3 x i8] c"92\00", [3 x i8] c"93\00", [3 x i8] c"94\00", [3 x i8] c"95\00", [3 x i8] c"96\00", [3 x i8] c"97\00", [3 x i8] c"98\00", [3 x i8] c"99\00", [3 x i8] c"9a\00", [3 x i8] c"9b\00", [3 x i8] c"9c\00", [3 x i8] c"9d\00", [3 x i8] c"9e\00", [3 x i8] c"9f\00", [3 x i8] c"a0\00", [3 x i8] c"a1\00", [3 x i8] c"a2\00", [3 x i8] c"a3\00", [3 x i8] c"a4\00", [3 x i8] c"a5\00", [3 x i8] c"a6\00", [3 x i8] c"a7\00", [3 x i8] c"a8\00", [3 x i8] c"a9\00", [3 x i8] c"aa\00", [3 x i8] c"ab\00", [3 x i8] c"ac\00", [3 x i8] c"ad\00", [3 x i8] c"ae\00", [3 x i8] c"af\00", [3 x i8] c"b0\00", [3 x i8] c"b1\00", [3 x i8] c"b2\00", [3 x i8] c"b3\00", [3 x i8] c"b4\00", [3 x i8] c"b5\00", [3 x i8] c"b6\00", [3 x i8] c"b7\00", [3 x i8] c"b8\00", [3 x i8] c"b9\00", [3 x i8] c"ba\00", [3 x i8] c"bb\00", [3 x i8] c"bc\00", [3 x i8] c"bd\00", [3 x i8] c"be\00", [3 x i8] c"bf\00", [3 x i8] c"c0\00", [3 x i8] c"c1\00", [3 x i8] c"c2\00", [3 x i8] c"c3\00", [3 x i8] c"c4\00", [3 x i8] c"c5\00", [3 x i8] c"c6\00", [3 x i8] c"c7\00", [3 x i8] c"c8\00", [3 x i8] c"c9\00", [3 x i8] c"ca\00", [3 x i8] c"cb\00", [3 x i8] c"cc\00", [3 x i8] c"cd\00", [3 x i8] c"ce\00", [3 x i8] c"cf\00", [3 x i8] c"d0\00", [3 x i8] c"d1\00", [3 x i8] c"d2\00", [3 x i8] c"d3\00", [3 x i8] c"d4\00", [3 x i8] c"d5\00", [3 x i8] c"d6\00", [3 x i8] c"d7\00", [3 x i8] c"d8\00", [3 x i8] c"d9\00", [3 x i8] c"da\00", [3 x i8] c"db\00", [3 x i8] c"dc\00", [3 x i8] c"dd\00", [3 x i8] c"de\00", [3 x i8] c"df\00", [3 x i8] c"e0\00", [3 x i8] c"e1\00", [3 x i8] c"e2\00", [3 x i8] c"e3\00", [3 x i8] c"e4\00", [3 x i8] c"e5\00", [3 x i8] c"e6\00", [3 x i8] c"e7\00", [3 x i8] c"e8\00", [3 x i8] c"e9\00", [3 x i8] c"ea\00", [3 x i8] c"eb\00", [3 x i8] c"ec\00", [3 x i8] c"ed\00", [3 x i8] c"ee\00", [3 x i8] c"ef\00", [3 x i8] c"f0\00", [3 x i8] c"f1\00", [3 x i8] c"f2\00", [3 x i8] c"f3\00", [3 x i8] c"f4\00", [3 x i8] c"f5\00", [3 x i8] c"f6\00", [3 x i8] c"f7\00", [3 x i8] c"f8\00", [3 x i8] c"f9\00", [3 x i8] c"fa\00", [3 x i8] c"fb\00", [3 x i8] c"fc\00", [3 x i8] c"fd\00", [3 x i8] c"fe\00", [3 x i8] c"ff\00"], align 16
@hex2bin_map = internal unnamed_addr constant [256 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.35 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"%s[%d]=\0A\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"%.2x \00", align 1
@crctab = internal unnamed_addr constant [256 x i32] [i32 0, i32 1996959894, i32 -301047508, i32 -1727442502, i32 124634137, i32 1886057615, i32 -379345611, i32 -1637575261, i32 249268274, i32 2044508324, i32 -522852066, i32 -1747789432, i32 162941995, i32 2125561021, i32 -407360249, i32 -1866523247, i32 498536548, i32 1789927666, i32 -205950648, i32 -2067906082, i32 450548861, i32 1843258603, i32 -187386543, i32 -2083289657, i32 325883990, i32 1684777152, i32 -43845254, i32 -1973040660, i32 335633487, i32 1661365465, i32 -99664541, i32 -1928851979, i32 997073096, i32 1281953886, i32 -715111964, i32 -1570279054, i32 1006888145, i32 1258607687, i32 -770865667, i32 -1526024853, i32 901097722, i32 1119000684, i32 -608450090, i32 -1396901568, i32 853044451, i32 1172266101, i32 -589951537, i32 -1412350631, i32 651767980, i32 1373503546, i32 -925412992, i32 -1076862698, i32 565507253, i32 1454621731, i32 -809855591, i32 -1195530993, i32 671266974, i32 1594198024, i32 -972236366, i32 -1324619484, i32 795835527, i32 1483230225, i32 -1050600021, i32 -1234817731, i32 1994146192, i32 31158534, i32 -1731059524, i32 -271249366, i32 1907459465, i32 112637215, i32 -1614814043, i32 -390540237, i32 2013776290, i32 251722036, i32 -1777751922, i32 -519137256, i32 2137656763, i32 141376813, i32 -1855689577, i32 -429695999, i32 1802195444, i32 476864866, i32 -2056965928, i32 -228458418, i32 1812370925, i32 453092731, i32 -2113342271, i32 -183516073, i32 1706088902, i32 314042704, i32 -1950435094, i32 -54949764, i32 1658658271, i32 366619977, i32 -1932296973, i32 -69972891, i32 1303535960, i32 984961486, i32 -1547960204, i32 -725929758, i32 1256170817, i32 1037604311, i32 -1529756563, i32 -740887301, i32 1131014506, i32 879679996, i32 -1385723834, i32 -631195440, i32 1141124467, i32 855842277, i32 -1442165665, i32 -586318647, i32 1342533948, i32 654459306, i32 -1106571248, i32 -921952122, i32 1466479909, i32 544179635, i32 -1184443383, i32 -832445281, i32 1591671054, i32 702138776, i32 -1328506846, i32 -942167884, i32 1504918807, i32 783551873, i32 -1212326853, i32 -1061524307, i32 -306674912, i32 -1698712650, i32 62317068, i32 1957810842, i32 -355121351, i32 -1647151185, i32 81470997, i32 1943803523, i32 -480048366, i32 -1805370492, i32 225274430, i32 2053790376, i32 -468791541, i32 -1828061283, i32 167816743, i32 2097651377, i32 -267414716, i32 -2029476910, i32 503444072, i32 1762050814, i32 -144550051, i32 -2140837941, i32 426522225, i32 1852507879, i32 -19653770, i32 -1982649376, i32 282753626, i32 1742555852, i32 -105259153, i32 -1900089351, i32 397917763, i32 1622183637, i32 -690576408, i32 -1580100738, i32 953729732, i32 1340076626, i32 -776247311, i32 -1497606297, i32 1068828381, i32 1219638859, i32 -670225446, i32 -1358292148, i32 906185462, i32 1090812512, i32 -547295293, i32 -1469587627, i32 829329135, i32 1181335161, i32 -882789492, i32 -1134132454, i32 628085408, i32 1382605366, i32 -871598187, i32 -1156888829, i32 570562233, i32 1426400815, i32 -977650754, i32 -1296233688, i32 733239954, i32 1555261956, i32 -1026031705, i32 -1244606671, i32 752459403, i32 1541320221, i32 -1687895376, i32 -328994266, i32 1969922972, i32 40735498, i32 -1677130071, i32 -351390145, i32 1913087877, i32 83908371, i32 -1782625662, i32 -491226604, i32 2075208622, i32 213261112, i32 -1831694693, i32 -438977011, i32 2094854071, i32 198958881, i32 -2032938284, i32 -237706686, i32 1759359992, i32 534414190, i32 -2118248755, i32 -155638181, i32 1873836001, i32 414664567, i32 -2012718362, i32 -15766928, i32 1711684554, i32 285281116, i32 -1889165569, i32 -127750551, i32 1634467795, i32 376229701, i32 -1609899400, i32 -686959890, i32 1308918612, i32 956543938, i32 -1486412191, i32 -799009033, i32 1231636301, i32 1047427035, i32 -1362007478, i32 -640263460, i32 1088359270, i32 936918000, i32 -1447252397, i32 -558129467, i32 1202900863, i32 817233897, i32 -1111625188, i32 -893730166, i32 1404277552, i32 615818150, i32 -1160759803, i32 -841546093, i32 1423857449, i32 601450431, i32 -1285129682, i32 -1000256840, i32 1567103746, i32 711928724, i32 -1274298825, i32 -1022587231, i32 1510334235, i32 755167117], align 16
@nr_strerror.unknown_error = internal global [256 x i8] zeroinitializer, align 16
@errors = internal unnamed_addr constant [15 x %struct.anon.8] [%struct.anon.8 { i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i32 0, i32 0) }, %struct.anon.8 { i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.94, i32 0, i32 0) }, %struct.anon.8 { i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i32 0, i32 0) }, %struct.anon.8 { i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i32 0, i32 0) }, %struct.anon.8 { i32 5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i32 0, i32 0) }, %struct.anon.8 { i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.98, i32 0, i32 0) }, %struct.anon.8 { i32 7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0) }, %struct.anon.8 { i32 8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i32 0, i32 0) }, %struct.anon.8 { i32 9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i32 0, i32 0) }, %struct.anon.8 { i32 10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.102, i32 0, i32 0) }, %struct.anon.8 { i32 11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.103, i32 0, i32 0) }, %struct.anon.8 { i32 12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.104, i32 0, i32 0) }, %struct.anon.8 { i32 13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i32 0, i32 0) }, %struct.anon.8 { i32 14, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.106, i32 0, i32 0) }, %struct.anon.8 { i32 15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.107, i32 0, i32 0) }], align 16
@.str.38 = private unnamed_addr constant [18 x i8] c"Unknown error: %d\00", align 1
@mem_usage = internal unnamed_addr global i32 0, align 4
@mem_stats = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@.str.39 = private unnamed_addr constant [24 x i8] c"Total memory usage: %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [24 x i8] c"Memory usage by bucket\0A\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"%d\09%d\0A\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"syslog\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"emergency\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"alert\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"critical\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"notice\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"EMERG\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"ALERT\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"CRIT\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"ERR\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"WARNING\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"NOTICE\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"INFO\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"DEBUG\00", align 1
@r_log_level_environment = internal unnamed_addr global i32 0, align 4
@r_log_initted = internal unnamed_addr global i32 0, align 4
@r_log_level = internal unnamed_addr global i32 5, align 4
@.str.61 = private unnamed_addr constant [8 x i8] c"generic\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"logging\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"R_LOG_VERBOSE\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"R_LOG_LEVEL\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"R_LOG_DESTINATION\00", align 1
@.str.66 = private unnamed_addr constant [12 x i8] c"%s.%s.level\00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c"%s.%s.enabled\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c"UCHAR\00", align 1
@.str.70 = private unnamed_addr constant [5 x i8] c"INT2\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"UINT2\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"INT4\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"UINT4\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"INT8\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"UINT8\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"Data\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@nr_reg_local_vtbl = internal global %struct.nr_registry_module_vtbl_ { i32 (%struct.nr_registry_module_*)* @nr_reg_local_init, i32 (i8*, i8*)* @nr_reg_local_get_char, i32 (i8*, i8*)* @nr_reg_local_get_uchar, i32 (i8*, i16*)* @nr_reg_local_get_int2, i32 (i8*, i16*)* @nr_reg_local_get_uint2, i32 (i8*, i32*)* @nr_reg_local_get_int4, i32 (i8*, i32*)* @nr_reg_local_get_uint4, i32 (i8*, i64*)* @nr_reg_local_get_int8, i32 (i8*, i64*)* @nr_reg_local_get_uint8, i32 (i8*, double*)* @nr_reg_local_get_double, i32 (i8*, i8*)* @nr_reg_local_get_registry, i32 (i8*, i8*, i64, i64*)* @nr_reg_local_get_bytes, i32 (i8*, i8*, i64)* @nr_reg_local_get_string, i32 (i8*, i64*)* @nr_reg_local_get_length, i32 (i8*, i8*)* @nr_reg_local_get_type, i32 (i8*, i8)* @nr_reg_local_set_char, i32 (i8*, i8)* @nr_reg_local_set_uchar, i32 (i8*, i16)* @nr_reg_local_set_int2, i32 (i8*, i16)* @nr_reg_local_set_uint2, i32 (i8*, i32)* @nr_reg_local_set_int4, i32 (i8*, i32)* @nr_reg_local_set_uint4, i32 (i8*, i64)* @nr_reg_local_set_int8, i32 (i8*, i64)* @nr_reg_local_set_uint8, i32 (i8*, double)* @nr_reg_local_set_double, i32 (i8*)* @nr_reg_local_set_registry, i32 (i8*, i8*, i64)* @nr_reg_local_set_bytes, i32 (i8*, i8*)* @nr_reg_local_set_string, i32 (i8*)* @nr_reg_local_del, i32 (i8*, i64*)* @nr_reg_local_get_child_count, i32 (i8*, [128 x i8]*, i64, i64*)* @nr_reg_local_get_children, i32 (i8*)* @nr_reg_local_fin, i32 (i32)* @nr_reg_local_dump }, align 8
@.str.79 = private unnamed_addr constant [24 x i8] c"insert '%s' (%s) %s: %s\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"succeeded\00", align 1
@.str.82 = private unnamed_addr constant [24 x i8] c"change '%s' (%s) %s: %s\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"delete of '%s' %s\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.86 = private unnamed_addr constant [27 x i8] c"No callbacks found on '%s'\00", align 1
@.str.87 = private unnamed_addr constant [28 x i8] c"%d callback%s found on '%s'\00", align 1
@.str.88 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.89 = private unnamed_addr constant [30 x i8] c"Invoking callback %p for '%s'\00", align 1
@.str.90 = private unnamed_addr constant [30 x i8] c"Skipping callback %p for '%s'\00", align 1
@.str.91 = private unnamed_addr constant [41 x i8] c"register callback %p on '%s' for '%s' %s\00", align 1
@.str.92 = private unnamed_addr constant [43 x i8] c"unregister callback %p on '%s' for '%s' %s\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"Cannot allocate memory\00", align 1
@.str.94 = private unnamed_addr constant [15 x i8] c"Item not found\00", align 1
@.str.95 = private unnamed_addr constant [17 x i8] c"Internal failure\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"Action already performed\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"End of data\00", align 1
@.str.98 = private unnamed_addr constant [17 x i8] c"Invalid argument\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"Invalid data\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"Operation would block\00", align 1
@.str.101 = private unnamed_addr constant [17 x i8] c"Operation queued\00", align 1
@.str.102 = private unnamed_addr constant [17 x i8] c"Operation failed\00", align 1
@.str.103 = private unnamed_addr constant [19 x i8] c"Operation rejected\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"Operation interrupted\00", align 1
@.str.105 = private unnamed_addr constant [10 x i8] c"I/O error\00", align 1
@.str.106 = private unnamed_addr constant [18 x i8] c"Permission Denied\00", align 1
@.str.107 = private unnamed_addr constant [22 x i8] c"Retry may be possible\00", align 1

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_log_register(i8* readonly, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca [128 x i8], align 16
  %5 = alloca [128 x i8], align 16
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #7
  %8 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %8) #7
  %9 = load i32, i32* @log_type_ct, align 4
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %26

; <label>:11:                                     ; preds = %2
  %12 = sext i32 %9 to i64
  br label %13

; <label>:13:                                     ; preds = %11, %21
  %14 = phi i64 [ 0, %11 ], [ %22, %21 ]
  %15 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %14, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 @strcmp(i8* %0, i8* %16) #16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19:                                     ; preds = %13
  %20 = trunc i64 %14 to i32
  store i32 %20, i32* %1, align 4
  br label %83

; <label>:21:                                     ; preds = %13
  %22 = add nuw nsw i64 %14, 1
  %23 = icmp slt i64 %22, %12
  br i1 %23, label %13, label %24

; <label>:24:                                     ; preds = %21
  %25 = icmp eq i32 %9, 16
  br i1 %25, label %83, label %26

; <label>:26:                                     ; preds = %2, %24
  %27 = icmp eq i8* %0, null
  br i1 %27, label %48, label %28

; <label>:28:                                     ; preds = %26
  %29 = tail call i64 @strlen(i8* nonnull %0) #16
  %30 = shl i64 %29, 32
  %31 = add i64 %30, 4294967296
  %32 = ashr exact i64 %31, 32
  %33 = add nsw i64 %32, 16
  %34 = tail call noalias i8* @malloc(i64 %33) #7
  %35 = icmp eq i8* %34, null
  br i1 %35, label %48, label %36

; <label>:36:                                     ; preds = %28
  %37 = bitcast i8* %34 to i32*
  store i32 1179402567, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %34, i64 4
  store i8 0, i8* %38, align 4
  %39 = trunc i64 %32 to i32
  %40 = getelementptr inbounds i8, i8* %34, i64 8
  %41 = bitcast i8* %40 to i32*
  store i32 %39, i32* %41, align 4
  %42 = load i32, i32* @mem_usage, align 4
  %43 = trunc i64 %33 to i32
  %44 = add i32 %42, %43
  store i32 %44, i32* @mem_usage, align 4
  %45 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %46 = add i32 %45, %39
  store i32 %46, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %47 = getelementptr inbounds i8, i8* %34, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* nonnull align 1 %0, i64 %32, i1 false) #7
  br label %48

; <label>:48:                                     ; preds = %26, %28, %36
  %49 = phi i8* [ %47, %36 ], [ null, %26 ], [ null, %28 ]
  %50 = sext i32 %9 to i64
  %51 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %50, i32 0
  store i8* %49, i8** %51, align 8
  store i32 %9, i32* %1, align 4
  %52 = add nsw i32 %9, 1
  store i32 %52, i32* @log_type_ct, align 4
  br label %53

; <label>:53:                                     ; preds = %48, %80
  %54 = phi i64 [ 0, %48 ], [ %81, %80 ]
  %55 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %50, i32 1, i64 %54
  store i32 -1, i32* %55, align 4
  %56 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %57 = icmp eq %struct.nr_registry_module_* %56, null
  br i1 %57, label %80, label %58

; <label>:58:                                     ; preds = %53
  %59 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %54, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %7, i64 128, i32 1, i64 128, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* %60) #7
  %62 = icmp ugt i32 %61, 127
  br i1 %62, label %83, label %63

; <label>:63:                                     ; preds = %58
  %64 = call i32 @NR_reg_make_registry(i8* nonnull %7, i8* %0, i8* nonnull %8)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %83

; <label>:66:                                     ; preds = %63
  %67 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %50, i32 2, i64 %54, i64 0
  %68 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %67, i1 false, i1 true)
  %69 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %67, i64 128, i32 1, i64 %68, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* nonnull %8) #7
  %70 = icmp ugt i32 %69, 127
  br i1 %70, label %83, label %71

; <label>:71:                                     ; preds = %66
  %72 = call fastcc i32 @r_log_get_reg_level(i8* nonnull %67, i32* nonnull %3)
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

; <label>:74:                                     ; preds = %71
  %75 = load i32, i32* %3, align 4
  store i32 %75, i32* %55, align 4
  br label %76

; <label>:76:                                     ; preds = %74, %71
  %77 = bitcast i32* %55 to i8*
  %78 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %67, i8 signext 1, void (i8*, i8, i8*)* nonnull @r_log_facility_change_cb, i8* nonnull %77) #7
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %85, label %83

; <label>:80:                                     ; preds = %88, %53
  %81 = add nuw nsw i64 %54, 1
  %82 = icmp ult i64 %81, 3
  br i1 %82, label %53, label %83

; <label>:83:                                     ; preds = %80, %66, %63, %58, %76, %85, %88, %24, %19
  %84 = phi i32 [ 0, %19 ], [ 3, %24 ], [ 0, %80 ], [ 3, %66 ], [ %64, %63 ], [ 3, %58 ], [ %86, %85 ], [ %78, %76 ], [ %89, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  ret i32 %84

; <label>:85:                                     ; preds = %76
  %86 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %67, i8 signext 2, void (i8*, i8, i8*)* nonnull @r_log_facility_change_cb, i8* nonnull %77) #7
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %83

; <label>:88:                                     ; preds = %85
  %89 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %67, i8 signext 4, void (i8*, i8, i8*)* nonnull @r_log_facility_delete_cb, i8* nonnull %77) #7
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %80, label %83
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: nounwind sspstrong uwtable
define hidden i8* @r_strdup(i8* readonly) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %23, label %3

; <label>:3:                                      ; preds = %1
  %4 = tail call i64 @strlen(i8* nonnull %0) #16
  %5 = shl i64 %4, 32
  %6 = add i64 %5, 4294967296
  %7 = ashr exact i64 %6, 32
  %8 = add nsw i64 %7, 16
  %9 = tail call noalias i8* @malloc(i64 %8) #7
  %10 = icmp eq i8* %9, null
  br i1 %10, label %23, label %11

; <label>:11:                                     ; preds = %3
  %12 = bitcast i8* %9 to i32*
  store i32 1179402567, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 0, i8* %13, align 4
  %14 = trunc i64 %7 to i32
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  %16 = bitcast i8* %15 to i32*
  store i32 %14, i32* %16, align 4
  %17 = load i32, i32* @mem_usage, align 4
  %18 = trunc i64 %8 to i32
  %19 = add i32 %17, %18
  store i32 %19, i32* @mem_usage, align 4
  %20 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %21 = add i32 %20, %14
  store i32 %21, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %22 = getelementptr inbounds i8, i8* %9, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %0, i64 %7, i1 false)
  br label %23

; <label>:23:                                     ; preds = %3, %1, %11
  %24 = phi i8* [ %22, %11 ], [ null, %1 ], [ null, %3 ]
  ret i8* %24
}

; Function Attrs: norecurse nounwind readonly sspstrong uwtable
define hidden i32 @NR_reg_initted() local_unnamed_addr #3 {
  %1 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %2 = icmp ne %struct.nr_registry_module_* %1, null
  %3 = zext i1 %2 to i32
  ret i32 %3
}

declare i32 @__snprintf_chk(i8*, i64, i32, i64, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_make_registry(i8*, i8* nocapture readonly, i8*) local_unnamed_addr #0 {
  %4 = tail call i32 @nr_reg_is_valid(i8* %0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %84

; <label>:6:                                      ; preds = %3
  %7 = load i8, i8* %1, align 1
  %8 = icmp eq i8 %7, 46
  br i1 %8, label %84, label %9

; <label>:9:                                      ; preds = %6
  %10 = tail call i64 @strlen(i8* nonnull %1) #16
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %84, label %12

; <label>:12:                                     ; preds = %9
  %13 = tail call i64 @strlen(i8* %0) #16
  %14 = add i64 %10, 2
  %15 = add i64 %14, %13
  %16 = icmp ugt i64 %15, 128
  br i1 %16, label %84, label %17

; <label>:17:                                     ; preds = %12
  %18 = icmp eq i8* %2, %0
  br i1 %18, label %22, label %19

; <label>:19:                                     ; preds = %17
  %20 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %2, i1 false, i1 true) #7
  %21 = tail call i8* @__strcpy_chk(i8* nonnull %2, i8* nonnull %0, i64 %20) #7
  br label %22

; <label>:22:                                     ; preds = %17, %19
  %23 = getelementptr inbounds i8, i8* %2, i64 %13
  %24 = load i8, i8* %0, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

; <label>:26:                                     ; preds = %22
  store i8 46, i8* %23, align 1
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  br label %28

; <label>:28:                                     ; preds = %26, %22
  %29 = phi i8* [ %27, %26 ], [ %23, %22 ]
  %30 = tail call i16** @__ctype_b_loc() #17
  %31 = and i64 %10, 1
  %32 = icmp eq i64 %10, 1
  br i1 %32, label %65, label %33

; <label>:33:                                     ; preds = %28
  %34 = sub i64 %10, %31
  br label %35

; <label>:35:                                     ; preds = %87, %33
  %36 = phi i8* [ %29, %33 ], [ %89, %87 ]
  %37 = phi i64 [ 0, %33 ], [ %88, %87 ]
  %38 = phi i64 [ %34, %33 ], [ %90, %87 ]
  %39 = getelementptr inbounds i8, i8* %1, i64 %37
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %36, align 1
  %41 = load i16*, i16** %30, align 8
  %42 = sext i8 %40 to i64
  %43 = getelementptr inbounds i16, i16* %41, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = or i8 %40, 1
  %46 = icmp eq i8 %45, 47
  %47 = and i16 %44, 24576
  %48 = icmp ne i16 %47, 16384
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51

; <label>:50:                                     ; preds = %35
  store i8 95, i8* %36, align 1
  br label %51

; <label>:51:                                     ; preds = %35, %50
  %52 = or i64 %37, 1
  %53 = getelementptr inbounds i8, i8* %36, i64 1
  %54 = getelementptr inbounds i8, i8* %1, i64 %52
  %55 = load i8, i8* %54, align 1
  store i8 %55, i8* %53, align 1
  %56 = load i16*, i16** %30, align 8
  %57 = sext i8 %55 to i64
  %58 = getelementptr inbounds i16, i16* %56, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = or i8 %55, 1
  %61 = icmp eq i8 %60, 47
  %62 = and i16 %59, 24576
  %63 = icmp ne i16 %62, 16384
  %64 = or i1 %61, %63
  br i1 %64, label %86, label %87

; <label>:65:                                     ; preds = %87, %28
  %66 = phi i8* [ %29, %28 ], [ %89, %87 ]
  %67 = phi i64 [ 0, %28 ], [ %88, %87 ]
  %68 = icmp eq i64 %31, 0
  br i1 %68, label %82, label %69

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds i8, i8* %1, i64 %67
  %71 = load i8, i8* %70, align 1
  store i8 %71, i8* %66, align 1
  %72 = load i16*, i16** %30, align 8
  %73 = sext i8 %71 to i64
  %74 = getelementptr inbounds i16, i16* %72, i64 %73
  %75 = load i16, i16* %74, align 2
  %76 = or i8 %71, 1
  %77 = icmp eq i8 %76, 47
  %78 = and i16 %75, 24576
  %79 = icmp ne i16 %78, 16384
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82

; <label>:81:                                     ; preds = %69
  store i8 95, i8* %66, align 1
  br label %82

; <label>:82:                                     ; preds = %81, %69, %65
  %83 = getelementptr i8, i8* %29, i64 %10
  store i8 0, i8* %83, align 1
  br label %84

; <label>:84:                                     ; preds = %82, %3, %6, %9, %12
  %85 = phi i32 [ 0, %82 ], [ %4, %3 ], [ 6, %6 ], [ 6, %9 ], [ 6, %12 ]
  ret i32 %85

; <label>:86:                                     ; preds = %51
  store i8 95, i8* %53, align 1
  br label %87

; <label>:87:                                     ; preds = %86, %51
  %88 = add i64 %37, 2
  %89 = getelementptr inbounds i8, i8* %36, i64 2
  %90 = add i64 %38, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %65, label %35
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1, i1) #5

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @r_log_get_reg_level(i8*, i32* nocapture) unnamed_addr #0 {
  %3 = alloca [32 x i8], align 16
  %4 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7
  %5 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %5, i64 0, i32 1
  %7 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %6, align 8
  %8 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %7, i64 0, i32 12
  %9 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %8, align 8
  %10 = call i32 %9(i8* %0, i8* nonnull %4, i64 32) #7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %25

; <label>:12:                                     ; preds = %2
  %13 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0)) #16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %23, label %15

; <label>:15:                                     ; preds = %12
  %16 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i64 0, i64 0)) #16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

; <label>:18:                                     ; preds = %41, %38, %35, %32, %29, %26, %20, %15
  %19 = phi i32 [ 0, %15 ], [ 1, %20 ], [ 2, %26 ], [ 3, %29 ], [ 4, %32 ], [ 5, %35 ], [ 6, %38 ], [ 7, %41 ]
  br label %23

; <label>:20:                                     ; preds = %15
  %21 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0)) #16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %18, label %26

; <label>:23:                                     ; preds = %12, %41, %18
  %24 = phi i32 [ %19, %18 ], [ -1, %41 ], [ -2, %12 ]
  store i32 %24, i32* %1, align 4
  br label %25

; <label>:25:                                     ; preds = %23, %2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7
  ret i32 %10

; <label>:26:                                     ; preds = %20
  %27 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0)) #16
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %18, label %29

; <label>:29:                                     ; preds = %26
  %30 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0)) #16
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %18, label %32

; <label>:32:                                     ; preds = %29
  %33 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0)) #16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %18, label %35

; <label>:35:                                     ; preds = %32
  %36 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0)) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %18, label %38

; <label>:38:                                     ; preds = %35
  %39 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0)) #16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %18, label %41

; <label>:41:                                     ; preds = %38
  %42 = call i32 @strcasecmp(i8* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0)) #16
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %18, label %23
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_register_callback(i8*, i8 signext, void (i8*, i8, i8*)*, i8*) local_unnamed_addr #0 {
  %5 = and i8 %1, 1
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

; <label>:7:                                      ; preds = %4
  %8 = tail call fastcc i32 @nr_reg_register_callback(i8* %0, i8 signext 1, void (i8*, i8, i8*)* %2, i8* %3)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

; <label>:10:                                     ; preds = %7
  %11 = and i8 %1, -2
  br label %12

; <label>:12:                                     ; preds = %4, %10
  %13 = phi i8 [ %11, %10 ], [ %1, %4 ]
  %14 = and i8 %13, 4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %18

; <label>:16:                                     ; preds = %7, %18, %27, %36, %41
  %17 = phi i32 [ %44, %41 ], [ %8, %7 ], [ %19, %18 ], [ %28, %27 ], [ %37, %36 ]
  ret i32 %17

; <label>:18:                                     ; preds = %12
  %19 = tail call fastcc i32 @nr_reg_register_callback(i8* %0, i8 signext 4, void (i8*, i8, i8*)* %2, i8* %3)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %16

; <label>:21:                                     ; preds = %18
  %22 = and i8 %13, -5
  br label %23

; <label>:23:                                     ; preds = %21, %12
  %24 = phi i8 [ %22, %21 ], [ %13, %12 ]
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %32, label %27

; <label>:27:                                     ; preds = %23
  %28 = tail call fastcc i32 @nr_reg_register_callback(i8* %0, i8 signext 2, void (i8*, i8, i8*)* %2, i8* %3)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %16

; <label>:30:                                     ; preds = %27
  %31 = and i8 %24, -3
  br label %32

; <label>:32:                                     ; preds = %30, %23
  %33 = phi i8 [ %31, %30 ], [ %24, %23 ]
  %34 = and i8 %33, 64
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %32
  %37 = tail call fastcc i32 @nr_reg_register_callback(i8* %0, i8 signext 64, void (i8*, i8, i8*)* %2, i8* %3)
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %16

; <label>:39:                                     ; preds = %36
  %40 = and i8 %33, -65
  br label %41

; <label>:41:                                     ; preds = %39, %32
  %42 = phi i8 [ %40, %39 ], [ %33, %32 ]
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, i32 0, i32 6
  br label %16
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @r_log_facility_change_cb(i8* nocapture, i8 signext, i8*) #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  %6 = call fastcc i32 @r_log_get_reg_level(i8* %2, i32* nonnull %4)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %11

; <label>:8:                                      ; preds = %3
  %9 = bitcast i8* %0 to i32*
  %10 = load i32, i32* %4, align 4
  store i32 %10, i32* %9, align 4
  br label %11

; <label>:11:                                     ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  ret void
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define internal void @r_log_facility_delete_cb(i8* nocapture, i8 signext, i8* nocapture readnone) #6 {
  %4 = bitcast i8* %0 to i32*
  store i32 -1, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define hidden void @r_free(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %18, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 -12
  %5 = bitcast i8* %4 to %struct.r_malloc_chunk*
  %6 = bitcast %struct.r_malloc_chunk* %5 to %struct.r_malloc_chunk_*
  %7 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* @mem_usage, align 4
  %10 = sub i32 -16, %8
  %11 = add i32 %10, %9
  store i32 %11, i32* @mem_usage, align 4
  %12 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %16, %8
  store i32 %17, i32* %15, align 4
  tail call void @free(i8* nonnull %4) #7
  br label %18

; <label>:18:                                     ; preds = %1, %3
  ret void
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_log_facility(i32, i8** nocapture) local_unnamed_addr #6 {
  %3 = icmp sgt i32 %0, -1
  %4 = load i32, i32* @log_type_ct, align 4
  %5 = icmp sgt i32 %4, %0
  %6 = and i1 %3, %5
  br i1 %6, label %7, label %13

; <label>:7:                                      ; preds = %2
  %8 = sext i32 %0 to i64
  %9 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %8, i32 0
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8** %1 to i64*
  store i64 %11, i64* %12, align 8
  br label %13

; <label>:13:                                     ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ 2, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_log(i32, i32, i8*, ...) local_unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %5)
  %7 = call i32 @r_vlog(i32 %0, i32 %1, i8* %2, %struct.__va_list_tag* nonnull %6)
  call void @llvm.va_end(i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret i32 0
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #7

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_vlog(i32, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #0 {
  %5 = alloca [512 x i8], align 16
  %6 = alloca [1 x %struct.__va_list_tag], align 16
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %7) #7
  %8 = load i32, i32* @r_log_env_verbose, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %30, label %10

; <label>:10:                                     ; preds = %4
  %11 = icmp ult i32 %1, 8
  br i1 %11, label %12, label %16

; <label>:12:                                     ; preds = %10
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds [8 x i8*], [8 x i8*]* @log_level_strings, i64 0, i64 %13
  %15 = load i8*, i8** %14, align 8
  br label %16

; <label>:16:                                     ; preds = %12, %10
  %17 = phi i8* [ %15, %12 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), %10 ]
  %18 = icmp sgt i32 %0, -1
  %19 = load i32, i32* @log_type_ct, align 4
  %20 = icmp sgt i32 %19, %0
  %21 = and i1 %18, %20
  br i1 %21, label %22, label %26

; <label>:22:                                     ; preds = %16
  %23 = sext i32 %0 to i64
  %24 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %23, i32 0
  %25 = load i8*, i8** %24, align 8
  br label %26

; <label>:26:                                     ; preds = %22, %16
  %27 = phi i8* [ %25, %22 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), %16 ]
  %28 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %7, i64 512, i32 1, i64 512, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %27, i8* %17, i8* %2) #7
  %29 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 511
  store i8 0, i8* %29, align 1
  br label %30

; <label>:30:                                     ; preds = %4, %26
  %31 = phi i8* [ %7, %26 ], [ %2, %4 ]
  %32 = bitcast [1 x %struct.__va_list_tag]* %6 to i8*
  %33 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %6, i64 0, i64 0
  %34 = bitcast %struct.__va_list_tag* %3 to i8*
  %35 = icmp slt i32 %0, 0
  %36 = sext i32 %0 to i64
  br label %37

; <label>:37:                                     ; preds = %111, %30
  %38 = phi i64 [ 0, %30 ], [ %112, %111 ]
  %39 = load i32, i32* @r_log_initted, align 4
  %40 = icmp slt i32 %39, 1
  br i1 %40, label %41, label %67

; <label>:41:                                     ; preds = %37
  %42 = call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0)) #7
  %43 = icmp eq i8* %42, null
  br i1 %43, label %49, label %44

; <label>:44:                                     ; preds = %41
  %45 = call i64 @strtol(i8* nocapture nonnull %42, i8** null, i32 10) #7
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* @r_log_level, align 4
  %47 = call i64 @strtol(i8* nocapture nonnull %42, i8** null, i32 10) #7
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* @r_log_level_environment, align 4
  br label %50

; <label>:49:                                     ; preds = %41
  store i32 5, i32* @r_log_level, align 4
  br label %50

; <label>:50:                                     ; preds = %44, %49
  %51 = call i8* @getenv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0)) #7
  %52 = icmp eq i8* %51, null
  br i1 %52, label %66, label %53

; <label>:53:                                     ; preds = %50
  %54 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 0), align 16
  %55 = call i32 @strcmp(i8* nonnull %51, i8* %54) #16
  %56 = icmp eq i32 %55, 0
  %57 = zext i1 %56 to i32
  store i32 %57, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 1), align 8
  %58 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 0), align 8
  %59 = call i32 @strcmp(i8* nonnull %51, i8* %58) #16
  %60 = icmp eq i32 %59, 0
  %61 = zext i1 %60 to i32
  store i32 %61, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 1), align 8
  %62 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 0), align 16
  %63 = call i32 @strcmp(i8* nonnull %51, i8* %62) #16
  %64 = icmp eq i32 %63, 0
  %65 = zext i1 %64 to i32
  store i32 %65, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 1), align 8
  br label %66

; <label>:66:                                     ; preds = %53, %50
  store i32 1, i32* @r_log_initted, align 4
  br label %67

; <label>:67:                                     ; preds = %66, %37
  %68 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #7
  %69 = icmp eq i8* %68, null
  br i1 %69, label %73, label %70

; <label>:70:                                     ; preds = %67
  %71 = call i64 @strtol(i8* nocapture nonnull %68, i8** null, i32 10) #7
  %72 = trunc i64 %71 to i32
  store i32 %72, i32* @r_log_env_verbose, align 4
  br label %73

; <label>:73:                                     ; preds = %67, %70
  %74 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %38, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %111, label %77

; <label>:77:                                     ; preds = %73
  %78 = load i32, i32* @r_log_level_environment, align 4
  %79 = icmp slt i32 %78, %1
  br i1 %79, label %80, label %107

; <label>:80:                                     ; preds = %77
  %81 = load i32, i32* @r_log_initted, align 4
  %82 = icmp slt i32 %81, 2
  br i1 %82, label %104, label %83

; <label>:83:                                     ; preds = %80
  %84 = load i32, i32* @log_type_ct, align 4
  %85 = icmp slt i32 %84, %0
  %86 = or i1 %35, %85
  br i1 %86, label %87, label %89

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* @r_log_level, align 4
  br label %101

; <label>:89:                                     ; preds = %83
  %90 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %36, i32 1, i64 %38
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, -2
  br i1 %92, label %111, label %93

; <label>:93:                                     ; preds = %89
  %94 = icmp sgt i32 %91, -1
  br i1 %94, label %101, label %95

; <label>:95:                                     ; preds = %93
  %96 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %38, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, -1
  %99 = load i32, i32* @r_log_level, align 4
  %100 = select i1 %98, i32 %99, i32 %97
  br label %101

; <label>:101:                                    ; preds = %95, %93, %87
  %102 = phi i32 [ %88, %87 ], [ %91, %93 ], [ %100, %95 ]
  %103 = icmp slt i32 %102, %1
  br i1 %103, label %111, label %107

; <label>:104:                                    ; preds = %80
  %105 = load i32, i32* @r_log_level, align 4
  %106 = icmp slt i32 %105, %1
  br i1 %106, label %111, label %107

; <label>:107:                                    ; preds = %101, %77, %104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #7
  call void @llvm.va_copy(i8* nonnull %32, i8* %34)
  %108 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %38, i32 3
  %109 = load i32 (i32, i32, i8*, %struct.__va_list_tag*)*, i32 (i32, i32, i8*, %struct.__va_list_tag*)** %108, align 8
  %110 = call i32 %109(i32 %0, i32 %1, i8* %31, %struct.__va_list_tag* nonnull %33) #7
  call void @llvm.va_end(i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #7
  br label %111

; <label>:111:                                    ; preds = %101, %89, %73, %104, %107
  %112 = add nuw nsw i64 %38, 1
  %113 = icmp eq i64 %112, 3
  br i1 %113, label %114, label %37

; <label>:114:                                    ; preds = %111
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %7) #7
  ret i32 0
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #7

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_dump(i32, i32, i8*, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = tail call i32 @r_logging(i32 %0, i32 %1)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %110, label %8

; <label>:8:                                      ; preds = %5
  %9 = shl nsw i32 %4, 1
  %10 = or i32 %9, 1
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 16
  %13 = tail call noalias i8* @malloc(i64 %12) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %110, label %15

; <label>:15:                                     ; preds = %8
  %16 = bitcast i8* %13 to i32*
  store i32 1179402567, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = bitcast i8* %18 to i32*
  store i32 %10, i32* %19, align 4
  %20 = load i32, i32* @mem_usage, align 4
  %21 = trunc i64 %12 to i32
  %22 = add i32 %20, %21
  store i32 %22, i32* @mem_usage, align 4
  %23 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %24 = add i32 %23, %10
  store i32 %24, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %25 = getelementptr inbounds i8, i8* %13, i64 12
  %26 = sext i32 %4 to i64
  %27 = shl nsw i64 %26, 1
  %28 = icmp ugt i64 %27, %11
  br i1 %28, label %88, label %29

; <label>:29:                                     ; preds = %15
  %30 = icmp eq i32 %4, 0
  br i1 %30, label %83, label %31

; <label>:31:                                     ; preds = %29
  %32 = and i64 %26, 1
  %33 = icmp eq i32 %4, 1
  br i1 %33, label %66, label %34

; <label>:34:                                     ; preds = %31
  %35 = sub nsw i64 %26, %32
  br label %36

; <label>:36:                                     ; preds = %36, %34
  %37 = phi i8* [ %25, %34 ], [ %62, %36 ]
  %38 = phi i64 [ 0, %34 ], [ %63, %36 ]
  %39 = phi i64 [ %35, %34 ], [ %64, %36 ]
  %40 = getelementptr inbounds i8, i8* %3, i64 %38
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %42, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = getelementptr inbounds i8, i8* %37, i64 1
  store i8 %44, i8* %37, align 1
  %46 = load i8, i8* %40, align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %47, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %49, i8* %45, align 1
  %51 = or i64 %38, 1
  %52 = getelementptr inbounds i8, i8* %3, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %54, i64 0
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %37, i64 3
  store i8 %56, i8* %50, align 1
  %58 = load i8, i8* %52, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %59, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %37, i64 4
  store i8 %61, i8* %57, align 1
  %63 = add i64 %38, 2
  %64 = add i64 %39, -2
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %36

; <label>:66:                                     ; preds = %36, %31
  %67 = phi i8* [ %25, %31 ], [ %62, %36 ]
  %68 = phi i64 [ 0, %31 ], [ %63, %36 ]
  %69 = icmp eq i64 %32, 0
  br i1 %69, label %81, label %70

; <label>:70:                                     ; preds = %66
  %71 = getelementptr inbounds i8, i8* %3, i64 %68
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %73, i64 0
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds i8, i8* %67, i64 1
  store i8 %75, i8* %67, align 1
  %77 = load i8, i8* %71, align 1
  %78 = zext i8 %77 to i64
  %79 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %78, i64 1
  %80 = load i8, i8* %79, align 1
  store i8 %80, i8* %76, align 1
  br label %81

; <label>:81:                                     ; preds = %66, %70
  %82 = getelementptr i8, i8* %25, i64 %27
  br label %83

; <label>:83:                                     ; preds = %81, %29
  %84 = phi i8* [ %25, %29 ], [ %82, %81 ]
  %85 = or i64 %27, 1
  %86 = icmp ugt i64 %85, %11
  br i1 %86, label %90, label %87

; <label>:87:                                     ; preds = %83
  store i8 0, i8* %84, align 1
  br label %90

; <label>:88:                                     ; preds = %15
  %89 = bitcast i8* %25 to i16*
  store i16 63, i16* %89, align 1
  br label %90

; <label>:90:                                     ; preds = %83, %87, %88
  %91 = icmp eq i8* %2, null
  br i1 %91, label %94, label %92

; <label>:92:                                     ; preds = %90
  %93 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %0, i32 %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %2, i32 %4, i8* nonnull %25)
  br label %96

; <label>:94:                                     ; preds = %90
  %95 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %0, i32 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* nonnull %25)
  br label %96

; <label>:96:                                     ; preds = %92, %94
  %97 = bitcast i8* %13 to %struct.r_malloc_chunk*
  %98 = bitcast %struct.r_malloc_chunk* %97 to %struct.r_malloc_chunk_*
  %99 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %98, i64 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = load i32, i32* @mem_usage, align 4
  %102 = sub i32 -16, %100
  %103 = add i32 %102, %101
  store i32 %103, i32* @mem_usage, align 4
  %104 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %98, i64 0, i32 1
  %105 = load i8, i8* %104, align 4
  %106 = zext i8 %105 to i64
  %107 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = sub i32 %108, %100
  store i32 %109, i32* %107, align 4
  tail call void @free(i8* nonnull %13) #7
  br label %110

; <label>:110:                                    ; preds = %8, %5, %96
  %111 = phi i32 [ 0, %96 ], [ 0, %5 ], [ 10, %8 ]
  ret i32 %111
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_logging(i32, i32) local_unnamed_addr #0 {
  %3 = load i32, i32* @r_log_initted, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %31

; <label>:5:                                      ; preds = %2
  %6 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0)) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %13, label %8

; <label>:8:                                      ; preds = %5
  %9 = tail call i64 @strtol(i8* nocapture nonnull %6, i8** null, i32 10) #7
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* @r_log_level, align 4
  %11 = tail call i64 @strtol(i8* nocapture nonnull %6, i8** null, i32 10) #7
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* @r_log_level_environment, align 4
  br label %14

; <label>:13:                                     ; preds = %5
  store i32 5, i32* @r_log_level, align 4
  br label %14

; <label>:14:                                     ; preds = %8, %13
  %15 = tail call i8* @getenv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0)) #7
  %16 = icmp eq i8* %15, null
  br i1 %16, label %30, label %17

; <label>:17:                                     ; preds = %14
  %18 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 0), align 16
  %19 = tail call i32 @strcmp(i8* nonnull %15, i8* %18) #16
  %20 = icmp eq i32 %19, 0
  %21 = zext i1 %20 to i32
  store i32 %21, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 1), align 8
  %22 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 0), align 8
  %23 = tail call i32 @strcmp(i8* nonnull %15, i8* %22) #16
  %24 = icmp eq i32 %23, 0
  %25 = zext i1 %24 to i32
  store i32 %25, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 1), align 8
  %26 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 0), align 16
  %27 = tail call i32 @strcmp(i8* nonnull %15, i8* %26) #16
  %28 = icmp eq i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 1), align 8
  br label %30

; <label>:30:                                     ; preds = %14, %17
  store i32 1, i32* @r_log_initted, align 4
  br label %31

; <label>:31:                                     ; preds = %30, %2
  %32 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #7
  %33 = icmp eq i8* %32, null
  br i1 %33, label %37, label %34

; <label>:34:                                     ; preds = %31
  %35 = tail call i64 @strtol(i8* nocapture nonnull %32, i8** null, i32 10) #7
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* @r_log_env_verbose, align 4
  br label %37

; <label>:37:                                     ; preds = %31, %34
  %38 = icmp slt i32 %0, 0
  %39 = sext i32 %0 to i64
  br label %40

; <label>:40:                                     ; preds = %37, %109
  %41 = phi i64 [ 0, %37 ], [ %110, %109 ]
  %42 = load i32, i32* @r_log_initted, align 4
  %43 = icmp slt i32 %42, 1
  br i1 %43, label %44, label %70

; <label>:44:                                     ; preds = %40
  %45 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0)) #7
  %46 = icmp eq i8* %45, null
  br i1 %46, label %52, label %47

; <label>:47:                                     ; preds = %44
  %48 = tail call i64 @strtol(i8* nocapture nonnull %45, i8** null, i32 10) #7
  %49 = trunc i64 %48 to i32
  store i32 %49, i32* @r_log_level, align 4
  %50 = tail call i64 @strtol(i8* nocapture nonnull %45, i8** null, i32 10) #7
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* @r_log_level_environment, align 4
  br label %53

; <label>:52:                                     ; preds = %44
  store i32 5, i32* @r_log_level, align 4
  br label %53

; <label>:53:                                     ; preds = %52, %47
  %54 = tail call i8* @getenv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0)) #7
  %55 = icmp eq i8* %54, null
  br i1 %55, label %69, label %56

; <label>:56:                                     ; preds = %53
  %57 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 0), align 16
  %58 = tail call i32 @strcmp(i8* nonnull %54, i8* %57) #16
  %59 = icmp eq i32 %58, 0
  %60 = zext i1 %59 to i32
  store i32 %60, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 1), align 8
  %61 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 0), align 8
  %62 = tail call i32 @strcmp(i8* nonnull %54, i8* %61) #16
  %63 = icmp eq i32 %62, 0
  %64 = zext i1 %63 to i32
  store i32 %64, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 1), align 8
  %65 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 0), align 16
  %66 = tail call i32 @strcmp(i8* nonnull %54, i8* %65) #16
  %67 = icmp eq i32 %66, 0
  %68 = zext i1 %67 to i32
  store i32 %68, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 1), align 8
  br label %69

; <label>:69:                                     ; preds = %56, %53
  store i32 1, i32* @r_log_initted, align 4
  br label %70

; <label>:70:                                     ; preds = %69, %40
  %71 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #7
  %72 = icmp eq i8* %71, null
  br i1 %72, label %76, label %73

; <label>:73:                                     ; preds = %70
  %74 = tail call i64 @strtol(i8* nocapture nonnull %71, i8** null, i32 10) #7
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* @r_log_env_verbose, align 4
  br label %76

; <label>:76:                                     ; preds = %73, %70
  %77 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %41, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %109, label %80

; <label>:80:                                     ; preds = %76
  %81 = load i32, i32* @r_log_level_environment, align 4
  %82 = icmp slt i32 %81, %1
  br i1 %82, label %83, label %112

; <label>:83:                                     ; preds = %80
  %84 = load i32, i32* @r_log_initted, align 4
  %85 = icmp slt i32 %84, 2
  br i1 %85, label %86, label %88

; <label>:86:                                     ; preds = %83
  %87 = load i32, i32* @r_log_level, align 4
  br label %106

; <label>:88:                                     ; preds = %83
  %89 = load i32, i32* @log_type_ct, align 4
  %90 = icmp slt i32 %89, %0
  %91 = or i1 %38, %90
  br i1 %91, label %92, label %94

; <label>:92:                                     ; preds = %88
  %93 = load i32, i32* @r_log_level, align 4
  br label %106

; <label>:94:                                     ; preds = %88
  %95 = getelementptr inbounds [16 x %struct.log_type_], [16 x %struct.log_type_]* @log_types, i64 0, i64 %39, i32 1, i64 %41
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, -2
  br i1 %97, label %109, label %98

; <label>:98:                                     ; preds = %94
  %99 = icmp sgt i32 %96, -1
  br i1 %99, label %106, label %100

; <label>:100:                                    ; preds = %98
  %101 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %41, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, -1
  %104 = load i32, i32* @r_log_level, align 4
  %105 = select i1 %103, i32 %104, i32 %102
  br label %106

; <label>:106:                                    ; preds = %92, %98, %100, %86
  %107 = phi i32 [ %87, %86 ], [ %93, %92 ], [ %96, %98 ], [ %105, %100 ]
  %108 = icmp slt i32 %107, %1
  br i1 %108, label %109, label %112

; <label>:109:                                    ; preds = %94, %76, %106
  %110 = add nuw nsw i64 %41, 1
  %111 = icmp ult i64 %110, 3
  br i1 %111, label %40, label %112

; <label>:112:                                    ; preds = %80, %109, %106
  %113 = phi i32 [ 1, %106 ], [ 0, %109 ], [ 1, %80 ]
  ret i32 %113
}

; Function Attrs: nounwind sspstrong uwtable
define hidden noalias i8* @r_malloc(i32, i64) local_unnamed_addr #0 {
  %3 = add i64 %1, 16
  %4 = tail call noalias i8* @malloc(i64 %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %21, label %6

; <label>:6:                                      ; preds = %2
  %7 = bitcast i8* %4 to i32*
  store i32 1179402567, i32* %7, align 4
  %8 = trunc i32 %0 to i8
  %9 = getelementptr inbounds i8, i8* %4, i64 4
  store i8 %8, i8* %9, align 4
  %10 = trunc i64 %1 to i32
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %10, i32* %12, align 4
  %13 = load i32, i32* @mem_usage, align 4
  %14 = trunc i64 %3 to i32
  %15 = add i32 %13, %14
  store i32 %15, i32* @mem_usage, align 4
  %16 = sext i32 %0 to i64
  %17 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, %10
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds i8, i8* %4, i64 12
  br label %21

; <label>:21:                                     ; preds = %2, %6
  %22 = phi i8* [ %20, %6 ], [ null, %2 ]
  ret i8* %22
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @nr_nbin2hex(i8* nocapture readonly, i64, i8* nocapture, i64, i64* nocapture) local_unnamed_addr #6 {
  %6 = shl i64 %1, 1
  %7 = icmp ugt i64 %6, %3
  br i1 %7, label %68, label %8

; <label>:8:                                      ; preds = %5
  %9 = icmp eq i64 %1, 0
  br i1 %9, label %62, label %10

; <label>:10:                                     ; preds = %8
  %11 = and i64 %1, 1
  %12 = icmp eq i64 %1, 1
  br i1 %12, label %45, label %13

; <label>:13:                                     ; preds = %10
  %14 = sub i64 %1, %11
  br label %15

; <label>:15:                                     ; preds = %15, %13
  %16 = phi i8* [ %2, %13 ], [ %41, %15 ]
  %17 = phi i64 [ 0, %13 ], [ %42, %15 ]
  %18 = phi i64 [ %14, %13 ], [ %43, %15 ]
  %19 = getelementptr inbounds i8, i8* %0, i64 %17
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %21, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 %23, i8* %16, align 1
  %25 = load i8, i8* %19, align 1
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %26, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 %28, i8* %24, align 1
  %30 = or i64 %17, 1
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %33, i64 0
  %35 = load i8, i8* %34, align 1
  %36 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 %35, i8* %29, align 1
  %37 = load i8, i8* %31, align 1
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %38, i64 1
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 %40, i8* %36, align 1
  %42 = add i64 %17, 2
  %43 = add i64 %18, -2
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %15

; <label>:45:                                     ; preds = %15, %10
  %46 = phi i8* [ %2, %10 ], [ %41, %15 ]
  %47 = phi i64 [ 0, %10 ], [ %42, %15 ]
  %48 = icmp eq i64 %11, 0
  br i1 %48, label %60, label %49

; <label>:49:                                     ; preds = %45
  %50 = getelementptr inbounds i8, i8* %0, i64 %47
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %52, i64 0
  %54 = load i8, i8* %53, align 1
  %55 = getelementptr inbounds i8, i8* %46, i64 1
  store i8 %54, i8* %46, align 1
  %56 = load i8, i8* %50, align 1
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds [256 x [3 x i8]], [256 x [3 x i8]]* @bin2hex_map, i64 0, i64 %57, i64 1
  %59 = load i8, i8* %58, align 1
  store i8 %59, i8* %55, align 1
  br label %60

; <label>:60:                                     ; preds = %45, %49
  %61 = getelementptr i8, i8* %2, i64 %6
  br label %62

; <label>:62:                                     ; preds = %60, %8
  %63 = phi i8* [ %2, %8 ], [ %61, %60 ]
  %64 = or i64 %6, 1
  %65 = icmp ugt i64 %64, %3
  br i1 %65, label %67, label %66

; <label>:66:                                     ; preds = %62
  store i8 0, i8* %63, align 1
  br label %67

; <label>:67:                                     ; preds = %62, %66
  store i64 %6, i64* %4, align 8
  br label %68

; <label>:68:                                     ; preds = %67, %5
  %69 = phi i32 [ 0, %67 ], [ 6, %5 ]
  ret i32 %69
}

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #7

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_log_e(i32, i32, i8*, ...) local_unnamed_addr #0 {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %5)
  %7 = call i32 @r_vlog_e(i32 %0, i32 %1, i8* %2, %struct.__va_list_tag* nonnull %6)
  call void @llvm.va_end(i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_vlog_e(i32, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #0 {
  %5 = alloca [512 x i8], align 16
  %6 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %6) #7
  %7 = tail call i32 @r_logging(i32 %0, i32 %1)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

; <label>:9:                                      ; preds = %4
  %10 = tail call i64 @strlen(i8* %2) #16
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %11, 510
  br i1 %12, label %30, label %13

; <label>:13:                                     ; preds = %9
  %14 = shl i64 %10, 32
  %15 = ashr exact i64 %14, 32
  %16 = call i8* @__strncpy_chk(i8* nonnull %6, i8* nonnull %2, i64 %15, i64 512) #7
  %17 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 %15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false)
  %18 = add i64 %14, 8589934592
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 %19
  %21 = sub i64 2190433320960, %14
  %22 = ashr exact i64 %21, 32
  %23 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %20, i1 false, i1 true)
  %24 = tail call i32* @__errno_location() #17
  %25 = load i32, i32* %24, align 4
  %26 = call i8* @strerror(i32 %25) #7
  %27 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %20, i64 %22, i32 1, i64 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %26) #7
  %28 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 511
  store i8 0, i8* %28, align 1
  %29 = call i32 @r_vlog(i32 %0, i32 %1, i8* nonnull %6, %struct.__va_list_tag* %3)
  br label %30

; <label>:30:                                     ; preds = %4, %13, %9
  %31 = phi i32 [ 1, %9 ], [ 0, %13 ], [ 0, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %6) #7
  ret i32 %31
}

; Function Attrs: argmemonly nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #9

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #10

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_log_nr(i32, i32, i32, i8*, ...) local_unnamed_addr #0 {
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  %6 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %6)
  %8 = call i32 @r_vlog_nr(i32 %0, i32 %1, i32 %2, i8* %3, %struct.__va_list_tag* nonnull %7)
  call void @llvm.va_end(i8* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_vlog_nr(i32, i32, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #0 {
  %6 = alloca [512 x i8], align 16
  %7 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %7) #7
  %8 = tail call i32 @r_logging(i32 %0, i32 %1)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %38, label %10

; <label>:10:                                     ; preds = %5
  %11 = tail call i64 @strlen(i8* %3) #16
  %12 = trunc i64 %11 to i32
  %13 = icmp sgt i32 %12, 510
  br i1 %13, label %38, label %14

; <label>:14:                                     ; preds = %10
  %15 = shl i64 %11, 32
  %16 = ashr exact i64 %15, 32
  %17 = call i8* @__strncpy_chk(i8* nonnull %7, i8* nonnull %3, i64 %16, i64 512) #7
  %18 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false)
  %19 = add i64 %15, 8589934592
  %20 = ashr exact i64 %19, 32
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 %20
  %22 = sub i64 2190433320960, %15
  %23 = ashr exact i64 %22, 32
  %24 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %21, i1 false, i1 true)
  %25 = add i32 %2, -1
  %26 = icmp ult i32 %25, 15
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %14
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds [15 x %struct.anon.8], [15 x %struct.anon.8]* @errors, i64 0, i64 %28, i32 1
  %30 = load i8*, i8** %29, align 8
  br label %33

; <label>:31:                                     ; preds = %14
  %32 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nr_strerror.unknown_error, i64 0, i64 0), i64 256, i32 1, i64 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0), i32 %2) #7
  br label %33

; <label>:33:                                     ; preds = %27, %31
  %34 = phi i8* [ %30, %27 ], [ getelementptr inbounds ([256 x i8], [256 x i8]* @nr_strerror.unknown_error, i64 0, i64 0), %31 ]
  %35 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %21, i64 %23, i32 1, i64 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %34) #7
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 511
  store i8 0, i8* %36, align 1
  %37 = call i32 @r_vlog(i32 %0, i32 %1, i8* nonnull %7, %struct.__va_list_tag* %4)
  br label %38

; <label>:38:                                     ; preds = %5, %33, %10
  %39 = phi i32 [ 1, %10 ], [ 0, %33 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %7) #7
  ret i32 %39
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i8* @nr_strerror(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -1
  %3 = icmp ult i32 %2, 15
  br i1 %3, label %4, label %10

; <label>:4:                                      ; preds = %1
  %5 = zext i32 %2 to i64
  %6 = getelementptr inbounds [15 x %struct.anon.8], [15 x %struct.anon.8]* @errors, i64 0, i64 %5, i32 1
  %7 = load i8*, i8** %6, align 8
  br label %8

; <label>:8:                                      ; preds = %4, %10
  %9 = phi i8* [ %7, %4 ], [ getelementptr inbounds ([256 x i8], [256 x i8]* @nr_strerror.unknown_error, i64 0, i64 0), %10 ]
  ret i8* %9

; <label>:10:                                     ; preds = %1
  %11 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nr_strerror.unknown_error, i64 0, i64 0), i64 256, i32 1, i64 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0), i32 %0) #7
  br label %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_log_init() local_unnamed_addr #0 {
  %1 = alloca i32, align 4
  %2 = load i32, i32* @r_log_initted, align 4
  %3 = icmp slt i32 %2, 2
  br i1 %3, label %4, label %17

; <label>:4:                                      ; preds = %0
  %5 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #7
  %6 = tail call i8* @getenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0)) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %13, label %8

; <label>:8:                                      ; preds = %4
  %9 = tail call i64 @strtol(i8* nocapture nonnull %6, i8** null, i32 10) #7
  %10 = trunc i64 %9 to i32
  store i32 %10, i32* @r_log_level, align 4
  %11 = tail call i64 @strtol(i8* nocapture nonnull %6, i8** null, i32 10) #7
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* @r_log_level_environment, align 4
  br label %14

; <label>:13:                                     ; preds = %4
  store i32 5, i32* @r_log_level, align 4
  br label %14

; <label>:14:                                     ; preds = %8, %13
  tail call fastcc void @r_log_get_destinations(i32 1) #7
  %15 = call i32 @r_log_register(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i32* nonnull %1) #7
  %16 = tail call i32 @r_log_register(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i32* nonnull @NR_LOG_LOGGING) #7
  store i32 2, i32* @r_log_initted, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #7
  br label %17

; <label>:17:                                     ; preds = %14, %0
  %18 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0)) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

; <label>:20:                                     ; preds = %17
  %21 = tail call i64 @strtol(i8* nocapture nonnull %18, i8** null, i32 10) #7
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* @r_log_env_verbose, align 4
  br label %23

; <label>:23:                                     ; preds = %17, %20
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_log_set_extra_destination(i32, i32 (i32, i32, i8*, %struct.__va_list_tag*)*) local_unnamed_addr #0 {
  %3 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 0), align 16
  %4 = tail call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %3) #16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

; <label>:6:                                      ; preds = %2
  %7 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 0), align 8
  %8 = tail call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %7) #16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %22, %6, %2
  %11 = phi i64 [ 0, %2 ], [ 1, %6 ], [ 2, %22 ]
  %12 = icmp eq i32 (i32, i32, i8*, %struct.__va_list_tag*)* %1, null
  %13 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %11, i32 1
  br i1 %12, label %14, label %15

; <label>:14:                                     ; preds = %10
  store i32 0, i32* %13, align 8
  br label %17

; <label>:15:                                     ; preds = %10
  store i32 1, i32* %13, align 8
  %16 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %11, i32 2
  store i32 %0, i32* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %15, %14
  %18 = phi i32 (i32, i32, i8*, %struct.__va_list_tag*)* [ @noop_vlog, %14 ], [ %1, %15 ]
  %19 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %11, i32 3
  store i32 (i32, i32, i8*, %struct.__va_list_tag*)* %18, i32 (i32, i32, i8*, %struct.__va_list_tag*)** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %17, %22
  %21 = phi i32 [ 3, %22 ], [ 0, %17 ]
  ret i32 %21

; <label>:22:                                     ; preds = %6
  %23 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 0), align 16
  %24 = tail call i32 @strcmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %23) #16
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %10, label %20
}

; Function Attrs: norecurse nounwind readnone sspstrong uwtable
define internal i32 @noop_vlog(i32, i32, i8* nocapture readnone, %struct.__va_list_tag* nocapture readnone) #11 {
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_char(i8*, i8* nocapture readonly, i8** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %7 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

; <label>:9:                                      ; preds = %3
  %10 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %11 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %10, i64 0, i32 1
  %12 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %11, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %12, i64 0, i32 1
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %13, align 8
  %15 = call i32 %14(i8* nonnull %6, i8* nonnull %5) #7
  switch i32 %15, label %32 [
    i32 0, label %17
    i32 2, label %16
  ]

; <label>:16:                                     ; preds = %9
  store i8* null, i8** %2, align 8
  br label %32

; <label>:17:                                     ; preds = %9
  %18 = call noalias i8* @malloc(i64 17) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %17
  store i8* null, i8** %2, align 8
  br label %32

; <label>:21:                                     ; preds = %17
  %22 = bitcast i8* %18 to i32*
  store i32 1179402567, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %18, i64 4
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 4
  %26 = load i32, i32* @mem_usage, align 4
  %27 = add i32 %26, 17
  store i32 %27, i32* @mem_usage, align 4
  %28 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %29 = add i32 %28, 1
  store i32 %29, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %30 = getelementptr inbounds i8, i8* %18, i64 12
  store i8* %30, i8** %2, align 8
  %31 = load i8, i8* %5, align 1
  store i8 %31, i8* %30, align 1
  br label %32

; <label>:32:                                     ; preds = %20, %3, %9, %21, %16
  %33 = phi i32 [ %7, %3 ], [ %15, %9 ], [ 0, %21 ], [ 0, %16 ], [ 1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %33
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_make_registry(i8*, i8* nocapture readonly, i8*) local_unnamed_addr #0 {
  %4 = tail call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* %2)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_char(i8*, i8*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 1
  %7 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i8* @r_calloc(i32, i64, i64) local_unnamed_addr #0 {
  %4 = mul i64 %2, %1
  %5 = add i64 %4, 16
  %6 = tail call noalias i8* @malloc(i64 %5) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %23, label %8

; <label>:8:                                      ; preds = %3
  %9 = bitcast i8* %6 to i32*
  store i32 1179402567, i32* %9, align 4
  %10 = trunc i32 %0 to i8
  %11 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 %10, i8* %11, align 4
  %12 = trunc i64 %4 to i32
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 4
  %15 = load i32, i32* @mem_usage, align 4
  %16 = trunc i64 %5 to i32
  %17 = add i32 %15, %16
  store i32 %17, i32* @mem_usage, align 4
  %18 = sext i32 %0 to i64
  %19 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, %12
  store i32 %21, i32* %19, align 4
  %22 = getelementptr inbounds i8, i8* %6, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %22, i8 0, i64 %2, i1 false)
  br label %23

; <label>:23:                                     ; preds = %3, %8
  %24 = phi i8* [ %22, %8 ], [ null, %3 ]
  ret i8* %24
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_uchar(i8*, i8* nocapture readonly, i8** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  %7 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

; <label>:9:                                      ; preds = %3
  %10 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %11 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %10, i64 0, i32 1
  %12 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %11, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %12, i64 0, i32 2
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %13, align 8
  %15 = call i32 %14(i8* nonnull %6, i8* nonnull %5) #7
  switch i32 %15, label %32 [
    i32 0, label %17
    i32 2, label %16
  ]

; <label>:16:                                     ; preds = %9
  store i8* null, i8** %2, align 8
  br label %32

; <label>:17:                                     ; preds = %9
  %18 = call noalias i8* @malloc(i64 17) #7
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %17
  store i8* null, i8** %2, align 8
  br label %32

; <label>:21:                                     ; preds = %17
  %22 = bitcast i8* %18 to i32*
  store i32 1179402567, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %18, i64 4
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 1, i32* %25, align 4
  %26 = load i32, i32* @mem_usage, align 4
  %27 = add i32 %26, 17
  store i32 %27, i32* @mem_usage, align 4
  %28 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %29 = add i32 %28, 1
  store i32 %29, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %30 = getelementptr inbounds i8, i8* %18, i64 12
  store i8* %30, i8** %2, align 8
  %31 = load i8, i8* %5, align 1
  store i8 %31, i8* %30, align 1
  br label %32

; <label>:32:                                     ; preds = %20, %3, %9, %21, %16
  %33 = phi i32 [ %7, %3 ], [ %15, %9 ], [ 0, %21 ], [ 0, %16 ], [ 1, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %33
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_uchar(i8*, i8*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 2
  %7 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_int2(i8*, i8* nocapture readonly, i16** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i16, align 2
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 3
  %15 = load i32 (i8*, i16*)*, i32 (i8*, i16*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, i16* nonnull %5) #7
  switch i32 %16, label %36 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store i16* null, i16** %2, align 8
  br label %36

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 18) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast i16** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %36

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 2, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 18
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 2
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast i16** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = load i16, i16* %5, align 2
  store i16 %35, i16* %33, align 2
  br label %36

; <label>:36:                                     ; preds = %21, %3, %10, %23, %17
  %37 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %37
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_int2(i8*, i16*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 3
  %7 = load i32 (i8*, i16*)*, i32 (i8*, i16*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i16* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_uint2(i8*, i8* nocapture readonly, i16** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i16, align 2
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 4
  %15 = load i32 (i8*, i16*)*, i32 (i8*, i16*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, i16* nonnull %5) #7
  switch i32 %16, label %36 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store i16* null, i16** %2, align 8
  br label %36

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 18) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast i16** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %36

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 2, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 18
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 2
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast i16** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = load i16, i16* %5, align 2
  store i16 %35, i16* %33, align 2
  br label %36

; <label>:36:                                     ; preds = %21, %3, %10, %23, %17
  %37 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %37
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_uint2(i8*, i16*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 4
  %7 = load i32 (i8*, i16*)*, i32 (i8*, i16*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i16* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_int4(i8*, i8* nocapture readonly, i32** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 5
  %15 = load i32 (i8*, i32*)*, i32 (i8*, i32*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, i32* nonnull %5) #7
  switch i32 %16, label %36 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store i32* null, i32** %2, align 8
  br label %36

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 20) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast i32** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %36

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 4, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 20
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 4
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast i32** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = load i32, i32* %5, align 4
  store i32 %35, i32* %33, align 4
  br label %36

; <label>:36:                                     ; preds = %21, %3, %10, %23, %17
  %37 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %37
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_int4(i8*, i32*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 5
  %7 = load i32 (i8*, i32*)*, i32 (i8*, i32*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i32* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_uint4(i8*, i8* nocapture readonly, i32** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 6
  %15 = load i32 (i8*, i32*)*, i32 (i8*, i32*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, i32* nonnull %5) #7
  switch i32 %16, label %36 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store i32* null, i32** %2, align 8
  br label %36

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 20) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast i32** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %36

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 4, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 20
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 4
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i32*
  %34 = bitcast i32** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = load i32, i32* %5, align 4
  store i32 %35, i32* %33, align 4
  br label %36

; <label>:36:                                     ; preds = %21, %3, %10, %23, %17
  %37 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %37
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_uint4(i8*, i32*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 6
  %7 = load i32 (i8*, i32*)*, i32 (i8*, i32*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i32* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_int8(i8*, i8* nocapture readonly, i64** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 7
  %15 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, i64* nonnull %5) #7
  switch i32 %16, label %36 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store i64* null, i64** %2, align 8
  br label %36

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 24) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast i64** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %36

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 8, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 24
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 8
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i64** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %33, align 8
  br label %36

; <label>:36:                                     ; preds = %21, %3, %10, %23, %17
  %37 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %37
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_int8(i8*, i64*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 7
  %7 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i64* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_uint8(i8*, i8* nocapture readonly, i64** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 8
  %15 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, i64* nonnull %5) #7
  switch i32 %16, label %36 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store i64* null, i64** %2, align 8
  br label %36

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 24) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast i64** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %36

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 8, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 24
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 8
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast i64** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = load i64, i64* %5, align 8
  store i64 %35, i64* %33, align 8
  br label %36

; <label>:36:                                     ; preds = %21, %3, %10, %23, %17
  %37 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %37
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_uint8(i8*, i64*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 8
  %7 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i64* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_double(i8*, i8* nocapture readonly, double** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca double, align 8
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %37

; <label>:10:                                     ; preds = %3
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 9
  %15 = load i32 (i8*, double*)*, i32 (i8*, double*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %6, double* nonnull %5) #7
  switch i32 %16, label %37 [
    i32 0, label %18
    i32 2, label %17
  ]

; <label>:17:                                     ; preds = %10
  store double* null, double** %2, align 8
  br label %37

; <label>:18:                                     ; preds = %10
  %19 = call noalias i8* @malloc(i64 24) #7
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %18
  %22 = bitcast double** %2 to i8**
  store i8* null, i8** %22, align 8
  br label %37

; <label>:23:                                     ; preds = %18
  %24 = bitcast i8* %19 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 4
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %19, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 8, i32* %27, align 4
  %28 = load i32, i32* @mem_usage, align 4
  %29 = add i32 %28, 24
  store i32 %29, i32* @mem_usage, align 4
  %30 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %31 = add i32 %30, 8
  store i32 %31, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %32 = getelementptr inbounds i8, i8* %19, i64 12
  %33 = bitcast i8* %32 to i64*
  %34 = bitcast double** %2 to i8**
  store i8* %32, i8** %34, align 8
  %35 = bitcast double* %5 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %33, align 8
  br label %37

; <label>:37:                                     ; preds = %21, %3, %10, %23, %17
  %38 = phi i32 [ %8, %3 ], [ %16, %10 ], [ 0, %23 ], [ 0, %17 ], [ 1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %38
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_double(i8*, double*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 9
  %7 = load i32 (i8*, double*)*, i32 (i8*, double*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, double* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_string(i8*, i8* nocapture readonly, i8*** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %32

; <label>:10:                                     ; preds = %3
  %11 = call i32 @NR_reg_alloc_string(i8* nonnull %6, i8** nonnull %5)
  switch i32 %11, label %32 [
    i32 0, label %13
    i32 2, label %12
  ]

; <label>:12:                                     ; preds = %10
  store i8** null, i8*** %2, align 8
  br label %32

; <label>:13:                                     ; preds = %10
  %14 = call noalias i8* @malloc(i64 24) #7
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %13
  %17 = bitcast i8*** %2 to i8**
  store i8* null, i8** %17, align 8
  br label %32

; <label>:18:                                     ; preds = %13
  %19 = bitcast i8* %14 to i32*
  store i32 1179402567, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 8, i32* %22, align 4
  %23 = load i32, i32* @mem_usage, align 4
  %24 = add i32 %23, 24
  store i32 %24, i32* @mem_usage, align 4
  %25 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %26 = add i32 %25, 8
  store i32 %26, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %27 = getelementptr inbounds i8, i8* %14, i64 12
  %28 = bitcast i8* %27 to i64*
  %29 = bitcast i8*** %2 to i8**
  store i8* %27, i8** %29, align 8
  %30 = bitcast i8** %5 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  br label %32

; <label>:32:                                     ; preds = %16, %3, %10, %18, %12
  %33 = phi i32 [ %8, %3 ], [ %11, %10 ], [ 0, %18 ], [ 0, %12 ], [ 1, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %33
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_alloc_string(i8*, i8** nocapture) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %5, i64 0, i32 1
  %7 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %6, align 8
  %8 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %7, i64 0, i32 13
  %9 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %8, align 8
  %10 = call i32 %9(i8* %0, i64* nonnull %3) #7
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %52

; <label>:12:                                     ; preds = %2
  %13 = load i64, i64* %3, align 8
  %14 = add i64 %13, 1
  %15 = add i64 %13, 17
  %16 = call noalias i8* @malloc(i64 %15) #7
  %17 = icmp eq i8* %16, null
  br i1 %17, label %52, label %18

; <label>:18:                                     ; preds = %12
  %19 = bitcast i8* %16 to i32*
  store i32 1179402567, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 0, i8* %20, align 4
  %21 = trunc i64 %14 to i32
  %22 = getelementptr inbounds i8, i8* %16, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 4
  %24 = load i32, i32* @mem_usage, align 4
  %25 = trunc i64 %15 to i32
  %26 = add i32 %24, %25
  store i32 %26, i32* @mem_usage, align 4
  %27 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %28 = add i32 %27, %21
  store i32 %28, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %29 = getelementptr inbounds i8, i8* %16, i64 12
  %30 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %31 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %30, i64 0, i32 1
  %32 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %31, align 8
  %33 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %32, i64 0, i32 12
  %34 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %33, align 8
  %35 = call i32 %34(i8* %0, i8* nonnull %29, i64 %14) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %18
  store i8* %29, i8** %1, align 8
  br label %52

; <label>:38:                                     ; preds = %18
  %39 = bitcast i8* %16 to %struct.r_malloc_chunk*
  %40 = bitcast %struct.r_malloc_chunk* %39 to %struct.r_malloc_chunk_*
  %41 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %40, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* @mem_usage, align 4
  %44 = sub i32 -16, %42
  %45 = add i32 %44, %43
  store i32 %45, i32* @mem_usage, align 4
  %46 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %40, i64 0, i32 1
  %47 = load i8, i8* %46, align 4
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 %50, %42
  store i32 %51, i32* %49, align 4
  call void @free(i8* nonnull %16) #7
  br label %52

; <label>:52:                                     ; preds = %12, %2, %37, %38
  %53 = phi i32 [ %35, %38 ], [ %10, %2 ], [ 0, %37 ], [ 1, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret i32 %53
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_data(i8*, i8* nocapture readonly, %struct.Data_** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = alloca %struct.Data_, align 8
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = bitcast %struct.Data_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %29

; <label>:10:                                     ; preds = %3
  %11 = call i32 @NR_reg_alloc_data(i8* nonnull %6, %struct.Data_* nonnull %5)
  switch i32 %11, label %29 [
    i32 0, label %13
    i32 2, label %12
  ]

; <label>:12:                                     ; preds = %10
  store %struct.Data_* null, %struct.Data_** %2, align 8
  br label %29

; <label>:13:                                     ; preds = %10
  %14 = call noalias i8* @malloc(i64 32) #7
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %13
  %17 = bitcast %struct.Data_** %2 to i8**
  store i8* null, i8** %17, align 8
  br label %29

; <label>:18:                                     ; preds = %13
  %19 = bitcast i8* %14 to i32*
  store i32 1179402567, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 16, i32* %22, align 4
  %23 = load i32, i32* @mem_usage, align 4
  %24 = add i32 %23, 32
  store i32 %24, i32* @mem_usage, align 4
  %25 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %26 = add i32 %25, 16
  store i32 %26, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %27 = getelementptr inbounds i8, i8* %14, i64 12
  %28 = bitcast %struct.Data_** %2 to i8**
  store i8* %27, i8** %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %7, i64 16, i1 false)
  br label %29

; <label>:29:                                     ; preds = %16, %3, %10, %18, %12
  %30 = phi i32 [ %8, %3 ], [ %11, %10 ], [ 0, %18 ], [ 0, %12 ], [ 1, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %30
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_alloc_data(i8*, %struct.Data_* nocapture) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %8 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %7, i64 0, i32 1
  %9 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %8, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %9, i64 0, i32 13
  %11 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %10, align 8
  %12 = call i32 %11(i8* %0, i64* nonnull %3) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %56

; <label>:14:                                     ; preds = %2
  %15 = load i64, i64* %3, align 8
  %16 = add i64 %15, 16
  %17 = call noalias i8* @malloc(i64 %16) #7
  %18 = icmp eq i8* %17, null
  br i1 %18, label %56, label %19

; <label>:19:                                     ; preds = %14
  %20 = bitcast i8* %17 to i32*
  store i32 1179402567, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 4
  store i8 0, i8* %21, align 4
  %22 = trunc i64 %15 to i32
  %23 = getelementptr inbounds i8, i8* %17, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 4
  %25 = load i32, i32* @mem_usage, align 4
  %26 = trunc i64 %16 to i32
  %27 = add i32 %25, %26
  store i32 %27, i32* @mem_usage, align 4
  %28 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %29 = add i32 %28, %22
  store i32 %29, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %30 = getelementptr inbounds i8, i8* %17, i64 12
  %31 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %32 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %31, i64 0, i32 1
  %33 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %32, align 8
  %34 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %33, i64 0, i32 11
  %35 = load i32 (i8*, i8*, i64, i64*)*, i32 (i8*, i8*, i64, i64*)** %34, align 8
  %36 = call i32 %35(i8* %0, i8* nonnull %30, i64 %15, i64* nonnull %4) #7
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %42

; <label>:38:                                     ; preds = %19
  %39 = load i64, i64* %3, align 8
  %40 = getelementptr inbounds %struct.Data_, %struct.Data_* %1, i64 0, i32 1
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct.Data_, %struct.Data_* %1, i64 0, i32 0
  store i8* %30, i8** %41, align 8
  br label %56

; <label>:42:                                     ; preds = %19
  %43 = bitcast i8* %17 to %struct.r_malloc_chunk*
  %44 = bitcast %struct.r_malloc_chunk* %43 to %struct.r_malloc_chunk_*
  %45 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* @mem_usage, align 4
  %48 = sub i32 -16, %46
  %49 = add i32 %48, %47
  store i32 %49, i32* @mem_usage, align 4
  %50 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %44, i64 0, i32 1
  %51 = load i8, i8* %50, align 4
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %54, %46
  store i32 %55, i32* %53, align 4
  call void @free(i8* nonnull %17) #7
  br label %56

; <label>:56:                                     ; preds = %14, %2, %38, %42
  %57 = phi i32 [ %36, %42 ], [ %12, %2 ], [ 0, %38 ], [ 1, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_char(i8*, i8* nocapture readonly, i8* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i8* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i8, i8* %2, align 1
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 15
  %16 = load i32 (i8*, i8)*, i32 (i8*, i8)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i8 signext %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_char(i8*, i8 signext) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 15
  %7 = load i32 (i8*, i8)*, i32 (i8*, i8)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8 signext %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_uchar(i8*, i8* nocapture readonly, i8* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i8* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i8, i8* %2, align 1
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 16
  %16 = load i32 (i8*, i8)*, i32 (i8*, i8)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i8 zeroext %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_uchar(i8*, i8 zeroext) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 16
  %7 = load i32 (i8*, i8)*, i32 (i8*, i8)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8 zeroext %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_int2(i8*, i8* nocapture readonly, i16* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i16* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i16, i16* %2, align 2
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 17
  %16 = load i32 (i8*, i16)*, i32 (i8*, i16)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i16 signext %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_int2(i8*, i16 signext) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 17
  %7 = load i32 (i8*, i16)*, i32 (i8*, i16)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i16 signext %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_uint2(i8*, i8* nocapture readonly, i16* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i16* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i16, i16* %2, align 2
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 18
  %16 = load i32 (i8*, i16)*, i32 (i8*, i16)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i16 zeroext %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_uint2(i8*, i16 zeroext) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 18
  %7 = load i32 (i8*, i16)*, i32 (i8*, i16)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i16 zeroext %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_int4(i8*, i8* nocapture readonly, i32* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i32* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* %2, align 4
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 19
  %16 = load i32 (i8*, i32)*, i32 (i8*, i32)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i32 %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_int4(i8*, i32) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 19
  %7 = load i32 (i8*, i32)*, i32 (i8*, i32)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i32 %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_uint4(i8*, i8* nocapture readonly, i32* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i32* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* %2, align 4
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 20
  %16 = load i32 (i8*, i32)*, i32 (i8*, i32)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i32 %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_uint4(i8*, i32) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 20
  %7 = load i32 (i8*, i32)*, i32 (i8*, i32)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i32 %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_int8(i8*, i8* nocapture readonly, i64* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i64* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i64, i64* %2, align 8
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 21
  %16 = load i32 (i8*, i64)*, i32 (i8*, i64)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i64 %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_int8(i8*, i64) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 21
  %7 = load i32 (i8*, i64)*, i32 (i8*, i64)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i64 %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_uint8(i8*, i8* nocapture readonly, i64* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i64* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i64, i64* %2, align 8
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 22
  %16 = load i32 (i8*, i64)*, i32 (i8*, i64)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i64 %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_uint8(i8*, i64) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 22
  %7 = load i32 (i8*, i64)*, i32 (i8*, i64)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i64 %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_double(i8*, i8* nocapture readonly, double* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq double* %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load double, double* %2, align 8
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 23
  %16 = load i32 (i8*, double)*, i32 (i8*, double)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, double %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_double(i8*, double) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 23
  %7 = load i32 (i8*, double)*, i32 (i8*, double)** %6, align 8
  %8 = tail call i32 %7(i8* %0, double %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_string(i8*, i8* nocapture readonly, i8** readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq i8** %2, null
  br i1 %6, label %18, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = load i8*, i8** %2, align 8
  %12 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %12, i64 0, i32 1
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 26
  %16 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %15, align 8
  %17 = call i32 %16(i8* nonnull %5, i8* %11) #7
  br label %18

; <label>:18:                                     ; preds = %7, %10, %3
  %19 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %17, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %19
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_string(i8*, i8*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 26
  %7 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_data(i8*, i8* nocapture readonly, %struct.Data_* readonly) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = icmp eq %struct.Data_* %2, null
  br i1 %6, label %21, label %7

; <label>:7:                                      ; preds = %3
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.Data_, %struct.Data_* %2, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.Data_, %struct.Data_* %2, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %16 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %15, i64 0, i32 1
  %17 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %16, align 8
  %18 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %17, i64 0, i32 25
  %19 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %18, align 8
  %20 = call i32 %19(i8* nonnull %5, i8* %12, i64 %14) #7
  br label %21

; <label>:21:                                     ; preds = %7, %10, %3
  %22 = phi i32 [ 0, %3 ], [ %8, %7 ], [ %20, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %22
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_bytes(i8*, i8*, i64) local_unnamed_addr #0 {
  %4 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %5 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %4, i64 0, i32 1
  %6 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %5, align 8
  %7 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %6, i64 0, i32 25
  %8 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %7, align 8
  %9 = tail call i32 %8(i8* %0, i8* %1, i64 %2) #7
  ret i32 %9
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_char(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %18, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 -12
  %5 = bitcast i8* %4 to %struct.r_malloc_chunk*
  %6 = bitcast %struct.r_malloc_chunk* %5 to %struct.r_malloc_chunk_*
  %7 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* @mem_usage, align 4
  %10 = sub i32 -16, %8
  %11 = add i32 %10, %9
  store i32 %11, i32* @mem_usage, align 4
  %12 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %16, %8
  store i32 %17, i32* %15, align 4
  tail call void @free(i8* nonnull %4) #7
  br label %18

; <label>:18:                                     ; preds = %1, %3
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_uchar(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %18, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 -12
  %5 = bitcast i8* %4 to %struct.r_malloc_chunk*
  %6 = bitcast %struct.r_malloc_chunk* %5 to %struct.r_malloc_chunk_*
  %7 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* @mem_usage, align 4
  %10 = sub i32 -16, %8
  %11 = add i32 %10, %9
  store i32 %11, i32* @mem_usage, align 4
  %12 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %16, %8
  store i32 %17, i32* %15, align 4
  tail call void @free(i8* nonnull %4) #7
  br label %18

; <label>:18:                                     ; preds = %1, %3
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_int2(i16*) local_unnamed_addr #0 {
  %2 = icmp eq i16* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i16, i16* %0, i64 -6
  %5 = bitcast i16* %4 to i8*
  %6 = bitcast i16* %4 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_uint2(i16*) local_unnamed_addr #0 {
  %2 = icmp eq i16* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i16, i16* %0, i64 -6
  %5 = bitcast i16* %4 to i8*
  %6 = bitcast i16* %4 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_int4(i32*) local_unnamed_addr #0 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i32, i32* %0, i64 -3
  %5 = bitcast i32* %4 to i8*
  %6 = bitcast i32* %4 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_uint4(i32*) local_unnamed_addr #0 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i32, i32* %0, i64 -3
  %5 = bitcast i32* %4 to i8*
  %6 = bitcast i32* %4 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_int8(i64*) local_unnamed_addr #0 {
  %2 = icmp eq i64* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = bitcast i64* %0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 -12
  %6 = bitcast i8* %5 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_uint8(i64*) local_unnamed_addr #0 {
  %2 = icmp eq i64* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = bitcast i64* %0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 -12
  %6 = bitcast i8* %5 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_double(double*) local_unnamed_addr #0 {
  %2 = icmp eq double* %0, null
  br i1 %2, label %19, label %3

; <label>:3:                                      ; preds = %1
  %4 = bitcast double* %0 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 -12
  %6 = bitcast i8* %5 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_string(i8**) local_unnamed_addr #0 {
  %2 = load i8*, i8** %0, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %19, label %4

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds i8, i8* %2, i64 -12
  %6 = bitcast i8* %5 to %struct.r_malloc_chunk*
  %7 = bitcast %struct.r_malloc_chunk* %6 to %struct.r_malloc_chunk_*
  %8 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = sub i32 -16, %9
  %12 = add i32 %11, %10
  store i32 %12, i32* @mem_usage, align 4
  %13 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %7, i64 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 %17, %9
  store i32 %18, i32* %16, align 4
  tail call void @free(i8* nonnull %5) #7
  br label %19

; <label>:19:                                     ; preds = %4, %1
  %20 = bitcast i8** %0 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 -12
  %22 = bitcast i8* %21 to %struct.r_malloc_chunk*
  %23 = bitcast %struct.r_malloc_chunk* %22 to %struct.r_malloc_chunk_*
  %24 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* @mem_usage, align 4
  %27 = sub i32 -16, %25
  %28 = add i32 %27, %26
  store i32 %28, i32* @mem_usage, align 4
  %29 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %23, i64 0, i32 1
  %30 = load i8, i8* %29, align 4
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %33, %25
  store i32 %34, i32* %32, align 4
  tail call void @free(i8* nonnull %21) #7
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_data(%struct.Data_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.Data_* %0, null
  br i1 %2, label %38, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %22, label %7

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds i8, i8* %5, i64 -12
  %9 = bitcast i8* %8 to %struct.r_malloc_chunk*
  %10 = bitcast %struct.r_malloc_chunk* %9 to %struct.r_malloc_chunk_*
  %11 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = load i32, i32* @mem_usage, align 4
  %14 = sub i32 -16, %12
  %15 = add i32 %14, %13
  store i32 %15, i32* @mem_usage, align 4
  %16 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %10, i64 0, i32 1
  %17 = load i8, i8* %16, align 4
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = sub i32 %20, %12
  store i32 %21, i32* %19, align 4
  tail call void @free(i8* nonnull %8) #7
  br label %22

; <label>:22:                                     ; preds = %7, %3
  %23 = bitcast %struct.Data_* %0 to i8*
  %24 = getelementptr inbounds i8, i8* %23, i64 -12
  %25 = bitcast i8* %24 to %struct.r_malloc_chunk*
  %26 = bitcast %struct.r_malloc_chunk* %25 to %struct.r_malloc_chunk_*
  %27 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* @mem_usage, align 4
  %30 = sub i32 -16, %28
  %31 = add i32 %30, %29
  store i32 %31, i32* @mem_usage, align 4
  %32 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %26, i64 0, i32 1
  %33 = load i8, i8* %32, align 4
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %36, %28
  store i32 %37, i32* %35, align 4
  tail call void @free(i8* nonnull %24) #7
  br label %38

; <label>:38:                                     ; preds = %1, %22
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_destroy(%struct.Data_**) local_unnamed_addr #0 {
  %2 = icmp eq %struct.Data_** %0, null
  br i1 %2, label %45, label %3

; <label>:3:                                      ; preds = %1
  %4 = load %struct.Data_*, %struct.Data_** %0, align 8
  %5 = icmp eq %struct.Data_* %4, null
  br i1 %5, label %45, label %6

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.Data_, %struct.Data_* %4, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %27, label %10

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds i8, i8* %8, i64 -12
  %12 = bitcast i8* %11 to %struct.r_malloc_chunk*
  %13 = bitcast %struct.r_malloc_chunk* %12 to %struct.r_malloc_chunk_*
  %14 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %13, i64 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* @mem_usage, align 4
  %17 = sub i32 -16, %15
  %18 = add i32 %17, %16
  store i32 %18, i32* @mem_usage, align 4
  %19 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %13, i64 0, i32 1
  %20 = load i8, i8* %19, align 4
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = sub i32 %23, %15
  store i32 %24, i32* %22, align 4
  tail call void @free(i8* nonnull %11) #7
  %25 = load %struct.Data_*, %struct.Data_** %0, align 8
  %26 = icmp eq %struct.Data_* %25, null
  br i1 %26, label %44, label %27

; <label>:27:                                     ; preds = %6, %10
  %28 = phi %struct.Data_* [ %25, %10 ], [ %4, %6 ]
  %29 = bitcast %struct.Data_* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 -12
  %31 = bitcast i8* %30 to %struct.r_malloc_chunk*
  %32 = bitcast %struct.r_malloc_chunk* %31 to %struct.r_malloc_chunk_*
  %33 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %32, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* @mem_usage, align 4
  %36 = sub i32 -16, %34
  %37 = add i32 %36, %35
  store i32 %37, i32* @mem_usage, align 4
  %38 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %32, i64 0, i32 1
  %39 = load i8, i8* %38, align 4
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 %42, %34
  store i32 %43, i32* %41, align 4
  tail call void @free(i8* nonnull %30) #7
  br label %44

; <label>:44:                                     ; preds = %27, %10
  store %struct.Data_* null, %struct.Data_** %0, align 8
  br label %45

; <label>:45:                                     ; preds = %1, %3, %44
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_get_children(i8*, i8* nocapture readonly, i8*, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #0 {
  %6 = alloca [128 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca [128 x i8], align 16
  %9 = alloca %struct.entry*, align 8
  %10 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #7
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  %12 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %12) #7
  %13 = bitcast %struct.entry** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = bitcast i8* %2 to %struct.entry**
  store %struct.entry* null, %struct.entry** %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 8
  %16 = bitcast i8* %15 to %struct.entry***
  %17 = bitcast i8* %15 to i8**
  store i8* %2, i8** %17, align 8
  %18 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %10) #7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %55

; <label>:20:                                     ; preds = %5
  %21 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %22 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %21, i64 0, i32 1
  %23 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %22, align 8
  %24 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %23, i64 0, i32 28
  %25 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %24, align 8
  %26 = bitcast i32* %7 to i64*
  %27 = call i32 %25(i8* nonnull %10, i64* nonnull %26) #7
  switch i32 %27, label %55 [
    i32 0, label %28
    i32 2, label %54
  ]

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* %7, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %54, label %31

; <label>:31:                                     ; preds = %28
  %32 = bitcast i8* %15 to i64*
  %33 = bitcast i8* %15 to i64**
  br label %34

; <label>:34:                                     ; preds = %31, %50
  %35 = phi i32 [ 0, %31 ], [ %51, %50 ]
  %36 = call i32 @NR_reg_get_child_registry(i8* nonnull %10, i32 %35, i8* nonnull %12)
  switch i32 %36, label %55 [
    i32 0, label %37
    i32 2, label %50
  ]

; <label>:37:                                     ; preds = %34
  %38 = call i32 %4(i8* nonnull %12, i8* nonnull %13) #7
  switch i32 %38, label %55 [
    i32 0, label %39
    i32 2, label %50
  ]

; <label>:39:                                     ; preds = %37
  %40 = load %struct.entry*, %struct.entry** %9, align 8
  %41 = getelementptr inbounds %struct.entry, %struct.entry* %40, i64 0, i32 0, i32 0
  store %struct.entry* null, %struct.entry** %41, align 8
  %42 = load i64, i64* %32, align 8
  %43 = load %struct.entry*, %struct.entry** %9, align 8
  %44 = getelementptr inbounds %struct.entry, %struct.entry* %43, i64 0, i32 0, i32 1
  %45 = bitcast %struct.entry*** %44 to i64*
  store i64 %42, i64* %45, align 8
  %46 = ptrtoint %struct.entry* %43 to i64
  %47 = load i64*, i64** %33, align 8
  store i64 %46, i64* %47, align 8
  %48 = load %struct.entry*, %struct.entry** %9, align 8
  %49 = getelementptr inbounds %struct.entry, %struct.entry* %48, i64 0, i32 0, i32 0
  store %struct.entry** %49, %struct.entry*** %16, align 8
  br label %50

; <label>:50:                                     ; preds = %37, %34, %39
  %51 = add nuw i32 %35, 1
  %52 = load i32, i32* %7, align 4
  %53 = icmp ult i32 %51, %52
  br i1 %53, label %34, label %54

; <label>:54:                                     ; preds = %50, %28, %20
  br label %55

; <label>:55:                                     ; preds = %34, %37, %54, %5, %20
  %56 = phi i32 [ 0, %54 ], [ %18, %5 ], [ %27, %20 ], [ %38, %37 ], [ %36, %34 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #7
  ret i32 %56
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_child_count(i8*, i32*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 28
  %7 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %6, align 8
  %8 = bitcast i32* %1 to i64*
  %9 = tail call i32 %7(i8* %0, i64* %8) #7
  ret i32 %9
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_child_registry(i8*, i32, i8*) local_unnamed_addr #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %7 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %6, i64 0, i32 1
  %8 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %7, align 8
  %9 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %8, i64 0, i32 28
  %10 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %9, align 8
  %11 = call i32 %10(i8* %0, i64* nonnull %4) #7
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %65

; <label>:13:                                     ; preds = %3
  %14 = zext i32 %1 to i64
  %15 = load i64, i64* %4, align 8
  %16 = icmp ugt i64 %15, %14
  br i1 %16, label %17, label %65

; <label>:17:                                     ; preds = %13
  %18 = add i64 %15, 1
  store i64 %18, i64* %4, align 8
  %19 = shl i64 %18, 7
  %20 = or i64 %19, 16
  %21 = call noalias i8* @malloc(i64 %20) #7
  %22 = icmp eq i8* %21, null
  br i1 %22, label %65, label %23

; <label>:23:                                     ; preds = %17
  %24 = bitcast i8* %21 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 4
  store i8 0, i8* %25, align 4
  %26 = trunc i64 %19 to i32
  %27 = getelementptr inbounds i8, i8* %21, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = load i32, i32* @mem_usage, align 4
  %30 = trunc i64 %20 to i32
  %31 = add i32 %29, %30
  store i32 %31, i32* @mem_usage, align 4
  %32 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %33 = add i32 %32, %26
  store i32 %33, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %34 = getelementptr inbounds i8, i8* %21, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %34, i8 0, i64 %19, i1 false) #7
  %35 = bitcast i8* %34 to [128 x i8]*
  %36 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %37 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %36, i64 0, i32 1
  %38 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %37, align 8
  %39 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %38, i64 0, i32 29
  %40 = load i32 (i8*, [128 x i8]*, i64, i64*)*, i32 (i8*, [128 x i8]*, i64, i64*)** %39, align 8
  %41 = call i32 %40(i8* %0, [128 x i8]* nonnull %35, i64 %18, i64* nonnull %4) #7
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %50

; <label>:43:                                     ; preds = %23
  %44 = load i64, i64* %4, align 8
  %45 = icmp ugt i64 %44, %14
  br i1 %45, label %46, label %50

; <label>:46:                                     ; preds = %43
  %47 = getelementptr inbounds [128 x i8], [128 x i8]* %35, i64 %14, i64 0
  %48 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %2, i1 false, i1 true) #7
  %49 = call i8* @__strncpy_chk(i8* nonnull %2, i8* nonnull %47, i64 128, i64 %48) #7
  br label %50

; <label>:50:                                     ; preds = %46, %23, %43
  %51 = phi i32 [ 0, %46 ], [ %41, %23 ], [ 2, %43 ]
  %52 = bitcast i8* %21 to %struct.r_malloc_chunk*
  %53 = bitcast %struct.r_malloc_chunk* %52 to %struct.r_malloc_chunk_*
  %54 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* @mem_usage, align 4
  %57 = sub i32 -16, %55
  %58 = add i32 %57, %56
  store i32 %58, i32* @mem_usage, align 4
  %59 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %53, i64 0, i32 1
  %60 = load i8, i8* %59, align 4
  %61 = zext i8 %60 to i64
  %62 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %63, %55
  store i32 %64, i32* %62, align 4
  call void @free(i8* nonnull %21) #7
  br label %65

; <label>:65:                                     ; preds = %17, %13, %3, %50
  %66 = phi i32 [ %51, %50 ], [ 2, %13 ], [ %11, %3 ], [ 1, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %66
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_set_children(i8*, i8* nocapture readonly, i8* nocapture readonly, i32 (i8*, i8*)* nocapture, i32 (i8*, i8*, i8*)*) local_unnamed_addr #0 {
  %6 = alloca [128 x i8], align 16
  %7 = alloca [128 x i8], align 16
  %8 = alloca [128 x i8], align 16
  %9 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %9) #7
  %10 = getelementptr inbounds [128 x i8], [128 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #7
  %11 = getelementptr inbounds [128 x i8], [128 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %11) #7
  %12 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %9) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %47

; <label>:14:                                     ; preds = %5
  %15 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %16 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %15, i64 0, i32 1
  %17 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %16, align 8
  %18 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %17, i64 0, i32 27
  %19 = load i32 (i8*)*, i32 (i8*)** %18, align 8
  %20 = call i32 %19(i8* nonnull %9) #7
  %21 = bitcast i8* %2 to %struct.entry.1**
  %22 = load %struct.entry.1*, %struct.entry.1** %21, align 8
  %23 = icmp eq %struct.entry.1* %22, null
  br i1 %23, label %47, label %24

; <label>:24:                                     ; preds = %14
  %25 = icmp eq i32 (i8*, i8*, i8*)* %4, null
  br label %26

; <label>:26:                                     ; preds = %24, %42
  %27 = phi %struct.entry.1* [ %22, %24 ], [ %45, %42 ]
  %28 = phi i32 [ 0, %24 ], [ %43, %42 ]
  br i1 %25, label %33, label %29

; <label>:29:                                     ; preds = %26
  %30 = bitcast %struct.entry.1* %27 to i8*
  %31 = call i32 %4(i8* nonnull %9, i8* %30, i8* nonnull %11) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

; <label>:33:                                     ; preds = %29, %26
  %34 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %11, i64 128, i32 1, i64 128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %28) #7
  br label %35

; <label>:35:                                     ; preds = %29, %33
  %36 = call i32 @NR_reg_make_registry(i8* nonnull %9, i8* nonnull %11, i8* nonnull %10) #7
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %47

; <label>:38:                                     ; preds = %35
  %39 = bitcast %struct.entry.1* %27 to i8*
  %40 = call i32 %3(i8* nonnull %10, i8* %39) #7
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %47

; <label>:42:                                     ; preds = %38
  %43 = add nuw nsw i32 %28, 1
  %44 = getelementptr inbounds %struct.entry.1, %struct.entry.1* %27, i64 0, i32 0, i32 0
  %45 = load %struct.entry.1*, %struct.entry.1** %44, align 8
  %46 = icmp eq %struct.entry.1* %45, null
  br i1 %46, label %47, label %26

; <label>:47:                                     ; preds = %42, %38, %35, %14, %5
  %48 = phi i32 [ %12, %5 ], [ 0, %14 ], [ 0, %42 ], [ %40, %38 ], [ %36, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %11) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %9) #7
  ret i32 %48
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_del(i8*) local_unnamed_addr #0 {
  %2 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %3 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %2, i64 0, i32 1
  %4 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %3, align 8
  %5 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %4, i64 0, i32 27
  %6 = load i32 (i8*)*, i32 (i8*)** %5, align 8
  %7 = tail call i32 %6(i8* %0) #7
  ret i32 %7
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_c2ru_free_children(i8* nocapture, i32 (i8*)* nocapture) local_unnamed_addr #0 {
  %3 = bitcast i8* %0 to %struct.entry.4**
  %4 = load %struct.entry.4*, %struct.entry.4** %3, align 8
  %5 = icmp eq %struct.entry.4* %4, null
  br i1 %5, label %28, label %6

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to i64*
  br label %9

; <label>:9:                                      ; preds = %6, %9
  %10 = phi %struct.entry.4* [ %4, %6 ], [ %26, %9 ]
  %11 = getelementptr inbounds %struct.entry.4, %struct.entry.4* %10, i64 0, i32 0, i32 0
  %12 = load %struct.entry.4*, %struct.entry.4** %11, align 8
  %13 = icmp eq %struct.entry.4* %12, null
  %14 = getelementptr inbounds %struct.entry.4, %struct.entry.4* %10, i64 0, i32 0, i32 1
  %15 = bitcast %struct.entry.4*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %struct.entry.4, %struct.entry.4* %12, i64 0, i32 0, i32 1
  %18 = bitcast %struct.entry.4*** %17 to i64*
  %19 = select i1 %13, i64* %8, i64* %18
  store i64 %16, i64* %19, align 8
  %20 = bitcast %struct.entry.4* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %struct.entry.4*** %14 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  %24 = bitcast %struct.entry.4* %10 to i8*
  %25 = tail call i32 %1(i8* %24) #7
  %26 = load %struct.entry.4*, %struct.entry.4** %3, align 8
  %27 = icmp eq %struct.entry.4* %26, null
  br i1 %27, label %28, label %9

; <label>:28:                                     ; preds = %9, %2
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_init(i8*) local_unnamed_addr #0 {
  %2 = alloca [128 x i8], align 16
  %3 = bitcast i8* %0 to %struct.nr_registry_module_*
  %4 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #7
  %5 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %6 = icmp eq %struct.nr_registry_module_* %5, null
  br i1 %6, label %11, label %7

; <label>:7:                                      ; preds = %1
  %8 = icmp eq %struct.nr_registry_module_* %5, %3
  br i1 %8, label %37, label %9

; <label>:9:                                      ; preds = %7
  %10 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 0, i32 3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10, i64 0, i64 0))
  br label %30

; <label>:11:                                     ; preds = %1
  store i8* %0, i8** bitcast (%struct.nr_registry_module_** @reg_vtbl to i8**), align 8
  %12 = getelementptr inbounds i8, i8* %0, i64 8
  %13 = bitcast i8* %12 to %struct.nr_registry_module_vtbl_**
  %14 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %13, align 8
  %15 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %14, i64 0, i32 0
  %16 = load i32 (%struct.nr_registry_module_*)*, i32 (%struct.nr_registry_module_*)** %15, align 8
  %17 = tail call i32 %16(%struct.nr_registry_module_* %3) #7
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %30

; <label>:19:                                     ; preds = %11
  %20 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %21 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %20, i64 0, i32 1
  %22 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %21, align 8
  %23 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %22, i64 0, i32 10
  %24 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %23, align 8
  %25 = call i32 %24(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @NR_TOP_LEVEL_REGISTRY, i64 0, i64 0), i8* nonnull %4) #7
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

; <label>:27:                                     ; preds = %19
  %28 = call i32 @r_log_init()
  %29 = call i32 @r_log_register(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i32* nonnull @NR_LOG_REGISTRY)
  br label %30

; <label>:30:                                     ; preds = %19, %11, %9, %27
  %31 = phi i32 [ 3, %9 ], [ 0, %27 ], [ %17, %11 ], [ %25, %19 ]
  %32 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %33 = icmp ne i32 %31, 0
  %34 = select i1 %33, i32 3, i32 6
  %35 = select i1 %33, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)
  %36 = call i32 (i32, i32, i8*, ...) @r_log(i32 %32, i32 %34, i8* %35)
  br label %37

; <label>:37:                                     ; preds = %7, %30
  %38 = phi i32 [ %31, %30 ], [ 0, %7 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #7
  ret i32 %38
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_registry(i8*, i8*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 10
  %7 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_bytes(i8*, i8*, i64, i64*) local_unnamed_addr #0 {
  %5 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %5, i64 0, i32 1
  %7 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %6, align 8
  %8 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %7, i64 0, i32 11
  %9 = load i32 (i8*, i8*, i64, i64*)*, i32 (i8*, i8*, i64, i64*)** %8, align 8
  %10 = tail call i32 %9(i8* %0, i8* %1, i64 %2, i64* %3) #7
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_string(i8*, i8*, i64) local_unnamed_addr #0 {
  %4 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %5 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %4, i64 0, i32 1
  %6 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %5, align 8
  %7 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %6, i64 0, i32 12
  %8 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %7, align 8
  %9 = tail call i32 %8(i8* %0, i8* %1, i64 %2) #7
  ret i32 %9
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_length(i8*, i64*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 13
  %7 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i64* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_type(i8*, i8*) local_unnamed_addr #0 {
  %3 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %3, i64 0, i32 1
  %5 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %4, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %5, i64 0, i32 14
  %7 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %6, align 8
  %8 = tail call i32 %7(i8* %0, i8* %1) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set_registry(i8*) local_unnamed_addr #0 {
  %2 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %3 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %2, i64 0, i32 1
  %4 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %3, align 8
  %5 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %4, i64 0, i32 24
  %6 = load i32 (i8*)*, i32 (i8*)** %5, align 8
  %7 = tail call i32 %6(i8* %0) #7
  ret i32 %7
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_fin(i8*) local_unnamed_addr #0 {
  %2 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %3 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %2, i64 0, i32 1
  %4 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %3, align 8
  %5 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %4, i64 0, i32 30
  %6 = load i32 (i8*)*, i32 (i8*)** %5, align 8
  %7 = tail call i32 %6(i8* %0) #7
  ret i32 %7
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get_children(i8*, [128 x i8]*, i64, i64*) local_unnamed_addr #0 {
  %5 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %6 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %5, i64 0, i32 1
  %7 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %6, align 8
  %8 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %7, i64 0, i32 29
  %9 = load i32 (i8*, [128 x i8]*, i64, i64*)*, i32 (i8*, [128 x i8]*, i64, i64*)** %8, align 8
  %10 = tail call i32 %9(i8* %0, [128 x i8]* %1, i64 %2, i64* %3) #7
  ret i32 %10
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_dump() local_unnamed_addr #0 {
  %1 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %2 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %1, i64 0, i32 1
  %3 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %2, align 8
  %4 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %3, i64 0, i32 31
  %5 = load i32 (i32)*, i32 (i32)** %4, align 8
  %6 = tail call i32 %5(i32 0) #7
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone sspstrong uwtable
define hidden i8* @nr_reg_type_name(i32) local_unnamed_addr #11 {
  %2 = icmp ugt i32 %0, 11
  br i1 %2, label %7, label %3

; <label>:3:                                      ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %4
  %6 = load i8*, i8** %5, align 8
  br label %7

; <label>:7:                                      ; preds = %1, %3
  %8 = phi i8* [ %6, %3 ], [ null, %1 ]
  ret i8* %8
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_reg_compute_type(i8* nocapture readonly, i32* nocapture) local_unnamed_addr #0 {
  %3 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8* %0) #16
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %39, %36, %33, %30, %27, %24, %21, %18, %15, %12, %7, %2
  %6 = phi i32 [ 0, %2 ], [ 1, %7 ], [ 2, %12 ], [ 3, %15 ], [ 4, %18 ], [ 5, %21 ], [ 6, %24 ], [ 7, %27 ], [ 8, %30 ], [ 9, %33 ], [ 10, %36 ], [ 11, %39 ]
  store i32 %6, i32* %1, align 4
  br label %10

; <label>:7:                                      ; preds = %2
  %8 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* %0) #16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %5, label %12

; <label>:10:                                     ; preds = %39, %5
  %11 = phi i32 [ 0, %5 ], [ 6, %39 ]
  ret i32 %11

; <label>:12:                                     ; preds = %7
  %13 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0), i8* %0) #16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %5, label %15

; <label>:15:                                     ; preds = %12
  %16 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0), i8* %0) #16
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %5, label %18

; <label>:18:                                     ; preds = %15
  %19 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), i8* %0) #16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %5, label %21

; <label>:21:                                     ; preds = %18
  %22 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i64 0, i64 0), i8* %0) #16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %5, label %24

; <label>:24:                                     ; preds = %21
  %25 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0), i8* %0) #16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %5, label %27

; <label>:27:                                     ; preds = %24
  %28 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0), i8* %0) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %5, label %30

; <label>:30:                                     ; preds = %27
  %31 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i8* %0) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %5, label %33

; <label>:33:                                     ; preds = %30
  %34 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0), i8* %0) #16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %5, label %36

; <label>:36:                                     ; preds = %33
  %37 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0), i8* %0) #16
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %5, label %39

; <label>:39:                                     ; preds = %36
  %40 = tail call i32 @strcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* %0) #16
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %5, label %10
}

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8* nocapture, i8* nocapture) #2

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_char(i8*, i8* nocapture readonly, i8*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 1
  %13 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i8* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_uchar(i8*, i8* nocapture readonly, i8*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 2
  %13 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i8* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_int2(i8*, i8* nocapture readonly, i16*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 3
  %13 = load i32 (i8*, i16*)*, i32 (i8*, i16*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i16* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_uint2(i8*, i8* nocapture readonly, i16*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 4
  %13 = load i32 (i8*, i16*)*, i32 (i8*, i16*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i16* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_int4(i8*, i8* nocapture readonly, i32*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 5
  %13 = load i32 (i8*, i32*)*, i32 (i8*, i32*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i32* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_uint4(i8*, i8* nocapture readonly, i32*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 6
  %13 = load i32 (i8*, i32*)*, i32 (i8*, i32*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i32* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_int8(i8*, i8* nocapture readonly, i64*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 7
  %13 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i64* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_uint8(i8*, i8* nocapture readonly, i64*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 8
  %13 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i64* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_double(i8*, i8* nocapture readonly, double*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 9
  %13 = load i32 (i8*, double*)*, i32 (i8*, double*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, double* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_alloc2_string(i8*, i8* nocapture readonly, i8** nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %3
  %9 = call i32 @NR_reg_alloc_string(i8* nonnull %5, i8** %2)
  br label %10

; <label>:10:                                     ; preds = %3, %8
  %11 = phi i32 [ %6, %3 ], [ %9, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %11
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_alloc2_data(i8*, i8* nocapture readonly, %struct.Data_* nocapture) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %3
  %9 = call i32 @NR_reg_alloc_data(i8* nonnull %5, %struct.Data_* %2)
  br label %10

; <label>:10:                                     ; preds = %3, %8
  %11 = phi i32 [ %6, %3 ], [ %9, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %11
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_bytes(i8*, i8* nocapture readonly, i8*, i64, i64*) local_unnamed_addr #0 {
  %6 = alloca [128 x i8], align 16
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #7
  %8 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %7)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %17

; <label>:10:                                     ; preds = %5
  %11 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %11, i64 0, i32 1
  %13 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %12, align 8
  %14 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %13, i64 0, i32 11
  %15 = load i32 (i8*, i8*, i64, i64*)*, i32 (i8*, i8*, i64, i64*)** %14, align 8
  %16 = call i32 %15(i8* nonnull %7, i8* %2, i64 %3, i64* %4) #7
  br label %17

; <label>:17:                                     ; preds = %5, %10
  %18 = phi i32 [ %8, %5 ], [ %16, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #7
  ret i32 %18
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_string(i8*, i8* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca [128 x i8], align 16
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %4
  %10 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %11 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %10, i64 0, i32 1
  %12 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %11, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %12, i64 0, i32 12
  %14 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %13, align 8
  %15 = call i32 %14(i8* nonnull %6, i8* %2, i64 %3) #7
  br label %16

; <label>:16:                                     ; preds = %4, %9
  %17 = phi i32 [ %7, %4 ], [ %15, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %17
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_char(i8*, i8* nocapture readonly, i8 signext) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 15
  %13 = load i32 (i8*, i8)*, i32 (i8*, i8)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i8 signext %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_uchar(i8*, i8* nocapture readonly, i8 zeroext) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 16
  %13 = load i32 (i8*, i8)*, i32 (i8*, i8)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i8 zeroext %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_int2(i8*, i8* nocapture readonly, i16 signext) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 17
  %13 = load i32 (i8*, i16)*, i32 (i8*, i16)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i16 signext %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_uint2(i8*, i8* nocapture readonly, i16 zeroext) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 18
  %13 = load i32 (i8*, i16)*, i32 (i8*, i16)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i16 zeroext %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_int4(i8*, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 19
  %13 = load i32 (i8*, i32)*, i32 (i8*, i32)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i32 %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_uint4(i8*, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 20
  %13 = load i32 (i8*, i32)*, i32 (i8*, i32)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i32 %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_int8(i8*, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 21
  %13 = load i32 (i8*, i64)*, i32 (i8*, i64)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i64 %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_uint8(i8*, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 22
  %13 = load i32 (i8*, i64)*, i32 (i8*, i64)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i64 %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_double(i8*, i8* nocapture readonly, double) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 23
  %13 = load i32 (i8*, double)*, i32 (i8*, double)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, double %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_string(i8*, i8* nocapture readonly, i8*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5)
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 26
  %13 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %12, align 8
  %14 = call i32 %13(i8* nonnull %5, i8* %2) #7
  br label %15

; <label>:15:                                     ; preds = %3, %8
  %16 = phi i32 [ %6, %3 ], [ %14, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_set2_bytes(i8*, i8* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %5 = alloca [128 x i8], align 16
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %4
  %10 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %11 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %10, i64 0, i32 1
  %12 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %11, align 8
  %13 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %12, i64 0, i32 25
  %14 = load i32 (i8*, i8*, i64)*, i32 (i8*, i8*, i64)** %13, align 8
  %15 = call i32 %14(i8* nonnull %6, i8* %2, i64 %3) #7
  br label %16

; <label>:16:                                     ; preds = %4, %9
  %17 = phi i32 [ %7, %4 ], [ %15, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %17
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_make_child_registry(i8* nocapture readonly, i8*, i32, i8*) local_unnamed_addr #0 {
  %5 = tail call i64 @strlen(i8* %0) #16
  %6 = tail call i32 @strncasecmp(i8* %0, i8* %1, i64 %5) #16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

; <label>:8:                                      ; preds = %4, %17
  %9 = phi i64 [ %19, %17 ], [ %5, %4 ]
  %10 = phi i32 [ %18, %17 ], [ %2, %4 ]
  %11 = getelementptr inbounds i8, i8* %1, i64 %9
  %12 = load i8, i8* %11, align 1
  switch i8 %12, label %17 [
    i8 0, label %21
    i8 46, label %13
  ]

; <label>:13:                                     ; preds = %8
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %21, label %15

; <label>:15:                                     ; preds = %13
  %16 = add i32 %10, -1
  br label %17

; <label>:17:                                     ; preds = %8, %15
  %18 = phi i32 [ %16, %15 ], [ %10, %8 ]
  %19 = add i64 %9, 1
  %20 = icmp ugt i64 %19, 127
  br i1 %20, label %25, label %8

; <label>:21:                                     ; preds = %8, %13
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %3, i1 false, i1 true) #7
  %23 = tail call i8* @__strncpy_chk(i8* nonnull %3, i8* nonnull %1, i64 %9, i64 %22) #7
  %24 = getelementptr inbounds i8, i8* %3, i64 %9
  store i8 0, i8* %24, align 1
  br label %25

; <label>:25:                                     ; preds = %17, %21, %4
  %26 = phi i32 [ 0, %21 ], [ 6, %4 ], [ 6, %17 ]
  ret i32 %26
}

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_child_count(i8*, i8* nocapture readonly, i32*) local_unnamed_addr #0 {
  %4 = alloca [128 x i8], align 16
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #7
  %6 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %16

; <label>:8:                                      ; preds = %3
  %9 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %10 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %9, i64 0, i32 1
  %11 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %10, align 8
  %12 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %11, i64 0, i32 28
  %13 = load i32 (i8*, i64*)*, i32 (i8*, i64*)** %12, align 8
  %14 = bitcast i32* %2 to i64*
  %15 = call i32 %13(i8* nonnull %5, i64* %14) #7
  br label %16

; <label>:16:                                     ; preds = %3, %8
  %17 = phi i32 [ %6, %3 ], [ %15, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #7
  ret i32 %17
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_get2_child_registry(i8*, i8* nocapture readonly, i32, i8*) local_unnamed_addr #0 {
  %5 = alloca [128 x i8], align 16
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = call i32 @NR_reg_make_registry(i8* %0, i8* %1, i8* nonnull %6) #7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

; <label>:9:                                      ; preds = %4
  %10 = call i32 @NR_reg_get_child_registry(i8* nonnull %6, i32 %2, i8* %3)
  br label %11

; <label>:11:                                     ; preds = %4, %9
  %12 = phi i32 [ %7, %4 ], [ %10, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret i32 %12
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_reg_is_valid(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %51, label %3

; <label>:3:                                      ; preds = %1
  %4 = tail call i8* @memchr(i8* nonnull %0, i32 0, i64 128) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %51, label %6

; <label>:6:                                      ; preds = %3
  %7 = tail call i64 @strlen(i8* nonnull %0) #16
  %8 = trunc i64 %7 to i32
  %9 = load i8, i8* %0, align 1
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %51, label %11

; <label>:11:                                     ; preds = %6
  %12 = icmp eq i64 %7, 0
  br i1 %12, label %54, label %13

; <label>:13:                                     ; preds = %11
  %14 = add i64 %7, 4294967295
  %15 = and i64 %14, 4294967295
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 46
  br i1 %18, label %51, label %19

; <label>:19:                                     ; preds = %13
  %20 = icmp eq i32 %8, 0
  br i1 %20, label %54, label %21

; <label>:21:                                     ; preds = %19
  %22 = tail call i16** @__ctype_b_loc() #17
  %23 = load i16*, i16** %22, align 8
  %24 = sext i8 %9 to i64
  %25 = getelementptr inbounds i16, i16* %23, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = and i32 %27, 8192
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %51

; <label>:30:                                     ; preds = %42
  %31 = icmp ult i32 %50, %8
  br i1 %31, label %32, label %54

; <label>:32:                                     ; preds = %30
  %33 = zext i32 %50 to i64
  %34 = getelementptr inbounds i8, i8* %0, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i64
  %37 = getelementptr inbounds i16, i16* %23, i64 %36
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, 8192
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %51

; <label>:42:                                     ; preds = %21, %32
  %43 = phi i32 [ %39, %32 ], [ %27, %21 ]
  %44 = phi i32 [ %50, %32 ], [ 0, %21 ]
  %45 = phi i8 [ %35, %32 ], [ %9, %21 ]
  %46 = and i32 %43, 16384
  %47 = icmp ne i32 %46, 0
  %48 = icmp eq i8 %45, 47
  %49 = or i1 %48, %47
  %50 = add i32 %44, 1
  br i1 %49, label %30, label %51

; <label>:51:                                     ; preds = %32, %42, %21, %1, %3, %6, %13
  %52 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %53 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %52, i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8* %0)
  br label %54

; <label>:54:                                     ; preds = %30, %11, %19, %51
  %55 = phi i32 [ 6, %51 ], [ 0, %19 ], [ 0, %11 ], [ 0, %30 ]
  ret i32 %55
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #10

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_reg_fetch_node(i8*, i8 zeroext, %struct.nr_registry_node_** nocapture, i32* nocapture) local_unnamed_addr #0 {
  store %struct.nr_registry_node_* null, %struct.nr_registry_node_** %2, align 8
  store i32 0, i32* %3, align 4
  %5 = tail call i32 @nr_reg_is_valid(i8* %0)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %48

; <label>:7:                                      ; preds = %4
  %8 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %9 = tail call i64 @strlen(i8* %0) #16
  %10 = trunc i64 %9 to i32
  %11 = add i32 %10, 1
  %12 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %8, i64 0, i32 2
  %13 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %12, align 8
  %14 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %8, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 %13(i8* %0, i32 %11, i32 %15) #7
  %17 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %8, i64 0, i32 3
  %18 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %17, align 8
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %18, i64 %19
  %21 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %20, align 8
  %22 = icmp eq %struct.r_assoc_el_* %21, null
  br i1 %22, label %48, label %23

; <label>:23:                                     ; preds = %7
  %24 = sext i32 %11 to i64
  br label %25

; <label>:25:                                     ; preds = %35, %23
  %26 = phi %struct.r_assoc_el_* [ %21, %23 ], [ %37, %35 ]
  %27 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %11
  br i1 %29, label %30, label %35

; <label>:30:                                     ; preds = %25
  %31 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %26, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = tail call i32 @memcmp(i8* %32, i8* %0, i64 %24) #16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

; <label>:35:                                     ; preds = %30, %25
  %36 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %26, i64 0, i32 4
  %37 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %36, align 8
  %38 = icmp eq %struct.r_assoc_el_* %37, null
  br i1 %38, label %48, label %25

; <label>:39:                                     ; preds = %30
  %40 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %26, i64 0, i32 2
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %struct.nr_registry_node_** %2 to i64*
  store i64 %42, i64* %43, align 8
  %44 = inttoptr i64 %42 to %struct.nr_registry_node_*
  %45 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %44, i64 0, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, %1
  br i1 %47, label %76, label %51

; <label>:48:                                     ; preds = %35, %7, %4
  %49 = phi i32 [ %5, %4 ], [ 2, %7 ], [ 2, %35 ]
  %50 = load %struct.nr_registry_node_*, %struct.nr_registry_node_** %2, align 8
  br label %51

; <label>:51:                                     ; preds = %48, %39
  %52 = phi %struct.nr_registry_node_* [ %50, %48 ], [ %44, %39 ]
  %53 = phi i32 [ %49, %48 ], [ 10, %39 ]
  %54 = icmp eq %struct.nr_registry_node_* %52, null
  %55 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %56 = icmp ugt i8 %1, 11
  br i1 %56, label %61, label %57

; <label>:57:                                     ; preds = %51
  %58 = zext i8 %1 to i64
  %59 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %58
  %60 = load i8*, i8** %59, align 8
  br label %61

; <label>:61:                                     ; preds = %51, %57
  %62 = phi i8* [ %60, %57 ], [ null, %51 ]
  br i1 %54, label %74, label %63

; <label>:63:                                     ; preds = %61
  %64 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %52, i64 0, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp ugt i8 %65, 11
  br i1 %66, label %71, label %67

; <label>:67:                                     ; preds = %63
  %68 = zext i8 %65 to i64
  %69 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %68
  %70 = load i8*, i8** %69, align 8
  br label %71

; <label>:71:                                     ; preds = %63, %67
  %72 = phi i8* [ %70, %67 ], [ null, %63 ]
  %73 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %55, i32 7, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14, i64 0, i64 0), i8* %0, i8* %62, i8* %72)
  br label %86

; <label>:74:                                     ; preds = %61
  %75 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %55, i32 7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0), i8* %0, i8* %62)
  br label %86

; <label>:76:                                     ; preds = %39
  %77 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %78 = icmp ugt i8 %1, 11
  br i1 %78, label %83, label %79

; <label>:79:                                     ; preds = %76
  %80 = zext i8 %1 to i64
  %81 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %80
  %82 = load i8*, i8** %81, align 8
  br label %83

; <label>:83:                                     ; preds = %76, %79
  %84 = phi i8* [ %82, %79 ], [ null, %76 ]
  %85 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %77, i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i8* %0, i8* %84)
  br label %86

; <label>:86:                                     ; preds = %83, %74, %71
  %87 = phi i32 [ 0, %83 ], [ %53, %74 ], [ %53, %71 ]
  ret i32 %87
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_fetch(%struct.r_assoc_* nocapture readonly, i8*, i32, i8** nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 2
  %6 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %5, align 8
  %7 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call i32 %6(i8* %1, i32 %2, i32 %8) #7
  %10 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 3
  %11 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %10, align 8
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %11, i64 %12
  %14 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %13, align 8
  %15 = icmp eq %struct.r_assoc_el_* %14, null
  br i1 %15, label %37, label %16

; <label>:16:                                     ; preds = %4
  %17 = sext i32 %2 to i64
  br label %18

; <label>:18:                                     ; preds = %28, %16
  %19 = phi %struct.r_assoc_el_* [ %14, %16 ], [ %30, %28 ]
  %20 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, %2
  br i1 %22, label %23, label %28

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %19, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @memcmp(i8* %25, i8* %1, i64 %17) #16
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

; <label>:28:                                     ; preds = %23, %18
  %29 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %19, i64 0, i32 4
  %30 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %29, align 8
  %31 = icmp eq %struct.r_assoc_el_* %30, null
  br i1 %31, label %37, label %18

; <label>:32:                                     ; preds = %23
  %33 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %19, i64 0, i32 2
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast i8** %3 to i64*
  store i64 %35, i64* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %28, %4, %32
  %38 = phi i32 [ 0, %32 ], [ 2, %4 ], [ 2, %28 ]
  ret i32 %38
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i8* @nr_reg_alloc_node_data(i8*, %struct.nr_registry_node_* readonly, i32* nocapture) local_unnamed_addr #0 {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %19 [
    i8 11, label %6
    i8 9, label %10
    i8 10, label %142
  ]

; <label>:6:                                      ; preds = %3
  %7 = tail call i64 @strlen(i8* %0) #16
  %8 = trunc i64 %7 to i32
  %9 = add i32 %8, 1
  br label %16

; <label>:10:                                     ; preds = %3
  %11 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 4
  %12 = bitcast %struct.nr_registry_node_* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = shl i32 %13, 1
  %15 = or i32 %14, 1
  br label %16

; <label>:16:                                     ; preds = %10, %6
  %17 = phi i32 [ %15, %10 ], [ %9, %6 ]
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %37

; <label>:19:                                     ; preds = %3, %16
  %20 = phi i32 [ %17, %16 ], [ 100, %3 ]
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %21, 16
  %23 = tail call noalias i8* @malloc(i64 %22) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %145, label %25

; <label>:25:                                     ; preds = %19
  %26 = bitcast i8* %23 to i32*
  store i32 1179402567, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %23, i64 4
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds i8, i8* %23, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %20, i32* %29, align 4
  %30 = load i32, i32* @mem_usage, align 4
  %31 = trunc i64 %22 to i32
  %32 = add i32 %30, %31
  store i32 %32, i32* @mem_usage, align 4
  %33 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %34 = add i32 %33, %20
  store i32 %34, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %35 = getelementptr inbounds i8, i8* %23, i64 12
  store i32 1, i32* %2, align 4
  %36 = load i8, i8* %4, align 1
  br label %37

; <label>:37:                                     ; preds = %25, %16
  %38 = phi i8 [ %5, %16 ], [ %36, %25 ]
  %39 = phi i32 [ %17, %16 ], [ %20, %25 ]
  %40 = phi i8* [ null, %16 ], [ %35, %25 ]
  switch i8 %38, label %144 [
    i8 0, label %49
    i8 1, label %66
    i8 2, label %73
    i8 3, label %81
    i8 4, label %89
    i8 5, label %96
    i8 6, label %103
    i8 7, label %110
    i8 8, label %117
    i8 11, label %124
    i8 9, label %41
    i8 10, label %142
  ]

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 4
  %43 = bitcast %struct.nr_registry_node_* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %145, label %46

; <label>:46:                                     ; preds = %41
  %47 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %48 = bitcast %struct.nr_registry_node_* %47 to [1 x i8]*
  br label %128

; <label>:49:                                     ; preds = %37
  %50 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8, i32 0
  %51 = load i8, i8* %50, align 8
  %52 = sext i8 %51 to i32
  %53 = tail call i16** @__ctype_b_loc() #17
  %54 = load i16*, i16** %53, align 8
  %55 = sext i8 %51 to i64
  %56 = getelementptr inbounds i16, i16* %54, i64 %55
  %57 = load i16, i16* %56, align 2
  %58 = and i16 %57, 24576
  %59 = icmp eq i16 %58, 16384
  %60 = sext i32 %39 to i64
  %61 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  br i1 %59, label %62, label %64

; <label>:62:                                     ; preds = %49
  %63 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %60, i32 1, i64 %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i32 %52) #7
  br label %145

; <label>:64:                                     ; preds = %49
  %65 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %60, i32 1, i64 %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 %52) #7
  br label %145

; <label>:66:                                     ; preds = %37
  %67 = sext i32 %39 to i64
  %68 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %69 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8, i32 0
  %70 = load i8, i8* %69, align 8
  %71 = zext i8 %70 to i32
  %72 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %67, i32 1, i64 %68, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0), i32 %71) #7
  br label %145

; <label>:73:                                     ; preds = %37
  %74 = sext i32 %39 to i64
  %75 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %76 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %77 = bitcast %struct.nr_registry_node_* %76 to i16*
  %78 = load i16, i16* %77, align 8
  %79 = sext i16 %78 to i32
  %80 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %74, i32 1, i64 %75, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %79) #7
  br label %145

; <label>:81:                                     ; preds = %37
  %82 = sext i32 %39 to i64
  %83 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %84 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %85 = bitcast %struct.nr_registry_node_* %84 to i16*
  %86 = load i16, i16* %85, align 8
  %87 = zext i16 %86 to i32
  %88 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %82, i32 1, i64 %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %87) #7
  br label %145

; <label>:89:                                     ; preds = %37
  %90 = sext i32 %39 to i64
  %91 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %92 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %93 = bitcast %struct.nr_registry_node_* %92 to i32*
  %94 = load i32, i32* %93, align 8
  %95 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %90, i32 1, i64 %91, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %94) #7
  br label %145

; <label>:96:                                     ; preds = %37
  %97 = sext i32 %39 to i64
  %98 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %99 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %100 = bitcast %struct.nr_registry_node_* %99 to i32*
  %101 = load i32, i32* %100, align 8
  %102 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %97, i32 1, i64 %98, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i32 %101) #7
  br label %145

; <label>:103:                                    ; preds = %37
  %104 = sext i32 %39 to i64
  %105 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %106 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %107 = bitcast %struct.nr_registry_node_* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %104, i32 1, i64 %105, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 %108) #7
  br label %145

; <label>:110:                                    ; preds = %37
  %111 = sext i32 %39 to i64
  %112 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %113 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %114 = bitcast %struct.nr_registry_node_* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %111, i32 1, i64 %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i64 %115) #7
  br label %145

; <label>:117:                                    ; preds = %37
  %118 = sext i32 %39 to i64
  %119 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %120 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8
  %121 = bitcast %struct.nr_registry_node_* %120 to double*
  %122 = load double, double* %121, align 8
  %123 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %118, i32 1, i64 %119, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), double %122) #7
  br label %145

; <label>:124:                                    ; preds = %37
  %125 = sext i32 %39 to i64
  %126 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false, i1 true)
  %127 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %40, i64 %125, i32 1, i64 %126, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %0) #7
  br label %145

; <label>:128:                                    ; preds = %46, %128
  %129 = phi i64 [ 0, %46 ], [ %138, %128 ]
  %130 = shl nuw i64 %129, 1
  %131 = and i64 %130, 4294967294
  %132 = getelementptr inbounds i8, i8* %40, i64 %131
  %133 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %132, i1 false, i1 true)
  %134 = getelementptr inbounds [1 x i8], [1 x i8]* %48, i64 0, i64 %129
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = tail call i32 (i8*, i32, i64, i8*, ...) @__sprintf_chk(i8* %132, i32 1, i64 %133, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i32 %136) #7
  %138 = add nuw nsw i64 %129, 1
  %139 = load i32, i32* %43, align 4
  %140 = zext i32 %139 to i64
  %141 = icmp ult i64 %138, %140
  br i1 %141, label %128, label %145

; <label>:142:                                    ; preds = %3, %37
  %143 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %1, i64 8, i32 0
  br label %145

; <label>:144:                                    ; preds = %37
  store i32 0, i32* %2, align 4
  br label %145

; <label>:145:                                    ; preds = %128, %41, %19, %66, %73, %81, %89, %96, %103, %110, %117, %124, %142, %144, %64, %62
  %146 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %144 ], [ %143, %142 ], [ %40, %124 ], [ %40, %117 ], [ %40, %110 ], [ %40, %103 ], [ %40, %96 ], [ %40, %89 ], [ %40, %81 ], [ %40, %73 ], [ %40, %66 ], [ %40, %64 ], [ %40, %62 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), %19 ], [ %40, %41 ], [ %40, %128 ]
  ret i8* %146
}

declare i32 @__sprintf_chk(i8*, i32, i64, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_reg_cb_init() local_unnamed_addr #0 {
  %1 = alloca %struct.r_assoc_*, align 8
  %2 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %3 = icmp eq %struct.r_assoc_* %2, null
  br i1 %3, label %4, label %46

; <label>:4:                                      ; preds = %0
  %5 = bitcast %struct.r_assoc_** %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store %struct.r_assoc_* null, %struct.r_assoc_** %1, align 8
  %6 = tail call noalias i8* @malloc(i64 48) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %4
  %9 = bitcast %struct.r_assoc_** %1 to i8**
  br label %41

; <label>:10:                                     ; preds = %4
  %11 = bitcast i8* %6 to i32*
  store i32 1179402567, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 32, i32* %14, align 4
  %15 = load i32, i32* @mem_usage, align 4
  %16 = add i32 %15, 48
  store i32 %16, i32* @mem_usage, align 4
  %17 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %18 = add i32 %17, 32
  store i32 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %19 = getelementptr inbounds i8, i8* %6, i64 12
  %20 = getelementptr inbounds i8, i8* %6, i64 28
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 0, i64 16, i1 false) #7
  %21 = bitcast %struct.r_assoc_** %1 to i8**
  store i8* %19, i8** %21, align 8
  %22 = bitcast i8* %19 to i32*
  store i32 4096, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %6, i64 16
  %24 = bitcast i8* %23 to i32*
  store i32 12, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %6, i64 20
  %26 = bitcast i8* %25 to i32 (i8*, i32, i32)**
  store i32 (i8*, i32, i32)* @r_assoc_crc32_hash_compute, i32 (i8*, i32, i32)** %26, align 8
  %27 = tail call noalias i8* @malloc(i64 32784) #7
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31

; <label>:29:                                     ; preds = %10
  %30 = bitcast i8* %20 to i8**
  br label %41

; <label>:31:                                     ; preds = %10
  %32 = ptrtoint i8* %19 to i64
  %33 = bitcast i8* %27 to i32*
  store i32 1179402567, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %27, i64 4
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds i8, i8* %27, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 32768, i32* %36, align 4
  %37 = add i32 %15, 32832
  store i32 %37, i32* @mem_usage, align 4
  %38 = add i32 %17, 32800
  store i32 %38, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %39 = getelementptr inbounds i8, i8* %27, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %39, i8 0, i64 32768, i1 false) #7
  %40 = bitcast i8* %20 to i8**
  store i8* %39, i8** %40, align 8
  store i64 %32, i64* bitcast (%struct.r_assoc_** @nr_registry_callbacks to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  br label %46

; <label>:41:                                     ; preds = %8, %29
  %42 = phi i8** [ %9, %8 ], [ %30, %29 ]
  store i8* null, i8** %42, align 8
  %43 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %44 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %45 = call i32 (i32, i32, i8*, ...) @r_log(i32 %44, i32 7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0))
  br label %46

; <label>:46:                                     ; preds = %0, %31, %41
  %47 = phi i32 [ 1, %41 ], [ 0, %31 ], [ 0, %0 ]
  ret i32 %47
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_create(%struct.r_assoc_** nocapture, i32 (i8*, i32, i32)*, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.r_assoc_*, align 8
  %5 = bitcast %struct.r_assoc_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store %struct.r_assoc_* null, %struct.r_assoc_** %4, align 8
  %6 = tail call noalias i8* @malloc(i64 48) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %3
  %9 = bitcast %struct.r_assoc_** %4 to i8**
  br label %50

; <label>:10:                                     ; preds = %3
  %11 = bitcast i8* %6 to i32*
  store i32 1179402567, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 32, i32* %14, align 4
  %15 = load i32, i32* @mem_usage, align 4
  %16 = add i32 %15, 48
  store i32 %16, i32* @mem_usage, align 4
  %17 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %18 = add i32 %17, 32
  store i32 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %19 = getelementptr inbounds i8, i8* %6, i64 12
  %20 = getelementptr inbounds i8, i8* %6, i64 28
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %20, i8 0, i64 16, i1 false) #7
  %21 = bitcast %struct.r_assoc_** %4 to i8**
  store i8* %19, i8** %21, align 8
  %22 = shl i32 1, %2
  %23 = bitcast i8* %19 to i32*
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %6, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 %2, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %6, i64 20
  %27 = bitcast i8* %26 to i32 (i8*, i32, i32)**
  store i32 (i8*, i32, i32)* %1, i32 (i8*, i32, i32)** %27, align 8
  %28 = sext i32 %22 to i64
  %29 = shl nsw i64 %28, 3
  %30 = add nsw i64 %29, 16
  %31 = tail call noalias i8* @malloc(i64 %30) #7
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %36

; <label>:33:                                     ; preds = %10
  %34 = getelementptr inbounds i8, i8* %6, i64 28
  %35 = bitcast i8* %34 to i8**
  br label %50

; <label>:36:                                     ; preds = %10
  %37 = ptrtoint i8* %19 to i64
  %38 = bitcast i8* %31 to i32*
  store i32 1179402567, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %31, i64 4
  store i8 0, i8* %39, align 4
  %40 = trunc i64 %29 to i32
  %41 = getelementptr inbounds i8, i8* %31, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = trunc i64 %30 to i32
  %44 = add i32 %16, %43
  store i32 %44, i32* @mem_usage, align 4
  %45 = add i32 %18, %40
  store i32 %45, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %46 = getelementptr inbounds i8, i8* %31, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %46, i8 0, i64 %29, i1 false) #7
  %47 = getelementptr inbounds i8, i8* %6, i64 28
  %48 = bitcast i8* %47 to i8**
  store i8* %46, i8** %48, align 8
  %49 = bitcast %struct.r_assoc_** %0 to i64*
  store i64 %37, i64* %49, align 8
  br label %53

; <label>:50:                                     ; preds = %8, %33
  %51 = phi i8** [ %9, %8 ], [ %35, %33 ]
  store i8* null, i8** %51, align 8
  %52 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %4)
  br label %53

; <label>:53:                                     ; preds = %36, %50
  %54 = phi i32 [ 1, %50 ], [ 0, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %54
}

; Function Attrs: nounwind readonly sspstrong uwtable
define hidden i32 @r_assoc_crc32_hash_compute(i8* nocapture readonly, i32, i32) #12 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %54

; <label>:5:                                      ; preds = %3
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %1, 1
  br i1 %7, label %36, label %8

; <label>:8:                                      ; preds = %5
  %9 = sub i32 %1, %6
  br label %10

; <label>:10:                                     ; preds = %10, %8
  %11 = phi i8* [ %0, %8 ], [ %33, %10 ]
  %12 = phi i32 [ -1, %8 ], [ %32, %10 ]
  %13 = phi i32 [ %9, %8 ], [ %34, %10 ]
  %14 = lshr i32 %12, 8
  %15 = load i8, i8* %11, align 1
  %16 = zext i8 %15 to i32
  %17 = and i32 %12, 255
  %18 = xor i32 %17, %16
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* @crctab, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = xor i32 %21, %14
  %23 = getelementptr inbounds i8, i8* %11, i64 1
  %24 = lshr i32 %22, 8
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %22, 255
  %28 = xor i32 %27, %26
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* @crctab, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %31, %24
  %33 = getelementptr inbounds i8, i8* %11, i64 2
  %34 = add i32 %13, -2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %10

; <label>:36:                                     ; preds = %10, %5
  %37 = phi i32 [ undef, %5 ], [ %32, %10 ]
  %38 = phi i8* [ %0, %5 ], [ %33, %10 ]
  %39 = phi i32 [ -1, %5 ], [ %32, %10 ]
  %40 = icmp eq i32 %6, 0
  br i1 %40, label %51, label %41

; <label>:41:                                     ; preds = %36
  %42 = and i32 %39, 255
  %43 = load i8, i8* %38, align 1
  %44 = zext i8 %43 to i32
  %45 = xor i32 %42, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* @crctab, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = lshr i32 %39, 8
  %50 = xor i32 %48, %49
  br label %51

; <label>:51:                                     ; preds = %36, %41
  %52 = phi i32 [ %37, %36 ], [ %50, %41 ]
  %53 = xor i32 %52, -1
  br label %54

; <label>:54:                                     ; preds = %3, %51
  %55 = phi i32 [ 0, %3 ], [ %53, %51 ]
  %56 = shl i32 -1, %2
  %57 = xor i32 %56, -1
  %58 = and i32 %55, %57
  ret i32 %58
}

; Function Attrs: norecurse nounwind readnone sspstrong uwtable
define hidden i8* @nr_reg_action_name(i32) local_unnamed_addr #11 {
  switch i32 %0, label %6 [
    i32 1, label %2
    i32 4, label %3
    i32 2, label %4
    i32 64, label %5
  ]

; <label>:2:                                      ; preds = %1
  br label %6

; <label>:3:                                      ; preds = %1
  br label %6

; <label>:4:                                      ; preds = %1
  br label %6

; <label>:5:                                      ; preds = %1
  br label %6

; <label>:6:                                      ; preds = %1, %5, %4, %3, %2
  %7 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), %1 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), %5 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), %4 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %3 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %2 ]
  ret i8* %7
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_reg_raise_event(i8*, i32) local_unnamed_addr #0 {
  switch i32 %1, label %7 [
    i32 1, label %3
    i32 4, label %4
    i32 2, label %5
    i32 64, label %6
  ]

; <label>:3:                                      ; preds = %2
  br label %7

; <label>:4:                                      ; preds = %2
  br label %7

; <label>:5:                                      ; preds = %2
  br label %7

; <label>:6:                                      ; preds = %2
  br label %7

; <label>:7:                                      ; preds = %2, %3, %4, %5, %6
  %8 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), %2 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), %6 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), %5 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %4 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %3 ]
  %9 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %10 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %9, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* nonnull %8, i8* %0)
  %11 = icmp eq i8* %0, null
  br i1 %11, label %24, label %12

; <label>:12:                                     ; preds = %7
  %13 = trunc i32 %1 to i8
  switch i8 %13, label %24 [
    i8 1, label %14
    i8 4, label %14
    i8 2, label %14
    i8 64, label %14
  ]

; <label>:14:                                     ; preds = %12, %12, %12, %12
  %15 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %16 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19:                                     ; preds = %14
  %20 = tail call fastcc i32 @nr_reg_raise_event_recurse(i8* nonnull %0, i8* null, i32 %1)
  br label %24

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %23 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %22, i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0))
  br label %24

; <label>:24:                                     ; preds = %12, %7, %19, %21
  %25 = phi i32 [ 0, %21 ], [ 6, %7 ], [ %20, %19 ], [ 6, %12 ]
  ret i32 %25
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_assoc_num_elements(%struct.r_assoc_* nocapture readonly, i32* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  store i32 %4, i32* %1, align 4
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_raise_event_recurse(i8*, i8*, i32) unnamed_addr #0 {
  %4 = icmp eq i8* %1, null
  br i1 %4, label %5, label %27

; <label>:5:                                      ; preds = %3
  %6 = icmp eq i8* %0, null
  br i1 %6, label %180, label %7

; <label>:7:                                      ; preds = %5
  %8 = tail call i64 @strlen(i8* nonnull %0) #16
  %9 = shl i64 %8, 32
  %10 = add i64 %9, 4294967296
  %11 = ashr exact i64 %10, 32
  %12 = add nsw i64 %11, 16
  %13 = tail call noalias i8* @malloc(i64 %12) #7
  %14 = icmp eq i8* %13, null
  br i1 %14, label %180, label %15

; <label>:15:                                     ; preds = %7
  %16 = bitcast i8* %13 to i32*
  store i32 1179402567, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 4
  store i8 0, i8* %17, align 4
  %18 = trunc i64 %11 to i32
  %19 = getelementptr inbounds i8, i8* %13, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 4
  %21 = load i32, i32* @mem_usage, align 4
  %22 = trunc i64 %12 to i32
  %23 = add i32 %21, %22
  store i32 %23, i32* @mem_usage, align 4
  %24 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %25 = add i32 %24, %18
  store i32 %25, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %26 = getelementptr inbounds i8, i8* %13, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* nonnull align 1 %0, i64 %11, i1 false) #7
  br label %27

; <label>:27:                                     ; preds = %15, %3
  %28 = phi i32 [ 0, %3 ], [ 1, %15 ]
  %29 = phi i8* [ %1, %3 ], [ %26, %15 ]
  %30 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %31 = tail call i64 @strlen(i8* nonnull %29) #16
  %32 = trunc i64 %31 to i32
  %33 = add i32 %32, 1
  %34 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %30, i64 0, i32 2
  %35 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %34, align 8
  %36 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %30, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = tail call i32 %35(i8* nonnull %29, i32 %33, i32 %37) #7
  %39 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %30, i64 0, i32 3
  %40 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %39, align 8
  %41 = zext i32 %38 to i64
  %42 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %40, i64 %41
  %43 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %42, align 8
  %44 = icmp eq %struct.r_assoc_el_* %43, null
  br i1 %44, label %61, label %45

; <label>:45:                                     ; preds = %27
  %46 = sext i32 %33 to i64
  br label %47

; <label>:47:                                     ; preds = %57, %45
  %48 = phi %struct.r_assoc_el_* [ %43, %45 ], [ %59, %57 ]
  %49 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, %33
  br i1 %51, label %52, label %57

; <label>:52:                                     ; preds = %47
  %53 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %48, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = tail call i32 @memcmp(i8* %54, i8* %29, i64 %46) #16
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %64, label %57

; <label>:57:                                     ; preds = %52, %47
  %58 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %48, i64 0, i32 4
  %59 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %58, align 8
  %60 = icmp eq %struct.r_assoc_el_* %59, null
  br i1 %60, label %61, label %47

; <label>:61:                                     ; preds = %57, %27
  %62 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %63 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %62, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.86, i64 0, i64 0), i8* %29)
  br label %152

; <label>:64:                                     ; preds = %52
  %65 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %48, i64 0, i32 2
  %66 = bitcast i8** %65 to %struct.r_assoc_**
  %67 = load %struct.r_assoc_*, %struct.r_assoc_** %66, align 8
  %68 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %67, i64 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %71 = icmp eq i32 %69, 1
  %72 = select i1 %71, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.88, i64 0, i64 0)
  %73 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %70, i32 7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i64 0, i64 0), i32 %69, i8* %72, i8* %29)
  %74 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %152

; <label>:77:                                     ; preds = %64
  %78 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %67, i64 0, i32 3
  %79 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %78, align 8
  %80 = sext i32 %75 to i64
  br label %81

; <label>:81:                                     ; preds = %86, %77
  %82 = phi i64 [ 0, %77 ], [ %87, %86 ]
  %83 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %79, i64 %82
  %84 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %83, align 8
  %85 = icmp eq %struct.r_assoc_el_* %84, null
  br i1 %85, label %86, label %89

; <label>:86:                                     ; preds = %81
  %87 = add nuw nsw i64 %82, 1
  %88 = icmp slt i64 %87, %80
  br i1 %88, label %81, label %152

; <label>:89:                                     ; preds = %81
  %90 = and i64 %82, 4294967295
  %91 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %79, i64 %90
  %92 = bitcast %struct.r_assoc_el_** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %152, label %95

; <label>:95:                                     ; preds = %89
  %96 = trunc i64 %82 to i32
  %97 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %67, i64 0, i32 3
  %98 = trunc i32 %2 to i8
  br label %99

; <label>:99:                                     ; preds = %95, %150
  %100 = phi i64 [ %93, %95 ], [ %129, %150 ]
  %101 = phi i32 [ %96, %95 ], [ %128, %150 ]
  %102 = inttoptr i64 %100 to %struct.r_assoc_el_*
  %103 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %102, i64 0, i32 2
  %104 = bitcast i8** %103 to %struct.nr_reg_cb_info_**
  %105 = load %struct.nr_reg_cb_info_*, %struct.nr_reg_cb_info_** %104, align 8
  %106 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %102, i64 0, i32 4
  %107 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %106, align 8
  %108 = icmp eq %struct.r_assoc_el_* %107, null
  br i1 %108, label %111, label %109

; <label>:109:                                    ; preds = %99
  %110 = ptrtoint %struct.r_assoc_el_* %107 to i64
  br label %127

; <label>:111:                                    ; preds = %99
  %112 = load i32, i32* %74, align 8
  %113 = sext i32 %101 to i64
  %114 = sext i32 %112 to i64
  br label %115

; <label>:115:                                    ; preds = %119, %111
  %116 = phi i64 [ %117, %119 ], [ %113, %111 ]
  %117 = add nsw i64 %116, 1
  %118 = icmp slt i64 %117, %114
  br i1 %118, label %119, label %127

; <label>:119:                                    ; preds = %115
  %120 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %97, align 8
  %121 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %120, i64 %117
  %122 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %121, align 8
  %123 = icmp eq %struct.r_assoc_el_* %122, null
  br i1 %123, label %115, label %124

; <label>:124:                                    ; preds = %119
  %125 = ptrtoint %struct.r_assoc_el_* %122 to i64
  %126 = trunc i64 %117 to i32
  br label %127

; <label>:127:                                    ; preds = %115, %124, %109
  %128 = phi i32 [ %101, %109 ], [ %126, %124 ], [ %101, %115 ]
  %129 = phi i64 [ %110, %109 ], [ %125, %124 ], [ 0, %115 ]
  %130 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %105, i64 0, i32 0
  %131 = load i8, i8* %130, align 8
  %132 = sext i8 %131 to i32
  %133 = icmp eq i32 %132, %2
  %134 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %135 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %105, i64 0, i32 1
  %136 = load void (i8*, i8, i8*)*, void (i8*, i8, i8*)** %135, align 8
  switch i32 %132, label %141 [
    i32 1, label %137
    i32 4, label %138
    i32 2, label %139
    i32 64, label %140
  ]

; <label>:137:                                    ; preds = %127
  br label %141

; <label>:138:                                    ; preds = %127
  br label %141

; <label>:139:                                    ; preds = %127
  br label %141

; <label>:140:                                    ; preds = %127
  br label %141

; <label>:141:                                    ; preds = %127, %137, %138, %139, %140
  %142 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), %127 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), %140 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), %139 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %138 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %137 ]
  br i1 %133, label %143, label %148

; <label>:143:                                    ; preds = %141
  %144 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %134, i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.89, i64 0, i64 0), void (i8*, i8, i8*)* %136, i8* %142)
  %145 = load void (i8*, i8, i8*)*, void (i8*, i8, i8*)** %135, align 8
  %146 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %105, i64 0, i32 2
  %147 = load i8*, i8** %146, align 8
  tail call void %145(i8* %147, i8 signext %98, i8* %0) #7
  br label %150

; <label>:148:                                    ; preds = %141
  %149 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %134, i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.90, i64 0, i64 0), void (i8*, i8, i8*)* %136, i8* %142)
  br label %150

; <label>:150:                                    ; preds = %148, %143
  %151 = icmp eq i64 %129, 0
  br i1 %151, label %152, label %99

; <label>:152:                                    ; preds = %86, %150, %64, %89, %61
  %153 = load i8, i8* %29, align 1
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %161, label %155

; <label>:155:                                    ; preds = %152
  %156 = tail call i8* @strrchr(i8* nonnull %29, i32 46) #16
  %157 = icmp eq i8* %156, null
  %158 = select i1 %157, i8* %29, i8* %156
  store i8 0, i8* %158, align 1
  %159 = tail call fastcc i32 @nr_reg_raise_event_recurse(i8* %0, i8* nonnull %29, i32 %2)
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

; <label>:161:                                    ; preds = %155, %152
  br label %162

; <label>:162:                                    ; preds = %155, %161
  %163 = phi i32 [ 0, %161 ], [ %159, %155 ]
  %164 = icmp eq i32 %28, 0
  br i1 %164, label %180, label %165

; <label>:165:                                    ; preds = %162
  %166 = getelementptr inbounds i8, i8* %29, i64 -12
  %167 = bitcast i8* %166 to %struct.r_malloc_chunk*
  %168 = bitcast %struct.r_malloc_chunk* %167 to %struct.r_malloc_chunk_*
  %169 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %168, i64 0, i32 2
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* @mem_usage, align 4
  %172 = sub i32 -16, %170
  %173 = add i32 %172, %171
  store i32 %173, i32* @mem_usage, align 4
  %174 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %168, i64 0, i32 1
  %175 = load i8, i8* %174, align 4
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = sub i32 %178, %170
  store i32 %179, i32* %177, align 4
  tail call void @free(i8* nonnull %166) #7
  br label %180

; <label>:180:                                    ; preds = %162, %5, %7, %165
  %181 = phi i32 [ %163, %162 ], [ %163, %165 ], [ 1, %7 ], [ 1, %5 ]
  ret i32 %181
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_register_callback(i8*, i8 signext, void (i8*, i8, i8*)*, i8*) unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca %struct.r_assoc_*, align 8
  %7 = alloca %struct.r_assoc_*, align 8
  %8 = alloca [9 x i8], align 8
  %9 = bitcast %struct.r_assoc_** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds [9 x i8], [9 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %10) #7
  %11 = icmp eq i8* %0, null
  %12 = icmp eq void (i8*, i8, i8*)* %2, null
  %13 = or i1 %11, %12
  br i1 %13, label %172, label %14

; <label>:14:                                     ; preds = %4
  %15 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %16 = icmp eq %struct.r_assoc_* %15, null
  br i1 %16, label %172, label %17

; <label>:17:                                     ; preds = %14
  %18 = tail call i32 @nr_reg_is_valid(i8* nonnull %0)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %172

; <label>:20:                                     ; preds = %17
  switch i8 %1, label %172 [
    i8 1, label %21
    i8 4, label %21
    i8 2, label %21
    i8 64, label %21
  ]

; <label>:21:                                     ; preds = %20, %20, %20, %20
  %22 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %23 = tail call i64 @strlen(i8* nonnull %0) #16
  %24 = trunc i64 %23 to i32
  %25 = add i32 %24, 1
  %26 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %22, i64 0, i32 2
  %27 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %26, align 8
  %28 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %22, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = tail call i32 %27(i8* nonnull %0, i32 %25, i32 %29) #7
  %31 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %22, i64 0, i32 3
  %32 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %31, align 8
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %32, i64 %33
  %35 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %34, align 8
  %36 = icmp eq %struct.r_assoc_el_* %35, null
  br i1 %36, label %59, label %37

; <label>:37:                                     ; preds = %21
  %38 = sext i32 %25 to i64
  br label %39

; <label>:39:                                     ; preds = %49, %37
  %40 = phi %struct.r_assoc_el_* [ %35, %37 ], [ %51, %49 ]
  %41 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, %25
  br i1 %43, label %44, label %49

; <label>:44:                                     ; preds = %39
  %45 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %40, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = tail call i32 @memcmp(i8* %46, i8* %0, i64 %38) #16
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %53, label %49

; <label>:49:                                     ; preds = %44, %39
  %50 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %40, i64 0, i32 4
  %51 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %50, align 8
  %52 = icmp eq %struct.r_assoc_el_* %51, null
  br i1 %52, label %59, label %39

; <label>:53:                                     ; preds = %44
  %54 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %40, i64 0, i32 2
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %struct.r_assoc_** %7 to i64*
  store i64 %56, i64* %57, align 8
  %58 = inttoptr i64 %56 to %struct.r_assoc_*
  br label %107

; <label>:59:                                     ; preds = %49, %21
  %60 = bitcast %struct.r_assoc_** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #7
  store %struct.r_assoc_* null, %struct.r_assoc_** %6, align 8
  %61 = tail call noalias i8* @malloc(i64 48) #7
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %65

; <label>:63:                                     ; preds = %59
  %64 = bitcast %struct.r_assoc_** %6 to i8**
  br label %86

; <label>:65:                                     ; preds = %59
  %66 = bitcast i8* %61 to i32*
  store i32 1179402567, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %61, i64 4
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds i8, i8* %61, i64 8
  %69 = bitcast i8* %68 to i32*
  store i32 32, i32* %69, align 4
  %70 = load i32, i32* @mem_usage, align 4
  %71 = add i32 %70, 48
  store i32 %71, i32* @mem_usage, align 4
  %72 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %73 = add i32 %72, 32
  store i32 %73, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %74 = getelementptr inbounds i8, i8* %61, i64 12
  %75 = getelementptr inbounds i8, i8* %61, i64 28
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %75, i8 0, i64 16, i1 false) #7
  %76 = bitcast %struct.r_assoc_** %6 to i8**
  store i8* %74, i8** %76, align 8
  %77 = bitcast i8* %74 to i32*
  store i32 32, i32* %77, align 8
  %78 = getelementptr inbounds i8, i8* %61, i64 16
  %79 = bitcast i8* %78 to i32*
  store i32 5, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %61, i64 20
  %81 = bitcast i8* %80 to i32 (i8*, i32, i32)**
  store i32 (i8*, i32, i32)* @r_assoc_crc32_hash_compute, i32 (i8*, i32, i32)** %81, align 8
  %82 = tail call noalias i8* @malloc(i64 272) #7
  %83 = icmp eq i8* %82, null
  br i1 %83, label %84, label %89

; <label>:84:                                     ; preds = %65
  %85 = bitcast i8* %75 to i8**
  br label %86

; <label>:86:                                     ; preds = %63, %84
  %87 = phi i8** [ %64, %63 ], [ %85, %84 ]
  store i8* null, i8** %87, align 8
  %88 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #7
  br label %172

; <label>:89:                                     ; preds = %65
  %90 = ptrtoint i8* %74 to i64
  %91 = bitcast i8* %82 to i32*
  store i32 1179402567, i32* %91, align 4
  %92 = getelementptr inbounds i8, i8* %82, i64 4
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds i8, i8* %82, i64 8
  %94 = bitcast i8* %93 to i32*
  store i32 256, i32* %94, align 4
  %95 = add i32 %70, 320
  store i32 %95, i32* @mem_usage, align 4
  %96 = add i32 %72, 288
  store i32 %96, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %97 = getelementptr inbounds i8, i8* %82, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %97, i8 0, i64 256, i1 false) #7
  %98 = bitcast i8* %75 to i8**
  store i8* %97, i8** %98, align 8
  %99 = bitcast %struct.r_assoc_** %7 to i64*
  store i64 %90, i64* %99, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #7
  %100 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %101 = tail call i64 @strlen(i8* %0) #16
  %102 = trunc i64 %101 to i32
  %103 = add i32 %102, 1
  %104 = tail call i32 @r_assoc_insert(%struct.r_assoc_* %100, i8* %0, i32 %103, i8* nonnull %74, i32 (i8**, i8*)* null, i32 (i8*)* nonnull @nr_reg_assoc_destroy, i32 2)
  %105 = icmp eq i32 %104, 0
  %106 = bitcast i8* %74 to %struct.r_assoc_*
  br i1 %105, label %107, label %172

; <label>:107:                                    ; preds = %53, %89
  %108 = phi %struct.r_assoc_* [ %106, %89 ], [ %58, %53 ]
  %109 = phi i32 [ 1, %89 ], [ 0, %53 ]
  %110 = bitcast [9 x i8]* %8 to void (i8*, i8, i8*)**
  store void (i8*, i8, i8*)* %2, void (i8*, i8, i8*)** %110, align 8
  %111 = getelementptr inbounds [9 x i8], [9 x i8]* %8, i64 0, i64 8
  store i8 %1, i8* %111, align 8
  %112 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %108, i64 0, i32 2
  %113 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %112, align 8
  %114 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %108, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = call i32 %113(i8* nonnull %10, i32 9, i32 %115) #7
  %117 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %108, i64 0, i32 3
  %118 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %117, align 8
  %119 = zext i32 %116 to i64
  %120 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %118, i64 %119
  %121 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %120, align 8
  %122 = icmp eq %struct.r_assoc_el_* %121, null
  br i1 %122, label %141, label %123

; <label>:123:                                    ; preds = %107, %133
  %124 = phi %struct.r_assoc_el_* [ %135, %133 ], [ %121, %107 ]
  %125 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 9
  br i1 %127, label %128, label %133

; <label>:128:                                    ; preds = %123
  %129 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %124, i64 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = call i32 @memcmp(i8* %130, i8* nonnull %10, i64 9) #16
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %137, label %133

; <label>:133:                                    ; preds = %128, %123
  %134 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %124, i64 0, i32 4
  %135 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %134, align 8
  %136 = icmp eq %struct.r_assoc_el_* %135, null
  br i1 %136, label %141, label %123

; <label>:137:                                    ; preds = %128
  %138 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %124, i64 0, i32 2
  %139 = bitcast i8** %138 to i64*
  %140 = load i64, i64* %139, align 8
  br label %155

; <label>:141:                                    ; preds = %133, %107
  %142 = call noalias i8* @malloc(i64 168) #7
  %143 = icmp eq i8* %142, null
  br i1 %143, label %172, label %144

; <label>:144:                                    ; preds = %141
  %145 = bitcast i8* %142 to i32*
  store i32 1179402567, i32* %145, align 4
  %146 = getelementptr inbounds i8, i8* %142, i64 4
  store i8 0, i8* %146, align 4
  %147 = getelementptr inbounds i8, i8* %142, i64 8
  %148 = bitcast i8* %147 to i32*
  store i32 152, i32* %148, align 4
  %149 = load i32, i32* @mem_usage, align 4
  %150 = add i32 %149, 168
  store i32 %150, i32* @mem_usage, align 4
  %151 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %152 = add i32 %151, 152
  store i32 %152, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %153 = getelementptr inbounds i8, i8* %142, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %153, i8 0, i64 152, i1 false) #7
  %154 = ptrtoint i8* %153 to i64
  br label %155

; <label>:155:                                    ; preds = %144, %137
  %156 = phi i1 [ true, %144 ], [ false, %137 ]
  %157 = phi i32 [ 1, %144 ], [ 0, %137 ]
  %158 = phi i64 [ %154, %144 ], [ %140, %137 ]
  %159 = inttoptr i64 %158 to %struct.nr_reg_cb_info_*
  %160 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %159, i64 0, i32 3, i64 0
  %161 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %160, i1 false, i1 true) #7
  %162 = call i8* @__strncpy_chk(i8* nonnull %160, i8* nonnull %0, i64 128, i64 %161) #7
  %163 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %159, i64 0, i32 0
  store i8 %1, i8* %163, align 8
  %164 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %159, i64 0, i32 1
  store void (i8*, i8, i8*)* %2, void (i8*, i8, i8*)** %164, align 8
  %165 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %159, i64 0, i32 2
  store i8* %3, i8** %165, align 8
  br i1 %156, label %166, label %171

; <label>:166:                                    ; preds = %155
  %167 = load %struct.r_assoc_*, %struct.r_assoc_** %7, align 8
  %168 = inttoptr i64 %158 to i8*
  %169 = call i32 @r_assoc_insert(%struct.r_assoc_* %167, i8* nonnull %10, i32 9, i8* %168, i32 (i8**, i8*)* null, i32 (i8*)* nonnull @nr_reg_info_free, i32 2)
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

; <label>:171:                                    ; preds = %166, %155
  br label %172

; <label>:172:                                    ; preds = %141, %86, %20, %166, %89, %17, %14, %4, %171
  %173 = phi i64 [ undef, %4 ], [ undef, %14 ], [ %158, %171 ], [ %158, %166 ], [ undef, %89 ], [ undef, %86 ], [ undef, %17 ], [ undef, %20 ], [ 0, %141 ]
  %174 = phi i32 [ 0, %4 ], [ 0, %14 ], [ %157, %171 ], [ %157, %166 ], [ 0, %89 ], [ 0, %86 ], [ 0, %17 ], [ 0, %20 ], [ 1, %141 ]
  %175 = phi i32 [ 0, %4 ], [ 0, %14 ], [ %109, %171 ], [ %109, %166 ], [ 1, %89 ], [ 1, %86 ], [ 0, %17 ], [ 0, %20 ], [ %109, %141 ]
  %176 = phi i32 [ 6, %4 ], [ 10, %14 ], [ 0, %171 ], [ %169, %166 ], [ %104, %89 ], [ 1, %86 ], [ %18, %17 ], [ 6, %20 ], [ 1, %141 ]
  %177 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %178 = sext i8 %1 to i32
  switch i32 %178, label %183 [
    i32 1, label %179
    i32 4, label %180
    i32 2, label %181
    i32 64, label %182
  ]

; <label>:179:                                    ; preds = %172
  br label %183

; <label>:180:                                    ; preds = %172
  br label %183

; <label>:181:                                    ; preds = %172
  br label %183

; <label>:182:                                    ; preds = %172
  br label %183

; <label>:183:                                    ; preds = %172, %179, %180, %181, %182
  %184 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), %172 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), %182 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), %181 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %180 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %179 ]
  %185 = icmp ne i32 %176, 0
  %186 = select i1 %185, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0)
  %187 = call i32 (i32, i32, i8*, ...) @r_log(i32 %177, i32 7, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.91, i64 0, i64 0), void (i8*, i8, i8*)* %2, i8* %0, i8* nonnull %184, i8* %186)
  br i1 %185, label %188, label %219

; <label>:188:                                    ; preds = %183
  %189 = icmp ne i32 %174, 0
  %190 = icmp ne i64 %173, 0
  %191 = and i1 %190, %189
  br i1 %191, label %192, label %209

; <label>:192:                                    ; preds = %188
  %193 = inttoptr i64 %173 to %struct.nr_reg_cb_info_*
  %194 = getelementptr inbounds %struct.nr_reg_cb_info_, %struct.nr_reg_cb_info_* %193, i64 0, i32 0
  %195 = getelementptr inbounds i8, i8* %194, i64 -12
  %196 = bitcast i8* %195 to %struct.r_malloc_chunk*
  %197 = bitcast %struct.r_malloc_chunk* %196 to %struct.r_malloc_chunk_*
  %198 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %197, i64 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = load i32, i32* @mem_usage, align 4
  %201 = sub i32 -16, %199
  %202 = add i32 %201, %200
  store i32 %202, i32* @mem_usage, align 4
  %203 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %197, i64 0, i32 1
  %204 = load i8, i8* %203, align 4
  %205 = zext i8 %204 to i64
  %206 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %207, %199
  store i32 %208, i32* %206, align 4
  call void @free(i8* nonnull %195) #7
  br label %209

; <label>:209:                                    ; preds = %192, %188
  %210 = icmp ne i32 %175, 0
  %211 = load %struct.r_assoc_*, %struct.r_assoc_** %7, align 8
  %212 = icmp ne %struct.r_assoc_* %211, null
  %213 = and i1 %210, %212
  br i1 %213, label %214, label %219

; <label>:214:                                    ; preds = %209
  %215 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215)
  %216 = bitcast i8** %5 to %struct.r_assoc_***
  store %struct.r_assoc_** %7, %struct.r_assoc_*** %216, align 8
  %217 = bitcast i8** %5 to %struct.r_assoc_**
  %218 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %217) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215)
  br label %219

; <label>:219:                                    ; preds = %183, %214, %209
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %10) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret i32 %176
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @NR_reg_unregister_callback(i8*, i8 signext, void (i8*, i8, i8*)*) local_unnamed_addr #0 {
  %4 = alloca [9 x i8], align 8
  %5 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  %6 = icmp eq i8* %0, null
  %7 = icmp eq void (i8*, i8, i8*)* %2, null
  %8 = or i1 %6, %7
  %9 = bitcast [9 x i8]* %4 to void (i8*, i8, i8*)**
  %10 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 8
  br label %11

; <label>:11:                                     ; preds = %3, %93
  %12 = phi i8 [ %1, %3 ], [ %94, %93 ]
  %13 = phi i64 [ 0, %3 ], [ %95, %93 ]
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* @CB_ACTIONS, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, %12
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %93, label %18

; <label>:18:                                     ; preds = %11
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %5) #7
  br i1 %8, label %77, label %19

; <label>:19:                                     ; preds = %18
  %20 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %21 = icmp eq %struct.r_assoc_* %20, null
  br i1 %21, label %77, label %22

; <label>:22:                                     ; preds = %19
  %23 = call i32 @nr_reg_is_valid(i8* nonnull %0) #7
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %77

; <label>:25:                                     ; preds = %22
  switch i8 %15, label %77 [
    i8 1, label %26
    i8 4, label %26
    i8 2, label %26
    i8 64, label %26
  ]

; <label>:26:                                     ; preds = %25, %25, %25, %25
  %27 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %28 = call i64 @strlen(i8* nonnull %0) #16
  %29 = trunc i64 %28 to i32
  %30 = add i32 %29, 1
  %31 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %27, i64 0, i32 2
  %32 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %31, align 8
  %33 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %27, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = call i32 %32(i8* nonnull %0, i32 %30, i32 %34) #7
  %36 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %27, i64 0, i32 3
  %37 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %37, i64 %38
  %40 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %39, align 8
  %41 = icmp eq %struct.r_assoc_el_* %40, null
  br i1 %41, label %76, label %42

; <label>:42:                                     ; preds = %26
  %43 = sext i32 %30 to i64
  br label %44

; <label>:44:                                     ; preds = %54, %42
  %45 = phi %struct.r_assoc_el_* [ %40, %42 ], [ %56, %54 ]
  %46 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %45, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, %30
  br i1 %48, label %49, label %54

; <label>:49:                                     ; preds = %44
  %50 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %45, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @memcmp(i8* %51, i8* %0, i64 %43) #16
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

; <label>:54:                                     ; preds = %49, %44
  %55 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %45, i64 0, i32 4
  %56 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %55, align 8
  %57 = icmp eq %struct.r_assoc_el_* %56, null
  br i1 %57, label %76, label %44

; <label>:58:                                     ; preds = %49
  %59 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %45, i64 0, i32 2
  %60 = bitcast i8** %59 to %struct.r_assoc_**
  %61 = load %struct.r_assoc_*, %struct.r_assoc_** %60, align 8
  store void (i8*, i8, i8*)* %2, void (i8*, i8, i8*)** %9, align 8
  store i8 %15, i8* %10, align 8
  %62 = call i32 @r_assoc_delete(%struct.r_assoc_* %61, i8* nonnull %5, i32 9) #7
  %63 = or i32 %62, 2
  %64 = icmp eq i32 %63, 2
  br i1 %64, label %65, label %77

; <label>:65:                                     ; preds = %58
  %66 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %61, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %76

; <label>:69:                                     ; preds = %65
  %70 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %71 = call i64 @strlen(i8* %0) #16
  %72 = trunc i64 %71 to i32
  %73 = add i32 %72, 1
  %74 = call i32 @r_assoc_delete(%struct.r_assoc_* %70, i8* %0, i32 %73) #7
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %54, %69, %65, %26
  br label %77

; <label>:77:                                     ; preds = %76, %69, %58, %25, %22, %19, %18
  %78 = phi i32 [ 0, %76 ], [ 6, %18 ], [ 10, %19 ], [ %23, %22 ], [ %62, %58 ], [ %74, %69 ], [ 6, %25 ]
  %79 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %80 = sext i8 %15 to i32
  switch i32 %80, label %85 [
    i32 1, label %81
    i32 4, label %82
    i32 2, label %83
    i32 64, label %84
  ]

; <label>:81:                                     ; preds = %77
  br label %85

; <label>:82:                                     ; preds = %77
  br label %85

; <label>:83:                                     ; preds = %77
  br label %85

; <label>:84:                                     ; preds = %77
  br label %85

; <label>:85:                                     ; preds = %77, %81, %82, %83, %84
  %86 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), %77 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), %84 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), %83 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), %82 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %81 ]
  %87 = icmp eq i32 %78, 0
  %88 = select i1 %87, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0)
  %89 = call i32 (i32, i32, i8*, ...) @r_log(i32 %79, i32 7, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.92, i64 0, i64 0), void (i8*, i8, i8*)* %2, i8* %0, i8* nonnull %86, i8* %88) #7
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %5) #7
  br i1 %87, label %90, label %100

; <label>:90:                                     ; preds = %85
  %91 = xor i8 %15, -1
  %92 = and i8 %12, %91
  br label %93

; <label>:93:                                     ; preds = %11, %90
  %94 = phi i8 [ %92, %90 ], [ %12, %11 ]
  %95 = add nuw nsw i64 %13, 1
  %96 = icmp ult i64 %95, 4
  br i1 %96, label %11, label %97

; <label>:97:                                     ; preds = %93
  %98 = icmp eq i8 %94, 0
  %99 = select i1 %98, i32 0, i32 6
  br label %100

; <label>:100:                                    ; preds = %85, %97
  %101 = phi i32 [ %99, %97 ], [ %78, %85 ]
  ret i32 %101
}

; Function Attrs: nounwind readnone sspstrong uwtable
define hidden i64 @nr_htonll(i64) local_unnamed_addr #13 {
  %2 = tail call i64 @llvm.bswap.i64(i64 %0)
  ret i64 %2
}

; Function Attrs: nounwind readnone sspstrong uwtable
define hidden i64 @nr_ntohll(i64) local_unnamed_addr #13 {
  %2 = tail call i64 @llvm.bswap.i64(i64 %0) #7
  ret i64 %2
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @nr_nhex2bin(i8* nocapture readonly, i64, i8* nocapture, i64, i64* nocapture) local_unnamed_addr #6 {
  %6 = and i64 %1, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %37

; <label>:8:                                      ; preds = %5
  %9 = lshr i64 %1, 1
  %10 = icmp ugt i64 %9, %3
  br i1 %10, label %37, label %11

; <label>:11:                                     ; preds = %8
  %12 = icmp eq i64 %9, 0
  br i1 %12, label %36, label %13

; <label>:13:                                     ; preds = %11, %28
  %14 = phi i8* [ %29, %28 ], [ %0, %11 ]
  %15 = phi i64 [ %34, %28 ], [ 0, %11 ]
  %16 = getelementptr inbounds i8, i8* %14, i64 1
  %17 = load i8, i8* %14, align 1
  %18 = sext i8 %17 to i64
  %19 = getelementptr inbounds [256 x i32], [256 x i32]* @hex2bin_map, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i8, i8* %16, align 1
  %22 = sext i8 %21 to i64
  %23 = getelementptr inbounds [256 x i32], [256 x i32]* @hex2bin_map, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %20, -1
  %26 = icmp eq i32 %24, -1
  %27 = or i1 %25, %26
  br i1 %27, label %37, label %28

; <label>:28:                                     ; preds = %13
  %29 = getelementptr inbounds i8, i8* %14, i64 2
  %30 = shl i32 %20, 4
  %31 = or i32 %24, %30
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds i8, i8* %2, i64 %15
  store i8 %32, i8* %33, align 1
  %34 = add nuw nsw i64 %15, 1
  %35 = icmp ult i64 %34, %9
  br i1 %35, label %13, label %36

; <label>:36:                                     ; preds = %28, %11
  store i64 %9, i64* %4, align 8
  br label %37

; <label>:37:                                     ; preds = %13, %36, %5, %8
  %38 = phi i32 [ 0, %36 ], [ 6, %5 ], [ 6, %8 ], [ 6, %13 ]
  ret i32 %38
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_debug(i32, i8*, ...) local_unnamed_addr #0 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %4)
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = call i32 @__vfprintf_chk(%struct._IO_FILE* %6, i32 1, i8* %1, %struct.__va_list_tag* nonnull %5) #7
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %8, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret i32 0
}

declare i32 @__fprintf_chk(%struct._IO_FILE*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_xdump(i8*, i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %7, label %5

; <label>:5:                                      ; preds = %3
  %6 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8* nonnull %0, i32 %2) #7
  br label %7

; <label>:7:                                      ; preds = %3, %5
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %34

; <label>:9:                                      ; preds = %7
  %10 = icmp sgt i32 %2, 8
  %11 = zext i32 %2 to i64
  br label %12

; <label>:12:                                     ; preds = %22, %9
  %13 = phi i64 [ 0, %9 ], [ %27, %22 ]
  %14 = icmp ne i64 %13, 0
  %15 = and i1 %10, %14
  %16 = trunc i64 %13 to i32
  %17 = urem i32 %16, 12
  %18 = icmp eq i32 %17, 0
  %19 = and i1 %15, %18
  br i1 %19, label %20, label %22

; <label>:20:                                     ; preds = %12
  %21 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #7
  br label %22

; <label>:22:                                     ; preds = %20, %12
  %23 = getelementptr inbounds i8, i8* %1, i64 %13
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i32 %25) #7
  %27 = add nuw nsw i64 %13, 1
  %28 = icmp eq i64 %27, %11
  br i1 %28, label %29, label %12

; <label>:29:                                     ; preds = %22
  %30 = urem i32 %2, 12
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

; <label>:32:                                     ; preds = %29
  %33 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #7
  br label %34

; <label>:34:                                     ; preds = %7, %29, %32
  ret i32 0
}

declare i32 @__printf_chk(i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_destroy(%struct.r_assoc_** readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.r_assoc_** %0, null
  br i1 %2, label %113, label %3

; <label>:3:                                      ; preds = %1
  %4 = load %struct.r_assoc_*, %struct.r_assoc_** %0, align 8
  %5 = icmp eq %struct.r_assoc_* %4, null
  br i1 %5, label %113, label %6

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  %10 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %4, i64 0, i32 3
  %11 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %10, align 8
  br i1 %9, label %12, label %75

; <label>:12:                                     ; preds = %6, %69
  %13 = phi %struct.r_assoc_el_** [ %70, %69 ], [ %11, %6 ]
  %14 = phi i32 [ %71, %69 ], [ %8, %6 ]
  %15 = phi i64 [ %72, %69 ], [ 0, %6 ]
  %16 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %13, i64 %15
  %17 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %16, align 8
  %18 = icmp eq %struct.r_assoc_el_* %17, null
  br i1 %18, label %69, label %19

; <label>:19:                                     ; preds = %12, %49
  %20 = phi %struct.r_assoc_el_* [ %22, %49 ], [ %17, %12 ]
  %21 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %20, i64 0, i32 4
  %22 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %21, align 8
  %23 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %20, i64 0, i32 6
  %24 = load i32 (i8*)*, i32 (i8*)** %23, align 8
  %25 = icmp eq i32 (i8*)* %24, null
  br i1 %25, label %30, label %26

; <label>:26:                                     ; preds = %19
  %27 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %20, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 %24(i8* %28) #7
  br label %30

; <label>:30:                                     ; preds = %26, %19
  %31 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %20, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %49, label %34

; <label>:34:                                     ; preds = %30
  %35 = getelementptr inbounds i8, i8* %32, i64 -12
  %36 = bitcast i8* %35 to %struct.r_malloc_chunk*
  %37 = bitcast %struct.r_malloc_chunk* %36 to %struct.r_malloc_chunk_*
  %38 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %37, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* @mem_usage, align 4
  %41 = sub i32 -16, %39
  %42 = add i32 %41, %40
  store i32 %42, i32* @mem_usage, align 4
  %43 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %37, i64 0, i32 1
  %44 = load i8, i8* %43, align 4
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sub i32 %47, %39
  store i32 %48, i32* %46, align 4
  tail call void @free(i8* nonnull %35) #7
  br label %49

; <label>:49:                                     ; preds = %34, %30
  %50 = bitcast %struct.r_assoc_el_* %20 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 -12
  %52 = bitcast i8* %51 to %struct.r_malloc_chunk*
  %53 = bitcast %struct.r_malloc_chunk* %52 to %struct.r_malloc_chunk_*
  %54 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %53, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* @mem_usage, align 4
  %57 = sub i32 -16, %55
  %58 = add i32 %57, %56
  store i32 %58, i32* @mem_usage, align 4
  %59 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %53, i64 0, i32 1
  %60 = load i8, i8* %59, align 4
  %61 = zext i8 %60 to i64
  %62 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %63, %55
  store i32 %64, i32* %62, align 4
  tail call void @free(i8* nonnull %51) #7
  %65 = icmp eq %struct.r_assoc_el_* %22, null
  br i1 %65, label %66, label %19

; <label>:66:                                     ; preds = %49
  %67 = load i32, i32* %7, align 8
  %68 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %10, align 8
  br label %69

; <label>:69:                                     ; preds = %66, %12
  %70 = phi %struct.r_assoc_el_** [ %68, %66 ], [ %13, %12 ]
  %71 = phi i32 [ %67, %66 ], [ %14, %12 ]
  %72 = add nuw nsw i64 %15, 1
  %73 = sext i32 %71 to i64
  %74 = icmp slt i64 %72, %73
  br i1 %74, label %12, label %75

; <label>:75:                                     ; preds = %69, %6
  %76 = phi %struct.r_assoc_el_** [ %11, %6 ], [ %70, %69 ]
  %77 = icmp eq %struct.r_assoc_el_** %76, null
  br i1 %77, label %94, label %78

; <label>:78:                                     ; preds = %75
  %79 = bitcast %struct.r_assoc_el_** %76 to i8*
  %80 = getelementptr inbounds i8, i8* %79, i64 -12
  %81 = bitcast i8* %80 to %struct.r_malloc_chunk*
  %82 = bitcast %struct.r_malloc_chunk* %81 to %struct.r_malloc_chunk_*
  %83 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %82, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = load i32, i32* @mem_usage, align 4
  %86 = sub i32 -16, %84
  %87 = add i32 %86, %85
  store i32 %87, i32* @mem_usage, align 4
  %88 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %82, i64 0, i32 1
  %89 = load i8, i8* %88, align 4
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = sub i32 %92, %84
  store i32 %93, i32* %91, align 4
  tail call void @free(i8* nonnull %80) #7
  br label %94

; <label>:94:                                     ; preds = %78, %75
  %95 = load %struct.r_assoc_*, %struct.r_assoc_** %0, align 8
  %96 = icmp eq %struct.r_assoc_* %95, null
  br i1 %96, label %113, label %97

; <label>:97:                                     ; preds = %94
  %98 = bitcast %struct.r_assoc_* %95 to i8*
  %99 = getelementptr inbounds i8, i8* %98, i64 -12
  %100 = bitcast i8* %99 to %struct.r_malloc_chunk*
  %101 = bitcast %struct.r_malloc_chunk* %100 to %struct.r_malloc_chunk_*
  %102 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %101, i64 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = load i32, i32* @mem_usage, align 4
  %105 = sub i32 -16, %103
  %106 = add i32 %105, %104
  store i32 %106, i32* @mem_usage, align 4
  %107 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %101, i64 0, i32 1
  %108 = load i8, i8* %107, align 4
  %109 = zext i8 %108 to i64
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = sub i32 %111, %103
  store i32 %112, i32* %110, align 4
  tail call void @free(i8* nonnull %99) #7
  br label %113

; <label>:113:                                    ; preds = %97, %94, %1, %3
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_insert(%struct.r_assoc_* nocapture, i8*, i32, i8*, i32 (i8**, i8*)*, i32 (i8*)*, i32) local_unnamed_addr #0 {
  %8 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 2
  %9 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %8, align 8
  %10 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 %9(i8* %1, i32 %2, i32 %11) #7
  %13 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 3
  %14 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %13, align 8
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %14, i64 %15
  %17 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %16, align 8
  %18 = icmp eq %struct.r_assoc_el_* %17, null
  br i1 %18, label %35, label %19

; <label>:19:                                     ; preds = %7
  %20 = sext i32 %2 to i64
  br label %21

; <label>:21:                                     ; preds = %31, %19
  %22 = phi %struct.r_assoc_el_* [ %17, %19 ], [ %33, %31 ]
  %23 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, %2
  br i1 %25, label %26, label %31

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %22, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @memcmp(i8* %28, i8* %1, i64 %20) #16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %87, label %31

; <label>:31:                                     ; preds = %26, %21
  %32 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %22, i64 0, i32 4
  %33 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %32, align 8
  %34 = icmp eq %struct.r_assoc_el_* %33, null
  br i1 %34, label %35, label %21

; <label>:35:                                     ; preds = %31, %7
  %36 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %8, align 8
  %37 = load i32, i32* %10, align 4
  %38 = tail call i32 %36(i8* %1, i32 %2, i32 %37) #7
  %39 = tail call noalias i8* @malloc(i64 72) #7
  %40 = icmp eq i8* %39, null
  br i1 %40, label %107, label %41

; <label>:41:                                     ; preds = %35
  %42 = bitcast i8* %39 to i32*
  store i32 1179402567, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 4
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds i8, i8* %39, i64 8
  %45 = bitcast i8* %44 to i32*
  store i32 56, i32* %45, align 4
  %46 = load i32, i32* @mem_usage, align 4
  %47 = add i32 %46, 72
  store i32 %47, i32* @mem_usage, align 4
  %48 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %49 = add i32 %48, 56
  store i32 %49, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %50 = getelementptr inbounds i8, i8* %39, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %50, i8 0, i64 56, i1 false) #7
  %51 = bitcast i8* %50 to %struct.r_assoc_el_*
  %52 = sext i32 %2 to i64
  %53 = add nsw i64 %52, 16
  %54 = tail call noalias i8* @malloc(i64 %53) #7
  %55 = icmp eq i8* %54, null
  br i1 %55, label %106, label %56

; <label>:56:                                     ; preds = %41
  %57 = bitcast i8* %54 to i32*
  store i32 1179402567, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %54, i64 4
  store i8 0, i8* %58, align 4
  %59 = getelementptr inbounds i8, i8* %54, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 %2, i32* %60, align 4
  %61 = trunc i64 %53 to i32
  %62 = add i32 %47, %61
  store i32 %62, i32* @mem_usage, align 4
  %63 = add i32 %49, %2
  store i32 %63, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %64 = getelementptr inbounds i8, i8* %54, i64 12
  %65 = bitcast i8* %50 to i8**
  store i8* %64, i8** %65, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* align 1 %1, i64 %52, i1 false)
  %66 = getelementptr inbounds i8, i8* %39, i64 20
  %67 = bitcast i8* %66 to i32*
  store i32 %2, i32* %67, align 8
  %68 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %13, align 8
  %69 = zext i32 %38 to i64
  %70 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %68, i64 %69
  %71 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %70, align 8
  %72 = icmp eq %struct.r_assoc_el_* %71, null
  br i1 %72, label %78, label %73

; <label>:73:                                     ; preds = %56
  %74 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %71, i64 0, i32 3
  %75 = bitcast %struct.r_assoc_el_** %74 to i8**
  store i8* %50, i8** %75, align 8
  %76 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %13, align 8
  %77 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %76, i64 %69
  br label %78

; <label>:78:                                     ; preds = %73, %56
  %79 = phi %struct.r_assoc_el_** [ %77, %73 ], [ %70, %56 ]
  %80 = bitcast %struct.r_assoc_el_** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds i8, i8* %39, i64 44
  %83 = bitcast i8* %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %struct.r_assoc_el_** %79 to i8**
  store i8* %50, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %39, i64 60
  %86 = bitcast i8* %85 to i32 (i8*)**
  br label %98

; <label>:87:                                     ; preds = %26
  %88 = and i32 %6, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %107, label %90

; <label>:90:                                     ; preds = %87
  %91 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %22, i64 0, i32 6
  %92 = load i32 (i8*)*, i32 (i8*)** %91, align 8
  %93 = icmp eq i32 (i8*)* %92, null
  br i1 %93, label %98, label %94

; <label>:94:                                     ; preds = %90
  %95 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %22, i64 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = tail call i32 %92(i8* %96) #7
  br label %98

; <label>:98:                                     ; preds = %78, %90, %94
  %99 = phi i32 (i8*)** [ %86, %78 ], [ %91, %90 ], [ %91, %94 ]
  %100 = phi %struct.r_assoc_el_* [ %51, %78 ], [ %22, %90 ], [ %22, %94 ]
  %101 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %100, i64 0, i32 2
  store i8* %3, i8** %101, align 8
  %102 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %100, i64 0, i32 5
  store i32 (i8**, i8*)* %4, i32 (i8**, i8*)** %102, align 8
  store i32 (i8*)* %5, i32 (i8*)** %99, align 8
  %103 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 4
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %103, align 8
  br label %107

; <label>:106:                                    ; preds = %41
  store i32 %46, i32* @mem_usage, align 4
  store i32 %48, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  tail call void @free(i8* nonnull %39) #7
  br label %107

; <label>:107:                                    ; preds = %87, %98, %35, %106
  %108 = phi i32 [ 1, %106 ], [ 1, %35 ], [ 4, %87 ], [ 0, %98 ]
  ret i32 %108
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_delete(%struct.r_assoc_* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 2
  %5 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %4, align 8
  %6 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 %5(i8* %1, i32 %2, i32 %7) #7
  %9 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 3
  %10 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %9, align 8
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %10, i64 %11
  %13 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %12, align 8
  %14 = icmp eq %struct.r_assoc_el_* %13, null
  br i1 %14, label %105, label %15

; <label>:15:                                     ; preds = %3
  %16 = sext i32 %2 to i64
  br label %17

; <label>:17:                                     ; preds = %27, %15
  %18 = phi %struct.r_assoc_el_* [ %13, %15 ], [ %29, %27 ]
  %19 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %2
  br i1 %21, label %22, label %27

; <label>:22:                                     ; preds = %17
  %23 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = tail call i32 @memcmp(i8* %24, i8* %1, i64 %16) #16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

; <label>:27:                                     ; preds = %22, %17
  %28 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 4
  %29 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %28, align 8
  %30 = icmp eq %struct.r_assoc_el_* %29, null
  br i1 %30, label %105, label %17

; <label>:31:                                     ; preds = %22
  %32 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 0
  %33 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 3
  %34 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %33, align 8
  %35 = icmp eq %struct.r_assoc_el_* %34, null
  br i1 %35, label %39, label %36

; <label>:36:                                     ; preds = %31
  %37 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 4
  %38 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %34, i64 0, i32 4
  br label %47

; <label>:39:                                     ; preds = %31
  %40 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %4, align 8
  %41 = load i32, i32* %6, align 4
  %42 = tail call i32 %40(i8* %1, i32 %2, i32 %41) #7
  %43 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 4
  %44 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %9, align 8
  %45 = zext i32 %42 to i64
  %46 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %44, i64 %45
  br label %47

; <label>:47:                                     ; preds = %39, %36
  %48 = phi %struct.r_assoc_el_** [ %46, %39 ], [ %38, %36 ]
  %49 = phi %struct.r_assoc_el_** [ %43, %39 ], [ %37, %36 ]
  %50 = bitcast %struct.r_assoc_el_** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %struct.r_assoc_el_** %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %49, align 8
  %54 = icmp eq %struct.r_assoc_el_* %53, null
  br i1 %54, label %60, label %55

; <label>:55:                                     ; preds = %47
  %56 = bitcast %struct.r_assoc_el_** %33 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %53, i64 0, i32 3
  %59 = bitcast %struct.r_assoc_el_** %58 to i64*
  store i64 %57, i64* %59, align 8
  br label %60

; <label>:60:                                     ; preds = %47, %55
  %61 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 6
  %62 = load i32 (i8*)*, i32 (i8*)** %61, align 8
  %63 = icmp eq i32 (i8*)* %62, null
  br i1 %63, label %68, label %64

; <label>:64:                                     ; preds = %60
  %65 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %18, i64 0, i32 2
  %66 = load i8*, i8** %65, align 8
  %67 = tail call i32 %62(i8* %66) #7
  br label %68

; <label>:68:                                     ; preds = %60, %64
  %69 = load i8*, i8** %32, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %86, label %71

; <label>:71:                                     ; preds = %68
  %72 = getelementptr inbounds i8, i8* %69, i64 -12
  %73 = bitcast i8* %72 to %struct.r_malloc_chunk*
  %74 = bitcast %struct.r_malloc_chunk* %73 to %struct.r_malloc_chunk_*
  %75 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %74, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* @mem_usage, align 4
  %78 = sub i32 -16, %76
  %79 = add i32 %78, %77
  store i32 %79, i32* @mem_usage, align 4
  %80 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %74, i64 0, i32 1
  %81 = load i8, i8* %80, align 4
  %82 = zext i8 %81 to i64
  %83 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = sub i32 %84, %76
  store i32 %85, i32* %83, align 4
  tail call void @free(i8* nonnull %72) #7
  br label %86

; <label>:86:                                     ; preds = %71, %68
  %87 = bitcast %struct.r_assoc_el_* %18 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 -12
  %89 = bitcast i8* %88 to %struct.r_malloc_chunk*
  %90 = bitcast %struct.r_malloc_chunk* %89 to %struct.r_malloc_chunk_*
  %91 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %90, i64 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* @mem_usage, align 4
  %94 = sub i32 -16, %92
  %95 = add i32 %94, %93
  store i32 %95, i32* @mem_usage, align 4
  %96 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %90, i64 0, i32 1
  %97 = load i8, i8* %96, align 4
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sub i32 %100, %92
  store i32 %101, i32* %99, align 4
  tail call void @free(i8* nonnull %88) #7
  %102 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 4
  %103 = load i32, i32* %102, align 8
  %104 = add i32 %103, -1
  store i32 %104, i32* %102, align 8
  br label %105

; <label>:105:                                    ; preds = %27, %3, %86
  %106 = phi i32 [ 0, %86 ], [ 2, %3 ], [ 2, %27 ]
  ret i32 %106
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_copy(%struct.r_assoc_** nocapture, %struct.r_assoc_* nocapture readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.r_assoc_*, align 8
  %4 = bitcast %struct.r_assoc_** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = tail call noalias i8* @malloc(i64 48) #7
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %2
  %8 = bitcast %struct.r_assoc_** %3 to i8**
  store i8* null, i8** %8, align 8
  br label %221

; <label>:9:                                      ; preds = %2
  %10 = bitcast i8* %5 to i32*
  store i32 1179402567, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds i8, i8* %5, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 32, i32* %13, align 4
  %14 = load i32, i32* @mem_usage, align 4
  %15 = add i32 %14, 48
  store i32 %15, i32* @mem_usage, align 4
  %16 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %17 = add i32 %16, 32
  store i32 %17, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %18 = getelementptr inbounds i8, i8* %5, i64 12
  %19 = getelementptr inbounds i8, i8* %5, i64 28
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %19, i8 0, i64 16, i1 false) #7
  %20 = bitcast %struct.r_assoc_** %3 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %1, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = bitcast i8* %18 to i32*
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds i8, i8* %5, i64 16
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 4
  %28 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %1, i64 0, i32 2
  %29 = bitcast i32 (i8*, i32, i32)** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %5, i64 20
  %32 = bitcast i8* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = sext i32 %22 to i64
  %34 = mul nsw i64 %33, 56
  %35 = add nsw i64 %34, 16
  %36 = tail call noalias i8* @malloc(i64 %35) #7
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %41

; <label>:38:                                     ; preds = %9
  %39 = getelementptr inbounds i8, i8* %5, i64 28
  %40 = bitcast i8* %39 to i8**
  store i8* null, i8** %40, align 8
  br label %221

; <label>:41:                                     ; preds = %9
  %42 = bitcast i8* %18 to %struct.r_assoc_*
  %43 = ptrtoint i8* %18 to i64
  %44 = bitcast i8* %36 to i32*
  store i32 1179402567, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 0, i8* %45, align 4
  %46 = trunc i64 %34 to i32
  %47 = getelementptr inbounds i8, i8* %36, i64 8
  %48 = bitcast i8* %47 to i32*
  store i32 %46, i32* %48, align 4
  %49 = trunc i64 %35 to i32
  %50 = add i32 %15, %49
  store i32 %50, i32* @mem_usage, align 4
  %51 = add i32 %17, %46
  store i32 %51, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %52 = getelementptr inbounds i8, i8* %36, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %52, i8 0, i64 %34, i1 false) #7
  %53 = getelementptr inbounds i8, i8* %5, i64 28
  %54 = bitcast i8* %53 to i8**
  store i8* %52, i8** %54, align 8
  %55 = icmp sgt i32 %22, 0
  br i1 %55, label %56, label %214

; <label>:56:                                     ; preds = %41
  %57 = bitcast i8* %52 to %struct.r_assoc_el_**
  %58 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %1, i64 0, i32 3
  br label %59

; <label>:59:                                     ; preds = %209, %56
  %60 = phi %struct.r_assoc_el_** [ %57, %56 ], [ %211, %209 ]
  %61 = phi i64 [ 0, %56 ], [ %203, %209 ]
  %62 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %60, i64 %61
  %63 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %58, align 8
  %64 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %63, i64 %61
  %65 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %64, align 8
  %66 = icmp eq %struct.r_assoc_el_* %65, null
  br i1 %66, label %200, label %67

; <label>:67:                                     ; preds = %59, %126
  %68 = phi %struct.r_assoc_el_* [ %145, %126 ], [ %65, %59 ]
  %69 = phi %struct.r_assoc_el_* [ %91, %126 ], [ null, %59 ]
  %70 = phi %struct.r_assoc_el_* [ %83, %126 ], [ null, %59 ]
  %71 = tail call noalias i8* @malloc(i64 72) #7
  %72 = icmp eq i8* %71, null
  br i1 %72, label %147, label %73

; <label>:73:                                     ; preds = %67
  %74 = bitcast i8* %71 to i32*
  store i32 1179402567, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %71, i64 4
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds i8, i8* %71, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 56, i32* %77, align 4
  %78 = load i32, i32* @mem_usage, align 4
  %79 = add i32 %78, 72
  store i32 %79, i32* @mem_usage, align 4
  %80 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %81 = add i32 %80, 56
  store i32 %81, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %82 = getelementptr inbounds i8, i8* %71, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %82, i8 0, i64 56, i1 false) #7
  %83 = bitcast i8* %82 to %struct.r_assoc_el_*
  %84 = icmp eq %struct.r_assoc_el_* %69, null
  br i1 %84, label %90, label %85

; <label>:85:                                     ; preds = %73
  %86 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %70, i64 0, i32 4
  %87 = bitcast %struct.r_assoc_el_** %86 to i8**
  store i8* %82, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %71, i64 36
  %89 = bitcast i8* %88 to %struct.r_assoc_el_**
  store %struct.r_assoc_el_* %70, %struct.r_assoc_el_** %89, align 8
  br label %90

; <label>:90:                                     ; preds = %85, %73
  %91 = phi %struct.r_assoc_el_* [ %69, %85 ], [ %83, %73 ]
  %92 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 6
  %93 = bitcast i32 (i8*)** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds i8, i8* %71, i64 60
  %96 = bitcast i8* %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 5
  %98 = bitcast i32 (i8**, i8*)** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds i8, i8* %71, i64 52
  %101 = bitcast i8* %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = load i32 (i8**, i8*)*, i32 (i8**, i8*)** %97, align 8
  %103 = icmp eq i32 (i8**, i8*)* %102, null
  br i1 %103, label %111, label %104

; <label>:104:                                    ; preds = %90
  %105 = getelementptr inbounds i8, i8* %71, i64 28
  %106 = bitcast i8* %105 to i8**
  %107 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = tail call i32 %102(i8** nonnull %106, i8* %108) #7
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %117, label %147

; <label>:111:                                    ; preds = %90
  %112 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 2
  %113 = bitcast i8** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds i8, i8* %71, i64 28
  %116 = bitcast i8* %115 to i64*
  store i64 %114, i64* %116, align 8
  br label %117

; <label>:117:                                    ; preds = %111, %104
  %118 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = sext i32 %119 to i64
  %121 = add nsw i64 %120, 16
  %122 = tail call noalias i8* @malloc(i64 %121) #7
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %126

; <label>:124:                                    ; preds = %117
  %125 = bitcast i8* %82 to i8**
  store i8* null, i8** %125, align 8
  br label %147

; <label>:126:                                    ; preds = %117
  %127 = bitcast i8* %122 to i32*
  store i32 1179402567, i32* %127, align 4
  %128 = getelementptr inbounds i8, i8* %122, i64 4
  store i8 0, i8* %128, align 4
  %129 = getelementptr inbounds i8, i8* %122, i64 8
  %130 = bitcast i8* %129 to i32*
  store i32 %119, i32* %130, align 4
  %131 = load i32, i32* @mem_usage, align 4
  %132 = trunc i64 %121 to i32
  %133 = add i32 %131, %132
  store i32 %133, i32* @mem_usage, align 4
  %134 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %135 = add i32 %134, %119
  store i32 %135, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %136 = getelementptr inbounds i8, i8* %122, i64 12
  %137 = bitcast i8* %82 to i8**
  store i8* %136, i8** %137, align 8
  %138 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 0
  %139 = load i8*, i8** %138, align 8
  %140 = load i32, i32* %118, align 8
  %141 = getelementptr inbounds i8, i8* %71, i64 20
  %142 = bitcast i8* %141 to i32*
  store i32 %140, i32* %142, align 8
  %143 = sext i32 %140 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %136, i8* align 1 %139, i64 %143, i1 false) #7
  %144 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %68, i64 0, i32 4
  %145 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %144, align 8
  %146 = icmp eq %struct.r_assoc_el_* %145, null
  br i1 %146, label %200, label %67

; <label>:147:                                    ; preds = %104, %67, %124
  %148 = phi i32 [ 1, %124 ], [ %109, %104 ], [ 1, %67 ]
  %149 = phi %struct.r_assoc_el_* [ %91, %124 ], [ %91, %104 ], [ %69, %67 ]
  %150 = icmp eq %struct.r_assoc_el_* %149, null
  br i1 %150, label %221, label %151

; <label>:151:                                    ; preds = %147, %181
  %152 = phi %struct.r_assoc_el_* [ %154, %181 ], [ %149, %147 ]
  %153 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %152, i64 0, i32 4
  %154 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %153, align 8
  %155 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %152, i64 0, i32 6
  %156 = load i32 (i8*)*, i32 (i8*)** %155, align 8
  %157 = icmp eq i32 (i8*)* %156, null
  br i1 %157, label %162, label %158

; <label>:158:                                    ; preds = %151
  %159 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %152, i64 0, i32 2
  %160 = load i8*, i8** %159, align 8
  %161 = tail call i32 %156(i8* %160) #7
  br label %162

; <label>:162:                                    ; preds = %158, %151
  %163 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %152, i64 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = icmp eq i8* %164, null
  br i1 %165, label %181, label %166

; <label>:166:                                    ; preds = %162
  %167 = getelementptr inbounds i8, i8* %164, i64 -12
  %168 = bitcast i8* %167 to %struct.r_malloc_chunk*
  %169 = bitcast %struct.r_malloc_chunk* %168 to %struct.r_malloc_chunk_*
  %170 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %169, i64 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = load i32, i32* @mem_usage, align 4
  %173 = sub i32 -16, %171
  %174 = add i32 %173, %172
  store i32 %174, i32* @mem_usage, align 4
  %175 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %169, i64 0, i32 1
  %176 = load i8, i8* %175, align 4
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = sub i32 %179, %171
  store i32 %180, i32* %178, align 4
  tail call void @free(i8* nonnull %167) #7
  br label %181

; <label>:181:                                    ; preds = %166, %162
  %182 = bitcast %struct.r_assoc_el_* %152 to i8*
  %183 = getelementptr inbounds i8, i8* %182, i64 -12
  %184 = bitcast i8* %183 to %struct.r_malloc_chunk*
  %185 = bitcast %struct.r_malloc_chunk* %184 to %struct.r_malloc_chunk_*
  %186 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %185, i64 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* @mem_usage, align 4
  %189 = sub i32 -16, %187
  %190 = add i32 %189, %188
  store i32 %190, i32* @mem_usage, align 4
  %191 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %185, i64 0, i32 1
  %192 = load i8, i8* %191, align 4
  %193 = zext i8 %192 to i64
  %194 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = sub i32 %195, %187
  store i32 %196, i32* %194, align 4
  tail call void @free(i8* nonnull %183) #7
  %197 = icmp eq %struct.r_assoc_el_* %154, null
  br i1 %197, label %198, label %151

; <label>:198:                                    ; preds = %181
  %199 = icmp eq i32 %148, 0
  br i1 %199, label %202, label %221

; <label>:200:                                    ; preds = %126, %59
  %201 = phi %struct.r_assoc_el_* [ null, %59 ], [ %91, %126 ]
  store %struct.r_assoc_el_* %201, %struct.r_assoc_el_** %62, align 8
  br label %202

; <label>:202:                                    ; preds = %200, %198
  %203 = add nuw nsw i64 %61, 1
  %204 = load %struct.r_assoc_*, %struct.r_assoc_** %3, align 8
  %205 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %204, i64 0, i32 0
  %206 = load i32, i32* %205, align 8
  %207 = sext i32 %206 to i64
  %208 = icmp slt i64 %203, %207
  br i1 %208, label %209, label %212

; <label>:209:                                    ; preds = %202
  %210 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %204, i64 0, i32 3
  %211 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %210, align 8
  br label %59

; <label>:212:                                    ; preds = %202
  %213 = ptrtoint %struct.r_assoc_* %204 to i64
  br label %214

; <label>:214:                                    ; preds = %212, %41
  %215 = phi i64 [ %43, %41 ], [ %213, %212 ]
  %216 = phi %struct.r_assoc_* [ %42, %41 ], [ %204, %212 ]
  %217 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %1, i64 0, i32 4
  %218 = load i32, i32* %217, align 8
  %219 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %216, i64 0, i32 4
  store i32 %218, i32* %219, align 8
  %220 = bitcast %struct.r_assoc_** %0 to i64*
  store i64 %215, i64* %220, align 8
  br label %224

; <label>:221:                                    ; preds = %147, %198, %7, %38
  %222 = phi i32 [ 1, %38 ], [ 1, %7 ], [ %148, %198 ], [ %148, %147 ]
  %223 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %3)
  br label %224

; <label>:224:                                    ; preds = %214, %221
  %225 = phi i32 [ %222, %221 ], [ 0, %214 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  ret i32 %225
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_assoc_init_iter(%struct.r_assoc_*, %struct.r_assoc_iterator_* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %1, i64 0, i32 0
  store %struct.r_assoc_* %0, %struct.r_assoc_** %3, align 8
  %4 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %1, i64 0, i32 1
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %1, i64 0, i32 2
  store %struct.r_assoc_el_* null, %struct.r_assoc_el_** %5, align 8
  %6 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %1, i64 0, i32 3
  store i32 %7, i32* %8, align 8
  %9 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %1, i64 0, i32 4
  store %struct.r_assoc_el_* null, %struct.r_assoc_el_** %9, align 8
  %10 = load i32, i32* %6, align 8
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %32

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %0, i64 0, i32 3
  %14 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %13, align 8
  %15 = sext i32 %10 to i64
  br label %16

; <label>:16:                                     ; preds = %12, %29
  %17 = phi i64 [ 0, %12 ], [ %30, %29 ]
  %18 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %14, i64 %17
  %19 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %18, align 8
  %20 = icmp eq %struct.r_assoc_el_* %19, null
  br i1 %20, label %29, label %21

; <label>:21:                                     ; preds = %16
  %22 = trunc i64 %17 to i32
  %23 = and i64 %17, 4294967295
  store i32 %22, i32* %8, align 8
  %24 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %13, align 8
  %25 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %24, i64 %23
  %26 = bitcast %struct.r_assoc_el_** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.r_assoc_el_** %9 to i64*
  store i64 %27, i64* %28, align 8
  br label %32

; <label>:29:                                     ; preds = %16
  %30 = add nuw nsw i64 %17, 1
  %31 = icmp slt i64 %30, %15
  br i1 %31, label %16, label %32

; <label>:32:                                     ; preds = %29, %2, %21
  ret i32 0
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_assoc_iter(%struct.r_assoc_iterator_* nocapture, i8** nocapture, i32* nocapture, i8** nocapture) local_unnamed_addr #6 {
  %5 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 4
  %6 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %5, align 8
  %7 = icmp eq %struct.r_assoc_el_* %6, null
  br i1 %7, label %53, label %8

; <label>:8:                                      ; preds = %4
  %9 = bitcast %struct.r_assoc_el_* %6 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8** %1 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %6, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %2, align 4
  %14 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %6, i64 0, i32 2
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8** %3 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 1
  store i32 %19, i32* %20, align 8
  %21 = bitcast %struct.r_assoc_el_** %5 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 2
  %24 = bitcast %struct.r_assoc_el_** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = inttoptr i64 %22 to %struct.r_assoc_el_*
  %26 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %25, i64 0, i32 4
  %27 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %26, align 8
  %28 = icmp eq %struct.r_assoc_el_* %27, null
  br i1 %28, label %30, label %29

; <label>:29:                                     ; preds = %8
  store %struct.r_assoc_el_* %27, %struct.r_assoc_el_** %5, align 8
  br label %53

; <label>:30:                                     ; preds = %8
  store %struct.r_assoc_el_* null, %struct.r_assoc_el_** %5, align 8
  %31 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 0
  %32 = load %struct.r_assoc_*, %struct.r_assoc_** %31, align 8
  %33 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %32, i64 0, i32 3
  %36 = sext i32 %19 to i64
  %37 = sext i32 %34 to i64
  br label %38

; <label>:38:                                     ; preds = %42, %30
  %39 = phi i64 [ %40, %42 ], [ %36, %30 ]
  %40 = add nsw i64 %39, 1
  %41 = icmp slt i64 %40, %37
  br i1 %41, label %42, label %53

; <label>:42:                                     ; preds = %38
  %43 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %35, align 8
  %44 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %43, i64 %40
  %45 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %44, align 8
  %46 = icmp eq %struct.r_assoc_el_* %45, null
  br i1 %46, label %38, label %47

; <label>:47:                                     ; preds = %42
  %48 = trunc i64 %40 to i32
  store i32 %48, i32* %18, align 8
  %49 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %35, align 8
  %50 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %49, i64 %40
  %51 = bitcast %struct.r_assoc_el_** %50 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %21, align 8
  br label %53

; <label>:53:                                     ; preds = %38, %29, %47, %4
  %54 = phi i32 [ 5, %4 ], [ 0, %47 ], [ 0, %29 ], [ 0, %38 ]
  ret i32 %54
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_assoc_iter_delete(%struct.r_assoc_iterator_* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 2
  %3 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %2, align 8
  %4 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %3, i64 0, i32 3
  %5 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %4, align 8
  %6 = icmp eq %struct.r_assoc_el_* %5, null
  %7 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %3, i64 0, i32 4
  %8 = bitcast %struct.r_assoc_el_** %7 to i64*
  %9 = load i64, i64* %8, align 8
  br i1 %6, label %10, label %19

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 0
  %12 = load %struct.r_assoc_*, %struct.r_assoc_** %11, align 8
  %13 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %12, i64 0, i32 3
  %14 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %13, align 8
  %15 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %14, i64 %17
  br label %21

; <label>:19:                                     ; preds = %1
  %20 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %5, i64 0, i32 4
  br label %21

; <label>:21:                                     ; preds = %19, %10
  %22 = phi %struct.r_assoc_el_** [ %20, %19 ], [ %18, %10 ]
  %23 = bitcast %struct.r_assoc_el_** %22 to i64*
  store i64 %9, i64* %23, align 8
  %24 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %2, align 8
  %25 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 4
  %26 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %25, align 8
  %27 = icmp eq %struct.r_assoc_el_* %26, null
  br i1 %27, label %35, label %28

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 3
  %30 = bitcast %struct.r_assoc_el_** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %26, i64 0, i32 3
  %33 = bitcast %struct.r_assoc_el_** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %2, align 8
  br label %35

; <label>:35:                                     ; preds = %21, %28
  %36 = phi %struct.r_assoc_el_* [ %24, %21 ], [ %34, %28 ]
  %37 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %36, i64 0, i32 6
  %38 = load i32 (i8*)*, i32 (i8*)** %37, align 8
  %39 = icmp eq i32 (i8*)* %38, null
  br i1 %39, label %44, label %40

; <label>:40:                                     ; preds = %35
  %41 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %36, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i32 %38(i8* %42) #7
  br label %44

; <label>:44:                                     ; preds = %35, %40
  %45 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %0, i64 0, i32 0
  %46 = load %struct.r_assoc_*, %struct.r_assoc_** %45, align 8
  %47 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %46, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  store i32 %49, i32* %47, align 8
  %50 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %2, align 8
  %51 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %50, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %70, label %54

; <label>:54:                                     ; preds = %44
  %55 = getelementptr inbounds i8, i8* %52, i64 -12
  %56 = bitcast i8* %55 to %struct.r_malloc_chunk*
  %57 = bitcast %struct.r_malloc_chunk* %56 to %struct.r_malloc_chunk_*
  %58 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %57, i64 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* @mem_usage, align 4
  %61 = sub i32 -16, %59
  %62 = add i32 %61, %60
  store i32 %62, i32* @mem_usage, align 4
  %63 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %57, i64 0, i32 1
  %64 = load i8, i8* %63, align 4
  %65 = zext i8 %64 to i64
  %66 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sub i32 %67, %59
  store i32 %68, i32* %66, align 4
  tail call void @free(i8* nonnull %55) #7
  %69 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %2, align 8
  br label %70

; <label>:70:                                     ; preds = %44, %54
  %71 = phi %struct.r_assoc_el_* [ %50, %44 ], [ %69, %54 ]
  %72 = icmp eq %struct.r_assoc_el_* %71, null
  br i1 %72, label %89, label %73

; <label>:73:                                     ; preds = %70
  %74 = bitcast %struct.r_assoc_el_* %71 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 -12
  %76 = bitcast i8* %75 to %struct.r_malloc_chunk*
  %77 = bitcast %struct.r_malloc_chunk* %76 to %struct.r_malloc_chunk_*
  %78 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %77, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* @mem_usage, align 4
  %81 = sub i32 -16, %79
  %82 = add i32 %81, %80
  store i32 %82, i32* @mem_usage, align 4
  %83 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %77, i64 0, i32 1
  %84 = load i8, i8* %83, align 4
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = sub i32 %87, %79
  store i32 %88, i32* %86, align 4
  tail call void @free(i8* nonnull %75) #7
  br label %89

; <label>:89:                                     ; preds = %73, %70
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly sspstrong uwtable
define hidden i32 @r_assoc_simple_hash_compute(i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %4 = load i8, i8* %0, align 1
  %5 = sext i8 %4 to i32
  %6 = add nsw i32 %1, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = mul nsw i32 %10, %1
  %12 = add nsw i32 %11, %5
  %13 = shl nsw i32 -1, %2
  %14 = xor i32 %13, -1
  %15 = and i32 %12, %14
  ret i32 %15
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_crc32(i8* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #6 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %54

; <label>:5:                                      ; preds = %3
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %1, 1
  br i1 %7, label %36, label %8

; <label>:8:                                      ; preds = %5
  %9 = sub i32 %1, %6
  br label %10

; <label>:10:                                     ; preds = %10, %8
  %11 = phi i8* [ %0, %8 ], [ %33, %10 ]
  %12 = phi i32 [ -1, %8 ], [ %32, %10 ]
  %13 = phi i32 [ %9, %8 ], [ %34, %10 ]
  %14 = lshr i32 %12, 8
  %15 = load i8, i8* %11, align 1
  %16 = zext i8 %15 to i32
  %17 = and i32 %12, 255
  %18 = xor i32 %17, %16
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* @crctab, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = xor i32 %21, %14
  %23 = getelementptr inbounds i8, i8* %11, i64 1
  %24 = lshr i32 %22, 8
  %25 = load i8, i8* %23, align 1
  %26 = zext i8 %25 to i32
  %27 = and i32 %22, 255
  %28 = xor i32 %27, %26
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* @crctab, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = xor i32 %31, %24
  %33 = getelementptr inbounds i8, i8* %11, i64 2
  %34 = add i32 %13, -2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %10

; <label>:36:                                     ; preds = %10, %5
  %37 = phi i32 [ undef, %5 ], [ %32, %10 ]
  %38 = phi i8* [ %0, %5 ], [ %33, %10 ]
  %39 = phi i32 [ -1, %5 ], [ %32, %10 ]
  %40 = icmp eq i32 %6, 0
  br i1 %40, label %51, label %41

; <label>:41:                                     ; preds = %36
  %42 = and i32 %39, 255
  %43 = load i8, i8* %38, align 1
  %44 = zext i8 %43 to i32
  %45 = xor i32 %42, %44
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* @crctab, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = lshr i32 %39, 8
  %50 = xor i32 %48, %49
  br label %51

; <label>:51:                                     ; preds = %36, %41
  %52 = phi i32 [ %37, %36 ], [ %50, %41 ]
  %53 = xor i32 %52, -1
  br label %54

; <label>:54:                                     ; preds = %51, %3
  %55 = phi i32 [ 0, %3 ], [ %53, %51 ]
  store i32 %55, i32* %2, align 4
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_create(%struct.Data_** nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = tail call noalias i8* @malloc(i64 32) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %35, label %6

; <label>:6:                                      ; preds = %3
  %7 = bitcast i8* %4 to i32*
  store i32 1179402567, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %4, i64 4
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 16, i32* %10, align 4
  %11 = load i32, i32* @mem_usage, align 4
  %12 = add i32 %11, 32
  store i32 %12, i32* @mem_usage, align 4
  %13 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %14 = add i32 %13, 16
  store i32 %14, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %15 = getelementptr inbounds i8, i8* %4, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %15, i8 0, i64 16, i1 false) #7
  %16 = add i64 %2, 16
  %17 = tail call noalias i8* @malloc(i64 %16) #7
  %18 = icmp eq i8* %17, null
  br i1 %18, label %34, label %19

; <label>:19:                                     ; preds = %6
  %20 = bitcast i8* %17 to i32*
  store i32 1179402567, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 4
  store i8 0, i8* %21, align 4
  %22 = trunc i64 %2 to i32
  %23 = getelementptr inbounds i8, i8* %17, i64 8
  %24 = bitcast i8* %23 to i32*
  store i32 %22, i32* %24, align 4
  %25 = trunc i64 %16 to i32
  %26 = add i32 %12, %25
  store i32 %26, i32* @mem_usage, align 4
  %27 = add i32 %14, %22
  store i32 %27, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %28 = getelementptr inbounds i8, i8* %17, i64 12
  %29 = bitcast i8* %15 to i8**
  store i8* %28, i8** %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 %1, i64 %2, i1 false)
  %30 = getelementptr inbounds i8, i8* %4, i64 20
  %31 = bitcast i8* %30 to i64*
  store i64 %2, i64* %31, align 8
  %32 = ptrtoint i8* %15 to i64
  %33 = bitcast %struct.Data_** %0 to i64*
  store i64 %32, i64* %33, align 8
  br label %35

; <label>:34:                                     ; preds = %6
  store i32 %11, i32* @mem_usage, align 4
  store i32 %13, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  tail call void @free(i8* nonnull %4) #7
  br label %35

; <label>:35:                                     ; preds = %3, %34, %19
  %36 = phi i32 [ 0, %19 ], [ 1, %34 ], [ 1, %3 ]
  ret i32 %36
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_alloc_mem(%struct.Data_* nocapture, i64) local_unnamed_addr #0 {
  %3 = add i64 %1, 16
  %4 = tail call noalias i8* @malloc(i64 %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %19, label %6

; <label>:6:                                      ; preds = %2
  %7 = bitcast i8* %4 to i32*
  store i32 1179402567, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %4, i64 4
  store i8 0, i8* %8, align 4
  %9 = trunc i64 %1 to i32
  %10 = getelementptr inbounds i8, i8* %4, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %9, i32* %11, align 4
  %12 = load i32, i32* @mem_usage, align 4
  %13 = trunc i64 %3 to i32
  %14 = add i32 %12, %13
  store i32 %14, i32* @mem_usage, align 4
  %15 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %16 = add i32 %15, %9
  store i32 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %17 = getelementptr inbounds i8, i8* %4, i64 12
  %18 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 1
  store i64 %1, i64* %18, align 8
  br label %19

; <label>:19:                                     ; preds = %2, %6
  %20 = phi i8* [ %17, %6 ], [ null, %2 ]
  %21 = phi i32 [ 0, %6 ], [ 1, %2 ]
  %22 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  store i8* %20, i8** %22, align 8
  ret i32 %21
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_alloc(%struct.Data_** nocapture, i64) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 32) #7
  %4 = icmp eq i8* %3, null
  br i1 %4, label %34, label %5

; <label>:5:                                      ; preds = %2
  %6 = bitcast i8* %3 to i32*
  store i32 1179402567, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %3, i64 4
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 16, i32* %9, align 4
  %10 = load i32, i32* @mem_usage, align 4
  %11 = add i32 %10, 32
  store i32 %11, i32* @mem_usage, align 4
  %12 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %13 = add i32 %12, 16
  store i32 %13, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %14 = getelementptr inbounds i8, i8* %3, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 0, i64 16, i1 false) #7
  %15 = add i64 %1, 16
  %16 = tail call noalias i8* @malloc(i64 %15) #7
  %17 = icmp eq i8* %16, null
  br i1 %17, label %33, label %18

; <label>:18:                                     ; preds = %5
  %19 = bitcast i8* %16 to i32*
  store i32 1179402567, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 0, i8* %20, align 4
  %21 = trunc i64 %1 to i32
  %22 = getelementptr inbounds i8, i8* %16, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 %21, i32* %23, align 4
  %24 = trunc i64 %15 to i32
  %25 = add i32 %11, %24
  store i32 %25, i32* @mem_usage, align 4
  %26 = add i32 %13, %21
  store i32 %26, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %27 = getelementptr inbounds i8, i8* %16, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %27, i8 0, i64 %1, i1 false) #7
  %28 = bitcast i8* %14 to i8**
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %3, i64 20
  %30 = bitcast i8* %29 to i64*
  store i64 %1, i64* %30, align 8
  %31 = ptrtoint i8* %14 to i64
  %32 = bitcast %struct.Data_** %0 to i64*
  store i64 %31, i64* %32, align 8
  br label %34

; <label>:33:                                     ; preds = %5
  store i32 %10, i32* @mem_usage, align 4
  store i32 %12, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  tail call void @free(i8* nonnull %3) #7
  br label %34

; <label>:34:                                     ; preds = %2, %33, %18
  %35 = phi i32 [ 0, %18 ], [ 1, %33 ], [ 1, %2 ]
  ret i32 %35
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_make(%struct.Data_* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = add i64 %2, 16
  %5 = tail call noalias i8* @malloc(i64 %4) #7
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  store i8* null, i8** %8, align 8
  br label %23

; <label>:9:                                      ; preds = %3
  %10 = bitcast i8* %5 to i32*
  store i32 1179402567, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %11, align 4
  %12 = trunc i64 %2 to i32
  %13 = getelementptr inbounds i8, i8* %5, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 4
  %15 = load i32, i32* @mem_usage, align 4
  %16 = trunc i64 %4 to i32
  %17 = add i32 %15, %16
  store i32 %17, i32* @mem_usage, align 4
  %18 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %19 = add i32 %18, %12
  store i32 %19, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %20 = getelementptr inbounds i8, i8* %5, i64 12
  %21 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %1, i64 %2, i1 false)
  %22 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 1
  store i64 %2, i64* %22, align 8
  br label %23

; <label>:23:                                     ; preds = %7, %9
  %24 = phi i32 [ 0, %9 ], [ 1, %7 ]
  ret i32 %24
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_destroy_v(i8*) local_unnamed_addr #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %43, label %3

; <label>:3:                                      ; preds = %1
  %4 = bitcast i8* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %28, label %7

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds i8, i8* %0, i64 8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 0, i64 %10, i1 false) #7
  %11 = load i8*, i8** %4, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %28, label %13

; <label>:13:                                     ; preds = %7
  %14 = getelementptr inbounds i8, i8* %11, i64 -12
  %15 = bitcast i8* %14 to %struct.r_malloc_chunk*
  %16 = bitcast %struct.r_malloc_chunk* %15 to %struct.r_malloc_chunk_*
  %17 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = load i32, i32* @mem_usage, align 4
  %20 = sub i32 -16, %18
  %21 = add i32 %20, %19
  store i32 %21, i32* @mem_usage, align 4
  %22 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %16, i64 0, i32 1
  %23 = load i8, i8* %22, align 4
  %24 = zext i8 %23 to i64
  %25 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %26, %18
  store i32 %27, i32* %25, align 4
  tail call void @free(i8* nonnull %14) #7
  br label %28

; <label>:28:                                     ; preds = %3, %7, %13
  %29 = getelementptr inbounds i8, i8* %0, i64 -12
  %30 = bitcast i8* %29 to %struct.r_malloc_chunk*
  %31 = bitcast %struct.r_malloc_chunk* %30 to %struct.r_malloc_chunk_*
  %32 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* @mem_usage, align 4
  %35 = sub i32 -16, %33
  %36 = add i32 %35, %34
  store i32 %36, i32* @mem_usage, align 4
  %37 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %31, i64 0, i32 1
  %38 = load i8, i8* %37, align 4
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %41, %33
  store i32 %42, i32* %40, align 4
  tail call void @free(i8* nonnull %29) #7
  br label %43

; <label>:43:                                     ; preds = %1, %28
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_zfree(%struct.Data_* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.Data_* %0, null
  br i1 %2, label %27, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %27, label %7

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 0, i64 %9, i1 false)
  %10 = load i8*, i8** %4, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %27, label %12

; <label>:12:                                     ; preds = %7
  %13 = getelementptr inbounds i8, i8* %10, i64 -12
  %14 = bitcast i8* %13 to %struct.r_malloc_chunk*
  %15 = bitcast %struct.r_malloc_chunk* %14 to %struct.r_malloc_chunk_*
  %16 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %15, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* @mem_usage, align 4
  %19 = sub i32 -16, %17
  %20 = add i32 %19, %18
  store i32 %20, i32* @mem_usage, align 4
  %21 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %15, i64 0, i32 1
  %22 = load i8, i8* %21, align 4
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %25, %17
  store i32 %26, i32* %24, align 4
  tail call void @free(i8* nonnull %13) #7
  br label %27

; <label>:27:                                     ; preds = %12, %7, %3, %1
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_destroy_vp(i8**) local_unnamed_addr #0 {
  %2 = icmp eq i8** %0, null
  br i1 %2, label %46, label %3

; <label>:3:                                      ; preds = %1
  %4 = load i8*, i8** %0, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %46, label %6

; <label>:6:                                      ; preds = %3
  %7 = bitcast i8* %4 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %31, label %10

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds i8, i8* %4, i64 8
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 0, i64 %13, i1 false) #7
  %14 = load i8*, i8** %7, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %31, label %16

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds i8, i8* %14, i64 -12
  %18 = bitcast i8* %17 to %struct.r_malloc_chunk*
  %19 = bitcast %struct.r_malloc_chunk* %18 to %struct.r_malloc_chunk_*
  %20 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* @mem_usage, align 4
  %23 = sub i32 -16, %21
  %24 = add i32 %23, %22
  store i32 %24, i32* @mem_usage, align 4
  %25 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %19, i64 0, i32 1
  %26 = load i8, i8* %25, align 4
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 %29, %21
  store i32 %30, i32* %28, align 4
  tail call void @free(i8* nonnull %17) #7
  br label %31

; <label>:31:                                     ; preds = %6, %10, %16
  store i8* null, i8** %0, align 8
  %32 = getelementptr inbounds i8, i8* %4, i64 -12
  %33 = bitcast i8* %32 to %struct.r_malloc_chunk*
  %34 = bitcast %struct.r_malloc_chunk* %33 to %struct.r_malloc_chunk_*
  %35 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* @mem_usage, align 4
  %38 = sub i32 -16, %36
  %39 = add i32 %38, %37
  store i32 %39, i32* @mem_usage, align 4
  %40 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %34, i64 0, i32 1
  %41 = load i8, i8* %40, align 4
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sub i32 %44, %36
  store i32 %45, i32* %43, align 4
  tail call void @free(i8* nonnull %32) #7
  br label %46

; <label>:46:                                     ; preds = %1, %3, %31
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_data_copy(%struct.Data_* nocapture, %struct.Data_* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.Data_, %struct.Data_* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 16
  %6 = tail call noalias i8* @malloc(i64 %5) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  store i8* null, i8** %9, align 8
  br label %27

; <label>:10:                                     ; preds = %2
  %11 = bitcast i8* %6 to i32*
  store i32 1179402567, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 0, i8* %12, align 4
  %13 = trunc i64 %4 to i32
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 4
  %16 = load i32, i32* @mem_usage, align 4
  %17 = trunc i64 %5 to i32
  %18 = add i32 %16, %17
  store i32 %18, i32* @mem_usage, align 4
  %19 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %20 = add i32 %19, %13
  store i32 %20, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %21 = getelementptr inbounds i8, i8* %6, i64 12
  %22 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %struct.Data_, %struct.Data_* %1, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = load i64, i64* %3, align 8
  %26 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 %24, i64 %25, i1 false)
  br label %27

; <label>:27:                                     ; preds = %8, %10
  %28 = phi i32 [ 0, %10 ], [ 1, %8 ]
  ret i32 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: nounwind readonly sspstrong uwtable
define hidden i32 @r_data_compare(%struct.Data_* nocapture readonly, %struct.Data_* nocapture readonly) local_unnamed_addr #12 {
  %3 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.Data_, %struct.Data_* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, %4
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %2
  %9 = getelementptr inbounds %struct.Data_, %struct.Data_* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.Data_, %struct.Data_* %1, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @memcmp(i8* %10, i8* %12, i64 %4) #16
  br label %14

; <label>:14:                                     ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -1, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: noreturn nounwind sspstrong uwtable
define hidden i32 @nr_verr_exit(i8*, ...) local_unnamed_addr #14 {
  %2 = alloca [1 x %struct.__va_list_tag], align 16
  %3 = bitcast [1 x %struct.__va_list_tag]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %2, i64 0, i64 0
  call void @llvm.va_start(i8* nonnull %3)
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = call i32 @__vfprintf_chk(%struct._IO_FILE* %5, i32 1, i8* %0, %struct.__va_list_tag* nonnull %4) #7
  %7 = load i8, i8* %0, align 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %18, label %9

; <label>:9:                                      ; preds = %1
  %10 = call i64 @strlen(i8* nonnull %0) #16
  %11 = add i64 %10, -1
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 10
  br i1 %14, label %18, label %15

; <label>:15:                                     ; preds = %9
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %17 = call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %16, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #7
  br label %18

; <label>:18:                                     ; preds = %9, %1, %15
  call void @exit(i32 1) #18
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #15

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @nr_strerror_r(i32, i8*, i64) local_unnamed_addr #0 {
  %4 = add i32 %0, -1
  %5 = icmp ult i32 %4, 15
  br i1 %5, label %6, label %10

; <label>:6:                                      ; preds = %3
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [15 x %struct.anon.8], [15 x %struct.anon.8]* @errors, i64 0, i64 %7, i32 1
  %9 = load i8*, i8** %8, align 8
  br label %12

; <label>:10:                                     ; preds = %3
  %11 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @nr_strerror.unknown_error, i64 0, i64 0), i64 256, i32 1, i64 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0), i32 %0) #7
  br label %12

; <label>:12:                                     ; preds = %6, %10
  %13 = phi i8* [ %9, %6 ], [ getelementptr inbounds ([256 x i8], [256 x i8]* @nr_strerror.unknown_error, i64 0, i64 0), %10 ]
  %14 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %1, i1 false, i1 true)
  %15 = tail call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %1, i64 %2, i32 1, i64 %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %13) #7
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_list_create(%struct.r_list_** nocapture) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 32) #7
  %3 = icmp eq i8* %2, null
  br i1 %3, label %15, label %4

; <label>:4:                                      ; preds = %1
  %5 = bitcast i8* %2 to i32*
  store i32 1179402567, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds i8, i8* %2, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 16, i32* %8, align 4
  %9 = load i32, i32* @mem_usage, align 4
  %10 = add i32 %9, 32
  store i32 %10, i32* @mem_usage, align 4
  %11 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %12 = add i32 %11, 16
  store i32 %12, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %13 = getelementptr inbounds i8, i8* %2, i64 12
  %14 = bitcast %struct.r_list_** %0 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  store i8* %13, i8** %14, align 8
  br label %15

; <label>:15:                                     ; preds = %1, %4
  %16 = phi i32 [ 0, %4 ], [ 1, %1 ]
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_list_destroy(%struct.r_list_**) local_unnamed_addr #0 {
  %2 = icmp eq %struct.r_list_** %0, null
  br i1 %2, label %56, label %3

; <label>:3:                                      ; preds = %1
  %4 = load %struct.r_list_*, %struct.r_list_** %0, align 8
  %5 = icmp eq %struct.r_list_* %4, null
  br i1 %5, label %56, label %6

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.r_list_, %struct.r_list_* %4, i64 0, i32 0
  %8 = load %struct.r_list_el_*, %struct.r_list_el_** %7, align 8
  %9 = icmp eq %struct.r_list_el_* %8, null
  br i1 %9, label %40, label %10

; <label>:10:                                     ; preds = %6, %22
  %11 = phi %struct.r_list_el_* [ %24, %22 ], [ %8, %6 ]
  %12 = bitcast %struct.r_list_el_* %11 to i8*
  %13 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %11, i64 0, i32 4
  %14 = load i32 (i8**)*, i32 (i8**)** %13, align 8
  %15 = icmp eq i32 (i8**)* %14, null
  br i1 %15, label %22, label %16

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %11, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

; <label>:20:                                     ; preds = %16
  %21 = tail call i32 %14(i8** nonnull %17) #7
  br label %22

; <label>:22:                                     ; preds = %16, %10, %20
  %23 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %11, i64 0, i32 1
  %24 = load %struct.r_list_el_*, %struct.r_list_el_** %23, align 8
  %25 = getelementptr inbounds i8, i8* %12, i64 -12
  %26 = bitcast i8* %25 to %struct.r_malloc_chunk*
  %27 = bitcast %struct.r_malloc_chunk* %26 to %struct.r_malloc_chunk_*
  %28 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %27, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* @mem_usage, align 4
  %31 = sub i32 -16, %29
  %32 = add i32 %31, %30
  store i32 %32, i32* @mem_usage, align 4
  %33 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %27, i64 0, i32 1
  %34 = load i8, i8* %33, align 4
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = sub i32 %37, %29
  store i32 %38, i32* %36, align 4
  tail call void @free(i8* nonnull %25) #7
  %39 = icmp eq %struct.r_list_el_* %24, null
  br i1 %39, label %40, label %10

; <label>:40:                                     ; preds = %22, %6
  %41 = bitcast %struct.r_list_* %4 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 -12
  %43 = bitcast i8* %42 to %struct.r_malloc_chunk*
  %44 = bitcast %struct.r_malloc_chunk* %43 to %struct.r_malloc_chunk_*
  %45 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* @mem_usage, align 4
  %48 = sub i32 -16, %46
  %49 = add i32 %48, %47
  store i32 %49, i32* @mem_usage, align 4
  %50 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %44, i64 0, i32 1
  %51 = load i8, i8* %50, align 4
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = sub i32 %54, %46
  store i32 %55, i32* %53, align 4
  tail call void @free(i8* nonnull %42) #7
  store %struct.r_list_* null, %struct.r_list_** %0, align 8
  br label %56

; <label>:56:                                     ; preds = %1, %3, %40
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_list_copy(%struct.r_list_** nocapture, %struct.r_list_* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.r_list_* %1, null
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %2
  store %struct.r_list_* null, %struct.r_list_** %0, align 8
  br label %142

; <label>:5:                                      ; preds = %2
  %6 = tail call noalias i8* @malloc(i64 32) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %142, label %8

; <label>:8:                                      ; preds = %5
  %9 = bitcast i8* %6 to i32*
  store i32 1179402567, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 16, i32* %12, align 4
  %13 = load i32, i32* @mem_usage, align 4
  %14 = add i32 %13, 32
  store i32 %14, i32* @mem_usage, align 4
  %15 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %16 = add i32 %15, 16
  store i32 %16, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %17 = getelementptr inbounds i8, i8* %6, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #7
  %18 = getelementptr inbounds %struct.r_list_, %struct.r_list_* %1, i64 0, i32 0
  %19 = load %struct.r_list_el_*, %struct.r_list_el_** %18, align 8
  %20 = icmp eq %struct.r_list_el_* %19, null
  br i1 %20, label %88, label %21

; <label>:21:                                     ; preds = %8
  %22 = bitcast i8* %17 to %struct.r_list_el_**
  %23 = bitcast i8* %17 to i8**
  br label %24

; <label>:24:                                     ; preds = %21, %82
  %25 = phi %struct.r_list_el_* [ null, %21 ], [ %74, %82 ]
  %26 = phi %struct.r_list_el_* [ null, %21 ], [ %75, %82 ]
  %27 = phi %struct.r_list_el_* [ %19, %21 ], [ %84, %82 ]
  %28 = phi %struct.r_list_el_* [ null, %21 ], [ %41, %82 ]
  %29 = tail call noalias i8* @malloc(i64 56) #7
  %30 = icmp eq i8* %29, null
  br i1 %30, label %94, label %31

; <label>:31:                                     ; preds = %24
  %32 = bitcast i8* %29 to i32*
  store i32 1179402567, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds i8, i8* %29, i64 8
  %35 = bitcast i8* %34 to i32*
  store i32 40, i32* %35, align 4
  %36 = load i32, i32* @mem_usage, align 4
  %37 = add i32 %36, 56
  store i32 %37, i32* @mem_usage, align 4
  %38 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %39 = add i32 %38, 40
  store i32 %39, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %40 = getelementptr inbounds i8, i8* %29, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %40, i8 0, i64 40, i1 false) #7
  %41 = bitcast i8* %40 to %struct.r_list_el_*
  %42 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %27, i64 0, i32 3
  %43 = load i32 (i8**, i8*)*, i32 (i8**, i8*)** %42, align 8
  %44 = icmp eq i32 (i8**, i8*)* %43, null
  %45 = ptrtoint i32 (i8**, i8*)* %43 to i64
  br i1 %44, label %60, label %46

; <label>:46:                                     ; preds = %31
  %47 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %27, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %60, label %50

; <label>:50:                                     ; preds = %46
  %51 = bitcast i8* %40 to i8**
  %52 = tail call i32 %43(i8** nonnull %51, i8* nonnull %48) #7
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

; <label>:54:                                     ; preds = %50
  %55 = load %struct.r_list_el_*, %struct.r_list_el_** %22, align 8
  br label %94

; <label>:56:                                     ; preds = %50
  %57 = bitcast i32 (i8**, i8*)** %42 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = load %struct.r_list_el_*, %struct.r_list_el_** %22, align 8
  br label %60

; <label>:60:                                     ; preds = %56, %46, %31
  %61 = phi %struct.r_list_el_* [ %59, %56 ], [ %25, %46 ], [ %25, %31 ]
  %62 = phi %struct.r_list_el_* [ %59, %56 ], [ %26, %46 ], [ %26, %31 ]
  %63 = phi i64 [ %58, %56 ], [ %45, %46 ], [ %45, %31 ]
  %64 = getelementptr inbounds i8, i8* %29, i64 36
  %65 = bitcast i8* %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %27, i64 0, i32 4
  %67 = bitcast i32 (i8**)** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds i8, i8* %29, i64 44
  %70 = bitcast i8* %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = icmp eq %struct.r_list_el_* %62, null
  br i1 %71, label %72, label %73

; <label>:72:                                     ; preds = %60
  store i8* %40, i8** %23, align 8
  br label %73

; <label>:73:                                     ; preds = %60, %72
  %74 = phi %struct.r_list_el_* [ %61, %60 ], [ %41, %72 ]
  %75 = phi %struct.r_list_el_* [ %62, %60 ], [ %41, %72 ]
  %76 = getelementptr inbounds i8, i8* %29, i64 28
  %77 = bitcast i8* %76 to %struct.r_list_el_**
  store %struct.r_list_el_* %28, %struct.r_list_el_** %77, align 8
  %78 = icmp eq %struct.r_list_el_* %28, null
  br i1 %78, label %82, label %79

; <label>:79:                                     ; preds = %73
  %80 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %28, i64 0, i32 1
  %81 = bitcast %struct.r_list_el_** %80 to i8**
  store i8* %40, i8** %81, align 8
  br label %82

; <label>:82:                                     ; preds = %73, %79
  %83 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %27, i64 0, i32 1
  %84 = load %struct.r_list_el_*, %struct.r_list_el_** %83, align 8
  %85 = icmp eq %struct.r_list_el_* %84, null
  br i1 %85, label %86, label %24

; <label>:86:                                     ; preds = %82
  %87 = bitcast i8* %40 to %struct.r_list_el_*
  br label %88

; <label>:88:                                     ; preds = %86, %8
  %89 = phi %struct.r_list_el_* [ null, %8 ], [ %87, %86 ]
  %90 = getelementptr inbounds i8, i8* %6, i64 20
  %91 = bitcast i8* %90 to %struct.r_list_el_**
  store %struct.r_list_el_* %89, %struct.r_list_el_** %91, align 8
  %92 = ptrtoint i8* %17 to i64
  %93 = bitcast %struct.r_list_** %0 to i64*
  store i64 %92, i64* %93, align 8
  br label %142

; <label>:94:                                     ; preds = %24, %54
  %95 = phi %struct.r_list_el_* [ %55, %54 ], [ %25, %24 ]
  %96 = phi i32 [ %52, %54 ], [ 1, %24 ]
  %97 = icmp eq %struct.r_list_el_* %95, null
  br i1 %97, label %128, label %98

; <label>:98:                                     ; preds = %94, %110
  %99 = phi %struct.r_list_el_* [ %112, %110 ], [ %95, %94 ]
  %100 = bitcast %struct.r_list_el_* %99 to i8*
  %101 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %99, i64 0, i32 4
  %102 = load i32 (i8**)*, i32 (i8**)** %101, align 8
  %103 = icmp eq i32 (i8**)* %102, null
  br i1 %103, label %110, label %104

; <label>:104:                                    ; preds = %98
  %105 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %99, i64 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %110, label %108

; <label>:108:                                    ; preds = %104
  %109 = tail call i32 %102(i8** nonnull %105) #7
  br label %110

; <label>:110:                                    ; preds = %108, %104, %98
  %111 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %99, i64 0, i32 1
  %112 = load %struct.r_list_el_*, %struct.r_list_el_** %111, align 8
  %113 = getelementptr inbounds i8, i8* %100, i64 -12
  %114 = bitcast i8* %113 to %struct.r_malloc_chunk*
  %115 = bitcast %struct.r_malloc_chunk* %114 to %struct.r_malloc_chunk_*
  %116 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %115, i64 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* @mem_usage, align 4
  %119 = sub i32 -16, %117
  %120 = add i32 %119, %118
  store i32 %120, i32* @mem_usage, align 4
  %121 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %115, i64 0, i32 1
  %122 = load i8, i8* %121, align 4
  %123 = zext i8 %122 to i64
  %124 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = sub i32 %125, %117
  store i32 %126, i32* %124, align 4
  tail call void @free(i8* nonnull %113) #7
  %127 = icmp eq %struct.r_list_el_* %112, null
  br i1 %127, label %128, label %98

; <label>:128:                                    ; preds = %110, %94
  %129 = bitcast i8* %6 to %struct.r_malloc_chunk*
  %130 = bitcast %struct.r_malloc_chunk* %129 to %struct.r_malloc_chunk_*
  %131 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %130, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = load i32, i32* @mem_usage, align 4
  %134 = sub i32 -16, %132
  %135 = add i32 %134, %133
  store i32 %135, i32* @mem_usage, align 4
  %136 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %130, i64 0, i32 1
  %137 = load i8, i8* %136, align 4
  %138 = zext i8 %137 to i64
  %139 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = sub i32 %140, %132
  store i32 %141, i32* %139, align 4
  tail call void @free(i8* nonnull %6) #7
  br label %142

; <label>:142:                                    ; preds = %128, %5, %88, %4
  %143 = phi i32 [ 0, %4 ], [ 0, %88 ], [ %96, %128 ], [ 1, %5 ]
  ret i32 %143
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_list_insert(%struct.r_list_* nocapture, i8*, i32 (i8**, i8*)*, i32 (i8**)*) local_unnamed_addr #0 {
  %5 = tail call noalias i8* @malloc(i64 56) #7
  %6 = icmp eq i8* %5, null
  br i1 %6, label %35, label %7

; <label>:7:                                      ; preds = %4
  %8 = bitcast i8* %5 to i32*
  store i32 1179402567, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 40, i32* %11, align 4
  %12 = load i32, i32* @mem_usage, align 4
  %13 = add i32 %12, 56
  store i32 %13, i32* @mem_usage, align 4
  %14 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %15 = add i32 %14, 40
  store i32 %15, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %16 = getelementptr inbounds i8, i8* %5, i64 12
  %17 = bitcast i8* %16 to i8**
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 36
  %19 = bitcast i8* %18 to i32 (i8**, i8*)**
  store i32 (i8**, i8*)* %2, i32 (i8**, i8*)** %19, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 44
  %21 = bitcast i8* %20 to i32 (i8**)**
  store i32 (i8**)* %3, i32 (i8**)** %21, align 8
  %22 = getelementptr inbounds i8, i8* %5, i64 28
  %23 = bitcast i8* %22 to %struct.r_list_el_**
  store %struct.r_list_el_* null, %struct.r_list_el_** %23, align 8
  %24 = bitcast %struct.r_list_* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %5, i64 20
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq i64 %25, 0
  br i1 %28, label %33, label %29

; <label>:29:                                     ; preds = %7
  %30 = inttoptr i64 %25 to %struct.r_list_el_*
  %31 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %30, i64 0, i32 2
  %32 = bitcast %struct.r_list_el_** %31 to i8**
  store i8* %16, i8** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %7, %29
  %34 = bitcast %struct.r_list_* %0 to i8**
  store i8* %16, i8** %34, align 8
  br label %35

; <label>:35:                                     ; preds = %4, %33
  %36 = phi i32 [ 0, %33 ], [ 1, %4 ]
  ret i32 %36
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_list_append(%struct.r_list_* nocapture, i8*, i32 (i8**, i8*)*, i32 (i8**)*) local_unnamed_addr #0 {
  %5 = tail call noalias i8* @malloc(i64 56) #7
  %6 = icmp eq i8* %5, null
  br i1 %6, label %36, label %7

; <label>:7:                                      ; preds = %4
  %8 = bitcast i8* %5 to i32*
  store i32 1179402567, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 40, i32* %11, align 4
  %12 = load i32, i32* @mem_usage, align 4
  %13 = add i32 %12, 56
  store i32 %13, i32* @mem_usage, align 4
  %14 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %15 = add i32 %14, 40
  store i32 %15, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %16 = getelementptr inbounds i8, i8* %5, i64 12
  %17 = bitcast i8* %16 to i8**
  store i8* %1, i8** %17, align 8
  %18 = getelementptr inbounds i8, i8* %5, i64 36
  %19 = bitcast i8* %18 to i32 (i8**, i8*)**
  store i32 (i8**, i8*)* %2, i32 (i8**, i8*)** %19, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 44
  %21 = bitcast i8* %20 to i32 (i8**)**
  store i32 (i8**)* %3, i32 (i8**)** %21, align 8
  %22 = getelementptr inbounds %struct.r_list_, %struct.r_list_* %0, i64 0, i32 1
  %23 = bitcast %struct.r_list_el_** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %5, i64 28
  %26 = bitcast i8* %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %5, i64 20
  %28 = bitcast i8* %27 to %struct.r_list_el_**
  store %struct.r_list_el_* null, %struct.r_list_el_** %28, align 8
  %29 = icmp eq i64 %24, 0
  %30 = bitcast %struct.r_list_* %0 to i8**
  %31 = inttoptr i64 %24 to %struct.r_list_el_*
  %32 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %31, i64 0, i32 1
  %33 = bitcast %struct.r_list_el_** %32 to i8**
  %34 = select i1 %29, i8** %30, i8** %33
  store i8* %16, i8** %34, align 8
  %35 = bitcast %struct.r_list_el_** %22 to i8**
  store i8* %16, i8** %35, align 8
  br label %36

; <label>:36:                                     ; preds = %4, %7
  %37 = phi i32 [ 0, %7 ], [ 1, %4 ]
  ret i32 %37
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_list_init_iter(%struct.r_list_*, %struct.r_list_iterator_* nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.r_list_iterator_, %struct.r_list_iterator_* %1, i64 0, i32 0
  store %struct.r_list_* %0, %struct.r_list_** %3, align 8
  %4 = bitcast %struct.r_list_* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.r_list_iterator_, %struct.r_list_iterator_* %1, i64 0, i32 1
  %7 = bitcast %struct.r_list_el_** %6 to i64*
  store i64 %5, i64* %7, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_list_iter(%struct.r_list_iterator_* nocapture, i8** nocapture) local_unnamed_addr #6 {
  %3 = getelementptr inbounds %struct.r_list_iterator_, %struct.r_list_iterator_* %0, i64 0, i32 1
  %4 = load %struct.r_list_el_*, %struct.r_list_el_** %3, align 8
  %5 = icmp eq %struct.r_list_el_* %4, null
  br i1 %5, label %15, label %6

; <label>:6:                                      ; preds = %2
  %7 = bitcast %struct.r_list_el_* %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast i8** %1 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load %struct.r_list_el_*, %struct.r_list_el_** %3, align 8
  %11 = getelementptr inbounds %struct.r_list_el_, %struct.r_list_el_* %10, i64 0, i32 1
  %12 = bitcast %struct.r_list_el_** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.r_list_el_** %3 to i64*
  store i64 %13, i64* %14, align 8
  br label %15

; <label>:15:                                     ; preds = %2, %6
  %16 = phi i32 [ 0, %6 ], [ 5, %2 ]
  ret i32 %16
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind sspstrong uwtable
define hidden noalias i8* @r_realloc(i8*, i64) local_unnamed_addr #0 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %20

; <label>:4:                                      ; preds = %2
  %5 = add i64 %1, 16
  %6 = tail call noalias i8* @malloc(i64 %5) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %43, label %8

; <label>:8:                                      ; preds = %4
  %9 = bitcast i8* %6 to i32*
  store i32 1179402567, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %6, i64 4
  store i8 -1, i8* %10, align 4
  %11 = trunc i64 %1 to i32
  %12 = getelementptr inbounds i8, i8* %6, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %11, i32* %13, align 4
  %14 = load i32, i32* @mem_usage, align 4
  %15 = trunc i64 %5 to i32
  %16 = add i32 %14, %15
  store i32 %16, i32* @mem_usage, align 4
  %17 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 255), align 4
  %18 = add i32 %17, %11
  store i32 %18, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 255), align 4
  %19 = getelementptr inbounds i8, i8* %6, i64 12
  br label %43

; <label>:20:                                     ; preds = %2
  %21 = getelementptr inbounds i8, i8* %0, i64 -12
  %22 = add i64 %1, 16
  %23 = tail call i8* @realloc(i8* nonnull %21, i64 %22) #7
  %24 = icmp eq i8* %23, null
  br i1 %24, label %43, label %25

; <label>:25:                                     ; preds = %20
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* @mem_usage, align 4
  %30 = sub i32 -16, %28
  %31 = add i32 %30, %29
  %32 = getelementptr inbounds i8, i8* %23, i64 4
  %33 = load i8, i8* %32, align 4
  %34 = zext i8 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %36, %28
  %38 = trunc i64 %1 to i32
  store i32 %38, i32* %27, align 4
  %39 = add i32 %38, 16
  %40 = add i32 %39, %31
  store i32 %40, i32* @mem_usage, align 4
  %41 = add i32 %37, %38
  store i32 %41, i32* %35, align 4
  %42 = getelementptr inbounds i8, i8* %23, i64 12
  br label %43

; <label>:43:                                     ; preds = %8, %4, %20, %25
  %44 = phi i8* [ %42, %25 ], [ null, %20 ], [ %19, %8 ], [ null, %4 ]
  ret i8* %44
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_mem_get_usage(i32* nocapture) local_unnamed_addr #6 {
  %2 = load i32, i32* @mem_usage, align 4
  store i32 %2, i32* %0, align 4
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_memory_dump_stats() local_unnamed_addr #0 {
  %1 = load i32, i32* @mem_usage, align 4
  %2 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i64 0, i64 0), i32 %1) #7
  %3 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.40, i64 0, i64 0)) #7
  br label %4

; <label>:4:                                      ; preds = %12, %0
  %5 = phi i64 [ 0, %0 ], [ %13, %12 ]
  %6 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

; <label>:9:                                      ; preds = %4
  %10 = trunc i64 %5 to i32
  %11 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i32 %10, i32 %7) #7
  br label %12

; <label>:12:                                     ; preds = %4, %9
  %13 = add nuw nsw i64 %5, 1
  %14 = icmp eq i64 %13, 256
  br i1 %14, label %15, label %4

; <label>:15:                                     ; preds = %12
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden noalias i8* @r_malloc_compat(i64) local_unnamed_addr #0 {
  %2 = add i64 %0, 16
  %3 = tail call noalias i8* @malloc(i64 %2) #7
  %4 = icmp eq i8* %3, null
  br i1 %4, label %17, label %5

; <label>:5:                                      ; preds = %1
  %6 = bitcast i8* %3 to i32*
  store i32 1179402567, i32* %6, align 4
  %7 = getelementptr inbounds i8, i8* %3, i64 4
  store i8 -1, i8* %7, align 4
  %8 = trunc i64 %0 to i32
  %9 = getelementptr inbounds i8, i8* %3, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 %8, i32* %10, align 4
  %11 = load i32, i32* @mem_usage, align 4
  %12 = trunc i64 %2 to i32
  %13 = add i32 %11, %12
  store i32 %13, i32* @mem_usage, align 4
  %14 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 255), align 4
  %15 = add i32 %14, %8
  store i32 %15, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 255), align 4
  %16 = getelementptr inbounds i8, i8* %3, i64 12
  br label %17

; <label>:17:                                     ; preds = %1, %5
  %18 = phi i8* [ %16, %5 ], [ null, %1 ]
  ret i8* %18
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_timeval_diff(%struct.timeval* nocapture readonly, %struct.timeval* nocapture readonly, %struct.timeval* nocapture) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, %5
  br i1 %8, label %35, label %9

; <label>:9:                                      ; preds = %3
  %10 = icmp eq i64 %7, %5
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %12, %14
  %16 = and i1 %10, %15
  br i1 %16, label %35, label %17

; <label>:17:                                     ; preds = %9
  %18 = icmp slt i64 %14, %12
  br i1 %18, label %26, label %19

; <label>:19:                                     ; preds = %17
  %20 = sub nsw i64 %7, %5
  %21 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = load i64, i64* %13, align 8
  %23 = load i64, i64* %11, align 8
  %24 = sub nsw i64 %22, %23
  %25 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  store i64 %24, i64* %25, align 8
  br label %35

; <label>:26:                                     ; preds = %17
  %27 = icmp sgt i64 %7, %5
  br i1 %27, label %28, label %35

; <label>:28:                                     ; preds = %26
  %29 = xor i64 %5, -1
  %30 = add i64 %7, %29
  %31 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = sub i64 1000000, %12
  %33 = add i64 %32, %14
  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  store i64 %33, i64* %34, align 8
  br label %35

; <label>:35:                                     ; preds = %9, %26, %3, %28, %19
  %36 = phi i32 [ 0, %19 ], [ 0, %28 ], [ 6, %3 ], [ 6, %26 ], [ 6, %9 ]
  ret i32 %36
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_timeval_add(%struct.timeval* nocapture readonly, %struct.timeval* nocapture readonly, %struct.timeval* nocapture) local_unnamed_addr #6 {
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %5
  %9 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, %10
  %14 = icmp sgt i64 %13, 1000000
  %15 = add nsw i64 %13, -1000000
  %16 = select i1 %14, i64 %15, i64 %13
  %17 = zext i1 %14 to i64
  %18 = add nsw i64 %8, %17
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0, i32 1
  store i64 %16, i64* %20, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly sspstrong uwtable
define hidden i32 @r_timeval_cmp(%struct.timeval* nocapture readonly, %struct.timeval* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp sgt i64 %4, %6
  br i1 %7, label %19, label %8

; <label>:8:                                      ; preds = %2
  %9 = icmp slt i64 %4, %6
  br i1 %9, label %19, label %10

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %12, %14
  br i1 %15, label %19, label %16

; <label>:16:                                     ; preds = %10
  %17 = icmp slt i64 %12, %14
  %18 = sext i1 %17 to i32
  br label %19

; <label>:19:                                     ; preds = %16, %10, %8, %2
  %20 = phi i32 [ 1, %2 ], [ -1, %8 ], [ 1, %10 ], [ %18, %16 ]
  ret i32 %20
}

; Function Attrs: norecurse nounwind readonly sspstrong uwtable
define hidden i64 @r_timeval2int(%struct.timeval* nocapture readonly) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = mul i64 %3, 1000000
  %5 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %4, %6
  ret i64 %7
}

; Function Attrs: norecurse nounwind sspstrong uwtable
define hidden i32 @r_int2timeval(i64, %struct.timeval* nocapture) local_unnamed_addr #6 {
  %3 = udiv i64 %0, 1000000
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  store i64 %3, i64* %4, align 8
  %5 = urem i64 %0, 1000000
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  store i64 %5, i64* %6, align 8
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i64 @r_gettimeint() local_unnamed_addr #0 {
  %1 = alloca %struct.timeval, align 8
  %2 = bitcast %struct.timeval* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #7
  %3 = call i32 @gettimeofday(%struct.timeval* nonnull %1, %struct.timezone* null) #7
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = mul i64 %5, 1000000
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %6, %8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #7
  ret i64 %9
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval* nocapture, %struct.timezone* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_timeval_diff_usec(%struct.timeval* nocapture readonly, %struct.timeval* nocapture readonly, i64* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, %5
  br i1 %8, label %28, label %9

; <label>:9:                                      ; preds = %3
  %10 = icmp eq i64 %7, %5
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, %12
  %16 = and i1 %10, %15
  br i1 %16, label %28, label %17

; <label>:17:                                     ; preds = %9
  br i1 %15, label %21, label %18

; <label>:18:                                     ; preds = %17
  %19 = sub nsw i64 %7, %5
  %20 = sub nsw i64 %14, %12
  br label %48

; <label>:21:                                     ; preds = %17
  %22 = icmp sgt i64 %7, %5
  br i1 %22, label %23, label %28

; <label>:23:                                     ; preds = %21
  %24 = xor i64 %5, -1
  %25 = add i64 %7, %24
  %26 = sub i64 1000000, %12
  %27 = add i64 %26, %14
  br label %48

; <label>:28:                                     ; preds = %3, %21, %9
  %29 = icmp slt i64 %5, %7
  br i1 %29, label %55, label %30

; <label>:30:                                     ; preds = %28
  %31 = icmp eq i64 %5, %7
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %35, %33
  %37 = and i1 %31, %36
  br i1 %37, label %55, label %38

; <label>:38:                                     ; preds = %30
  br i1 %36, label %42, label %39

; <label>:39:                                     ; preds = %38
  %40 = sub nsw i64 %5, %7
  %41 = sub nsw i64 %35, %33
  br label %48

; <label>:42:                                     ; preds = %38
  br i1 %8, label %43, label %55

; <label>:43:                                     ; preds = %42
  %44 = xor i64 %7, -1
  %45 = add i64 %5, %44
  %46 = sub i64 1000000, %33
  %47 = add i64 %46, %35
  br label %48

; <label>:48:                                     ; preds = %43, %39, %23, %18
  %49 = phi i64 [ %27, %23 ], [ %20, %18 ], [ %47, %43 ], [ %41, %39 ]
  %50 = phi i64 [ %25, %23 ], [ %19, %18 ], [ %45, %43 ], [ %40, %39 ]
  %51 = phi i64 [ 1, %23 ], [ 1, %18 ], [ -1, %43 ], [ -1, %39 ]
  %52 = mul nsw i64 %50, 1000000
  %53 = add nsw i64 %52, %49
  %54 = mul nsw i64 %53, %51
  store i64 %54, i64* %2, align 8
  br label %55

; <label>:55:                                     ; preds = %30, %42, %28, %48
  %56 = phi i32 [ 0, %48 ], [ 6, %28 ], [ 6, %42 ], [ 6, %30 ]
  ret i32 %56
}

; Function Attrs: nounwind sspstrong uwtable
define hidden i32 @r_timeval_diff_ms(%struct.timeval* nocapture readonly, %struct.timeval* nocapture readonly, i64* nocapture) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, %5
  br i1 %8, label %28, label %9

; <label>:9:                                      ; preds = %3
  %10 = icmp eq i64 %7, %5
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, %12
  %16 = and i1 %10, %15
  br i1 %16, label %28, label %17

; <label>:17:                                     ; preds = %9
  br i1 %15, label %21, label %18

; <label>:18:                                     ; preds = %17
  %19 = sub nsw i64 %7, %5
  %20 = sub nsw i64 %14, %12
  br label %48

; <label>:21:                                     ; preds = %17
  %22 = icmp sgt i64 %7, %5
  br i1 %22, label %23, label %28

; <label>:23:                                     ; preds = %21
  %24 = xor i64 %5, -1
  %25 = add i64 %7, %24
  %26 = sub i64 1000000, %12
  %27 = add i64 %26, %14
  br label %48

; <label>:28:                                     ; preds = %3, %21, %9
  %29 = icmp slt i64 %5, %7
  br i1 %29, label %56, label %30

; <label>:30:                                     ; preds = %28
  %31 = icmp eq i64 %5, %7
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %35, %33
  %37 = and i1 %31, %36
  br i1 %37, label %56, label %38

; <label>:38:                                     ; preds = %30
  br i1 %36, label %42, label %39

; <label>:39:                                     ; preds = %38
  %40 = sub nsw i64 %5, %7
  %41 = sub nsw i64 %35, %33
  br label %48

; <label>:42:                                     ; preds = %38
  br i1 %8, label %43, label %56

; <label>:43:                                     ; preds = %42
  %44 = xor i64 %7, -1
  %45 = add i64 %5, %44
  %46 = sub i64 1000000, %33
  %47 = add i64 %46, %35
  br label %48

; <label>:48:                                     ; preds = %43, %39, %23, %18
  %49 = phi i64 [ %27, %23 ], [ %20, %18 ], [ %47, %43 ], [ %41, %39 ]
  %50 = phi i64 [ %25, %23 ], [ %19, %18 ], [ %45, %43 ], [ %40, %39 ]
  %51 = phi i64 [ 1, %23 ], [ 1, %18 ], [ -1, %43 ], [ -1, %39 ]
  %52 = mul nsw i64 %50, 1000
  %53 = sdiv i64 %49, 1000
  %54 = add nsw i64 %52, %53
  %55 = mul nsw i64 %54, %51
  store i64 %55, i64* %2, align 8
  br label %56

; <label>:56:                                     ; preds = %30, %42, %28, %48
  %57 = phi i32 [ 0, %48 ], [ 6, %28 ], [ 6, %42 ], [ 6, %30 ]
  ret i32 %57
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @stderr_vlog(i32, i32, i8*, %struct.__va_list_tag*) #0 {
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = tail call i32 @__vfprintf_chk(%struct._IO_FILE* %5, i32 1, i8* %2, %struct.__va_list_tag* %3) #7
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %7, i32 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0)) #7
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @syslog_vlog(i32, i32, i8*, %struct.__va_list_tag*) #0 {
  %5 = or i32 %1, 128
  tail call void @__vsyslog_chk(i32 %5, i32 1, i8* %2, %struct.__va_list_tag* %3) #7
  ret i32 0
}

declare void @__vsyslog_chk(i32, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #9

; Function Attrs: nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #9

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @r_log_get_destinations(i32) unnamed_addr #0 {
  %2 = alloca [128 x i8], align 16
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0)) #7
  %6 = icmp eq i8* %5, null
  br i1 %6, label %20, label %7

; <label>:7:                                      ; preds = %1
  %8 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 0), align 16
  %9 = tail call i32 @strcmp(i8* nonnull %5, i8* %8) #16
  %10 = icmp eq i32 %9, 0
  %11 = zext i1 %10 to i32
  store i32 %11, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 0, i32 1), align 8
  %12 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 0), align 8
  %13 = tail call i32 @strcmp(i8* nonnull %5, i8* %12) #16
  %14 = icmp eq i32 %13, 0
  %15 = zext i1 %14 to i32
  store i32 %15, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 1, i32 1), align 8
  %16 = load i8*, i8** getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 0), align 16
  %17 = tail call i32 @strcmp(i8* nonnull %5, i8* %16) #16
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i32
  store i32 %19, i32* getelementptr inbounds ([3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 2, i32 1), align 8
  br label %63

; <label>:20:                                     ; preds = %1
  %21 = icmp eq i32 %0, 0
  br i1 %21, label %63, label %22

; <label>:22:                                     ; preds = %20
  %23 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %23) #7
  %24 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #7
  br label %25

; <label>:25:                                     ; preds = %22, %57
  %26 = phi i64 [ 0, %22 ], [ %60, %57 ]
  %27 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %26, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %23, i64 128, i32 1, i64 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i8* %28) #7
  %30 = icmp ugt i32 %29, 127
  br i1 %30, label %62, label %31

; <label>:31:                                     ; preds = %25
  %32 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %23, i8 signext 1, void (i8*, i8, i8*)* nonnull @r_log_default_level_change_cb, i8* null) #7
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %64, label %34

; <label>:34:                                     ; preds = %67, %64, %31
  %35 = call fastcc i32 @r_log_get_reg_level(i8* nonnull %23, i32* nonnull %3)
  switch i32 %35, label %62 [
    i32 0, label %36
    i32 2, label %38
  ]

; <label>:36:                                     ; preds = %34
  %37 = load i32, i32* %3, align 4
  br label %38

; <label>:38:                                     ; preds = %34, %36
  %39 = phi i32 [ %37, %36 ], [ -1, %34 ]
  %40 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %26, i32 2
  store i32 %39, i32* %40, align 4
  %41 = load i8*, i8** %27, align 8
  %42 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* nonnull %23, i64 128, i32 1, i64 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i64 0, i64 0), i8* %41) #7
  %43 = icmp ugt i32 %42, 127
  br i1 %43, label %62, label %44

; <label>:44:                                     ; preds = %38
  %45 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %23, i8 signext 1, void (i8*, i8, i8*)* nonnull @r_log_destination_change_cb, i8* null) #7
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %69, label %47

; <label>:47:                                     ; preds = %72, %69, %44
  %48 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %49 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %48, i64 0, i32 1
  %50 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %49, align 8
  %51 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %50, i64 0, i32 1
  %52 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %51, align 8
  %53 = call i32 %52(i8* nonnull %23, i8* nonnull %4) #7
  switch i32 %53, label %62 [
    i32 0, label %54
    i32 2, label %57
  ]

; <label>:54:                                     ; preds = %47
  %55 = load i8, i8* %4, align 1
  %56 = sext i8 %55 to i32
  br label %57

; <label>:57:                                     ; preds = %47, %54
  %58 = phi i32 [ %56, %54 ], [ 0, %47 ]
  %59 = getelementptr inbounds [3 x %struct.log_destination_], [3 x %struct.log_destination_]* @log_destinations, i64 0, i64 %26, i32 1
  store i32 %58, i32* %59, align 8
  %60 = add nuw nsw i64 %26, 1
  %61 = icmp ult i64 %60, 3
  br i1 %61, label %25, label %62

; <label>:62:                                     ; preds = %57, %47, %38, %34, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %23) #7
  br label %63

; <label>:63:                                     ; preds = %7, %62, %20
  ret void

; <label>:64:                                     ; preds = %31
  %65 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %23, i8 signext 4, void (i8*, i8, i8*)* nonnull @r_log_default_level_change_cb, i8* null) #7
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %34

; <label>:67:                                     ; preds = %64
  %68 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %23, i8 signext 2, void (i8*, i8, i8*)* nonnull @r_log_default_level_change_cb, i8* null) #7
  br label %34

; <label>:69:                                     ; preds = %44
  %70 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %23, i8 signext 4, void (i8*, i8, i8*)* nonnull @r_log_destination_change_cb, i8* null) #7
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %47

; <label>:72:                                     ; preds = %69
  %73 = call fastcc i32 @nr_reg_register_callback(i8* nonnull %23, i8 signext 2, void (i8*, i8, i8*)* nonnull @r_log_destination_change_cb, i8* null) #7
  br label %47
}

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal void @r_log_default_level_change_cb(i8* nocapture readnone, i8 signext, i8* nocapture readnone) #0 {
  tail call fastcc void @r_log_get_destinations(i32 1)
  ret void
}

; Function Attrs: nounwind sspstrong uwtable
define internal void @r_log_destination_change_cb(i8* nocapture readnone, i8 signext, i8* nocapture readnone) #0 {
  tail call fastcc void @r_log_get_destinations(i32 1)
  ret void
}

; Function Attrs: nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #9

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_init(%struct.nr_registry_module_* nocapture readnone) #0 {
  %2 = alloca %struct.r_assoc_*, align 8
  %3 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %4 = icmp eq %struct.r_assoc_* %3, null
  br i1 %4, label %5, label %50

; <label>:5:                                      ; preds = %1
  %6 = bitcast %struct.r_assoc_** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store %struct.r_assoc_* null, %struct.r_assoc_** %2, align 8
  %7 = tail call noalias i8* @malloc(i64 48) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11

; <label>:9:                                      ; preds = %5
  %10 = bitcast %struct.r_assoc_** %2 to i8**
  br label %32

; <label>:11:                                     ; preds = %5
  %12 = bitcast i8* %7 to i32*
  store i32 1179402567, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 4
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds i8, i8* %7, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 32, i32* %15, align 4
  %16 = load i32, i32* @mem_usage, align 4
  %17 = add i32 %16, 48
  store i32 %17, i32* @mem_usage, align 4
  %18 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %19 = add i32 %18, 32
  store i32 %19, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %20 = getelementptr inbounds i8, i8* %7, i64 12
  %21 = getelementptr inbounds i8, i8* %7, i64 28
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %21, i8 0, i64 16, i1 false) #7
  %22 = bitcast %struct.r_assoc_** %2 to i8**
  store i8* %20, i8** %22, align 8
  %23 = bitcast i8* %20 to i32*
  store i32 4096, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 12, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %7, i64 20
  %27 = bitcast i8* %26 to i32 (i8*, i32, i32)**
  store i32 (i8*, i32, i32)* @r_assoc_crc32_hash_compute, i32 (i8*, i32, i32)** %27, align 8
  %28 = tail call noalias i8* @malloc(i64 32784) #7
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %35

; <label>:30:                                     ; preds = %11
  %31 = bitcast i8* %21 to i8**
  br label %32

; <label>:32:                                     ; preds = %9, %30
  %33 = phi i8** [ %10, %9 ], [ %31, %30 ]
  store i8* null, i8** %33, align 8
  %34 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  br label %51

; <label>:35:                                     ; preds = %11
  %36 = ptrtoint i8* %20 to i64
  %37 = bitcast i8* %28 to i32*
  store i32 1179402567, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %28, i64 4
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds i8, i8* %28, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 32768, i32* %40, align 4
  %41 = add i32 %16, 32832
  store i32 %41, i32* @mem_usage, align 4
  %42 = add i32 %18, 32800
  store i32 %42, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %43 = getelementptr inbounds i8, i8* %28, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %43, i8 0, i64 32768, i1 false) #7
  %44 = bitcast i8* %21 to i8**
  store i8* %43, i8** %44, align 8
  store i64 %36, i64* bitcast (%struct.r_assoc_** @nr_registry to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %45 = tail call i32 @nr_reg_cb_init()
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %51

; <label>:47:                                     ; preds = %35
  %48 = tail call fastcc i32 @nr_reg_set(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @NR_TOP_LEVEL_REGISTRY, i64 0, i64 0), i32 11, i8* null) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

; <label>:50:                                     ; preds = %47, %1
  br label %51

; <label>:51:                                     ; preds = %32, %50, %35, %47
  %52 = phi i32 [ 0, %50 ], [ 1, %32 ], [ %45, %35 ], [ %48, %47 ]
  ret i32 %52
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_char(i8*, i8* nocapture) #0 {
  %3 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 0, i8* %1)
  ret i32 %3
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_uchar(i8*, i8* nocapture) #0 {
  %3 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 1, i8* %1)
  ret i32 %3
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_int2(i8*, i16* nocapture) #0 {
  %3 = bitcast i16* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 2, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_uint2(i8*, i16* nocapture) #0 {
  %3 = bitcast i16* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 3, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_int4(i8*, i32* nocapture) #0 {
  %3 = bitcast i32* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 4, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_uint4(i8*, i32* nocapture) #0 {
  %3 = bitcast i32* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 5, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_int8(i8*, i64* nocapture) #0 {
  %3 = bitcast i64* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 6, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_uint8(i8*, i64* nocapture) #0 {
  %3 = bitcast i64* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 7, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_double(i8*, double* nocapture) #0 {
  %3 = bitcast double* %1 to i8*
  %4 = tail call fastcc i32 @nr_reg_get(i8* %0, i32 8, i8* %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_registry(i8*, i8*) #0 {
  %3 = alloca %struct.nr_scalar_registry_node_*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %struct.nr_scalar_registry_node_** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store %struct.nr_scalar_registry_node_* null, %struct.nr_scalar_registry_node_** %3, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  store i32 0, i32* %4, align 4
  %7 = bitcast %struct.nr_scalar_registry_node_** %3 to %struct.nr_registry_node_**
  %8 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext 11, %struct.nr_registry_node_** nonnull %7, i32* nonnull %4)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

; <label>:10:                                     ; preds = %2
  %11 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %1, i1 false, i1 true) #7
  %12 = tail call i8* @__strncpy_chk(i8* nonnull %1, i8* nonnull %0, i64 128, i64 %11) #7
  br label %13

; <label>:13:                                     ; preds = %2, %10
  %14 = load i32, i32* %4, align 4
  %15 = icmp ne i32 %14, 0
  %16 = load %struct.nr_scalar_registry_node_*, %struct.nr_scalar_registry_node_** %3, align 8
  %17 = icmp ne %struct.nr_scalar_registry_node_* %16, null
  %18 = and i1 %15, %17
  br i1 %18, label %19, label %35

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %16, i64 0, i32 0
  %21 = getelementptr inbounds i8, i8* %20, i64 -12
  %22 = bitcast i8* %21 to %struct.r_malloc_chunk*
  %23 = bitcast %struct.r_malloc_chunk* %22 to %struct.r_malloc_chunk_*
  %24 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %23, i64 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* @mem_usage, align 4
  %27 = sub i32 -16, %25
  %28 = add i32 %27, %26
  store i32 %28, i32* @mem_usage, align 4
  %29 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %23, i64 0, i32 1
  %30 = load i8, i8* %29, align 4
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %33, %25
  store i32 %34, i32* %32, align 4
  tail call void @free(i8* nonnull %21) #7
  br label %35

; <label>:35:                                     ; preds = %19, %13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %8
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_bytes(i8*, i8*, i64, i64*) #0 {
  %5 = alloca %struct.nr_array_registry_node_*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %struct.nr_array_registry_node_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  store %struct.nr_array_registry_node_* null, %struct.nr_array_registry_node_** %5, align 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  store i32 0, i32* %6, align 4
  %9 = bitcast %struct.nr_array_registry_node_** %5 to %struct.nr_registry_node_**
  %10 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext 9, %struct.nr_registry_node_** nonnull %9, i32* nonnull %6) #7
  %11 = icmp eq i32 %10, 0
  %12 = load %struct.nr_array_registry_node_*, %struct.nr_array_registry_node_** %5, align 8
  br i1 %11, label %13, label %27

; <label>:13:                                     ; preds = %4
  %14 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %12, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = icmp ugt i64 %16, %2
  br i1 %17, label %27, label %18

; <label>:18:                                     ; preds = %13
  %19 = icmp eq i8* %1, null
  br i1 %19, label %22, label %20

; <label>:20:                                     ; preds = %18
  %21 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %12, i64 0, i32 1, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* nonnull align 4 %21, i64 %16, i1 false) #7
  br label %22

; <label>:22:                                     ; preds = %20, %18
  %23 = icmp eq i64* %3, null
  br i1 %23, label %27, label %24

; <label>:24:                                     ; preds = %22
  %25 = load i32, i32* %14, align 4
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %3, align 8
  br label %27

; <label>:27:                                     ; preds = %24, %22, %13, %4
  %28 = phi i32 [ 6, %13 ], [ 0, %22 ], [ 0, %24 ], [ %10, %4 ]
  %29 = icmp ne %struct.nr_array_registry_node_* %12, null
  %30 = load i32, i32* %6, align 4
  %31 = icmp ne i32 %30, 0
  %32 = and i1 %29, %31
  br i1 %32, label %33, label %48

; <label>:33:                                     ; preds = %27
  %34 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %12, i64 -1, i32 0
  %35 = bitcast i8* %34 to %struct.r_malloc_chunk*
  %36 = bitcast %struct.r_malloc_chunk* %35 to %struct.r_malloc_chunk_*
  %37 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %36, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* @mem_usage, align 4
  %40 = sub i32 -16, %38
  %41 = add i32 %40, %39
  store i32 %41, i32* @mem_usage, align 4
  %42 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %36, i64 0, i32 1
  %43 = load i8, i8* %42, align 4
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sub i32 %46, %38
  store i32 %47, i32* %45, align 4
  tail call void @free(i8* nonnull %34) #7
  br label %48

; <label>:48:                                     ; preds = %27, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  ret i32 %28
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_string(i8*, i8*, i64) #0 {
  %4 = alloca %struct.nr_array_registry_node_*, align 8
  %5 = alloca i32, align 4
  %6 = bitcast %struct.nr_array_registry_node_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store %struct.nr_array_registry_node_* null, %struct.nr_array_registry_node_** %4, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store i32 0, i32* %5, align 4
  %8 = bitcast %struct.nr_array_registry_node_** %4 to %struct.nr_registry_node_**
  %9 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext 10, %struct.nr_registry_node_** nonnull %8, i32* nonnull %5) #7
  %10 = icmp eq i32 %9, 0
  %11 = load %struct.nr_array_registry_node_*, %struct.nr_array_registry_node_** %4, align 8
  br i1 %10, label %12, label %21

; <label>:12:                                     ; preds = %3
  %13 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %11, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = icmp ugt i64 %15, %2
  br i1 %16, label %21, label %17

; <label>:17:                                     ; preds = %12
  %18 = icmp eq i8* %1, null
  br i1 %18, label %21, label %19

; <label>:19:                                     ; preds = %17
  %20 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %11, i64 0, i32 1, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* nonnull align 4 %20, i64 %15, i1 false) #7
  br label %21

; <label>:21:                                     ; preds = %17, %19, %12, %3
  %22 = phi i32 [ 6, %12 ], [ %9, %3 ], [ 0, %19 ], [ 0, %17 ]
  %23 = icmp ne %struct.nr_array_registry_node_* %11, null
  %24 = load i32, i32* %5, align 4
  %25 = icmp ne i32 %24, 0
  %26 = and i1 %23, %25
  br i1 %26, label %27, label %42

; <label>:27:                                     ; preds = %21
  %28 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %11, i64 -1, i32 0
  %29 = bitcast i8* %28 to %struct.r_malloc_chunk*
  %30 = bitcast %struct.r_malloc_chunk* %29 to %struct.r_malloc_chunk_*
  %31 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %30, i64 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* @mem_usage, align 4
  %34 = sub i32 -16, %32
  %35 = add i32 %34, %33
  store i32 %35, i32* @mem_usage, align 4
  %36 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %30, i64 0, i32 1
  %37 = load i8, i8* %36, align 4
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sub i32 %40, %32
  store i32 %41, i32* %39, align 4
  tail call void @free(i8* nonnull %28) #7
  br label %42

; <label>:42:                                     ; preds = %21, %27
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret i32 %22
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_length(i8*, i64* nocapture) #0 {
  %3 = tail call i32 @nr_reg_is_valid(i8* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %62

; <label>:5:                                      ; preds = %2
  %6 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %7 = tail call i64 @strlen(i8* %0) #16
  %8 = trunc i64 %7 to i32
  %9 = add i32 %8, 1
  %10 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 2
  %11 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %10, align 8
  %12 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = tail call i32 %11(i8* %0, i32 %9, i32 %13) #7
  %15 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 3
  %16 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %15, align 8
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %16, i64 %17
  %19 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %18, align 8
  %20 = icmp eq %struct.r_assoc_el_* %19, null
  br i1 %20, label %62, label %21

; <label>:21:                                     ; preds = %5
  %22 = sext i32 %9 to i64
  br label %23

; <label>:23:                                     ; preds = %33, %21
  %24 = phi %struct.r_assoc_el_* [ %19, %21 ], [ %35, %33 ]
  %25 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %9
  br i1 %27, label %28, label %33

; <label>:28:                                     ; preds = %23
  %29 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i32 @memcmp(i8* %30, i8* %0, i64 %22) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %28, %23
  %34 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 4
  %35 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %34, align 8
  %36 = icmp eq %struct.r_assoc_el_* %35, null
  br i1 %36, label %62, label %23

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 2
  %39 = bitcast i8** %38 to %struct.nr_registry_node_**
  %40 = load %struct.nr_registry_node_*, %struct.nr_registry_node_** %39, align 8
  %41 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %40, i64 0, i32 0
  %42 = load i8, i8* %41, align 4
  switch i8 %42, label %62 [
    i8 10, label %43
    i8 9, label %49
    i8 0, label %54
    i8 1, label %55
    i8 2, label %56
    i8 3, label %56
    i8 4, label %57
    i8 5, label %57
    i8 6, label %58
    i8 7, label %58
    i8 8, label %59
    i8 11, label %60
  ]

; <label>:43:                                     ; preds = %37
  %44 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %40, i64 4
  %45 = bitcast %struct.nr_registry_node_* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, -1
  %48 = zext i32 %47 to i64
  store i64 %48, i64* %1, align 8
  br label %62

; <label>:49:                                     ; preds = %37
  %50 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %40, i64 4
  %51 = bitcast %struct.nr_registry_node_* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  store i64 %53, i64* %1, align 8
  br label %62

; <label>:54:                                     ; preds = %37
  store i64 1, i64* %1, align 8
  br label %62

; <label>:55:                                     ; preds = %37
  store i64 1, i64* %1, align 8
  br label %62

; <label>:56:                                     ; preds = %37, %37
  store i64 2, i64* %1, align 8
  br label %62

; <label>:57:                                     ; preds = %37, %37
  store i64 4, i64* %1, align 8
  br label %62

; <label>:58:                                     ; preds = %37, %37
  store i64 8, i64* %1, align 8
  br label %62

; <label>:59:                                     ; preds = %37
  store i64 8, i64* %1, align 8
  br label %62

; <label>:60:                                     ; preds = %37
  %61 = tail call i64 @strlen(i8* %0) #16
  store i64 %61, i64* %1, align 8
  br label %62

; <label>:62:                                     ; preds = %33, %60, %59, %58, %57, %56, %55, %54, %49, %43, %37, %5, %2
  %63 = phi i32 [ %3, %2 ], [ 2, %5 ], [ 3, %37 ], [ 0, %60 ], [ 0, %59 ], [ 0, %58 ], [ 0, %57 ], [ 0, %56 ], [ 0, %55 ], [ 0, %54 ], [ 0, %49 ], [ 0, %43 ], [ 2, %33 ]
  ret i32 %63
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_type(i8*, i8*) #0 {
  %3 = tail call i32 @nr_reg_is_valid(i8* %0)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %50

; <label>:5:                                      ; preds = %2
  %6 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %7 = tail call i64 @strlen(i8* %0) #16
  %8 = trunc i64 %7 to i32
  %9 = add i32 %8, 1
  %10 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 2
  %11 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %10, align 8
  %12 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = tail call i32 %11(i8* %0, i32 %9, i32 %13) #7
  %15 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 3
  %16 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %15, align 8
  %17 = zext i32 %14 to i64
  %18 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %16, i64 %17
  %19 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %18, align 8
  %20 = icmp eq %struct.r_assoc_el_* %19, null
  br i1 %20, label %50, label %21

; <label>:21:                                     ; preds = %5
  %22 = sext i32 %9 to i64
  br label %23

; <label>:23:                                     ; preds = %33, %21
  %24 = phi %struct.r_assoc_el_* [ %19, %21 ], [ %35, %33 ]
  %25 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %9
  br i1 %27, label %28, label %33

; <label>:28:                                     ; preds = %23
  %29 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = tail call i32 @memcmp(i8* %30, i8* %0, i64 %22) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

; <label>:33:                                     ; preds = %28, %23
  %34 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 4
  %35 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %34, align 8
  %36 = icmp eq %struct.r_assoc_el_* %35, null
  br i1 %36, label %50, label %23

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %24, i64 0, i32 2
  %39 = bitcast i8** %38 to %struct.nr_registry_node_**
  %40 = load %struct.nr_registry_node_*, %struct.nr_registry_node_** %39, align 8
  %41 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %40, i64 0, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp ugt i8 %42, 11
  br i1 %43, label %50, label %44

; <label>:44:                                     ; preds = %37
  %45 = zext i8 %42 to i64
  %46 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %45
  %47 = load i8*, i8** %46, align 8
  %48 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %1, i1 false, i1 true) #7
  %49 = tail call i8* @__strncpy_chk(i8* nonnull %1, i8* nonnull %47, i64 32, i64 %48) #7
  br label %50

; <label>:50:                                     ; preds = %33, %37, %5, %44, %2
  %51 = phi i32 [ 0, %44 ], [ %3, %2 ], [ 2, %5 ], [ 6, %37 ], [ 2, %33 ]
  ret i32 %51
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_char(i8*, i8 signext) #0 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1
  %4 = call fastcc i32 @nr_reg_set(i8* %0, i32 0, i8* nonnull %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_uchar(i8*, i8 zeroext) #0 {
  %3 = alloca i8, align 1
  store i8 %1, i8* %3, align 1
  %4 = call fastcc i32 @nr_reg_set(i8* %0, i32 1, i8* nonnull %3)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_int2(i8*, i16 signext) #0 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = bitcast i16* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 2, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_uint2(i8*, i16 zeroext) #0 {
  %3 = alloca i16, align 2
  store i16 %1, i16* %3, align 2
  %4 = bitcast i16* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 3, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_int4(i8*, i32) #0 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast i32* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 4, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_uint4(i8*, i32) #0 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast i32* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 5, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_int8(i8*, i64) #0 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = bitcast i64* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 6, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_uint8(i8*, i64) #0 {
  %3 = alloca i64, align 8
  store i64 %1, i64* %3, align 8
  %4 = bitcast i64* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 7, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_double(i8*, double) #0 {
  %3 = alloca double, align 8
  store double %1, double* %3, align 8
  %4 = bitcast double* %3 to i8*
  %5 = call fastcc i32 @nr_reg_set(i8* %0, i32 8, i8* nonnull %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_registry(i8*) #0 {
  %2 = tail call fastcc i32 @nr_reg_set(i8* %0, i32 11, i8* null)
  ret i32 %2
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_bytes(i8*, i8* nocapture readonly, i64) #0 {
  %4 = tail call fastcc i32 @nr_reg_set_array(i8* %0, i8 zeroext 9, i8* %1, i64 %2)
  ret i32 %4
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_set_string(i8*, i8* nocapture readonly) #0 {
  %3 = tail call i64 @strlen(i8* %1) #16
  %4 = add i64 %3, 1
  %5 = tail call fastcc i32 @nr_reg_set_array(i8* %0, i8 zeroext 10, i8* %1, i64 %4)
  ret i32 %5
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_del(i8*) #0 {
  %2 = tail call i32 @nr_reg_is_valid(i8* %0)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %29

; <label>:4:                                      ; preds = %1
  %5 = tail call fastcc i32 @nr_reg_local_iter(i8* %0, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* nonnull @nr_reg_local_iter_delete, i8* null)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %29

; <label>:7:                                      ; preds = %4
  %8 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %9 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %8, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i8* %0) #7
  %10 = icmp eq i8* %0, null
  br i1 %10, label %29, label %11

; <label>:11:                                     ; preds = %7
  %12 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %13 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %12, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %19, label %16

; <label>:16:                                     ; preds = %11
  %17 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %18 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %17, i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0)) #7
  br label %22

; <label>:19:                                     ; preds = %11
  %20 = tail call fastcc i32 @nr_reg_raise_event_recurse(i8* nonnull %0, i8* null, i32 4) #7
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %29

; <label>:22:                                     ; preds = %16, %19
  %23 = tail call i32 @strcasecmp(i8* nonnull %0, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @NR_TOP_LEVEL_REGISTRY, i64 0, i64 0)) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

; <label>:25:                                     ; preds = %22
  %26 = tail call fastcc i32 @nr_reg_set(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @NR_TOP_LEVEL_REGISTRY, i64 0, i64 0), i32 11, i8* null) #7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %25, %22
  br label %29

; <label>:29:                                     ; preds = %7, %25, %19, %4, %1, %28
  %30 = phi i32 [ 0, %28 ], [ %26, %25 ], [ %20, %19 ], [ %5, %4 ], [ %2, %1 ], [ 6, %7 ]
  %31 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), %28 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), %25 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), %19 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), %4 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), %1 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0), %7 ]
  %32 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %33 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %32, i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i64 0, i64 0), i8* %0, i8* nonnull %31)
  ret i32 %30
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_child_count(i8*, i64*) #0 {
  %3 = alloca %struct.nr_registry_node_*, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %struct.nr_registry_node_** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #7
  %7 = tail call i32 @nr_reg_is_valid(i8* %0)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %2
  %10 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext 11, %struct.nr_registry_node_** nonnull %3, i32* nonnull %4)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %9
  store i64 0, i64* %1, align 8
  %13 = bitcast i64* %1 to i8*
  %14 = tail call fastcc i32 @nr_reg_local_iter(i8* %0, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* nonnull @nr_reg_local_count_children, i8* %13)
  br label %15

; <label>:15:                                     ; preds = %2, %9, %12
  %16 = phi i32 [ %7, %2 ], [ %10, %9 ], [ %14, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_get_children(i8*, [128 x i8]*, i64, i64* nocapture) #0 {
  %5 = alloca %struct.nr_reg_find_children_arg_, align 8
  %6 = bitcast %struct.nr_reg_find_children_arg_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = tail call i32 @nr_reg_is_valid(i8* %0)
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %20

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %struct.nr_reg_find_children_arg_, %struct.nr_reg_find_children_arg_* %5, i64 0, i32 1
  store [128 x i8]* %1, [128 x i8]** %10, align 8
  %11 = getelementptr inbounds %struct.nr_reg_find_children_arg_, %struct.nr_reg_find_children_arg_* %5, i64 0, i32 0
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %struct.nr_reg_find_children_arg_, %struct.nr_reg_find_children_arg_* %5, i64 0, i32 2
  store i64 0, i64* %12, align 8
  %13 = call fastcc i32 @nr_reg_local_iter(i8* %0, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* nonnull @nr_reg_local_find_children, i8* nonnull %6)
  switch i32 %13, label %14 [
    i32 0, label %15
    i32 12, label %20
  ]

; <label>:14:                                     ; preds = %9
  br label %20

; <label>:15:                                     ; preds = %9
  %16 = bitcast [128 x i8]** %10 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = load i64, i64* %12, align 8
  call void @qsort(i8* %17, i64 %18, i64 128, i32 (i8*, i8*)* nonnull @strcasecmp) #7
  %19 = load i64, i64* %12, align 8
  store i64 %19, i64* %3, align 8
  br label %20

; <label>:20:                                     ; preds = %15, %14, %4, %9
  %21 = phi i32 [ %13, %14 ], [ 0, %15 ], [ %7, %4 ], [ 6, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret i32 %21
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_fin(i8*) #0 {
  %2 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %3 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %2, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i8* %0) #7
  %4 = icmp eq i8* %0, null
  br i1 %4, label %15, label %5

; <label>:5:                                      ; preds = %1
  %6 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %7 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %6, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %5
  %11 = tail call fastcc i32 @nr_reg_raise_event_recurse(i8* nonnull %0, i8* null, i32 64) #7
  br label %15

; <label>:12:                                     ; preds = %5
  %13 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %14 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %13, i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0)) #7
  br label %15

; <label>:15:                                     ; preds = %1, %10, %12
  %16 = phi i32 [ 0, %12 ], [ 6, %1 ], [ %11, %10 ]
  ret i32 %16
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_dump(i32) #0 {
  %2 = tail call fastcc i32 @nr_reg_local_iter(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @NR_TOP_LEVEL_REGISTRY, i64 0, i64 0), i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* nonnull @nr_reg_local_dump_print, i8* null)
  ret i32 %2
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_get(i8*, i32, i8* nocapture) unnamed_addr #0 {
  %4 = alloca %struct.nr_scalar_registry_node_*, align 8
  %5 = alloca i32, align 4
  %6 = bitcast %struct.nr_scalar_registry_node_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store %struct.nr_scalar_registry_node_* null, %struct.nr_scalar_registry_node_** %4, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store i32 0, i32* %5, align 4
  %8 = trunc i32 %1 to i8
  %9 = bitcast %struct.nr_scalar_registry_node_** %4 to %struct.nr_registry_node_**
  %10 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext %8, %struct.nr_registry_node_** nonnull %9, i32* nonnull %5)
  %11 = icmp eq i32 %10, 0
  %12 = load %struct.nr_scalar_registry_node_*, %struct.nr_scalar_registry_node_** %4, align 8
  br i1 %11, label %13, label %56

; <label>:13:                                     ; preds = %3
  %14 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 0
  %15 = load i8, i8* %14, align 8
  switch i8 %15, label %56 [
    i8 0, label %16
    i8 1, label %20
    i8 2, label %24
    i8 3, label %29
    i8 4, label %34
    i8 5, label %39
    i8 6, label %44
    i8 7, label %48
    i8 8, label %52
  ]

; <label>:16:                                     ; preds = %13
  %17 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1
  %18 = bitcast %union.anon* %17 to i8*
  %19 = load i8, i8* %18, align 8
  store i8 %19, i8* %2, align 1
  br label %56

; <label>:20:                                     ; preds = %13
  %21 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to i8*
  %23 = load i8, i8* %22, align 8
  store i8 %23, i8* %2, align 1
  br label %56

; <label>:24:                                     ; preds = %13
  %25 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i16*
  %27 = load i16, i16* %26, align 8
  %28 = bitcast i8* %2 to i16*
  store i16 %27, i16* %28, align 2
  br label %56

; <label>:29:                                     ; preds = %13
  %30 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1
  %31 = bitcast %union.anon* %30 to i16*
  %32 = load i16, i16* %31, align 8
  %33 = bitcast i8* %2 to i16*
  store i16 %32, i16* %33, align 2
  br label %56

; <label>:34:                                     ; preds = %13
  %35 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1
  %36 = bitcast %union.anon* %35 to i32*
  %37 = load i32, i32* %36, align 8
  %38 = bitcast i8* %2 to i32*
  store i32 %37, i32* %38, align 4
  br label %56

; <label>:39:                                     ; preds = %13
  %40 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1
  %41 = bitcast %union.anon* %40 to i32*
  %42 = load i32, i32* %41, align 8
  %43 = bitcast i8* %2 to i32*
  store i32 %42, i32* %43, align 4
  br label %56

; <label>:44:                                     ; preds = %13
  %45 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = bitcast i8* %2 to i64*
  store i64 %46, i64* %47, align 8
  br label %56

; <label>:48:                                     ; preds = %13
  %49 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8* %2 to i64*
  store i64 %50, i64* %51, align 8
  br label %56

; <label>:52:                                     ; preds = %13
  %53 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 1, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = bitcast i8* %2 to i64*
  store i64 %54, i64* %55, align 8
  br label %56

; <label>:56:                                     ; preds = %3, %52, %48, %44, %39, %34, %29, %24, %20, %16, %13
  %57 = phi i32 [ 3, %13 ], [ 0, %52 ], [ 0, %48 ], [ 0, %44 ], [ 0, %39 ], [ 0, %34 ], [ 0, %29 ], [ 0, %24 ], [ 0, %20 ], [ 0, %16 ], [ %10, %3 ]
  %58 = load i32, i32* %5, align 4
  %59 = icmp ne i32 %58, 0
  %60 = icmp ne %struct.nr_scalar_registry_node_* %12, null
  %61 = and i1 %59, %60
  br i1 %61, label %62, label %78

; <label>:62:                                     ; preds = %56
  %63 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %12, i64 0, i32 0
  %64 = getelementptr inbounds i8, i8* %63, i64 -12
  %65 = bitcast i8* %64 to %struct.r_malloc_chunk*
  %66 = bitcast %struct.r_malloc_chunk* %65 to %struct.r_malloc_chunk_*
  %67 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %66, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* @mem_usage, align 4
  %70 = sub i32 -16, %68
  %71 = add i32 %70, %69
  store i32 %71, i32* @mem_usage, align 4
  %72 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %66, i64 0, i32 1
  %73 = load i8, i8* %72, align 4
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = sub i32 %76, %68
  store i32 %77, i32* %75, align 4
  tail call void @free(i8* nonnull %64) #7
  br label %78

; <label>:78:                                     ; preds = %62, %56
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret i32 %57
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_set(i8*, i32, i8* nocapture readonly) unnamed_addr #0 {
  %4 = alloca %struct.nr_scalar_registry_node_*, align 8
  %5 = alloca i32, align 4
  %6 = bitcast %struct.nr_scalar_registry_node_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  store %struct.nr_scalar_registry_node_* null, %struct.nr_scalar_registry_node_** %4, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store i32 0, i32* %5, align 4
  %8 = trunc i32 %1 to i8
  %9 = bitcast %struct.nr_scalar_registry_node_** %4 to %struct.nr_registry_node_**
  %10 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext %8, %struct.nr_registry_node_** nonnull %9, i32* nonnull %5)
  switch i32 %10, label %11 [
    i32 0, label %31
    i32 2, label %13
  ]

; <label>:11:                                     ; preds = %3
  %12 = load %struct.nr_scalar_registry_node_*, %struct.nr_scalar_registry_node_** %4, align 8
  br label %130

; <label>:13:                                     ; preds = %3
  store i32 1, i32* %5, align 4
  %14 = tail call noalias i8* @malloc(i64 32) #7
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %13
  %17 = bitcast %struct.nr_scalar_registry_node_** %4 to i8**
  store i8* null, i8** %17, align 8
  br label %153

; <label>:18:                                     ; preds = %13
  %19 = bitcast i8* %14 to i32*
  store i32 1179402567, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 16, i32* %22, align 4
  %23 = load i32, i32* @mem_usage, align 4
  %24 = add i32 %23, 32
  store i32 %24, i32* @mem_usage, align 4
  %25 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %26 = add i32 %25, 16
  store i32 %26, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %27 = getelementptr inbounds i8, i8* %14, i64 12
  %28 = getelementptr inbounds i8, i8* %14, i64 13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %28, i8 0, i64 15, i1 false) #7
  %29 = bitcast %struct.nr_scalar_registry_node_** %4 to i8**
  store i8* %27, i8** %29, align 8
  store i8 %8, i8* %27, align 8
  %30 = bitcast i8* %27 to %struct.nr_scalar_registry_node_*
  br label %38

; <label>:31:                                     ; preds = %3
  %32 = load %struct.nr_scalar_registry_node_*, %struct.nr_scalar_registry_node_** %4, align 8
  %33 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %32, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, %1
  %37 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %32, i64 0, i32 0
  br i1 %36, label %38, label %130

; <label>:38:                                     ; preds = %31, %18
  %39 = phi %struct.nr_scalar_registry_node_* [ %32, %31 ], [ %30, %18 ]
  %40 = phi i8* [ %37, %31 ], [ %27, %18 ]
  %41 = phi i1 [ false, %31 ], [ true, %18 ]
  switch i32 %1, label %130 [
    i32 0, label %42
    i32 1, label %50
    i32 2, label %58
    i32 3, label %67
    i32 4, label %76
    i32 5, label %85
    i32 6, label %94
    i32 7, label %102
    i32 8, label %110
    i32 11, label %119
  ]

; <label>:42:                                     ; preds = %38
  %43 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %44 = bitcast %union.anon* %43 to i8*
  %45 = load i8, i8* %44, align 8
  %46 = load i8, i8* %2, align 1
  %47 = icmp eq i8 %45, %46
  br i1 %47, label %119, label %48

; <label>:48:                                     ; preds = %42
  store i8 %46, i8* %44, align 8
  %49 = xor i1 %41, true
  br label %119

; <label>:50:                                     ; preds = %38
  %51 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %52 = bitcast %union.anon* %51 to i8*
  %53 = load i8, i8* %52, align 8
  %54 = load i8, i8* %2, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %119, label %56

; <label>:56:                                     ; preds = %50
  store i8 %54, i8* %52, align 8
  %57 = xor i1 %41, true
  br label %119

; <label>:58:                                     ; preds = %38
  %59 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %60 = bitcast %union.anon* %59 to i16*
  %61 = load i16, i16* %60, align 8
  %62 = bitcast i8* %2 to i16*
  %63 = load i16, i16* %62, align 2
  %64 = icmp eq i16 %61, %63
  br i1 %64, label %119, label %65

; <label>:65:                                     ; preds = %58
  store i16 %63, i16* %60, align 8
  %66 = xor i1 %41, true
  br label %119

; <label>:67:                                     ; preds = %38
  %68 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %69 = bitcast %union.anon* %68 to i16*
  %70 = load i16, i16* %69, align 8
  %71 = bitcast i8* %2 to i16*
  %72 = load i16, i16* %71, align 2
  %73 = icmp eq i16 %70, %72
  br i1 %73, label %119, label %74

; <label>:74:                                     ; preds = %67
  store i16 %72, i16* %69, align 8
  %75 = xor i1 %41, true
  br label %119

; <label>:76:                                     ; preds = %38
  %77 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %78 = bitcast %union.anon* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = bitcast i8* %2 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %79, %81
  br i1 %82, label %119, label %83

; <label>:83:                                     ; preds = %76
  store i32 %81, i32* %78, align 8
  %84 = xor i1 %41, true
  br label %119

; <label>:85:                                     ; preds = %38
  %86 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %87 = bitcast %union.anon* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = bitcast i8* %2 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %119, label %92

; <label>:92:                                     ; preds = %85
  store i32 %90, i32* %87, align 8
  %93 = xor i1 %41, true
  br label %119

; <label>:94:                                     ; preds = %38
  %95 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = bitcast i8* %2 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %96, %98
  br i1 %99, label %119, label %100

; <label>:100:                                    ; preds = %94
  store i64 %98, i64* %95, align 8
  %101 = xor i1 %41, true
  br label %119

; <label>:102:                                    ; preds = %38
  %103 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i8* %2 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %104, %106
  br i1 %107, label %119, label %108

; <label>:108:                                    ; preds = %102
  store i64 %106, i64* %103, align 8
  %109 = xor i1 %41, true
  br label %119

; <label>:110:                                    ; preds = %38
  %111 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %39, i64 0, i32 1
  %112 = bitcast %union.anon* %111 to double*
  %113 = load double, double* %112, align 8
  %114 = bitcast i8* %2 to double*
  %115 = load double, double* %114, align 8
  %116 = fcmp une double %113, %115
  br i1 %116, label %117, label %119

; <label>:117:                                    ; preds = %110
  store double %115, double* %112, align 8
  %118 = xor i1 %41, true
  br label %119

; <label>:119:                                    ; preds = %117, %108, %100, %92, %83, %74, %65, %56, %48, %42, %50, %58, %67, %76, %85, %94, %102, %110, %38
  %120 = phi i1 [ false, %38 ], [ false, %110 ], [ false, %102 ], [ false, %94 ], [ false, %85 ], [ false, %76 ], [ false, %67 ], [ false, %58 ], [ false, %50 ], [ false, %42 ], [ %49, %48 ], [ %57, %56 ], [ %66, %65 ], [ %75, %74 ], [ %84, %83 ], [ %93, %92 ], [ %101, %100 ], [ %109, %108 ], [ %118, %117 ]
  br i1 %41, label %121, label %125

; <label>:121:                                    ; preds = %119
  %122 = tail call fastcc i32 @nr_reg_insert_node(i8* %0, i8* %40)
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %130

; <label>:124:                                    ; preds = %121
  store i32 0, i32* %5, align 4
  br label %153

; <label>:125:                                    ; preds = %119
  br i1 %120, label %126, label %153

; <label>:126:                                    ; preds = %125
  %127 = tail call fastcc i32 @nr_reg_change_node(i8* %0, i8* %40, i8* %40)
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

; <label>:129:                                    ; preds = %126
  store i32 0, i32* %5, align 4
  br label %153

; <label>:130:                                    ; preds = %11, %126, %121, %38, %31
  %131 = phi %struct.nr_scalar_registry_node_* [ %39, %126 ], [ %39, %121 ], [ %39, %38 ], [ %32, %31 ], [ %12, %11 ]
  %132 = phi i32 [ %127, %126 ], [ %122, %121 ], [ 3, %38 ], [ 6, %31 ], [ %10, %11 ]
  %133 = icmp ne %struct.nr_scalar_registry_node_* %131, null
  %134 = load i32, i32* %5, align 4
  %135 = icmp ne i32 %134, 0
  %136 = and i1 %133, %135
  br i1 %136, label %137, label %153

; <label>:137:                                    ; preds = %130
  %138 = getelementptr inbounds %struct.nr_scalar_registry_node_, %struct.nr_scalar_registry_node_* %131, i64 0, i32 0
  %139 = getelementptr inbounds i8, i8* %138, i64 -12
  %140 = bitcast i8* %139 to %struct.r_malloc_chunk*
  %141 = bitcast %struct.r_malloc_chunk* %140 to %struct.r_malloc_chunk_*
  %142 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %141, i64 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* @mem_usage, align 4
  %145 = sub i32 -16, %143
  %146 = add i32 %145, %144
  store i32 %146, i32* @mem_usage, align 4
  %147 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %141, i64 0, i32 1
  %148 = load i8, i8* %147, align 4
  %149 = zext i8 %148 to i64
  %150 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sub i32 %151, %143
  store i32 %152, i32* %150, align 4
  tail call void @free(i8* nonnull %139) #7
  br label %153

; <label>:153:                                    ; preds = %16, %125, %124, %129, %137, %130
  %154 = phi i32 [ %132, %130 ], [ %132, %137 ], [ 0, %125 ], [ 0, %129 ], [ 0, %124 ], [ 1, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret i32 %154
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_insert_node(i8*, i8*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @nr_reg_is_valid(i8* %0)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %74

; <label>:6:                                      ; preds = %2
  %7 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %8 = tail call i64 @strlen(i8* %0) #16
  %9 = trunc i64 %8 to i32
  %10 = add i32 %9, 1
  %11 = tail call i32 @r_assoc_insert(%struct.r_assoc_* %7, i8* %0, i32 %10, i8* %1, i32 (i8**, i8*)* null, i32 (i8*)* nonnull @nr_reg_rfree, i32 2)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %74

; <label>:13:                                     ; preds = %6
  %14 = icmp eq i8* %0, null
  br i1 %14, label %74, label %15

; <label>:15:                                     ; preds = %13
  %16 = tail call i64 @strlen(i8* nonnull %0) #16
  %17 = shl i64 %16, 32
  %18 = add i64 %17, 4294967296
  %19 = ashr exact i64 %18, 32
  %20 = add nsw i64 %19, 16
  %21 = tail call noalias i8* @malloc(i64 %20) #7
  %22 = icmp eq i8* %21, null
  br i1 %22, label %74, label %23

; <label>:23:                                     ; preds = %15
  %24 = bitcast i8* %21 to i32*
  store i32 1179402567, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 4
  store i8 0, i8* %25, align 4
  %26 = trunc i64 %19 to i32
  %27 = getelementptr inbounds i8, i8* %21, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 %26, i32* %28, align 4
  %29 = load i32, i32* @mem_usage, align 4
  %30 = trunc i64 %20 to i32
  %31 = add i32 %29, %30
  store i32 %31, i32* @mem_usage, align 4
  %32 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %33 = add i32 %32, %26
  store i32 %33, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %34 = getelementptr inbounds i8, i8* %21, i64 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %0, i64 %19, i1 false) #7
  %35 = tail call i8* @strrchr(i8* nonnull %34, i32 46) #16
  %36 = icmp eq i8* %35, null
  br i1 %36, label %45, label %37

; <label>:37:                                     ; preds = %23
  store i8 0, i8* %35, align 1
  %38 = load %struct.nr_registry_module_*, %struct.nr_registry_module_** @reg_vtbl, align 8
  %39 = getelementptr inbounds %struct.nr_registry_module_, %struct.nr_registry_module_* %38, i64 0, i32 1
  %40 = load %struct.nr_registry_module_vtbl_*, %struct.nr_registry_module_vtbl_** %39, align 8
  %41 = getelementptr inbounds %struct.nr_registry_module_vtbl_, %struct.nr_registry_module_vtbl_* %40, i64 0, i32 24
  %42 = load i32 (i8*)*, i32 (i8*)** %41, align 8
  %43 = tail call i32 %42(i8* nonnull %34) #7
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %37, %23
  br label %46

; <label>:46:                                     ; preds = %37, %45
  %47 = phi i32 [ %43, %37 ], [ 0, %45 ]
  %48 = bitcast i8* %21 to %struct.r_malloc_chunk*
  %49 = bitcast %struct.r_malloc_chunk* %48 to %struct.r_malloc_chunk_*
  %50 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %49, i64 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* @mem_usage, align 4
  %53 = sub i32 -16, %51
  %54 = add i32 %53, %52
  store i32 %54, i32* @mem_usage, align 4
  %55 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %49, i64 0, i32 1
  %56 = load i8, i8* %55, align 4
  %57 = zext i8 %56 to i64
  %58 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 %59, %51
  store i32 %60, i32* %58, align 4
  tail call void @free(i8* nonnull %21) #7
  %61 = icmp eq i32 %47, 0
  br i1 %61, label %62, label %74

; <label>:62:                                     ; preds = %46
  %63 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %64 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %63, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* nonnull %0) #7
  %65 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %66 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %65, i64 0, i32 4
  %67 = load i32, i32* %66, align 8
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %71

; <label>:69:                                     ; preds = %62
  %70 = tail call fastcc i32 @nr_reg_raise_event_recurse(i8* nonnull %0, i8* null, i32 1) #7
  br label %74

; <label>:71:                                     ; preds = %62
  %72 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %73 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %72, i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0)) #7
  br label %74

; <label>:74:                                     ; preds = %71, %69, %15, %13, %46, %6, %2
  %75 = phi i32 [ %4, %2 ], [ %11, %6 ], [ %47, %46 ], [ 1, %13 ], [ 1, %15 ], [ 0, %71 ], [ %70, %69 ]
  %76 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %77 = tail call i32 @r_logging(i32 %76, i32 6)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %115, label %79

; <label>:79:                                     ; preds = %74
  %80 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #7
  %81 = bitcast i8* %1 to %struct.nr_registry_node_*
  %82 = call i8* @nr_reg_alloc_node_data(i8* %0, %struct.nr_registry_node_* %81, i32* nonnull %3)
  %83 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %84 = load i8, i8* %1, align 1
  %85 = icmp ugt i8 %84, 11
  br i1 %85, label %90, label %86

; <label>:86:                                     ; preds = %79
  %87 = zext i8 %84 to i64
  %88 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %87
  %89 = load i8*, i8** %88, align 8
  br label %90

; <label>:90:                                     ; preds = %79, %86
  %91 = phi i8* [ %89, %86 ], [ null, %79 ]
  %92 = icmp eq i32 %75, 0
  %93 = select i1 %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0)
  %94 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %83, i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.79, i64 0, i64 0), i8* %0, i8* %91, i8* %93, i8* %82)
  %95 = load i32, i32* %3, align 4
  %96 = icmp ne i32 %95, 0
  %97 = icmp ne i8* %82, null
  %98 = and i1 %97, %96
  br i1 %98, label %99, label %114

; <label>:99:                                     ; preds = %90
  %100 = getelementptr inbounds i8, i8* %82, i64 -12
  %101 = bitcast i8* %100 to %struct.r_malloc_chunk*
  %102 = bitcast %struct.r_malloc_chunk* %101 to %struct.r_malloc_chunk_*
  %103 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %102, i64 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* @mem_usage, align 4
  %106 = sub i32 -16, %104
  %107 = add i32 %106, %105
  store i32 %107, i32* @mem_usage, align 4
  %108 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %102, i64 0, i32 1
  %109 = load i8, i8* %108, align 4
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = sub i32 %112, %104
  store i32 %113, i32* %111, align 4
  tail call void @free(i8* nonnull %100) #7
  br label %114

; <label>:114:                                    ; preds = %99, %90
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #7
  br label %115

; <label>:115:                                    ; preds = %114, %74
  ret i32 %75
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_change_node(i8*, i8*, i8* readnone) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = tail call i32 @nr_reg_is_valid(i8* %0)
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %30

; <label>:7:                                      ; preds = %3
  %8 = icmp eq i8* %2, %1
  br i1 %8, label %16, label %9

; <label>:9:                                      ; preds = %7
  %10 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %11 = tail call i64 @strlen(i8* %0) #16
  %12 = trunc i64 %11 to i32
  %13 = add i32 %12, 1
  %14 = tail call i32 @r_assoc_insert(%struct.r_assoc_* %10, i8* %0, i32 %13, i8* %1, i32 (i8**, i8*)* null, i32 (i8*)* nonnull @nr_reg_rfree, i32 1)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %30

; <label>:16:                                     ; preds = %9, %7
  %17 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %18 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %17, i32 7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i8* %0) #7
  %19 = icmp eq i8* %0, null
  br i1 %19, label %30, label %20

; <label>:20:                                     ; preds = %16
  %21 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry_callbacks, align 8
  %22 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %21, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %27

; <label>:25:                                     ; preds = %20
  %26 = tail call fastcc i32 @nr_reg_raise_event_recurse(i8* nonnull %0, i8* null, i32 2) #7
  br label %30

; <label>:27:                                     ; preds = %20
  %28 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %29 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %28, i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0)) #7
  br label %30

; <label>:30:                                     ; preds = %27, %25, %16, %9, %3
  %31 = phi i32 [ %5, %3 ], [ %14, %9 ], [ 0, %27 ], [ 6, %16 ], [ %26, %25 ]
  %32 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %33 = tail call i32 @r_logging(i32 %32, i32 6)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %71, label %35

; <label>:35:                                     ; preds = %30
  %36 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #7
  %37 = bitcast i8* %1 to %struct.nr_registry_node_*
  %38 = call i8* @nr_reg_alloc_node_data(i8* %0, %struct.nr_registry_node_* %37, i32* nonnull %4)
  %39 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %40 = load i8, i8* %1, align 1
  %41 = icmp ugt i8 %40, 11
  br i1 %41, label %46, label %42

; <label>:42:                                     ; preds = %35
  %43 = zext i8 %40 to i64
  %44 = getelementptr inbounds [12 x i8*], [12 x i8*]* @typenames, i64 0, i64 %43
  %45 = load i8*, i8** %44, align 8
  br label %46

; <label>:46:                                     ; preds = %35, %42
  %47 = phi i8* [ %45, %42 ], [ null, %35 ]
  %48 = icmp eq i32 %31, 0
  %49 = select i1 %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0)
  %50 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %39, i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.82, i64 0, i64 0), i8* %0, i8* %47, i8* %49, i8* %38)
  %51 = load i32, i32* %4, align 4
  %52 = icmp ne i32 %51, 0
  %53 = icmp ne i8* %38, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %70

; <label>:55:                                     ; preds = %46
  %56 = getelementptr inbounds i8, i8* %38, i64 -12
  %57 = bitcast i8* %56 to %struct.r_malloc_chunk*
  %58 = bitcast %struct.r_malloc_chunk* %57 to %struct.r_malloc_chunk_*
  %59 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %58, i64 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* @mem_usage, align 4
  %62 = sub i32 -16, %60
  %63 = add i32 %62, %61
  store i32 %63, i32* @mem_usage, align 4
  %64 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %58, i64 0, i32 1
  %65 = load i8, i8* %64, align 4
  %66 = zext i8 %65 to i64
  %67 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sub i32 %68, %60
  store i32 %69, i32* %67, align 4
  tail call void @free(i8* nonnull %56) #7
  br label %70

; <label>:70:                                     ; preds = %55, %46
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #7
  br label %71

; <label>:71:                                     ; preds = %70, %30
  ret i32 %31
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_rfree(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %18, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 -12
  %5 = bitcast i8* %4 to %struct.r_malloc_chunk*
  %6 = bitcast %struct.r_malloc_chunk* %5 to %struct.r_malloc_chunk_*
  %7 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* @mem_usage, align 4
  %10 = sub i32 -16, %8
  %11 = add i32 %10, %9
  store i32 %11, i32* @mem_usage, align 4
  %12 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %16, %8
  store i32 %17, i32* %15, align 4
  tail call void @free(i8* nonnull %4) #7
  br label %18

; <label>:18:                                     ; preds = %1, %3
  ret i32 0
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_set_array(i8*, i8 zeroext, i8* nocapture readonly, i64) unnamed_addr #0 {
  %5 = alloca %struct.nr_array_registry_node_*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %struct.nr_array_registry_node_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #7
  store %struct.nr_array_registry_node_* null, %struct.nr_array_registry_node_** %5, align 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #7
  store i32 0, i32* %6, align 4
  %9 = bitcast %struct.nr_array_registry_node_** %5 to %struct.nr_registry_node_**
  %10 = call i32 @nr_reg_fetch_node(i8* %0, i8 zeroext %1, %struct.nr_registry_node_** nonnull %9, i32* nonnull %6)
  %11 = or i32 %10, 2
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %84

; <label>:13:                                     ; preds = %4
  %14 = load %struct.nr_array_registry_node_*, %struct.nr_array_registry_node_** %5, align 8
  %15 = icmp eq %struct.nr_array_registry_node_* %14, null
  %16 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %14, i64 0, i32 0
  br i1 %15, label %50, label %17

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %14, i64 0, i32 0
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, %1
  br i1 %20, label %21, label %84

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %14, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = icmp eq i64 %24, %3
  br i1 %25, label %26, label %30

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %14, i64 0, i32 1, i32 1, i64 0
  %28 = tail call i32 @memcmp(i8* nonnull %27, i8* %2, i64 %3) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %83, label %30

; <label>:30:                                     ; preds = %26, %21
  %31 = icmp ult i64 %24, %3
  br i1 %31, label %32, label %68

; <label>:32:                                     ; preds = %30
  %33 = add i64 %3, 12
  %34 = add i64 %3, 28
  %35 = tail call noalias i8* @malloc(i64 %34) #7
  %36 = icmp eq i8* %35, null
  br i1 %36, label %84, label %37

; <label>:37:                                     ; preds = %32
  %38 = bitcast i8* %35 to i32*
  store i32 1179402567, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %35, i64 4
  store i8 0, i8* %39, align 4
  %40 = trunc i64 %33 to i32
  %41 = getelementptr inbounds i8, i8* %35, i64 8
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = load i32, i32* @mem_usage, align 4
  %44 = trunc i64 %34 to i32
  %45 = add i32 %43, %44
  store i32 %45, i32* @mem_usage, align 4
  %46 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %47 = add i32 %46, %40
  store i32 %47, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %48 = getelementptr inbounds i8, i8* %35, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 0, i64 %33, i1 false) #7
  %49 = bitcast i8* %48 to %struct.nr_array_registry_node_*
  br label %68

; <label>:50:                                     ; preds = %13
  %51 = add i64 %3, 12
  %52 = add i64 %3, 28
  %53 = tail call noalias i8* @malloc(i64 %52) #7
  %54 = icmp eq i8* %53, null
  br i1 %54, label %84, label %55

; <label>:55:                                     ; preds = %50
  %56 = bitcast i8* %53 to i32*
  store i32 1179402567, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %53, i64 4
  store i8 0, i8* %57, align 4
  %58 = trunc i64 %51 to i32
  %59 = getelementptr inbounds i8, i8* %53, i64 8
  %60 = bitcast i8* %59 to i32*
  store i32 %58, i32* %60, align 4
  %61 = load i32, i32* @mem_usage, align 4
  %62 = trunc i64 %52 to i32
  %63 = add i32 %61, %62
  store i32 %63, i32* @mem_usage, align 4
  %64 = load i32, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %65 = add i32 %64, %58
  store i32 %65, i32* getelementptr inbounds ([256 x i32], [256 x i32]* @mem_stats, i64 0, i64 0), align 16
  %66 = getelementptr inbounds i8, i8* %53, i64 12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %66, i8 0, i64 %51, i1 false) #7
  %67 = bitcast i8* %66 to %struct.nr_array_registry_node_*
  br label %68

; <label>:68:                                     ; preds = %30, %37, %55
  %69 = phi %struct.nr_array_registry_node_* [ %14, %30 ], [ %67, %55 ], [ %49, %37 ]
  %70 = phi i1 [ false, %30 ], [ true, %55 ], [ false, %37 ]
  %71 = phi i1 [ true, %30 ], [ false, %55 ], [ true, %37 ]
  %72 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %69, i64 0, i32 0
  store i8 %1, i8* %72, align 4
  %73 = trunc i64 %3 to i32
  %74 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %69, i64 0, i32 1, i32 0
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %struct.nr_array_registry_node_, %struct.nr_array_registry_node_* %69, i64 0, i32 1, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* align 1 %2, i64 %3, i1 false)
  br i1 %70, label %76, label %79

; <label>:76:                                     ; preds = %68
  %77 = tail call fastcc i32 @nr_reg_insert_node(i8* %0, i8* %72)
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %83, label %84

; <label>:79:                                     ; preds = %68
  br i1 %71, label %80, label %83

; <label>:80:                                     ; preds = %79
  %81 = tail call fastcc i32 @nr_reg_change_node(i8* %0, i8* %72, i8* %16)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %26, %76, %80, %79
  br label %84

; <label>:84:                                     ; preds = %50, %32, %83, %4, %17, %76, %80
  %85 = phi i32 [ 0, %83 ], [ %10, %4 ], [ 6, %17 ], [ %77, %76 ], [ %81, %80 ], [ 1, %32 ], [ 1, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #7
  ret i32 %85
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i32 @nr_reg_local_iter(i8*, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* nocapture, i8*) unnamed_addr #0 {
  %4 = alloca %struct.r_assoc_iterator_, align 8
  %5 = bitcast %struct.r_assoc_iterator_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #7
  %6 = icmp eq i8* %0, null
  br i1 %6, label %121, label %7

; <label>:7:                                      ; preds = %3
  %8 = load %struct.r_assoc_*, %struct.r_assoc_** @nr_registry, align 8
  %9 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %4, i64 0, i32 0
  store %struct.r_assoc_* %8, %struct.r_assoc_** %9, align 8
  %10 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %4, i64 0, i32 1
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %4, i64 0, i32 2
  store %struct.r_assoc_el_* null, %struct.r_assoc_el_** %11, align 8
  %12 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %8, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %4, i64 0, i32 3
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %struct.r_assoc_iterator_, %struct.r_assoc_iterator_* %4, i64 0, i32 4
  store %struct.r_assoc_el_* null, %struct.r_assoc_el_** %15, align 8
  %16 = load i32, i32* %12, align 8
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %121

; <label>:18:                                     ; preds = %7
  %19 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %8, i64 0, i32 3
  %20 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %19, align 8
  %21 = sext i32 %16 to i64
  br label %22

; <label>:22:                                     ; preds = %27, %18
  %23 = phi i64 [ 0, %18 ], [ %28, %27 ]
  %24 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %20, i64 %23
  %25 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %24, align 8
  %26 = icmp eq %struct.r_assoc_el_* %25, null
  br i1 %26, label %27, label %30

; <label>:27:                                     ; preds = %22
  %28 = add nuw nsw i64 %23, 1
  %29 = icmp slt i64 %28, %21
  br i1 %29, label %22, label %121

; <label>:30:                                     ; preds = %22
  %31 = trunc i64 %23 to i32
  %32 = and i64 %23, 4294967295
  store i32 %31, i32* %14, align 8
  %33 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %19, align 8
  %34 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %33, i64 %32
  %35 = bitcast %struct.r_assoc_el_** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %struct.r_assoc_el_** %15 to i64*
  store i64 %36, i64* %37, align 8
  %38 = tail call i64 @strlen(i8* nonnull %0) #16
  %39 = trunc i64 %38 to i32
  %40 = icmp eq i64 %36, 0
  br i1 %40, label %121, label %41

; <label>:41:                                     ; preds = %30
  %42 = inttoptr i64 %36 to %struct.r_assoc_el_*
  %43 = bitcast %struct.r_assoc_el_** %15 to i64*
  %44 = bitcast %struct.r_assoc_el_** %11 to i64*
  %45 = icmp eq i32 %39, 0
  %46 = shl i64 %38, 32
  %47 = ashr exact i64 %46, 32
  br label %48

; <label>:48:                                     ; preds = %118, %41
  %49 = phi i64 [ %36, %41 ], [ %119, %118 ]
  %50 = phi i32 [ %31, %41 ], [ %120, %118 ]
  %51 = phi %struct.r_assoc_el_* [ %42, %41 ], [ %116, %118 ]
  %52 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %51, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %51, i64 0, i32 2
  %57 = bitcast i8** %56 to %struct.nr_registry_node_**
  %58 = load %struct.nr_registry_node_*, %struct.nr_registry_node_** %57, align 8
  store i32 %50, i32* %10, align 8
  store i64 %49, i64* %44, align 8
  %59 = inttoptr i64 %49 to %struct.r_assoc_el_*
  %60 = getelementptr inbounds %struct.r_assoc_el_, %struct.r_assoc_el_* %59, i64 0, i32 4
  %61 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %60, align 8
  %62 = icmp eq %struct.r_assoc_el_* %61, null
  br i1 %62, label %64, label %63

; <label>:63:                                     ; preds = %48
  store %struct.r_assoc_el_* %61, %struct.r_assoc_el_** %15, align 8
  br label %87

; <label>:64:                                     ; preds = %48
  store %struct.r_assoc_el_* null, %struct.r_assoc_el_** %15, align 8
  %65 = load %struct.r_assoc_*, %struct.r_assoc_** %9, align 8
  %66 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %struct.r_assoc_, %struct.r_assoc_* %65, i64 0, i32 3
  %69 = sext i32 %50 to i64
  %70 = sext i32 %67 to i64
  br label %71

; <label>:71:                                     ; preds = %75, %64
  %72 = phi i64 [ %73, %75 ], [ %69, %64 ]
  %73 = add nsw i64 %72, 1
  %74 = icmp slt i64 %73, %70
  br i1 %74, label %75, label %87

; <label>:75:                                     ; preds = %71
  %76 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %68, align 8
  %77 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %76, i64 %73
  %78 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %77, align 8
  %79 = icmp eq %struct.r_assoc_el_* %78, null
  br i1 %79, label %71, label %80

; <label>:80:                                     ; preds = %75
  %81 = trunc i64 %73 to i32
  store i32 %81, i32* %14, align 8
  %82 = load %struct.r_assoc_el_**, %struct.r_assoc_el_*** %68, align 8
  %83 = getelementptr inbounds %struct.r_assoc_el_*, %struct.r_assoc_el_** %82, i64 %73
  %84 = bitcast %struct.r_assoc_el_** %83 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %43, align 8
  %86 = inttoptr i64 %85 to %struct.r_assoc_el_*
  br label %87

; <label>:87:                                     ; preds = %71, %80, %63
  %88 = phi %struct.r_assoc_el_* [ %86, %80 ], [ %61, %63 ], [ null, %71 ]
  %89 = add nsw i32 %55, -1
  %90 = icmp slt i32 %55, 1
  br i1 %90, label %121, label %91

; <label>:91:                                     ; preds = %87
  %92 = sext i32 %89 to i64
  %93 = getelementptr inbounds i8, i8* %53, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = icmp ne i8 %94, 0
  %96 = icmp eq %struct.nr_registry_node_* %58, null
  %97 = or i1 %96, %95
  br i1 %97, label %121, label %98

; <label>:98:                                     ; preds = %91
  br i1 %45, label %110, label %99

; <label>:99:                                     ; preds = %98
  %100 = icmp eq i32 %89, %39
  br i1 %100, label %107, label %101

; <label>:101:                                    ; preds = %99
  %102 = icmp sgt i32 %89, %39
  br i1 %102, label %103, label %115

; <label>:103:                                    ; preds = %101
  %104 = getelementptr inbounds i8, i8* %53, i64 %47
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 46
  br i1 %106, label %107, label %115

; <label>:107:                                    ; preds = %103, %99
  %108 = call i32 @strncmp(i8* nonnull %0, i8* nonnull %53, i64 %47) #16
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %115

; <label>:110:                                    ; preds = %107, %98
  %111 = call i32 %1(i8* %2, %struct.r_assoc_iterator_* nonnull %4, i8* nonnull %0, i8* nonnull %53, %struct.nr_registry_node_* nonnull %58) #7, !callees !3
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %121

; <label>:113:                                    ; preds = %110
  %114 = load %struct.r_assoc_el_*, %struct.r_assoc_el_** %15, align 8
  br label %115

; <label>:115:                                    ; preds = %113, %107, %103, %101
  %116 = phi %struct.r_assoc_el_* [ %114, %113 ], [ %88, %107 ], [ %88, %103 ], [ %88, %101 ]
  %117 = icmp eq %struct.r_assoc_el_* %116, null
  br i1 %117, label %121, label %118

; <label>:118:                                    ; preds = %115
  %119 = ptrtoint %struct.r_assoc_el_* %116 to i64
  %120 = load i32, i32* %14, align 8
  br label %48

; <label>:121:                                    ; preds = %27, %110, %115, %87, %91, %7, %30, %3
  %122 = phi i32 [ 3, %3 ], [ 0, %30 ], [ 0, %7 ], [ %111, %110 ], [ 0, %115 ], [ 0, %87 ], [ 0, %91 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #7
  ret i32 %122
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_iter_delete(i8* nocapture readnone, %struct.r_assoc_iterator_* nocapture readonly, i8* nocapture readnone, i8* nocapture readnone, %struct.nr_registry_node_* nocapture readnone) #0 {
  %6 = tail call i32 @r_assoc_iter_delete(%struct.r_assoc_iterator_* %1)
  ret i32 0
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_count_children(i8* nocapture, %struct.r_assoc_iterator_* nocapture readnone, i8* nocapture readonly, i8* readonly, %struct.nr_registry_node_* nocapture readnone) #0 {
  %6 = tail call i64 @strlen(i8* %2) #16
  %7 = shl i64 %6, 32
  %8 = ashr exact i64 %7, 32
  %9 = getelementptr inbounds i8, i8* %3, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 46
  br i1 %11, label %12, label %22

; <label>:12:                                     ; preds = %5
  %13 = add i64 %7, 4294967296
  %14 = ashr exact i64 %13, 32
  %15 = getelementptr inbounds i8, i8* %3, i64 %14
  %16 = tail call i8* @strchr(i8* %15, i32 46) #16
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %32

; <label>:18:                                     ; preds = %12
  %19 = bitcast i8* %0 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %19, align 4
  br label %32

; <label>:22:                                     ; preds = %5
  %23 = trunc i64 %6 to i32
  %24 = load i8, i8* %3, align 1
  %25 = icmp ne i8 %24, 0
  %26 = icmp eq i32 %23, 0
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %32

; <label>:28:                                     ; preds = %22
  %29 = bitcast i8* %0 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %29, align 4
  br label %32

; <label>:32:                                     ; preds = %22, %28, %12, %18
  ret i32 0
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_find_children(i8* nocapture, %struct.r_assoc_iterator_* nocapture readnone, i8* nocapture readonly, i8*, %struct.nr_registry_node_* nocapture readnone) #0 {
  %6 = tail call i64 @strlen(i8* %2) #16
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i32 %7, 0
  %9 = shl i64 %6, 32
  %10 = ashr exact i64 %9, 32
  %11 = getelementptr inbounds i8, i8* %3, i64 %10
  %12 = load i8, i8* %11, align 1
  br i1 %8, label %15, label %13

; <label>:13:                                     ; preds = %5
  %14 = icmp eq i8 %12, 46
  br i1 %14, label %17, label %38

; <label>:15:                                     ; preds = %5
  %16 = icmp eq i8 %12, 0
  br i1 %16, label %38, label %17

; <label>:17:                                     ; preds = %13, %15
  %18 = add i64 %9, 4294967296
  %19 = ashr exact i64 %18, 32
  %20 = getelementptr inbounds i8, i8* %3, i64 %19
  %21 = tail call i8* @strchr(i8* %20, i32 46) #16
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %38

; <label>:23:                                     ; preds = %17
  %24 = getelementptr inbounds i8, i8* %0, i64 8
  %25 = bitcast i8* %24 to [128 x i8]**
  %26 = load [128 x i8]*, [128 x i8]** %25, align 8
  %27 = getelementptr inbounds i8, i8* %0, i64 16
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* %26, i64 %29, i64 0
  %31 = tail call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %30, i1 false, i1 true) #7
  %32 = tail call i8* @__strncpy_chk(i8* nonnull %30, i8* nonnull %3, i64 127, i64 %31) #7
  %33 = load i64, i64* %28, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %28, align 8
  %35 = bitcast i8* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %23, %15, %17, %13
  br label %39

; <label>:39:                                     ; preds = %38, %23
  %40 = phi i32 [ 0, %38 ], [ 12, %23 ]
  ret i32 %40
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_local_dump_print(i8*, %struct.r_assoc_iterator_* nocapture readnone, i8* nocapture readnone, i8*, %struct.nr_registry_node_*) #0 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #7
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %struct.nr_registry_node_, %struct.nr_registry_node_* %4, i64 0, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 11
  br i1 %10, label %40, label %11

; <label>:11:                                     ; preds = %5
  %12 = call i8* @nr_reg_alloc_node_data(i8* %3, %struct.nr_registry_node_* nonnull %4, i32* nonnull %6)
  %13 = icmp eq i8* %0, null
  br i1 %13, label %17, label %14

; <label>:14:                                     ; preds = %11
  %15 = bitcast i8* %0 to %struct._IO_FILE*
  %16 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %15, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), i8* %3, i8* %12) #7
  br label %20

; <label>:17:                                     ; preds = %11
  %18 = load i32, i32* @NR_LOG_REGISTRY, align 4
  %19 = tail call i32 (i32, i32, i8*, ...) @r_log(i32 %18, i32 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* %3, i8* %12)
  br label %20

; <label>:20:                                     ; preds = %17, %14
  %21 = load i32, i32* %6, align 4
  %22 = icmp ne i32 %21, 0
  %23 = icmp ne i8* %12, null
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %40

; <label>:25:                                     ; preds = %20
  %26 = getelementptr inbounds i8, i8* %12, i64 -12
  %27 = bitcast i8* %26 to %struct.r_malloc_chunk*
  %28 = bitcast %struct.r_malloc_chunk* %27 to %struct.r_malloc_chunk_*
  %29 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* @mem_usage, align 4
  %32 = sub i32 -16, %30
  %33 = add i32 %32, %31
  store i32 %33, i32* @mem_usage, align 4
  %34 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %28, i64 0, i32 1
  %35 = load i8, i8* %34, align 4
  %36 = zext i8 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = sub i32 %38, %30
  store i32 %39, i32* %37, align 4
  tail call void @free(i8* nonnull %26) #7
  br label %40

; <label>:40:                                     ; preds = %5, %20, %25
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #7
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_assoc_destroy(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = bitcast i8** %2 to %struct.r_assoc_**
  %4 = call i32 @r_assoc_destroy(%struct.r_assoc_** nonnull %3)
  ret i32 0
}

; Function Attrs: nounwind sspstrong uwtable
define internal i32 @nr_reg_info_free(i8*) #0 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %18, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds i8, i8* %0, i64 -12
  %5 = bitcast i8* %4 to %struct.r_malloc_chunk*
  %6 = bitcast %struct.r_malloc_chunk* %5 to %struct.r_malloc_chunk_*
  %7 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = load i32, i32* @mem_usage, align 4
  %10 = sub i32 -16, %8
  %11 = add i32 %10, %9
  store i32 %11, i32* @mem_usage, align 4
  %12 = getelementptr inbounds %struct.r_malloc_chunk_, %struct.r_malloc_chunk_* %6, i64 0, i32 1
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* @mem_stats, i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %16, %8
  store i32 %17, i32* %15, align 4
  tail call void @free(i8* nonnull %4) #7
  br label %18

; <label>:18:                                     ; preds = %1, %3
  ret i32 0
}

declare i32 @__vfprintf_chk(%struct._IO_FILE*, i32, i8*, %struct.__va_list_tag*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #5

attributes #0 = { nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { norecurse nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { argmemonly nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readnone sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readonly sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readonly }
attributes #17 = { nounwind readnone }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!3 = !{i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* @nr_reg_local_count_children, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* @nr_reg_local_dump_print, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* @nr_reg_local_find_children, i32 (i8*, %struct.r_assoc_iterator_*, i8*, i8*, %struct.nr_registry_node_*)* @nr_reg_local_iter_delete}
