; ModuleID = '/usr/src/sys/compat/linux/linux_futex.c'
source_filename = "/usr/src/sys/compat/linux/linux_futex.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-portbld-freebsd12.0"

module asm ".ident\09\22$FreeBSD: head/sys/compat/linux/linux_futex.c 336914 2018-07-30 15:46:40Z asomers $\22"
module asm ".globl __start_set_pcpu"
module asm ".globl __stop_set_pcpu"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"
module asm ".globl __start_set_sdt_argtypes_set"
module asm ".globl __stop_set_sdt_argtypes_set"
module asm ".globl __start_set_sdt_probes_set"
module asm ".globl __stop_set_sdt_probes_set"

%struct.sdt_provider = type { i8*, %struct.anon, i64, i32 }
%struct.anon = type { %struct.sdt_provider*, %struct.sdt_provider** }
%struct.sdt_probe = type { i32, %struct.sdt_provider*, %struct.anon.0, %struct.anon.1, i8*, i8*, i8*, i64, i32, %struct.linker_file* }
%struct.anon.0 = type { %struct.sdt_probe*, %struct.sdt_probe** }
%struct.anon.1 = type { %struct.sdt_argtype*, %struct.sdt_argtype** }
%struct.sdt_argtype = type { i32, i8*, i8*, %struct.anon.2, %struct.sdt_probe* }
%struct.anon.2 = type { %struct.sdt_argtype*, %struct.sdt_argtype** }
%struct.linker_file = type opaque
%struct.futex_list = type { %struct.futex* }
%struct.futex = type { %struct.mtx, i32*, %struct.umtx_key, i32, i32, %struct.anon.50, %struct.lf_waiting_proc }
%struct.mtx = type { %struct.lock_object, i64 }
%struct.lock_object = type { i8*, i32, i32, %struct.witness* }
%struct.witness = type opaque
%struct.umtx_key = type { i32, i32, i32, %union.anon.46 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.vm_object*, i64 }
%struct.vm_object = type opaque
%struct.anon.50 = type { %struct.futex*, %struct.futex** }
%struct.lf_waiting_proc = type { %struct.waiting_proc*, %struct.waiting_proc** }
%struct.waiting_proc = type { i32, %struct.futex*, %struct.anon.51 }
%struct.anon.51 = type { %struct.waiting_proc*, %struct.waiting_proc** }
%struct.malloc_type = type { %struct.malloc_type*, i64, i8*, i8* }
%struct.thread = type { %struct.mtx*, %struct.proc*, %struct.anon.32, %struct.anon.33, %struct.anon.34, %struct.anon.35, %struct.anon.36, %struct.cpuset*, %struct.domainset_ref, %struct.seltd*, %struct.sleepqueue*, %struct.turnstile*, %struct.rl_q_entry*, %struct.umtx_q*, i32, %struct.sigqueue, i8, i8, i32, i32, i32, i32, i32, i8*, i8*, i8, i8, i16, i16, i16, i16, i16, %struct.turnstile*, i8*, %struct.anon.40, %struct.lock_list_entry*, i32, i32, %struct.ucred*, %struct.plimit*, i32, i32, i32, i32, i32, %struct.rusage, %struct.rusage_ext, i64, i64, i32, i32, i32, i32, i32, %struct.__sigset, i32, %struct.sigaltstack, i32, i64, i32, [20 x i8], %struct.file*, i32, %struct.__siginfo, i32, %struct.osd, %struct.vm_map_entry*, i32, i32, i32, i8*, i64, i32, i64, %struct.kcov_info*, %struct.__sigset, i8, i8, i8, i8, i8, i8, i8, i64, i64, i64, %struct.syscall_args, %struct.pcb*, i32, %union.anon.42, i32, %struct.callout, %struct.trapframe*, %struct.vm_object*, i64, i32, i32, %struct.mdthread, %struct.kaudit_record*, [2 x %struct.lpohead], %struct.kdtrace_thread*, i32, %struct.vnet*, i8*, %struct.trapframe*, %struct.proc*, %struct.vm_page**, i32, i8*, i32, i32, i8*, %struct.epoch_tracker*, i32 }
%struct.anon.32 = type { %struct.thread*, %struct.thread** }
%struct.anon.33 = type { %struct.thread*, %struct.thread** }
%struct.anon.34 = type { %struct.thread*, %struct.thread** }
%struct.anon.35 = type { %struct.thread*, %struct.thread** }
%struct.anon.36 = type { %struct.thread*, %struct.thread** }
%struct.cpuset = type { %struct._cpuset, %struct.domainset*, i32, i32, i32, %struct.cpuset*, %struct.anon.38, %struct.anon.39, %struct.setlist }
%struct._cpuset = type { [1 x i64] }
%struct.domainset = type { %struct.anon.37, %struct._domainset, i16, i8, i8, [2 x i8] }
%struct.anon.37 = type { %struct.domainset*, %struct.domainset** }
%struct._domainset = type { [1 x i64] }
%struct.anon.38 = type { %struct.cpuset*, %struct.cpuset** }
%struct.anon.39 = type { %struct.cpuset*, %struct.cpuset** }
%struct.setlist = type { %struct.cpuset* }
%struct.domainset_ref = type { %struct.domainset*, i32 }
%struct.seltd = type opaque
%struct.sleepqueue = type opaque
%struct.rl_q_entry = type opaque
%struct.umtx_q = type opaque
%struct.sigqueue = type { %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.anon.21, %struct.proc*, i32 }
%struct.anon.21 = type { %struct.ksiginfo*, %struct.ksiginfo** }
%struct.ksiginfo = type { %struct.anon.14, %struct.__siginfo, i32, %struct.sigqueue* }
%struct.anon.14 = type { %struct.ksiginfo*, %struct.ksiginfo** }
%struct.turnstile = type opaque
%struct.anon.40 = type { %struct.turnstile* }
%struct.lock_list_entry = type opaque
%struct.ucred = type { i32, i32, i32, i32, i32, i32, i32, %struct.uidinfo*, %struct.uidinfo*, %struct.prison*, %struct.loginclass*, i32, [2 x i8*], %struct.label*, %struct.auditinfo_addr, i32*, i32, [16 x i32] }
%struct.uidinfo = type opaque
%struct.prison = type opaque
%struct.loginclass = type opaque
%struct.label = type opaque
%struct.auditinfo_addr = type { i32, %struct.au_mask, %struct.au_tid_addr, i32, i64 }
%struct.au_mask = type { i32, i32 }
%struct.au_tid_addr = type { i32, i32, [4 x i32] }
%struct.plimit = type opaque
%struct.rusage = type { %struct.timeval, %struct.timeval, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.rusage_ext = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.sigaltstack = type { i8*, i64, i32 }
%struct.file = type opaque
%struct.__siginfo = type { i32, i32, i32, i32, i32, i32, i8*, %union.sigval, %union.anon.15 }
%union.sigval = type { i8* }
%union.anon.15 = type { %struct.anon.20 }
%struct.anon.20 = type { i64, [7 x i32] }
%struct.osd = type { i32, i8**, %struct.anon.41 }
%struct.anon.41 = type { %struct.osd*, %struct.osd** }
%struct.vm_map_entry = type opaque
%struct.kcov_info = type opaque
%struct.__sigset = type { [4 x i32] }
%struct.syscall_args = type { i32, %struct.sysent*, [8 x i64], i32 }
%struct.sysent = type { i32, i32 (%struct.thread*, i8*)*, i16, void (i32, i8*, i64*, i32*)*, i32, i32, i32, i32 }
%struct.pcb = type opaque
%union.anon.42 = type { [2 x i64] }
%struct.callout = type { %union.anon, i64, i64, i8*, void (i8*)*, %struct.lock_object*, i16, i16, i32 }
%union.anon = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.callout*, %struct.callout** }
%struct.mdthread = type { i32, i64, i64, %struct.pmap_invl_gen, i64, i32 }
%struct.pmap_invl_gen = type { i64, %struct.anon.43 }
%struct.anon.43 = type { %struct.pmap_invl_gen*, %struct.pmap_invl_gen** }
%struct.kaudit_record = type opaque
%struct.lpohead = type { %struct.lock_profile_object* }
%struct.lock_profile_object = type opaque
%struct.kdtrace_thread = type opaque
%struct.vnet = type opaque
%struct.trapframe = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i16, i16, i64, i32, i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.proc = type { %struct.anon.3, %struct.anon.4, %struct.mtx, %struct.ucred*, %struct.filedesc*, %struct.filedesc_to_leader*, %struct.pstats*, %struct.plimit*, %struct.callout, %struct.sigacts*, i32, i32, i32, i32, %struct.anon.8, %struct.anon.9, %struct.proc*, %struct.anon.10, %struct.anon.11, %struct.proc*, %struct.anon.12, %struct.anon.13, %struct.mtx, %struct.mtx, %struct.mtx, %struct.mtx, %struct.ksiginfo*, %struct.sigqueue, i32, %struct.vmspace*, i32, i32, %struct.itimerval, %struct.rusage, %struct.rusage_ext, %struct.rusage_ext, i32, i32, i32, %struct.vnode*, %struct.ucred*, %struct.vnode*, i32, %struct.sigiolst, i32, i32, i64, i32, i32, i8, i8, i32, %struct.nlminfo*, %struct.kaioinfo*, %struct.thread*, i32, %struct.thread*, i32, i32, %struct.itimers*, %struct.procdesc*, i32, i32, %struct.filemon*, i32, i32, i32, i32, [20 x i8], %struct.sysentvec*, %struct.pargs*, i64, i8, i32, i32, i16, i64, i32, i32, %struct.pgrp*, %struct.knlist*, i32, %struct.mdproc, %struct.callout, i16, %struct.proc*, %struct.proc*, i8*, %struct.label*, %struct.anon.28, %struct.anon.29, %struct.kdtrace_proc*, %struct.cv, i64, %struct.racct*, i32, %struct.anon.30, %struct.anon.31 }
%struct.anon.3 = type { %struct.proc*, %struct.proc** }
%struct.anon.4 = type { %struct.thread*, %struct.thread** }
%struct.filedesc = type opaque
%struct.filedesc_to_leader = type opaque
%struct.pstats = type opaque
%struct.sigacts = type { [128 x void (i32)*], [128 x %struct.__sigset], %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, i32, i32, %struct.mtx }
%struct.anon.8 = type { %struct.proc*, %struct.proc** }
%struct.anon.9 = type { %struct.proc*, %struct.proc** }
%struct.anon.10 = type { %struct.proc*, %struct.proc** }
%struct.anon.11 = type { %struct.proc* }
%struct.anon.12 = type { %struct.proc* }
%struct.anon.13 = type { %struct.proc*, %struct.proc** }
%struct.vmspace = type opaque
%struct.itimerval = type { %struct.timeval, %struct.timeval }
%struct.vnode = type opaque
%struct.sigiolst = type { %struct.sigio* }
%struct.sigio = type { %union.anon.22, %struct.anon.23, %struct.sigio**, %struct.ucred*, i32 }
%union.anon.22 = type { %struct.proc* }
%struct.anon.23 = type { %struct.sigio* }
%struct.nlminfo = type opaque
%struct.kaioinfo = type opaque
%struct.itimers = type opaque
%struct.procdesc = type opaque
%struct.filemon = type opaque
%struct.sysentvec = type { i32, %struct.sysent*, i32, i32*, i32 (i32, i32)*, i32 (i64**, %struct.image_params*)*, void (void (i32)*, %struct.ksiginfo*, %struct.__sigset*)*, i8*, i32*, i8*, i32 (%struct.thread*, %struct.vnode*, i64, i32)*, i32 (%struct.image_params*)*, i32, i32, i64, i64, i64, i64, i32, i64* (%struct.image_params*)*, void (%struct.thread*, %struct.image_params*, i64)*, void (%struct.rlimit*, i32)*, i64*, i32, void (%struct.thread*, i32)*, i32 (%struct.thread*)*, i8**, i64, i64, i64, i64, i8*, void (%struct.thread*)*, void (%struct.thread*)*, i32 (%struct.thread*)*, i64*, i64* }
%struct.image_params = type { %struct.proc*, %struct.label*, %struct.vnode*, %struct.vm_object*, %struct.vattr*, i8*, i64, i64, i8, i8, i8, i8*, i8*, %struct.sf_buf*, i64, %struct.image_args*, %struct.sysentvec*, i8*, i64, i8*, i64, i32, i64, i32, i8, i64, %struct.ucred*, i8, i32 }
%struct.vattr = type opaque
%struct.sf_buf = type opaque
%struct.image_args = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.filedesc* }
%struct.rlimit = type { i64, i64 }
%struct.pargs = type { i32, i32, [1 x i8] }
%struct.pgrp = type { %struct.anon.44, %struct.anon.45, %struct.session*, %struct.sigiolst, i32, i32, %struct.mtx }
%struct.anon.44 = type { %struct.pgrp*, %struct.pgrp** }
%struct.anon.45 = type { %struct.proc* }
%struct.session = type { i32, %struct.proc*, %struct.vnode*, %struct.cdev_priv*, %struct.tty*, i32, [40 x i8], %struct.mtx }
%struct.cdev_priv = type opaque
%struct.tty = type opaque
%struct.knlist = type { %struct.klist, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, i8*, i32 }
%struct.klist = type { %struct.knote* }
%struct.knote = type { %struct.anon.24, %struct.anon.25, %struct.knlist*, %struct.anon.26, %struct.kqueue*, %struct.kevent, i8*, i32, i32, i32, i32, i64, %union.anon.27, %struct.filterops* }
%struct.anon.24 = type { %struct.knote* }
%struct.anon.25 = type { %struct.knote* }
%struct.anon.26 = type { %struct.knote*, %struct.knote** }
%struct.kqueue = type opaque
%struct.kevent = type { i64, i16, i16, i32, i64, i8*, [4 x i64] }
%union.anon.27 = type { %struct.file* }
%struct.filterops = type { i32, i32 (%struct.knote*)*, void (%struct.knote*)*, i32 (%struct.knote*, i64)*, void (%struct.knote*, %struct.kevent*, i64)* }
%struct.mdproc = type { %struct.proc_ldt*, %struct.system_segment_descriptor }
%struct.proc_ldt = type { i8*, i32 }
%struct.system_segment_descriptor = type { i128 }
%struct.anon.28 = type { %struct.ktr_request*, %struct.ktr_request** }
%struct.ktr_request = type opaque
%struct.anon.29 = type { %struct.mqueue_notifier* }
%struct.mqueue_notifier = type opaque
%struct.kdtrace_proc = type opaque
%struct.cv = type { i8*, i32 }
%struct.racct = type opaque
%struct.anon.30 = type { %struct.proc*, %struct.proc** }
%struct.anon.31 = type { %struct.proc* }
%struct.vm_page = type opaque
%struct.epoch_tracker = type opaque
%struct.linux_sys_futex_args = type { [0 x i8], i8*, [0 x i8], [0 x i8], i32, [4 x i8], [0 x i8], i32, [4 x i8], [0 x i8], %struct.l_timespec*, [0 x i8], [0 x i8], i32*, [0 x i8], [0 x i8], i32, [4 x i8] }
%struct.l_timespec = type { i32, i32 }
%struct.bintime = type { i64, i64 }
%struct.timespec = type { i64, i64 }
%struct.linux_pemuldata = type { i32, %struct.sx, i8*, i32 }
%struct.sx = type { %struct.lock_object, i64 }
%struct.linux_set_robust_list_args = type { [0 x i8], %struct.linux_robust_list_head*, [0 x i8], [0 x i8], i32, [4 x i8] }
%struct.linux_robust_list_head = type { %struct.linux_robust_list, i32, i32 }
%struct.linux_robust_list = type { i32 }
%struct.linux_emuldata = type { i32*, i32*, i32, i32, i32, %struct.linux_robust_list_head* }
%struct.linux_get_robust_list_args = type { [0 x i8], i32, [4 x i8], [0 x i8], %struct.linux_robust_list_head**, [0 x i8], [0 x i8], i32*, [0 x i8] }

@sdt_provider_linuxulator32 = external dso_local global [1 x %struct.sdt_provider], align 16
@.str = private unnamed_addr constant [6 x i8] c"locks\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"futex_mtx\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"locked\00", align 1
@sdt_linuxulator32_locks_futex_mtx_locked = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_locks_futex_mtx_locked = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_locked to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_locks_futex_mtx_locked0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_locked, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_locks_futex_mtx_locked0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_locks_futex_mtx_locked0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"unlock\00", align 1
@sdt_linuxulator32_locks_futex_mtx_unlock = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_locks_futex_mtx_unlock = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_locks_futex_mtx_unlock0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_locks_futex_mtx_unlock0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_locks_futex_mtx_unlock0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.4 = private unnamed_addr constant [6 x i8] c"futex\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@sdt_linuxulator32_futex_futex_create = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_create = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_create to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_create0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_create, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_create0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_create0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.6 = private unnamed_addr constant [8 x i8] c"destroy\00", align 1
@sdt_linuxulator32_futex_futex_destroy = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_destroy = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_destroy to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_destroy0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_destroy, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_destroy0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_destroy0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"futex_put\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"entry\00", align 1
@sdt_linuxulator32_futex_futex_put_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_put_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_put_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_put_destroy = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_destroy = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_destroy to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_put_destroy0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_destroy, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_destroy0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_destroy0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_put_destroy1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_destroy, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_destroy1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_destroy1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_put_destroy2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_destroy, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_destroy2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_destroy2 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_put_unlock = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_unlock = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_unlock to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_put_unlock0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_unlock, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_unlock0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_unlock0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_put_unlock1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_unlock, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_unlock1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_unlock1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_put_unlock2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_unlock, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_unlock2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_put_unlock2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.9 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@sdt_linuxulator32_futex_futex_put_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_return to i8*), section "set_sdt_probes_set", align 8
@.str.10 = private unnamed_addr constant [11 x i8] c"futex_get0\00", align 1
@sdt_linuxulator32_futex_futex_get0_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get0_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get0_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get0_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.11 = private unnamed_addr constant [19 x i8] c"umtx_key_get_error\00", align 1
@sdt_linuxulator32_futex_futex_get0_umtx_key_get_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_umtx_key_get_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_umtx_key_get_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get0_umtx_key_get_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_umtx_key_get_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_umtx_key_get_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_umtx_key_get_error0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.12 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@sdt_linuxulator32_futex_futex_get0_shared = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_shared = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_shared to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get0_shared0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_shared, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_shared0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_shared0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get0_shared1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_shared, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_shared1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_shared1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get0_shared2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_shared, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_shared2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_shared2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.13 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@sdt_linuxulator32_futex_futex_get0_null = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_null = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_null to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get0_null0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_null, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_null0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_null0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.14 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@sdt_linuxulator32_futex_futex_get0_new = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_new = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_new to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get0_new0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_new, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_new0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_new0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get0_new1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_new, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_new1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_new1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get0_new2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_new, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_new2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_new2 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_get0_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get0_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get0_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.15 = private unnamed_addr constant [10 x i8] c"futex_get\00", align 1
@sdt_linuxulator32_futex_futex_get_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_get_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.77, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.16 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@sdt_linuxulator32_futex_futex_get_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_error to i8*), section "set_sdt_probes_set", align 8
@sdt_linuxulator32_futex_futex_get_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_get_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_get_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.17 = private unnamed_addr constant [12 x i8] c"futex_sleep\00", align 1
@sdt_linuxulator32_futex_futex_sleep_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.18 = private unnamed_addr constant [14 x i8] c"requeue_error\00", align 1
@sdt_linuxulator32_futex_futex_sleep_requeue_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_requeue_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_requeue_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_requeue_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_requeue_error1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_requeue_error1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_requeue_error2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_requeue_error2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_requeue_error3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_requeue_error3 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_requeue_error4 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error4 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_requeue_error4 to i8*), section "set_sdt_argtypes_set", align 8
@.str.19 = private unnamed_addr constant [12 x i8] c"sleep_error\00", align 1
@sdt_linuxulator32_futex_futex_sleep_sleep_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_sleep_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_sleep_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_sleep_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_sleep_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_sleep_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_sleep_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_sleep_error1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_sleep_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_sleep_error1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_sleep_error1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_sleep_error2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_sleep_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_sleep_error2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_sleep_error2 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_sleep_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_sleep_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_sleep_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.20 = private unnamed_addr constant [11 x i8] c"futex_wake\00", align 1
@sdt_linuxulator32_futex_futex_wake_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wake_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wake_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wake_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.21 = private unnamed_addr constant [8 x i8] c"iterate\00", align 1
@sdt_linuxulator32_futex_futex_wake_iterate = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_iterate = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_iterate to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wake_iterate0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_iterate, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_iterate0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_iterate0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wake_iterate1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_iterate, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_iterate1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_iterate1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wake_iterate2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_iterate, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_iterate2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_iterate2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.22 = private unnamed_addr constant [7 x i8] c"wakeup\00", align 1
@sdt_linuxulator32_futex_futex_wake_wakeup = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_wakeup = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_wakeup to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wake_wakeup0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_wakeup, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_wakeup0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_wakeup0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_wake_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wake_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wake_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.23 = private unnamed_addr constant [14 x i8] c"futex_requeue\00", align 1
@sdt_linuxulator32_futex_futex_requeue_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_entry3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_entry3 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_requeue_wakeup = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_wakeup = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_wakeup to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_wakeup0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_wakeup, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_wakeup0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_wakeup0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.24 = private unnamed_addr constant [8 x i8] c"requeue\00", align 1
@sdt_linuxulator32_futex_futex_requeue_requeue = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_requeue = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_requeue to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_requeue0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_requeue0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_requeue0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_requeue1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_requeue1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_requeue1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_requeue2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_requeue2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_requeue2 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_requeue_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_requeue_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_requeue_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.25 = private unnamed_addr constant [11 x i8] c"futex_wait\00", align 1
@sdt_linuxulator32_futex_futex_wait_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wait_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wait_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.72, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wait_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wait_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.78, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wait_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wait_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wait_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_wait_entry3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wait_entry3 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_wait_sleep_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wait_sleep_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_sleep_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wait_sleep_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_sleep_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_sleep_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wait_sleep_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_wait_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wait_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_wait_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_wait_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.26 = private unnamed_addr constant [16 x i8] c"futex_atomic_op\00", align 1
@sdt_linuxulator32_futex_futex_atomic_op_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.27 = private unnamed_addr constant [11 x i8] c"decoded_op\00", align 1
@sdt_linuxulator32_futex_futex_atomic_op_decoded_op = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_decoded_op = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_decoded_op to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_decoded_op0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_decoded_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_decoded_op0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_decoded_op1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_decoded_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_decoded_op1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_decoded_op2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_decoded_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_decoded_op2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_decoded_op3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_decoded_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_decoded_op3 to i8*), section "set_sdt_argtypes_set", align 8
@.str.28 = private unnamed_addr constant [21 x i8] c"missing_access_check\00", align 1
@sdt_linuxulator32_futex_futex_atomic_op_missing_access_check = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_missing_access_check = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_missing_access_check to i8*), section "set_sdt_probes_set", align 8
@.str.29 = private unnamed_addr constant [17 x i8] c"unimplemented_op\00", align 1
@sdt_linuxulator32_futex_futex_atomic_op_unimplemented_op = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_unimplemented_op = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_unimplemented_op to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_unimplemented_op0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_unimplemented_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_unimplemented_op0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_unimplemented_op0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.30 = private unnamed_addr constant [18 x i8] c"unimplemented_cmp\00", align 1
@sdt_linuxulator32_futex_futex_atomic_op_unimplemented_cmp = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_unimplemented_cmp = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_unimplemented_cmp to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_unimplemented_cmp0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_unimplemented_cmp, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_unimplemented_cmp0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_unimplemented_cmp0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_futex_atomic_op_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_futex_atomic_op_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_futex_atomic_op_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.31 = private unnamed_addr constant [16 x i8] c"linux_sys_futex\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.81, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@.str.32 = private unnamed_addr constant [26 x i8] c"unimplemented_clockswitch\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unimplemented_clockswitch = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_clockswitch = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_clockswitch to i8*), section "set_sdt_probes_set", align 8
@.str.33 = private unnamed_addr constant [13 x i8] c"copyin_error\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_copyin_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_copyin_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_copyin_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_copyin_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_copyin_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_copyin_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_copyin_error0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.34 = private unnamed_addr constant [24 x i8] c"invalid_cmp_requeue_use\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_invalid_cmp_requeue_use = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_invalid_cmp_requeue_use = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_invalid_cmp_requeue_use to i8*), section "set_sdt_probes_set", align 8
@.str.35 = private unnamed_addr constant [11 x i8] c"debug_wait\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_debug_wait = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wait = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.36 = private unnamed_addr constant [21 x i8] c"debug_wait_value_neq\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq3 to i8*), section "set_sdt_argtypes_set", align 8
@.str.37 = private unnamed_addr constant [11 x i8] c"debug_wake\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_debug_wake = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wake = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake2 to i8*), section "set_sdt_argtypes_set", align 8
@.str.38 = private unnamed_addr constant [18 x i8] c"debug_cmp_requeue\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue3 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue4 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.82, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue4 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue4 to i8*), section "set_sdt_argtypes_set", align 8
@.str.39 = private unnamed_addr constant [28 x i8] c"debug_cmp_requeue_value_neq\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq1 to i8*), section "set_sdt_argtypes_set", align 8
@.str.40 = private unnamed_addr constant [14 x i8] c"debug_wake_op\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op2 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op3 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op3 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op3 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op4 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op4 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op4 to i8*), section "set_sdt_argtypes_set", align 8
@.str.41 = private unnamed_addr constant [17 x i8] c"unhandled_efault\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unhandled_efault = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unhandled_efault = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unhandled_efault to i8*), section "set_sdt_probes_set", align 8
@.str.42 = private unnamed_addr constant [22 x i8] c"unimplemented_lock_pi\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unimplemented_lock_pi = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_lock_pi = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_lock_pi to i8*), section "set_sdt_probes_set", align 8
@.str.43 = private unnamed_addr constant [24 x i8] c"unimplemented_unlock_pi\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unimplemented_unlock_pi = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_unlock_pi = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_unlock_pi to i8*), section "set_sdt_probes_set", align 8
@.str.44 = private unnamed_addr constant [25 x i8] c"unimplemented_trylock_pi\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unimplemented_trylock_pi = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_trylock_pi = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_trylock_pi to i8*), section "set_sdt_probes_set", align 8
@.str.45 = private unnamed_addr constant [19 x i8] c"deprecated_requeue\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_deprecated_requeue = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_deprecated_requeue = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_deprecated_requeue to i8*), section "set_sdt_probes_set", align 8
@.str.46 = private unnamed_addr constant [30 x i8] c"unimplemented_wait_requeue_pi\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unimplemented_wait_requeue_pi = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_wait_requeue_pi = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_wait_requeue_pi to i8*), section "set_sdt_probes_set", align 8
@.str.47 = private unnamed_addr constant [29 x i8] c"unimplemented_cmp_requeue_pi\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unimplemented_cmp_requeue_pi = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_cmp_requeue_pi = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_cmp_requeue_pi to i8*), section "set_sdt_probes_set", align 8
@.str.48 = private unnamed_addr constant [18 x i8] c"unknown_operation\00", align 1
@sdt_linuxulator32_futex_linux_sys_futex_unknown_operation = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unknown_operation = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unknown_operation to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_unknown_operation0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unknown_operation, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_unknown_operation0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_unknown_operation0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_linux_sys_futex_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_sys_futex_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_sys_futex_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.49 = private unnamed_addr constant [22 x i8] c"linux_set_robust_list\00", align 1
@sdt_linuxulator32_futex_linux_set_robust_list_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_set_robust_list_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_set_robust_list_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_set_robust_list_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_set_robust_list_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_set_robust_list_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.83, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_set_robust_list_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_set_robust_list_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@.str.50 = private unnamed_addr constant [11 x i8] c"size_error\00", align 1
@sdt_linuxulator32_futex_linux_set_robust_list_size_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_set_robust_list_size_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_size_error to i8*), section "set_sdt_probes_set", align 8
@sdt_linuxulator32_futex_linux_set_robust_list_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_set_robust_list_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_set_robust_list_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_set_robust_list_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_set_robust_list_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.51 = private unnamed_addr constant [22 x i8] c"linux_get_robust_list\00", align 1
@sdt_linuxulator32_futex_linux_get_robust_list_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_get_robust_list_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_get_robust_list_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_get_robust_list_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_linux_get_robust_list_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.84, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_get_robust_list_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@.str.52 = private unnamed_addr constant [14 x i8] c"copyout_error\00", align 1
@sdt_linuxulator32_futex_linux_get_robust_list_copyout_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_get_robust_list_copyout_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_copyout_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_get_robust_list_copyout_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_copyout_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_copyout_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_get_robust_list_copyout_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_linux_get_robust_list_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_get_robust_list_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_linux_get_robust_list_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_linux_get_robust_list_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.53 = private unnamed_addr constant [19 x i8] c"handle_futex_death\00", align 1
@sdt_linuxulator32_futex_handle_futex_death_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_handle_futex_death_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_handle_futex_death_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_handle_futex_death_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_handle_futex_death_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_handle_futex_death_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_handle_futex_death_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.86, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_handle_futex_death_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_handle_futex_death_copyin_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_handle_futex_death_copyin_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_copyin_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_handle_futex_death_copyin_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_copyin_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_copyin_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_handle_futex_death_copyin_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_handle_futex_death_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_handle_futex_death_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_handle_futex_death_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_handle_futex_death_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.54 = private unnamed_addr constant [19 x i8] c"fetch_robust_entry\00", align 1
@sdt_linuxulator32_futex_fetch_robust_entry_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_fetch_robust_entry_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_fetch_robust_entry_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_fetch_robust_entry_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_fetch_robust_entry_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_fetch_robust_entry_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_fetch_robust_entry_entry2 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.88, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_entry2 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_fetch_robust_entry_entry2 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_fetch_robust_entry_copyin_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_fetch_robust_entry_copyin_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_copyin_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_fetch_robust_entry_copyin_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_copyin_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_copyin_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_fetch_robust_entry_copyin_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_fetch_robust_entry_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_fetch_robust_entry_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_return to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_fetch_robust_entry_return0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_return, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_return0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_fetch_robust_entry_return0 to i8*), section "set_sdt_argtypes_set", align 8
@.str.55 = private unnamed_addr constant [16 x i8] c"release_futexes\00", align 1
@sdt_linuxulator32_futex_release_futexes_entry = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_release_futexes_entry = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_entry to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_release_futexes_entry0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_release_futexes_entry0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_release_futexes_entry0 to i8*), section "set_sdt_argtypes_set", align 8
@sdta_linuxulator32_futex_release_futexes_entry1 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.85, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_entry, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_release_futexes_entry1 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_release_futexes_entry1 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_release_futexes_copyin_error = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_release_futexes_copyin_error = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_copyin_error to i8*), section "set_sdt_probes_set", align 8
@sdta_linuxulator32_futex_release_futexes_copyin_error0 = internal global [1 x %struct.sdt_argtype] [%struct.sdt_argtype { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* null, %struct.anon.2 zeroinitializer, %struct.sdt_probe* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_copyin_error, i32 0, i32 0) }], align 16
@__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_release_futexes_copyin_error0 = internal constant i8* bitcast ([1 x %struct.sdt_argtype]* @sdta_linuxulator32_futex_release_futexes_copyin_error0 to i8*), section "set_sdt_argtypes_set", align 8
@sdt_linuxulator32_futex_release_futexes_return = dso_local global [1 x %struct.sdt_probe] [%struct.sdt_probe { i32 96, %struct.sdt_provider* getelementptr inbounds ([1 x %struct.sdt_provider], [1 x %struct.sdt_provider]* @sdt_provider_linuxulator32, i32 0, i32 0), %struct.anon.0 zeroinitializer, %struct.anon.1 zeroinitializer, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i64 0, i32 0, %struct.linker_file* null }], align 16
@__set_sdt_probes_set_sym_sdt_linuxulator32_futex_release_futexes_return = internal constant i8* bitcast ([1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return to i8*), section "set_sdt_probes_set", align 8
@sdt_probes_enabled = external dso_local global i8, align 1
@sdt_probe_func = external dso_local local_unnamed_addr global void (i32, i64, i64, i64, i64, i64)*, align 8
@.str.56 = private unnamed_addr constant [40 x i8] c"/usr/src/sys/compat/linux/linux_futex.c\00", align 1
@.str.57 = private unnamed_addr constant [46 x i8] c"sys_futex(WAIT uaddr %p val 0x%x bitset 0x%x)\00", align 1
@.str.58 = private unnamed_addr constant [33 x i8] c"sys_futex(WAIT copyin failed %d)\00", align 1
@.str.59 = private unnamed_addr constant [47 x i8] c"sys_futex(WAIT uaddr %p val 0x%x != uval 0x%x)\00", align 1
@.str.60 = private unnamed_addr constant [49 x i8] c"sys_futex(WAKE uaddr %p nrwake 0x%x bitset 0x%x)\00", align 1
@.str.61 = private unnamed_addr constant [78 x i8] c"sys_futex(CMP_REQUEUE uaddr %p nrwake 0x%x uval 0x%x uaddr2 %p nrequeue 0x%x)\00", align 1
@.str.62 = private unnamed_addr constant [40 x i8] c"sys_futex(CMP_REQUEUE copyin failed %d)\00", align 1
@.str.63 = private unnamed_addr constant [45 x i8] c"sys_futex(CMP_REQUEUE val 0x%x != uval 0x%x)\00", align 1
@.str.64 = private unnamed_addr constant [71 x i8] c"sys_futex(WAKE_OP uaddr %p nrwake 0x%x uaddr2 %p op 0x%x nrwake2 0x%x)\00", align 1
@.str.65 = private unnamed_addr constant [47 x i8] c"sys_futex(WAKE_OP atomic_op uaddr %p ret 0x%x)\00", align 1
@.str.66 = private unnamed_addr constant [42 x i8] c"linux_sys_futex: unsupported futex_pi op\0A\00", align 1
@.str.67 = private unnamed_addr constant [47 x i8] c"linux_sys_futex: unsupported futex_requeue op\0A\00", align 1
@.str.68 = private unnamed_addr constant [32 x i8] c"linux_sys_futex: unknown op %d\0A\00", align 1
@.str.69 = private unnamed_addr constant [37 x i8] c"get_robust_list: emuldata notfound.\0A\00", align 1
@futex_list = common dso_local global %struct.futex_list zeroinitializer, align 8
@futex_mtx = common dso_local global %struct.mtx zeroinitializer, align 8
@.str.70 = private unnamed_addr constant [13 x i8] c"struct mtx *\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"struct sx *\00", align 1
@.str.72 = private unnamed_addr constant [15 x i8] c"struct futex *\00", align 1
@.str.73 = private unnamed_addr constant [22 x i8] c"struct waiting_proc *\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"uint32_t *\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"uint32_t\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.77 = private unnamed_addr constant [16 x i8] c"struct futex **\00", align 1
@.str.78 = private unnamed_addr constant [23 x i8] c"struct waiting_proc **\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"struct timespec *\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"struct thread *\00", align 1
@.str.81 = private unnamed_addr constant [30 x i8] c"struct linux_sys_futex_args *\00", align 1
@.str.82 = private unnamed_addr constant [20 x i8] c"struct l_timespec *\00", align 1
@.str.83 = private unnamed_addr constant [36 x i8] c"struct linux_set_robust_list_args *\00", align 1
@.str.84 = private unnamed_addr constant [36 x i8] c"struct linux_get_robust_list_args *\00", align 1
@.str.85 = private unnamed_addr constant [24 x i8] c"struct linux_emuldata *\00", align 1
@.str.86 = private unnamed_addr constant [13 x i8] c"unsigned int\00", align 1
@.str.87 = private unnamed_addr constant [28 x i8] c"struct linux_robust_list **\00", align 1
@.str.88 = private unnamed_addr constant [15 x i8] c"unsigned int *\00", align 1
@M_FUTEX_WP = external dso_local global [1 x %struct.malloc_type], align 16
@.str.89 = private unnamed_addr constant [38 x i8] c"Bad tailq head %p first->prev != head\00", align 1
@M_FUTEX = external dso_local global [1 x %struct.malloc_type], align 16
@.str.90 = private unnamed_addr constant [47 x i8] c"sys_futex(futex_get uaddr %p ref %d shared %d)\00", align 1
@.str.91 = private unnamed_addr constant [35 x i8] c"sys_futex(futex_get uaddr %p null)\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"ftlk\00", align 1
@.str.93 = private unnamed_addr constant [37 x i8] c"Bad list head %p first->prev != head\00", align 1
@.str.94 = private unnamed_addr constant [51 x i8] c"sys_futex(futex_get uaddr %p ref %d shared %d new)\00", align 1
@.str.95 = private unnamed_addr constant [50 x i8] c"sys_futex(futex_unlock uaddr %p ref %d shared %d)\00", align 1
@.str.96 = private unnamed_addr constant [34 x i8] c"Bad link elm %p next->prev != elm\00", align 1
@.str.97 = private unnamed_addr constant [34 x i8] c"Bad link elm %p prev->next != elm\00", align 1
@.str.98 = private unnamed_addr constant [55 x i8] c"sys_futex(futex_put destroy uaddr %p ref %d shared %d)\00", align 1
@.str.99 = private unnamed_addr constant [47 x i8] c"sys_futex(futex_put uaddr %p ref %d shared %d)\00", align 1
@sbt_timethreshold = external dso_local local_unnamed_addr global i64, align 8
@tc_tick_sbt = external dso_local local_unnamed_addr global i64, align 8
@tc_precexp = external dso_local local_unnamed_addr global i32, align 4
@.str.100 = private unnamed_addr constant [60 x i8] c"sys_futex(futex_sleep enter uaddr %p wp %p timo %ld ref %d)\00", align 1
@.str.101 = private unnamed_addr constant [18 x i8] c"futex != wp_futex\00", align 1
@.str.102 = private unnamed_addr constant [76 x i8] c"sys_futex(futex_sleep out error %d uaddr %p wp %p requeued uaddr %p ref %d)\00", align 1
@.str.103 = private unnamed_addr constant [51 x i8] c"sys_futex(futex_sleep out error %d uaddr %p wp %p)\00", align 1
@.str.104 = private unnamed_addr constant [44 x i8] c"sys_futex(futex_wake uaddr %p wp %p ref %d)\00", align 1
@.str.105 = private unnamed_addr constant [48 x i8] c"sys_futex(futex_lock uaddr %p ref %d shared %d)\00", align 1
@.str.106 = private unnamed_addr constant [41 x i8] c"sys_futex(futex_req_wake uaddr %p wp %p)\00", align 1
@.str.107 = private unnamed_addr constant [46 x i8] c"sys_futex(futex_requeue uaddr %p wp %p to %p)\00", align 1
@llvm.used = appending global [192 x i8*] [i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_copyin_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_fetch_robust_entry_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_decoded_op3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_unimplemented_cmp0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_atomic_op_unimplemented_op0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_create0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_destroy0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_new0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_new1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_new2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_null0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_shared0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_shared1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_shared2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get0_umtx_key_get_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_get_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_destroy0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_destroy1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_destroy2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_unlock0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_unlock1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_put_unlock2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_entry3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_requeue0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_requeue1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_requeue2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_requeue_wakeup0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_requeue_error4 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_sleep_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_sleep_error1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_sleep_sleep_error2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_entry3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wait_sleep_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_iterate0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_iterate1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_iterate2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_futex_wake_wakeup0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_copyin_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_entry2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_handle_futex_death_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_copyout_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_get_robust_list_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_set_robust_list_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_set_robust_list_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_set_robust_list_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_copyin_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue4 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op2 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op3 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_debug_wake_op4 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_return0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_linux_sys_futex_unknown_operation0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_release_futexes_copyin_error0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_release_futexes_entry0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_futex_release_futexes_entry1 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_locks_futex_mtx_locked0 to i8*), i8* bitcast (i8** @__set_sdt_argtypes_set_sym_sdta_linuxulator32_locks_futex_mtx_unlock0 to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_fetch_robust_entry_copyin_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_fetch_robust_entry_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_fetch_robust_entry_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_decoded_op to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_missing_access_check to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_unimplemented_cmp to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_atomic_op_unimplemented_op to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_create to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_destroy to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_new to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_null to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_shared to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get0_umtx_key_get_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_get_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_destroy to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_put_unlock to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_requeue to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_requeue_wakeup to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_requeue_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_sleep_sleep_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wait_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wait_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wait_sleep_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_iterate to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_futex_wake_wakeup to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_handle_futex_death_copyin_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_handle_futex_death_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_handle_futex_death_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_get_robust_list_copyout_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_get_robust_list_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_get_robust_list_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_set_robust_list_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_set_robust_list_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_set_robust_list_size_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_copyin_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wait to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wake to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_deprecated_requeue to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_invalid_cmp_requeue_use to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unhandled_efault to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_clockswitch to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_cmp_requeue_pi to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_lock_pi to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_trylock_pi to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_unlock_pi to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unimplemented_wait_requeue_pi to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_linux_sys_futex_unknown_operation to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_release_futexes_copyin_error to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_release_futexes_entry to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_futex_release_futexes_return to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_locks_futex_mtx_locked to i8*), i8* bitcast (i8** @__set_sdt_probes_set_sym_sdt_linuxulator32_locks_futex_mtx_unlock to i8*)], section "llvm.metadata"

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @linux_sys_futex(%struct.thread* %td, %struct.linux_sys_futex_args* %args) local_unnamed_addr #0 {
entry:
  %oldval.i = alloca i32, align 4
  %_bt.i178.i.i = alloca %struct.bintime, align 8
  %_bt.i.i.i = alloca %struct.bintime, align 8
  %lts.i = alloca %struct.l_timespec, align 1
  %kts.i = alloca %struct.timespec, align 8
  %wp = alloca %struct.waiting_proc*, align 8
  %f = alloca %struct.futex*, align 8
  %f2 = alloca %struct.futex*, align 8
  %uts = alloca %struct.timespec, align 8
  %val = alloca i32, align 4
  %0 = bitcast %struct.waiting_proc** %wp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %1 = bitcast %struct.futex** %f to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #5
  %2 = bitcast %struct.futex** %f2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #5
  %3 = bitcast %struct.timespec* %uts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #5
  %4 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %5, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %6 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %6, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %7 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %6 to i32
  %8 = ptrtoint %struct.thread* %td to i64
  %9 = ptrtoint %struct.linux_sys_futex_args* %args to i64
  tail call void %7(i32 %conv5, i64 %8, i64 %9, i64 0, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %op = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 4
  %10 = load i32, i32* %op, align 8
  %11 = trunc i32 %10 to i8
  %tobool7 = icmp slt i8 %11, 0
  br i1 %tobool7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %do.end
  %and10 = and i32 %10, -129
  store i32 %and10, i32* %op, align 8
  br label %if.end11

if.end11:                                         ; preds = %do.end, %if.then8
  %12 = phi i32 [ %and10, %if.then8 ], [ %10, %do.end ]
  %flags.0 = phi i32 [ 0, %if.then8 ], [ 8, %do.end ]
  %and13 = and i32 %12, 256
  %and15 = and i32 %12, -257
  store i32 %and15, i32* %op, align 8
  %tobool17 = icmp eq i32 %and13, 0
  %13 = or i32 %and15, 2
  %14 = icmp eq i32 %13, 11
  %15 = or i1 %tobool17, %14
  br i1 %15, label %if.end53, label %do.body25

do.body25:                                        ; preds = %if.end11
  %16 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool29 = icmp eq i8 %16, 0
  br i1 %tobool29, label %do.body39, label %if.then30, !prof !3

if.then30:                                        ; preds = %do.body25
  %17 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_clockswitch, i64 0, i64 0, i32 7), align 8
  %tobool32 = icmp eq i64 %17, 0
  br i1 %tobool32, label %do.body39, label %if.then33, !prof !3

if.then33:                                        ; preds = %if.then30
  %18 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv34 = trunc i64 %17 to i32
  tail call void %18(i32 %conv34, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body39

do.body39:                                        ; preds = %if.then30, %do.body25, %if.then33
  %19 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool43 = icmp eq i8 %19, 0
  br i1 %tobool43, label %cleanup, label %if.then44, !prof !3

if.then44:                                        ; preds = %do.body39
  %20 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool46 = icmp eq i64 %20, 0
  br i1 %tobool46, label %cleanup, label %if.then47, !prof !3

if.then47:                                        ; preds = %if.then44
  %21 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv48 = trunc i64 %20 to i32
  tail call void %21(i32 %conv48, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end53:                                         ; preds = %if.end11
  store %struct.futex* null, %struct.futex** %f2, align 8
  store %struct.futex* null, %struct.futex** %f, align 8
  switch i32 %and15, label %sw.default [
    i32 0, label %sw.bb
    i32 9, label %do.body56
    i32 1, label %sw.bb244
    i32 10, label %do.body247
    i32 4, label %do.body325
    i32 5, label %do.body537
    i32 6, label %sw.bb703
    i32 7, label %sw.bb741
    i32 8, label %sw.bb780
    i32 3, label %sw.bb819
    i32 11, label %sw.bb858
    i32 12, label %sw.bb897
  ]

sw.bb:                                            ; preds = %if.end53
  %val3 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  store i32 -1, i32* %val3, align 8
  br label %do.body56

do.body56:                                        ; preds = %sw.bb, %if.end53
  %22 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool60 = icmp eq i8 %22, 0
  br i1 %tobool60, label %do.body75, label %if.then61, !prof !3

if.then61:                                        ; preds = %do.body56
  %23 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait, i64 0, i64 0, i32 7), align 8
  %tobool63 = icmp eq i64 %23, 0
  br i1 %tobool63, label %do.body75, label %if.then64, !prof !3

if.then64:                                        ; preds = %if.then61
  %24 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv65 = trunc i64 %23 to i32
  %uaddr = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %25 = bitcast i8** %uaddr to i64*
  %26 = load i64, i64* %25, align 8
  %val66 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %27 = load i32, i32* %val66, align 8
  %conv67 = zext i32 %27 to i64
  %val368 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %28 = load i32, i32* %val368, align 8
  %conv69 = zext i32 %28 to i64
  tail call void %24(i32 %conv65, i64 %26, i64 %conv67, i64 %conv69, i64 0, i64 0) #6
  br label %do.body75

do.body75:                                        ; preds = %if.then61, %do.body56, %if.then64
  %uaddr76 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %29 = bitcast i8** %uaddr76 to i64*
  %30 = load i64, i64* %29, align 8
  %val77 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %31 = load i32, i32* %val77, align 8
  %conv78 = zext i32 %31 to i64
  %val379 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %32 = load i32, i32* %val379, align 8
  %conv80 = zext i32 %32 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 785, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i64 %30, i64 %conv78, i64 %conv80, i64 0, i64 0, i64 0) #6
  %timeout = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 10
  %33 = load %struct.l_timespec*, %struct.l_timespec** %timeout, align 8
  %cmp85 = icmp eq %struct.l_timespec* %33, null
  br i1 %cmp85, label %if.end124, label %if.then87

if.then87:                                        ; preds = %do.body75
  %34 = load i32, i32* %op, align 8
  %35 = bitcast %struct.l_timespec* %lts.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = bitcast %struct.timespec* %kts.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = bitcast %struct.l_timespec* %33 to i8*
  %call.i = call i32 @copyin(i8* %37, i8* nonnull %35, i64 8) #6
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.end.i, label %do.body92

if.end.i:                                         ; preds = %if.then87
  %call1.i = call i32 @linux_to_native_timespec(%struct.timespec* nonnull %uts, %struct.l_timespec* nonnull %lts.i) #6
  %tobool2.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.i, label %if.end4.i, label %do.body92

if.end4.i:                                        ; preds = %if.end.i
  br i1 %tobool17, label %if.else.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.end4.i
  call void @nanotime(%struct.timespec* nonnull %kts.i) #6
  %tv_sec.i = getelementptr inbounds %struct.timespec, %struct.timespec* %uts, i64 0, i32 0
  %38 = load i64, i64* %tv_sec.i, align 8
  %tv_sec7.i = getelementptr inbounds %struct.timespec, %struct.timespec* %kts.i, i64 0, i32 0
  %39 = load i64, i64* %tv_sec7.i, align 8
  %sub.i = sub i64 %38, %39
  store i64 %sub.i, i64* %tv_sec.i, align 8
  %tv_nsec.i = getelementptr inbounds %struct.timespec, %struct.timespec* %uts, i64 0, i32 1
  %40 = load i64, i64* %tv_nsec.i, align 8
  %tv_nsec9.i = getelementptr inbounds %struct.timespec, %struct.timespec* %kts.i, i64 0, i32 1
  %41 = load i64, i64* %tv_nsec9.i, align 8
  %sub10.i = sub i64 %40, %41
  store i64 %sub10.i, i64* %tv_nsec.i, align 8
  %cmp.i = icmp slt i64 %sub10.i, 0
  br i1 %cmp.i, label %if.then13.i, label %futex_copyin_timeout.exit.thread

if.then13.i:                                      ; preds = %if.then6.i
  %dec.i = add i64 %sub.i, -1
  store i64 %dec.i, i64* %tv_sec.i, align 8
  %add.i = add i64 %sub10.i, 1000000000
  store i64 %add.i, i64* %tv_nsec.i, align 8
  br label %futex_copyin_timeout.exit.thread

if.else.i:                                        ; preds = %if.end4.i
  %cmp17.i = icmp eq i32 %34, 9
  br i1 %cmp17.i, label %if.then18.i, label %futex_copyin_timeout.exit.thread

if.then18.i:                                      ; preds = %if.else.i
  call void @nanouptime(%struct.timespec* nonnull %kts.i) #6
  %tv_sec20.i = getelementptr inbounds %struct.timespec, %struct.timespec* %uts, i64 0, i32 0
  %42 = load i64, i64* %tv_sec20.i, align 8
  %tv_sec21.i = getelementptr inbounds %struct.timespec, %struct.timespec* %kts.i, i64 0, i32 0
  %43 = load i64, i64* %tv_sec21.i, align 8
  %sub22.i = sub i64 %42, %43
  store i64 %sub22.i, i64* %tv_sec20.i, align 8
  %tv_nsec24.i = getelementptr inbounds %struct.timespec, %struct.timespec* %uts, i64 0, i32 1
  %44 = load i64, i64* %tv_nsec24.i, align 8
  %tv_nsec25.i = getelementptr inbounds %struct.timespec, %struct.timespec* %kts.i, i64 0, i32 1
  %45 = load i64, i64* %tv_nsec25.i, align 8
  %sub26.i = sub i64 %44, %45
  store i64 %sub26.i, i64* %tv_nsec24.i, align 8
  %cmp29.i = icmp slt i64 %sub26.i, 0
  br i1 %cmp29.i, label %if.then30.i, label %futex_copyin_timeout.exit.thread

if.then30.i:                                      ; preds = %if.then18.i
  %dec32.i = add i64 %sub22.i, -1
  store i64 %dec32.i, i64* %tv_sec20.i, align 8
  %add34.i = add i64 %sub26.i, 1000000000
  store i64 %add34.i, i64* %tv_nsec24.i, align 8
  br label %futex_copyin_timeout.exit.thread

futex_copyin_timeout.exit.thread:                 ; preds = %if.else.i, %if.then30.i, %if.then18.i, %if.then6.i, %if.then13.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  br label %if.end124

do.body92:                                        ; preds = %if.end.i, %if.then87
  %retval.0.i = phi i32 [ %call.i, %if.then87 ], [ %call1.i, %if.end.i ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  %46 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool96 = icmp eq i8 %46, 0
  br i1 %tobool96, label %do.body107, label %if.then97, !prof !3

if.then97:                                        ; preds = %do.body92
  %47 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_copyin_error, i64 0, i64 0, i32 7), align 8
  %tobool99 = icmp eq i64 %47, 0
  br i1 %tobool99, label %do.body107, label %if.then100, !prof !3

if.then100:                                       ; preds = %if.then97
  %48 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv101 = trunc i64 %47 to i32
  %conv102 = sext i32 %retval.0.i to i64
  call void %48(i32 %conv101, i64 %conv102, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body107

do.body107:                                       ; preds = %if.then97, %do.body92, %if.then100
  %49 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool111 = icmp eq i8 %49, 0
  br i1 %tobool111, label %cleanup, label %if.then112, !prof !3

if.then112:                                       ; preds = %do.body107
  %50 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool114 = icmp eq i64 %50, 0
  br i1 %tobool114, label %cleanup, label %if.then115, !prof !3

if.then115:                                       ; preds = %if.then112
  %51 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv116 = trunc i64 %50 to i32
  %conv117 = sext i32 %retval.0.i to i64
  call void %51(i32 %conv116, i64 %conv117, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end124:                                        ; preds = %futex_copyin_timeout.exit.thread, %do.body75
  %ts.0 = phi %struct.timespec* [ null, %do.body75 ], [ %uts, %futex_copyin_timeout.exit.thread ]
  %52 = bitcast i8** %uaddr76 to i32**
  %or = or i32 %flags.0, 1
  br label %retry0

retry0:                                           ; preds = %if.then148, %if.end124
  %53 = load i32*, i32** %52, align 8
  %call126 = call fastcc i32 @futex_get(i32* %53, %struct.waiting_proc** nonnull %wp, %struct.futex** nonnull %f, i32 %or) #7
  %tobool127 = icmp eq i32 %call126, 0
  br i1 %tobool127, label %if.end144, label %do.body129

do.body129:                                       ; preds = %retry0
  %54 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool133 = icmp eq i8 %54, 0
  br i1 %tobool133, label %cleanup, label %if.then134, !prof !3

if.then134:                                       ; preds = %do.body129
  %55 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool136 = icmp eq i64 %55, 0
  br i1 %tobool136, label %cleanup, label %if.then137, !prof !3

if.then137:                                       ; preds = %if.then134
  %56 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv138 = trunc i64 %55 to i32
  %conv139 = sext i32 %call126 to i64
  call void %56(i32 %conv138, i64 %conv139, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end144:                                        ; preds = %retry0
  %57 = load i8*, i8** %uaddr76, align 8
  %call146 = call i32 @copyin_nofault(i8* %57, i8* nonnull %4, i64 4) #6
  %tobool147 = icmp eq i32 %call146, 0
  br i1 %tobool147, label %if.end192, label %if.then148

if.then148:                                       ; preds = %if.end144
  %58 = load %struct.futex*, %struct.futex** %f, align 8
  %59 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  call fastcc void @futex_put(%struct.futex* %58, %struct.waiting_proc* %59) #7
  %60 = load i8*, i8** %uaddr76, align 8
  %call150 = call i32 @copyin(i8* %60, i8* nonnull %4, i64 4) #6
  %cmp151 = icmp eq i32 %call150, 0
  br i1 %cmp151, label %retry0, label %do.body155

do.body155:                                       ; preds = %if.then148
  %61 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool159 = icmp eq i8 %61, 0
  br i1 %tobool159, label %do.body171, label %if.then160, !prof !3

if.then160:                                       ; preds = %do.body155
  %62 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_copyin_error, i64 0, i64 0, i32 7), align 8
  %tobool162 = icmp eq i64 %62, 0
  br i1 %tobool162, label %do.body171, label %if.then163, !prof !3

if.then163:                                       ; preds = %if.then160
  %63 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv164 = trunc i64 %62 to i32
  %conv165 = sext i32 %call150 to i64
  call void %63(i32 %conv164, i64 %conv165, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body171

do.body171:                                       ; preds = %if.then160, %do.body155, %if.then163
  %conv172 = sext i32 %call150 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 817, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.58, i64 0, i64 0), i64 %conv172, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  %64 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool181 = icmp eq i8 %64, 0
  br i1 %tobool181, label %cleanup, label %if.then182, !prof !3

if.then182:                                       ; preds = %do.body171
  %65 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool184 = icmp eq i64 %65, 0
  br i1 %tobool184, label %cleanup, label %if.then185, !prof !3

if.then185:                                       ; preds = %if.then182
  %66 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv186 = trunc i64 %65 to i32
  call void %66(i32 %conv186, i64 %conv172, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end192:                                        ; preds = %if.end144
  %67 = load i32, i32* %val, align 4
  %68 = load i32, i32* %val77, align 8
  %cmp194 = icmp eq i32 %67, %68
  br i1 %cmp194, label %if.end241, label %do.body197

do.body197:                                       ; preds = %if.end192
  %69 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool201 = icmp eq i8 %69, 0
  br i1 %tobool201, label %do.body218, label %if.then202, !prof !3

if.then202:                                       ; preds = %do.body197
  %70 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wait_value_neq, i64 0, i64 0, i32 7), align 8
  %tobool204 = icmp eq i64 %70, 0
  br i1 %tobool204, label %do.body218, label %if.then205, !prof !3

if.then205:                                       ; preds = %if.then202
  %71 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv206 = trunc i64 %70 to i32
  %72 = load i64, i64* %29, align 8
  %conv209 = zext i32 %68 to i64
  %conv210 = zext i32 %67 to i64
  %73 = load i32, i32* %val379, align 8
  %conv212 = zext i32 %73 to i64
  call void %71(i32 %conv206, i64 %72, i64 %conv209, i64 %conv210, i64 %conv212, i64 0) #6
  %.pre1273 = load i32, i32* %val77, align 8
  %.pre1274 = load i32, i32* %val, align 4
  br label %do.body218

do.body218:                                       ; preds = %if.then202, %do.body197, %if.then205
  %74 = phi i32 [ %67, %if.then202 ], [ %67, %do.body197 ], [ %.pre1274, %if.then205 ]
  %75 = phi i32 [ %68, %if.then202 ], [ %68, %do.body197 ], [ %.pre1273, %if.then205 ]
  %76 = load i64, i64* %29, align 8
  %conv221 = zext i32 %75 to i64
  %conv222 = zext i32 %74 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 827, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59, i64 0, i64 0), i64 %76, i64 %conv221, i64 %conv222, i64 0, i64 0, i64 0) #6
  %77 = load %struct.futex*, %struct.futex** %f, align 8
  %78 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  call fastcc void @futex_put(%struct.futex* %77, %struct.waiting_proc* %78) #7
  %79 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool231 = icmp eq i8 %79, 0
  br i1 %tobool231, label %cleanup, label %if.then232, !prof !3

if.then232:                                       ; preds = %do.body218
  %80 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool234 = icmp eq i64 %80, 0
  br i1 %tobool234, label %cleanup, label %if.then235, !prof !3

if.then235:                                       ; preds = %if.then232
  %81 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv236 = trunc i64 %80 to i32
  call void %81(i32 %conv236, i64 35, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end241:                                        ; preds = %if.end192
  %82 = load %struct.futex*, %struct.futex** %f, align 8
  %83 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %84 = load i32, i32* %val379, align 8
  %85 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1.i = icmp eq i8 %85, 0
  br i1 %tobool1.i, label %do.end.i, label %if.then.i, !prof !3

if.then.i:                                        ; preds = %if.end241
  %86 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_entry, i64 0, i64 0, i32 7), align 8
  %tobool3.i = icmp eq i64 %86, 0
  br i1 %tobool3.i, label %do.end.i, label %if.then4.i, !prof !3

if.then4.i:                                       ; preds = %if.then.i
  %87 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5.i = trunc i64 %86 to i32
  %88 = ptrtoint %struct.futex* %82 to i64
  %89 = ptrtoint %struct.waiting_proc* %83 to i64
  %90 = ptrtoint %struct.timespec* %ts.0 to i64
  %conv6.i = zext i32 %84 to i64
  call void %87(i32 %conv5.i, i64 %88, i64 %89, i64 %90, i64 %conv6.i, i64 0) #6
  br label %do.end.i

do.end.i:                                         ; preds = %if.then4.i, %if.then.i, %if.end241
  %cmp.i1172 = icmp eq i32 %84, 0
  br i1 %cmp.i1172, label %do.body10.i, label %if.end24.i

do.body10.i:                                      ; preds = %do.end.i
  %91 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool14.i = icmp eq i8 %91, 0
  br i1 %tobool14.i, label %do.body967, label %if.then15.i, !prof !3

if.then15.i:                                      ; preds = %do.body10.i
  %92 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_return, i64 0, i64 0, i32 7), align 8
  %tobool17.i = icmp eq i64 %92, 0
  br i1 %tobool17.i, label %do.body967, label %if.then18.i1173, !prof !3

if.then18.i1173:                                  ; preds = %if.then15.i
  %93 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv19.i = trunc i64 %92 to i32
  call void %93(i32 %conv19.i, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body967

if.end24.i:                                       ; preds = %do.end.i
  %f_bitset.i = getelementptr inbounds %struct.futex, %struct.futex* %82, i64 0, i32 4
  store i32 %84, i32* %f_bitset.i, align 4
  %mtx_lock.i.i = getelementptr inbounds %struct.futex, %struct.futex* %82, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i.i, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 501) #6
  %cmp.i.i = icmp eq %struct.timespec* %ts.0, null
  br i1 %cmp.i.i, label %do.body.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end24.i
  %uts.sroa.0.0..sroa_idx.i.i = getelementptr inbounds %struct.timespec, %struct.timespec* %ts.0, i64 0, i32 0
  %uts.sroa.0.0.copyload.i.i = load i64, i64* %uts.sroa.0.0..sroa_idx.i.i, align 8
  %uts.sroa.8.0..sroa_idx147.i.i = getelementptr inbounds %struct.timespec, %struct.timespec* %ts.0, i64 0, i32 1
  %uts.sroa.8.0.copyload.i.i = load i64, i64* %uts.sroa.8.0..sroa_idx147.i.i, align 8
  %94 = icmp slt i64 %uts.sroa.0.0.copyload.i.i, 1073741823
  %spec.select.i.i = select i1 %94, i64 %uts.sroa.0.0.copyload.i.i, i64 1073741823
  %shl.i.i.i = shl i64 %spec.select.i.i, 32
  %cmp.i.i.i.i = icmp sgt i64 %uts.sroa.8.0.copyload.i.i, 4294967295
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %tstosbt.exit.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i
  %div8.i.i.i.i = udiv i64 %uts.sroa.8.0.copyload.i.i, 1000000000
  %mul.i.i.i.i = shl i64 %div8.i.i.i.i, 32
  %rem9.i.i.i.i = urem i64 %uts.sroa.8.0.copyload.i.i, 1000000000
  br label %tstosbt.exit.i.i

tstosbt.exit.i.i:                                 ; preds = %if.then.i.i.i.i, %if.then.i.i
  %_ns.addr.0.i.i.i.i = phi i64 [ %rem9.i.i.i.i, %if.then.i.i.i.i ], [ %uts.sroa.8.0.copyload.i.i, %if.then.i.i ]
  %sb.0.i.i.i.i = phi i64 [ %mul.i.i.i.i, %if.then.i.i.i.i ], [ 0, %if.then.i.i ]
  %mul1.i.i.i.i = mul i64 %_ns.addr.0.i.i.i.i, 9223372037
  %add.i.i.i.i = add i64 %mul1.i.i.i.i, 2147483647
  %shr.i.i.i.i = lshr i64 %add.i.i.i.i, 31
  %add2.i.i.i.i = add i64 %sb.0.i.i.i.i, %shl.i.i.i
  %add.i.i.i = add i64 %add2.i.i.i.i, %shr.i.i.i.i
  %95 = load i64, i64* @sbt_timethreshold, align 8
  %cmp6.i.i = icmp slt i64 %add.i.i.i, %95
  br i1 %cmp6.i.i, label %cond.false.i.i, label %cond.true.i.i

cond.true.i.i:                                    ; preds = %tstosbt.exit.i.i
  %96 = bitcast %struct.bintime* %_bt.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #5
  call void @getbinuptime(%struct.bintime* nonnull %_bt.i.i.i) #6
  %97 = getelementptr inbounds %struct.bintime, %struct.bintime* %_bt.i.i.i, i64 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %struct.bintime, %struct.bintime* %_bt.i.i.i, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %shl.i.i.i.i = shl i64 %98, 32
  %shr.i.i176.i.i = lshr i64 %100, 32
  %add.i.i177.i.i = or i64 %shr.i.i176.i.i, %shl.i.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #5
  %101 = load i64, i64* @tc_tick_sbt, align 8
  %add.i.i = add i64 %add.i.i177.i.i, %101
  br label %if.end10.i.i

cond.false.i.i:                                   ; preds = %tstosbt.exit.i.i
  %102 = bitcast %struct.bintime* %_bt.i178.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #5
  call void @binuptime(%struct.bintime* nonnull %_bt.i178.i.i) #6
  %103 = getelementptr inbounds %struct.bintime, %struct.bintime* %_bt.i178.i.i, i64 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %struct.bintime, %struct.bintime* %_bt.i178.i.i, i64 0, i32 1
  %106 = load i64, i64* %105, align 8
  %shl.i.i179.i.i = shl i64 %104, 32
  %shr.i.i180.i.i = lshr i64 %106, 32
  %add.i.i181.i.i = or i64 %shr.i.i180.i.i, %shl.i.i179.i.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #5
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %cond.false.i.i, %cond.true.i.i
  %sbt.0.i.i = phi i64 [ %add.i.i, %cond.true.i.i ], [ %add.i.i181.i.i, %cond.false.i.i ]
  %add11.i.i = add i64 %sbt.0.i.i, %add.i.i.i
  %107 = load i32, i32* @tc_precexp, align 4
  %sh_prom.i.i = zext i32 %107 to i64
  %shr.i.i = ashr i64 %add.i.i.i, %sh_prom.i.i
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %if.end10.i.i, %if.end24.i
  %prec.0.i.i = phi i64 [ %shr.i.i, %if.end10.i.i ], [ 0, %if.end24.i ]
  %sbt.1.i.i = phi i64 [ %add11.i.i, %if.end10.i.i ], [ 0, %if.end24.i ]
  %108 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool13.i.i = icmp eq i8 %108, 0
  br i1 %tobool13.i.i, label %do.body22.i.i, label %if.then14.i.i, !prof !3

if.then14.i.i:                                    ; preds = %do.body.i.i
  %109 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_entry, i64 0, i64 0, i32 7), align 8
  %tobool16.i.i = icmp eq i64 %109, 0
  br i1 %tobool16.i.i, label %do.body22.i.i, label %if.then17.i.i, !prof !3

if.then17.i.i:                                    ; preds = %if.then14.i.i
  %110 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv18.i.i = trunc i64 %109 to i32
  %111 = ptrtoint %struct.futex* %82 to i64
  %112 = ptrtoint %struct.waiting_proc* %83 to i64
  call void %110(i32 %conv18.i.i, i64 %111, i64 %112, i64 %sbt.1.i.i, i64 0, i64 0) #6
  br label %do.body22.i.i

do.body22.i.i:                                    ; preds = %if.then17.i.i, %if.then14.i.i, %do.body.i.i
  %f_uaddr.i.i = getelementptr inbounds %struct.futex, %struct.futex* %82, i64 0, i32 1
  %113 = bitcast i32** %f_uaddr.i.i to i64*
  %114 = load i64, i64* %113, align 8
  %115 = ptrtoint %struct.waiting_proc* %83 to i64
  %f_refcount.i.i = getelementptr inbounds %struct.futex, %struct.futex* %82, i64 0, i32 3
  %116 = load i32, i32* %f_refcount.i.i, align 8
  %conv23.i.i = zext i32 %116 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 520, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.100, i64 0, i64 0), i64 %114, i64 %115, i64 %sbt.1.i.i, i64 %conv23.i.i, i64 0, i64 0) #6
  %117 = bitcast %struct.waiting_proc* %83 to i8*
  %lock_object.i.i = getelementptr inbounds %struct.futex, %struct.futex* %82, i64 0, i32 0, i32 0
  %call29.i.i = call i32 @_sleep(i8* %117, %struct.lock_object* %lock_object.i.i, i32 256, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i64 %sbt.1.i.i, i64 %prec.0.i.i, i32 512) #6
  %wp_flags.i.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %83, i64 0, i32 0
  %118 = load i32, i32* %wp_flags.i.i, align 8
  %and.i.i = and i32 %118, 1
  %tobool30.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool30.i.i, label %if.else80.i.i, label %do.body32.i.i

do.body32.i.i:                                    ; preds = %do.body22.i.i
  %wp_futex.i.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %83, i64 0, i32 1
  %119 = load %struct.futex*, %struct.futex** %wp_futex.i.i, align 8
  %cmp33.i.i = icmp eq %struct.futex* %119, %82
  br i1 %cmp33.i.i, label %if.then38.i.i, label %do.end41.i.i, !prof !4

if.then38.i.i:                                    ; preds = %do.body32.i.i
  call void (i8*, ...) @kassert_panic(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.101, i64 0, i64 0)) #6
  br label %do.end41.i.i

do.end41.i.i:                                     ; preds = %if.then38.i.i, %do.body32.i.i
  %tobool42.i.i = icmp eq i32 %call29.i.i, 0
  br i1 %tobool42.i.i, label %do.body67.i.i, label %do.body44.i.i

do.body44.i.i:                                    ; preds = %do.end41.i.i
  %120 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool48.i.i = icmp eq i8 %120, 0
  br i1 %tobool48.i.i, label %do.body67.i.i, label %if.then49.i.i, !prof !3

if.then49.i.i:                                    ; preds = %do.body44.i.i
  %121 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_requeue_error, i64 0, i64 0, i32 7), align 8
  %tobool51.i.i = icmp eq i64 %121, 0
  br i1 %tobool51.i.i, label %do.body67.i.i, label %if.then52.i.i, !prof !3

if.then52.i.i:                                    ; preds = %if.then49.i.i
  %122 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv53.i.i = trunc i64 %121 to i32
  %conv54.i.i = sext i32 %call29.i.i to i64
  %123 = load i64, i64* %113, align 8
  %124 = load %struct.futex*, %struct.futex** %wp_futex.i.i, align 8
  %f_uaddr57.i.i = getelementptr inbounds %struct.futex, %struct.futex* %124, i64 0, i32 1
  %125 = bitcast i32** %f_uaddr57.i.i to i64*
  %126 = load i64, i64* %125, align 8
  %f_refcount59.i.i = getelementptr inbounds %struct.futex, %struct.futex* %124, i64 0, i32 3
  %127 = load i32, i32* %f_refcount59.i.i, align 8
  %conv60.i.i = zext i32 %127 to i64
  call void %122(i32 %conv53.i.i, i64 %conv54.i.i, i64 %123, i64 %115, i64 %126, i64 %conv60.i.i) #6
  br label %do.body67.i.i

do.body67.i.i:                                    ; preds = %if.then52.i.i, %if.then49.i.i, %do.body44.i.i, %do.end41.i.i
  %conv68.i.i = sext i32 %call29.i.i to i64
  %128 = load i64, i64* %113, align 8
  %129 = load %struct.futex*, %struct.futex** %wp_futex.i.i, align 8
  %f_uaddr71.i.i = getelementptr inbounds %struct.futex, %struct.futex* %129, i64 0, i32 1
  %130 = bitcast i32** %f_uaddr71.i.i to i64*
  %131 = load i64, i64* %130, align 8
  %f_refcount73.i.i = getelementptr inbounds %struct.futex, %struct.futex* %129, i64 0, i32 3
  %132 = load i32, i32* %f_refcount73.i.i, align 8
  %conv74.i.i = zext i32 %132 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 535, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.102, i64 0, i64 0), i64 %conv68.i.i, i64 %128, i64 %115, i64 %131, i64 %conv74.i.i, i64 0) #6
  call fastcc void @futex_put(%struct.futex* nonnull %82, %struct.waiting_proc* null) #6
  %133 = load %struct.futex*, %struct.futex** %wp_futex.i.i, align 8
  %f_uaddr.i.i.i = getelementptr inbounds %struct.futex, %struct.futex* %133, i64 0, i32 1
  %134 = bitcast i32** %f_uaddr.i.i.i to i64*
  %135 = load i64, i64* %134, align 8
  %f_refcount.i.i.i = getelementptr inbounds %struct.futex, %struct.futex* %133, i64 0, i32 3
  %136 = load i32, i32* %f_refcount.i.i.i, align 8
  %conv.i.i.i = zext i32 %136 to i64
  %shared.i.i.i = getelementptr inbounds %struct.futex, %struct.futex* %133, i64 0, i32 2, i32 2
  %137 = load i32, i32* %shared.i.i.i, align 8
  %conv2.i.i.i = sext i32 %137 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %135, i64 %conv.i.i.i, i64 %conv2.i.i.i, i64 0, i64 0, i64 0) #6
  %mtx_lock.i.i.i = getelementptr inbounds %struct.futex, %struct.futex* %133, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i.i.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i.i.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  br label %if.end108.i.i

if.else80.i.i:                                    ; preds = %do.body22.i.i
  %tobool81.i.i = icmp eq i32 %call29.i.i, 0
  br i1 %tobool81.i.i, label %do.body101.i.i, label %do.body83.i.i

do.body83.i.i:                                    ; preds = %if.else80.i.i
  %138 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool87.i.i = icmp eq i8 %138, 0
  br i1 %tobool87.i.i, label %do.body101.i.i, label %if.then88.i.i, !prof !3

if.then88.i.i:                                    ; preds = %do.body83.i.i
  %139 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_sleep_error, i64 0, i64 0, i32 7), align 8
  %tobool90.i.i = icmp eq i64 %139, 0
  br i1 %tobool90.i.i, label %do.body101.i.i, label %if.then91.i.i, !prof !3

if.then91.i.i:                                    ; preds = %if.then88.i.i
  %140 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv92.i.i = trunc i64 %139 to i32
  %conv93.i.i = sext i32 %call29.i.i to i64
  %141 = load i64, i64* %113, align 8
  call void %140(i32 %conv92.i.i, i64 %conv93.i.i, i64 %141, i64 %115, i64 0, i64 0) #6
  br label %do.body101.i.i

do.body101.i.i:                                   ; preds = %if.then91.i.i, %if.then88.i.i, %do.body83.i.i, %if.else80.i.i
  %conv102.i.i = sext i32 %call29.i.i to i64
  %142 = load i64, i64* %113, align 8
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 545, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.103, i64 0, i64 0), i64 %conv102.i.i, i64 %142, i64 %115, i64 0, i64 0, i64 0) #6
  br label %if.end108.i.i

if.end108.i.i:                                    ; preds = %do.body101.i.i, %do.body67.i.i
  %f.addr.0.i.i = phi %struct.futex* [ %133, %do.body67.i.i ], [ %82, %do.body101.i.i ]
  call fastcc void @futex_put(%struct.futex* %f.addr.0.i.i, %struct.waiting_proc* nonnull %83) #6
  %143 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool113.i.i = icmp eq i8 %143, 0
  br i1 %tobool113.i.i, label %futex_sleep.exit.i, label %if.then114.i.i, !prof !3

if.then114.i.i:                                   ; preds = %if.end108.i.i
  %144 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_sleep_return, i64 0, i64 0, i32 7), align 8
  %tobool116.i.i = icmp eq i64 %144, 0
  br i1 %tobool116.i.i, label %futex_sleep.exit.i, label %if.then117.i.i, !prof !3

if.then117.i.i:                                   ; preds = %if.then114.i.i
  %145 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv118.i.i = trunc i64 %144 to i32
  %conv119.i.i = sext i32 %call29.i.i to i64
  call void %145(i32 %conv118.i.i, i64 %conv119.i.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %futex_sleep.exit.i

futex_sleep.exit.i:                               ; preds = %if.then117.i.i, %if.then114.i.i, %if.end108.i.i
  %cond.i = icmp eq i32 %call29.i.i, 0
  br i1 %cond.i, label %do.body47.i, label %do.body27.i

do.body27.i:                                      ; preds = %futex_sleep.exit.i
  %146 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool31.i = icmp eq i8 %146, 0
  br i1 %tobool31.i, label %if.end42.i, label %if.then32.i, !prof !3

if.then32.i:                                      ; preds = %do.body27.i
  %147 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_sleep_error, i64 0, i64 0, i32 7), align 8
  %tobool34.i = icmp eq i64 %147, 0
  br i1 %tobool34.i, label %if.end42.i, label %if.then35.i, !prof !3

if.then35.i:                                      ; preds = %if.then32.i
  %148 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv36.i = trunc i64 %147 to i32
  %conv37.i = sext i32 %call29.i.i to i64
  call void %148(i32 %conv36.i, i64 %conv37.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %if.end42.i

if.end42.i:                                       ; preds = %if.then35.i, %if.then32.i, %do.body27.i
  %cmp43.i = icmp eq i32 %call29.i.i, 35
  %spec.select.i = select i1 %cmp43.i, i32 60, i32 %call29.i.i
  br label %do.body47.i

do.body47.i:                                      ; preds = %if.end42.i, %futex_sleep.exit.i
  %error.0.i = phi i32 [ 0, %futex_sleep.exit.i ], [ %spec.select.i, %if.end42.i ]
  %149 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool51.i = icmp eq i8 %149, 0
  br i1 %tobool51.i, label %do.body967, label %if.then52.i, !prof !3

if.then52.i:                                      ; preds = %do.body47.i
  %150 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wait_return, i64 0, i64 0, i32 7), align 8
  %tobool54.i = icmp eq i64 %150, 0
  br i1 %tobool54.i, label %do.body967, label %if.then55.i, !prof !3

if.then55.i:                                      ; preds = %if.then52.i
  %151 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv56.i = trunc i64 %150 to i32
  %conv57.i = sext i32 %error.0.i to i64
  call void %151(i32 %conv56.i, i64 %conv57.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body967

sw.bb244:                                         ; preds = %if.end53
  %val3245 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  store i32 -1, i32* %val3245, align 8
  br label %do.body247

do.body247:                                       ; preds = %sw.bb244, %if.end53
  %152 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool251 = icmp eq i8 %152, 0
  br i1 %tobool251, label %do.body267, label %if.then252, !prof !3

if.then252:                                       ; preds = %do.body247
  %153 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake, i64 0, i64 0, i32 7), align 8
  %tobool254 = icmp eq i64 %153, 0
  br i1 %tobool254, label %do.body267, label %if.then255, !prof !3

if.then255:                                       ; preds = %if.then252
  %154 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv256 = trunc i64 %153 to i32
  %uaddr257 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %155 = bitcast i8** %uaddr257 to i64*
  %156 = load i64, i64* %155, align 8
  %val258 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %157 = load i32, i32* %val258, align 8
  %conv259 = zext i32 %157 to i64
  %val3260 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %158 = load i32, i32* %val3260, align 8
  %conv261 = zext i32 %158 to i64
  tail call void %154(i32 %conv256, i64 %156, i64 %conv259, i64 %conv261, i64 0, i64 0) #6
  br label %do.body267

do.body267:                                       ; preds = %if.then252, %do.body247, %if.then255
  %uaddr268 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %159 = bitcast i8** %uaddr268 to i64*
  %160 = load i64, i64* %159, align 8
  %val269 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %161 = load i32, i32* %val269, align 8
  %conv270 = zext i32 %161 to i64
  %val3271 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %162 = load i32, i32* %val3271, align 8
  %conv272 = zext i32 %162 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 846, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.60, i64 0, i64 0), i64 %160, i64 %conv270, i64 %conv272, i64 0, i64 0, i64 0) #6
  %163 = bitcast i8** %uaddr268 to i32**
  %164 = load i32*, i32** %163, align 8
  %or278 = or i32 %flags.0, 2
  %call279 = call fastcc i32 @futex_get(i32* %164, %struct.waiting_proc** null, %struct.futex** nonnull %f, i32 %or278) #7
  %tobool280 = icmp eq i32 %call279, 0
  br i1 %tobool280, label %if.end297, label %do.body282

do.body282:                                       ; preds = %do.body267
  %165 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool286 = icmp eq i8 %165, 0
  br i1 %tobool286, label %cleanup, label %if.then287, !prof !3

if.then287:                                       ; preds = %do.body282
  %166 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool289 = icmp eq i64 %166, 0
  br i1 %tobool289, label %cleanup, label %if.then290, !prof !3

if.then290:                                       ; preds = %if.then287
  %167 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv291 = trunc i64 %166 to i32
  %conv292 = sext i32 %call279 to i64
  call void %167(i32 %conv291, i64 %conv292, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end297:                                        ; preds = %do.body267
  %168 = load %struct.futex*, %struct.futex** %f, align 8
  %cmp298 = icmp eq %struct.futex* %168, null
  br i1 %cmp298, label %if.then300, label %if.end316

if.then300:                                       ; preds = %if.end297
  %arrayidx = getelementptr %struct.thread, %struct.thread* %td, i64 0, i32 89, i32 0, i64 0
  store i64 0, i64* %arrayidx, align 8
  %169 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool305 = icmp eq i8 %169, 0
  br i1 %tobool305, label %cleanup, label %if.then306, !prof !3

if.then306:                                       ; preds = %if.then300
  %170 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool308 = icmp eq i64 %170, 0
  br i1 %tobool308, label %cleanup, label %if.then309, !prof !3

if.then309:                                       ; preds = %if.then306
  %171 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv310 = trunc i64 %170 to i32
  call void %171(i32 %conv310, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end316:                                        ; preds = %if.end297
  %172 = load i32, i32* %val269, align 8
  %173 = load i32, i32* %val3271, align 8
  %call319 = call fastcc i32 @futex_wake(%struct.futex* nonnull %168, i32 %172, i32 %173) #7
  %conv320 = sext i32 %call319 to i64
  %arrayidx323 = getelementptr %struct.thread, %struct.thread* %td, i64 0, i32 89, i32 0, i64 0
  store i64 %conv320, i64* %arrayidx323, align 8
  %174 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %174, %struct.waiting_proc* null) #7
  br label %do.body967

do.body325:                                       ; preds = %if.end53
  %175 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool329 = icmp eq i8 %175, 0
  br i1 %tobool329, label %do.body346, label %if.then330, !prof !3

if.then330:                                       ; preds = %do.body325
  %176 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue, i64 0, i64 0, i32 7), align 8
  %tobool332 = icmp eq i64 %176, 0
  br i1 %tobool332, label %do.body346, label %if.then333, !prof !3

if.then333:                                       ; preds = %if.then330
  %177 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv334 = trunc i64 %176 to i32
  %uaddr335 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %178 = bitcast i8** %uaddr335 to i64*
  %179 = load i64, i64* %178, align 8
  %val336 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %180 = load i32, i32* %val336, align 8
  %conv337 = zext i32 %180 to i64
  %val3338 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %181 = load i32, i32* %val3338, align 8
  %conv339 = zext i32 %181 to i64
  %uaddr2 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 13
  %182 = bitcast i32** %uaddr2 to i64*
  %183 = load i64, i64* %182, align 8
  %timeout340 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 10
  %184 = bitcast %struct.l_timespec** %timeout340 to i64*
  %185 = load i64, i64* %184, align 8
  tail call void %177(i32 %conv334, i64 %179, i64 %conv337, i64 %conv339, i64 %183, i64 %185) #6
  br label %do.body346

do.body346:                                       ; preds = %if.then330, %do.body325, %if.then333
  %uaddr347 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %186 = bitcast i8** %uaddr347 to i64*
  %187 = load i64, i64* %186, align 8
  %val348 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %188 = load i32, i32* %val348, align 8
  %conv349 = zext i32 %188 to i64
  %val3350 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %189 = load i32, i32* %val3350, align 8
  %conv351 = zext i32 %189 to i64
  %uaddr2352 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 13
  %190 = bitcast i32** %uaddr2352 to i64*
  %191 = load i64, i64* %190, align 8
  %timeout353 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 10
  %192 = bitcast %struct.l_timespec** %timeout353 to i64*
  %193 = load i64, i64* %192, align 8
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 872, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.61, i64 0, i64 0), i64 %187, i64 %conv349, i64 %conv351, i64 %191, i64 %193, i64 0) #6
  %194 = load i8*, i8** %uaddr347, align 8
  %195 = bitcast i32** %uaddr2352 to i8**
  %196 = load i8*, i8** %195, align 8
  %cmp360 = icmp eq i8* %194, %196
  br i1 %cmp360, label %do.body363, label %retry1.preheader

retry1.preheader:                                 ; preds = %do.body346
  %197 = bitcast i8* %194 to i32*
  %198 = bitcast i8** %uaddr347 to i32**
  %or393 = or i32 %flags.0, 16
  %or415 = or i32 %flags.0, 20
  %call3941331 = call fastcc i32 @futex_get(i32* %197, %struct.waiting_proc** null, %struct.futex** nonnull %f, i32 %or393) #7
  %tobool3951332 = icmp eq i32 %call3941331, 0
  br i1 %tobool3951332, label %if.end412, label %do.body397

do.body363:                                       ; preds = %do.body346
  %199 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool367 = icmp eq i8 %199, 0
  br i1 %tobool367, label %do.body377, label %if.then368, !prof !3

if.then368:                                       ; preds = %do.body363
  %200 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_invalid_cmp_requeue_use, i64 0, i64 0, i32 7), align 8
  %tobool370 = icmp eq i64 %200, 0
  br i1 %tobool370, label %do.body377, label %if.then371, !prof !3

if.then371:                                       ; preds = %if.then368
  %201 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv372 = trunc i64 %200 to i32
  tail call void %201(i32 %conv372, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body377

do.body377:                                       ; preds = %if.then368, %do.body363, %if.then371
  %202 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool381 = icmp eq i8 %202, 0
  br i1 %tobool381, label %cleanup, label %if.then382, !prof !3

if.then382:                                       ; preds = %do.body377
  %203 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool384 = icmp eq i64 %203, 0
  br i1 %tobool384, label %cleanup, label %if.then385, !prof !3

if.then385:                                       ; preds = %if.then382
  %204 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv386 = trunc i64 %203 to i32
  tail call void %204(i32 %conv386, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

do.body397:                                       ; preds = %if.then438.retry1_crit_edge, %retry1.preheader
  %call394.lcssa = phi i32 [ %call3941331, %retry1.preheader ], [ %call394, %if.then438.retry1_crit_edge ]
  %205 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool401 = icmp eq i8 %205, 0
  br i1 %tobool401, label %cleanup, label %if.then402, !prof !3

if.then402:                                       ; preds = %do.body397
  %206 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool404 = icmp eq i64 %206, 0
  br i1 %tobool404, label %cleanup, label %if.then405, !prof !3

if.then405:                                       ; preds = %if.then402
  %207 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv406 = trunc i64 %206 to i32
  %conv407 = sext i32 %call394.lcssa to i64
  call void %207(i32 %conv406, i64 %conv407, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end412:                                        ; preds = %retry1.preheader, %if.then438.retry1_crit_edge
  %208 = load i32*, i32** %uaddr2352, align 8
  %call416 = call fastcc i32 @futex_get(i32* %208, %struct.waiting_proc** null, %struct.futex** nonnull %f2, i32 %or415) #7
  %tobool417 = icmp eq i32 %call416, 0
  %209 = load %struct.futex*, %struct.futex** %f, align 8
  br i1 %tobool417, label %if.end434, label %if.then418

if.then418:                                       ; preds = %if.end412
  call fastcc void @futex_put(%struct.futex* %209, %struct.waiting_proc* null) #7
  %210 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool423 = icmp eq i8 %210, 0
  br i1 %tobool423, label %cleanup, label %if.then424, !prof !3

if.then424:                                       ; preds = %if.then418
  %211 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool426 = icmp eq i64 %211, 0
  br i1 %tobool426, label %cleanup, label %if.then427, !prof !3

if.then427:                                       ; preds = %if.then424
  %212 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv428 = trunc i64 %211 to i32
  %conv429 = sext i32 %call416 to i64
  call void %212(i32 %conv428, i64 %conv429, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end434:                                        ; preds = %if.end412
  %f_uaddr.i = getelementptr inbounds %struct.futex, %struct.futex* %209, i64 0, i32 1
  %213 = bitcast i32** %f_uaddr.i to i64*
  %214 = load i64, i64* %213, align 8
  %f_refcount.i = getelementptr inbounds %struct.futex, %struct.futex* %209, i64 0, i32 3
  %215 = load i32, i32* %f_refcount.i, align 8
  %conv.i = zext i32 %215 to i64
  %shared.i = getelementptr inbounds %struct.futex, %struct.futex* %209, i64 0, i32 2, i32 2
  %216 = load i32, i32* %shared.i, align 8
  %conv2.i = sext i32 %216 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %214, i64 %conv.i, i64 %conv2.i, i64 0, i64 0, i64 0) #6
  %mtx_lock.i = getelementptr inbounds %struct.futex, %struct.futex* %209, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  %217 = load %struct.futex*, %struct.futex** %f2, align 8
  %f_uaddr.i1175 = getelementptr inbounds %struct.futex, %struct.futex* %217, i64 0, i32 1
  %218 = bitcast i32** %f_uaddr.i1175 to i64*
  %219 = load i64, i64* %218, align 8
  %f_refcount.i1176 = getelementptr inbounds %struct.futex, %struct.futex* %217, i64 0, i32 3
  %220 = load i32, i32* %f_refcount.i1176, align 8
  %conv.i1177 = zext i32 %220 to i64
  %shared.i1178 = getelementptr inbounds %struct.futex, %struct.futex* %217, i64 0, i32 2, i32 2
  %221 = load i32, i32* %shared.i1178, align 8
  %conv2.i1179 = sext i32 %221 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %219, i64 %conv.i1177, i64 %conv2.i1179, i64 0, i64 0, i64 0) #6
  %mtx_lock.i1180 = getelementptr inbounds %struct.futex, %struct.futex* %217, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i1180, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i1180, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  %222 = load i8*, i8** %uaddr347, align 8
  %call436 = call i32 @copyin_nofault(i8* %222, i8* nonnull %4, i64 4) #6
  %tobool437 = icmp eq i32 %call436, 0
  br i1 %tobool437, label %if.end482, label %if.then438

if.then438:                                       ; preds = %if.end434
  %223 = load %struct.futex*, %struct.futex** %f2, align 8
  call fastcc void @futex_put(%struct.futex* %223, %struct.waiting_proc* null) #7
  %224 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %224, %struct.waiting_proc* null) #7
  %225 = load i8*, i8** %uaddr347, align 8
  %call440 = call i32 @copyin(i8* %225, i8* nonnull %4, i64 4) #6
  %cmp441 = icmp eq i32 %call440, 0
  br i1 %cmp441, label %if.then438.retry1_crit_edge, label %do.body445

if.then438.retry1_crit_edge:                      ; preds = %if.then438
  %.pre1271 = load i32*, i32** %198, align 8
  %call394 = call fastcc i32 @futex_get(i32* %.pre1271, %struct.waiting_proc** null, %struct.futex** nonnull %f, i32 %or393) #7
  %tobool395 = icmp eq i32 %call394, 0
  br i1 %tobool395, label %if.end412, label %do.body397

do.body445:                                       ; preds = %if.then438
  %226 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool449 = icmp eq i8 %226, 0
  br i1 %tobool449, label %do.body461, label %if.then450, !prof !3

if.then450:                                       ; preds = %do.body445
  %227 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_copyin_error, i64 0, i64 0, i32 7), align 8
  %tobool452 = icmp eq i64 %227, 0
  br i1 %tobool452, label %do.body461, label %if.then453, !prof !3

if.then453:                                       ; preds = %if.then450
  %228 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv454 = trunc i64 %227 to i32
  %conv455 = sext i32 %call440 to i64
  call void %228(i32 %conv454, i64 %conv455, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body461

do.body461:                                       ; preds = %if.then450, %do.body445, %if.then453
  %conv462 = sext i32 %call440 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 919, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.62, i64 0, i64 0), i64 %conv462, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  %229 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool471 = icmp eq i8 %229, 0
  br i1 %tobool471, label %cleanup, label %if.then472, !prof !3

if.then472:                                       ; preds = %do.body461
  %230 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool474 = icmp eq i64 %230, 0
  br i1 %tobool474, label %cleanup, label %if.then475, !prof !3

if.then475:                                       ; preds = %if.then472
  %231 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv476 = trunc i64 %230 to i32
  call void %231(i32 %conv476, i64 %conv462, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end482:                                        ; preds = %if.end434
  %232 = load i32, i32* %val, align 4
  %233 = load i32, i32* %val3350, align 8
  %cmp484 = icmp eq i32 %232, %233
  br i1 %cmp484, label %if.end527, label %do.body487

do.body487:                                       ; preds = %if.end482
  %234 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool491 = icmp eq i8 %234, 0
  br i1 %tobool491, label %do.body505, label %if.then492, !prof !3

if.then492:                                       ; preds = %do.body487
  %235 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_cmp_requeue_value_neq, i64 0, i64 0, i32 7), align 8
  %tobool494 = icmp eq i64 %235, 0
  br i1 %tobool494, label %do.body505, label %if.then495, !prof !3

if.then495:                                       ; preds = %if.then492
  %236 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv496 = trunc i64 %235 to i32
  %237 = load i32, i32* %val348, align 8
  %conv498 = zext i32 %237 to i64
  %conv499 = zext i32 %232 to i64
  call void %236(i32 %conv496, i64 %conv498, i64 %conv499, i64 0, i64 0, i64 0) #6
  %.pre1272 = load i32, i32* %val, align 4
  br label %do.body505

do.body505:                                       ; preds = %if.then492, %do.body487, %if.then495
  %238 = phi i32 [ %232, %if.then492 ], [ %232, %do.body487 ], [ %.pre1272, %if.then495 ]
  %239 = load i32, i32* %val348, align 8
  %conv507 = zext i32 %239 to i64
  %conv508 = zext i32 %238 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 927, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.63, i64 0, i64 0), i64 %conv507, i64 %conv508, i64 0, i64 0, i64 0, i64 0) #6
  %240 = load %struct.futex*, %struct.futex** %f2, align 8
  call fastcc void @futex_put(%struct.futex* %240, %struct.waiting_proc* null) #7
  %241 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %241, %struct.waiting_proc* null) #7
  %242 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool517 = icmp eq i8 %242, 0
  br i1 %tobool517, label %cleanup, label %if.then518, !prof !3

if.then518:                                       ; preds = %do.body505
  %243 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool520 = icmp eq i64 %243, 0
  br i1 %tobool520, label %cleanup, label %if.then521, !prof !3

if.then521:                                       ; preds = %if.then518
  %244 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv522 = trunc i64 %243 to i32
  call void %244(i32 %conv522, i64 35, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end527:                                        ; preds = %if.end482
  %245 = load i64, i64* %192, align 8
  %conv529 = trunc i64 %245 to i32
  %246 = load %struct.futex*, %struct.futex** %f, align 8
  %247 = load i32, i32* %val348, align 8
  %248 = load %struct.futex*, %struct.futex** %f2, align 8
  %249 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1.i1181 = icmp eq i8 %249, 0
  br i1 %tobool1.i1181, label %do.end.i1188, label %if.then.i1183, !prof !3

if.then.i1183:                                    ; preds = %if.end527
  %250 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_entry, i64 0, i64 0, i32 7), align 8
  %tobool3.i1182 = icmp eq i64 %250, 0
  br i1 %tobool3.i1182, label %do.end.i1188, label %if.then4.i1186, !prof !3

if.then4.i1186:                                   ; preds = %if.then.i1183
  %251 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5.i1184 = trunc i64 %250 to i32
  %252 = ptrtoint %struct.futex* %246 to i64
  %conv6.i1185 = sext i32 %247 to i64
  %253 = ptrtoint %struct.futex* %248 to i64
  %sext = shl i64 %245, 32
  %conv7.i = ashr exact i64 %sext, 32
  call void %251(i32 %conv5.i1184, i64 %252, i64 %conv6.i1185, i64 %253, i64 %conv7.i, i64 0) #6
  br label %do.end.i1188

do.end.i1188:                                     ; preds = %if.then4.i1186, %if.then.i1183, %if.end527
  %mtx_lock.i1187 = getelementptr inbounds %struct.futex, %struct.futex* %246, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i1187, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 600) #6
  %mtx_lock10.i = getelementptr inbounds %struct.futex, %struct.futex* %248, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock10.i, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 601) #6
  %tqh_first.i = getelementptr inbounds %struct.futex, %struct.futex* %246, i64 0, i32 6, i32 0
  %254 = load %struct.waiting_proc*, %struct.waiting_proc** %tqh_first.i, align 8
  %tobool11331.i = icmp eq %struct.waiting_proc* %254, null
  br i1 %tobool11331.i, label %do.body246.i, label %land.rhs.lr.ph.i

land.rhs.lr.ph.i:                                 ; preds = %do.end.i1188
  %f_uaddr.i1189 = getelementptr inbounds %struct.futex, %struct.futex* %246, i64 0, i32 1
  %255 = bitcast i32** %f_uaddr.i1189 to i64*
  %f_uaddr101.i = getelementptr inbounds %struct.futex, %struct.futex* %248, i64 0, i32 1
  %256 = bitcast i32** %f_uaddr101.i to i64*
  %tqh_last.i = getelementptr inbounds %struct.futex, %struct.futex* %246, i64 0, i32 6, i32 1
  %f_waiting_proc161.i = getelementptr inbounds %struct.futex, %struct.futex* %248, i64 0, i32 6
  %tqh_first162.i = getelementptr inbounds %struct.lf_waiting_proc, %struct.lf_waiting_proc* %f_waiting_proc161.i, i64 0, i32 0
  %tqh_last196.i = getelementptr inbounds %struct.futex, %struct.futex* %248, i64 0, i32 6, i32 1
  %f_refcount.i1190 = getelementptr inbounds %struct.futex, %struct.futex* %248, i64 0, i32 3
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %land.rhs.i.backedge, %land.rhs.lr.ph.i
  %.in.i = phi %struct.waiting_proc* [ %254, %land.rhs.lr.ph.i ], [ %258, %land.rhs.i.backedge ]
  %count.0333.i = phi i32 [ 0, %land.rhs.lr.ph.i ], [ %inc.i, %land.rhs.i.backedge ]
  %257 = bitcast %struct.waiting_proc* %.in.i to i8*
  %wp_list.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in.i, i64 0, i32 2
  %tqe_next.i = getelementptr inbounds %struct.anon.51, %struct.anon.51* %wp_list.i, i64 0, i32 0
  %258 = load %struct.waiting_proc*, %struct.waiting_proc** %tqe_next.i, align 8
  %inc.i = add i32 %count.0333.i, 1
  %cmp.i1191 = icmp sgt i32 %inc.i, %247
  br i1 %cmp.i1191, label %do.body82.i, label %do.body15.i

do.body15.i:                                      ; preds = %land.rhs.i
  %259 = load i64, i64* %255, align 8
  %260 = ptrtoint %struct.waiting_proc* %.in.i to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 606, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.106, i64 0, i64 0), i64 %259, i64 %260, i64 0, i64 0, i64 0, i64 0) #6
  %wp_flags.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in.i, i64 0, i32 0
  %261 = load i32, i32* %wp_flags.i, align 8
  %or.i = or i32 %261, 2
  store i32 %or.i, i32* %wp_flags.i, align 8
  %262 = load %struct.waiting_proc*, %struct.waiting_proc** %tqe_next.i, align 8
  %cmp24.i = icmp eq %struct.waiting_proc* %262, null
  br i1 %cmp24.i, label %do.body37.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body15.i
  %tqe_prev.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %262, i64 0, i32 2, i32 1
  %263 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev.i, align 8
  %cmp31.i = icmp eq %struct.waiting_proc** %263, %tqe_next.i
  br i1 %cmp31.i, label %do.body37.i, label %if.then33.i

if.then33.i:                                      ; preds = %land.lhs.true.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0), %struct.waiting_proc* nonnull %.in.i) #8
  unreachable

do.body37.i:                                      ; preds = %land.lhs.true.i, %do.body15.i
  %tqe_prev39.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in.i, i64 0, i32 2, i32 1
  %264 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev39.i, align 8
  %265 = load %struct.waiting_proc*, %struct.waiting_proc** %264, align 8
  %cmp40.i = icmp eq %struct.waiting_proc* %265, %.in.i
  br i1 %cmp40.i, label %do.end45.i, label %if.then42.i

if.then42.i:                                      ; preds = %do.body37.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i64 0, i64 0), %struct.waiting_proc* nonnull %.in.i) #8
  unreachable

do.end45.i:                                       ; preds = %do.body37.i
  %tqe_prev56.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %262, i64 0, i32 2, i32 1
  %tqh_last.i.sink = select i1 %cmp24.i, %struct.waiting_proc*** %tqh_last.i, %struct.waiting_proc*** %tqe_prev56.i
  store %struct.waiting_proc** %264, %struct.waiting_proc*** %tqh_last.i.sink, align 8
  %266 = bitcast %struct.anon.51* %wp_list.i to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %struct.waiting_proc*** %tqe_prev39.i to i64**
  %269 = load i64*, i64** %268, align 8
  store i64 %267, i64* %269, align 8
  %270 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool71.i = icmp eq i8 %270, 0
  br i1 %tobool71.i, label %do.end80.i, label %if.then72.i, !prof !3

if.then72.i:                                      ; preds = %do.end45.i
  %271 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_wakeup, i64 0, i64 0, i32 7), align 8
  %tobool74.i = icmp eq i64 %271, 0
  br i1 %tobool74.i, label %do.end80.i, label %if.then75.i, !prof !3

if.then75.i:                                      ; preds = %if.then72.i
  %272 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv76.i = trunc i64 %271 to i32
  call void %272(i32 %conv76.i, i64 %260, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end80.i

do.end80.i:                                       ; preds = %if.then75.i, %if.then72.i, %do.end45.i
  call void @wakeup_one(i8* nonnull %257) #6
  %tobool11.old.i = icmp eq %struct.waiting_proc* %258, null
  br i1 %tobool11.old.i, label %do.body246.i.loopexit, label %land.rhs.i.backedge

land.rhs.i.backedge:                              ; preds = %do.end80.i, %do.end238.i
  br label %land.rhs.i

do.body82.i:                                      ; preds = %land.rhs.i
  %273 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool86.i = icmp eq i8 %273, 0
  br i1 %tobool86.i, label %do.body99.i, label %if.then87.i, !prof !3

if.then87.i:                                      ; preds = %do.body82.i
  %274 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_requeue, i64 0, i64 0, i32 7), align 8
  %tobool89.i = icmp eq i64 %274, 0
  br i1 %tobool89.i, label %do.body99.i, label %if.then90.i, !prof !3

if.then90.i:                                      ; preds = %if.then87.i
  %275 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv91.i = trunc i64 %274 to i32
  %276 = load i64, i64* %255, align 8
  %277 = ptrtoint %struct.waiting_proc* %.in.i to i64
  %278 = load i64, i64* %256, align 8
  call void %275(i32 %conv91.i, i64 %276, i64 %277, i64 %278, i64 0, i64 0) #6
  br label %do.body99.i

do.body99.i:                                      ; preds = %if.then90.i, %if.then87.i, %do.body82.i
  %279 = load i64, i64* %255, align 8
  %280 = ptrtoint %struct.waiting_proc* %.in.i to i64
  %281 = load i64, i64* %256, align 8
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 615, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.107, i64 0, i64 0), i64 %279, i64 %280, i64 %281, i64 0, i64 0, i64 0) #6
  %wp_flags106.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in.i, i64 0, i32 0
  %282 = load i32, i32* %wp_flags106.i, align 8
  %or107.i = or i32 %282, 1
  store i32 %or107.i, i32* %wp_flags106.i, align 8
  %283 = load %struct.waiting_proc*, %struct.waiting_proc** %tqe_next.i, align 8
  %cmp112.i = icmp eq %struct.waiting_proc* %283, null
  br i1 %cmp112.i, label %do.body127.i, label %land.lhs.true114.i

land.lhs.true114.i:                               ; preds = %do.body99.i
  %tqe_prev118.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %283, i64 0, i32 2, i32 1
  %284 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev118.i, align 8
  %cmp121.i = icmp eq %struct.waiting_proc** %284, %tqe_next.i
  br i1 %cmp121.i, label %do.body127.i, label %if.then123.i

if.then123.i:                                     ; preds = %land.lhs.true114.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0), %struct.waiting_proc* nonnull %.in.i) #8
  unreachable

do.body127.i:                                     ; preds = %land.lhs.true114.i, %do.body99.i
  %tqe_prev129.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in.i, i64 0, i32 2, i32 1
  %285 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev129.i, align 8
  %286 = load %struct.waiting_proc*, %struct.waiting_proc** %285, align 8
  %cmp130.i = icmp eq %struct.waiting_proc* %286, %.in.i
  br i1 %cmp130.i, label %do.end135.i, label %if.then132.i

if.then132.i:                                     ; preds = %do.body127.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i64 0, i64 0), %struct.waiting_proc* nonnull %.in.i) #8
  unreachable

do.end135.i:                                      ; preds = %do.body127.i
  %tqe_prev146.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %283, i64 0, i32 2, i32 1
  %tqh_last.i.sink1336 = select i1 %cmp112.i, %struct.waiting_proc*** %tqh_last.i, %struct.waiting_proc*** %tqe_prev146.i
  store %struct.waiting_proc** %285, %struct.waiting_proc*** %tqh_last.i.sink1336, align 8
  %287 = bitcast %struct.anon.51* %wp_list.i to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %struct.waiting_proc*** %tqe_prev129.i to i64**
  %290 = load i64*, i64** %289, align 8
  store i64 %288, i64* %290, align 8
  %291 = load %struct.waiting_proc*, %struct.waiting_proc** %tqh_first162.i, align 8
  %cmp163.i = icmp eq %struct.waiting_proc* %291, null
  br i1 %cmp163.i, label %if.else192.i, label %land.lhs.true165.i

land.lhs.true165.i:                               ; preds = %do.end135.i
  %tqe_prev169.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %291, i64 0, i32 2, i32 1
  %292 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev169.i, align 8
  %cmp172.i = icmp eq %struct.waiting_proc** %292, %tqh_first162.i
  br i1 %cmp172.i, label %if.then185.i, label %if.then174.i

if.then174.i:                                     ; preds = %land.lhs.true165.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i64 0, i64 0), %struct.lf_waiting_proc* nonnull %f_waiting_proc161.i) #8
  unreachable

if.then185.i:                                     ; preds = %land.lhs.true165.i
  store %struct.waiting_proc* %291, %struct.waiting_proc** %tqe_next.i, align 8
  %293 = load %struct.waiting_proc*, %struct.waiting_proc** %tqh_first162.i, align 8
  %tqe_prev191.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %293, i64 0, i32 2, i32 1
  br label %if.end197.i

if.else192.i:                                     ; preds = %do.end135.i
  store %struct.waiting_proc* null, %struct.waiting_proc** %tqe_next.i, align 8
  br label %if.end197.i

if.end197.i:                                      ; preds = %if.else192.i, %if.then185.i
  %tqh_last196.i.sink = phi %struct.waiting_proc*** [ %tqh_last196.i, %if.else192.i ], [ %tqe_prev191.i, %if.then185.i ]
  store %struct.waiting_proc** %tqe_next.i, %struct.waiting_proc*** %tqh_last196.i.sink, align 8
  store %struct.waiting_proc* %.in.i, %struct.waiting_proc** %tqh_first162.i, align 8
  store %struct.waiting_proc** %tqh_first162.i, %struct.waiting_proc*** %tqe_prev129.i, align 8
  %wp_futex.i = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in.i, i64 0, i32 1
  store %struct.futex* %248, %struct.futex** %wp_futex.i, align 8
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 627) #6
  %294 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool211.i = icmp eq i8 %294, 0
  br i1 %tobool211.i, label %do.end222.i, label %if.then212.i, !prof !3

if.then212.i:                                     ; preds = %if.end197.i
  %295 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_locked, i64 0, i64 0, i32 7), align 8
  %tobool214.i = icmp eq i64 %295, 0
  br i1 %tobool214.i, label %do.end222.i, label %if.then215.i, !prof !3

if.then215.i:                                     ; preds = %if.then212.i
  %296 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv216.i = trunc i64 %295 to i32
  call void %296(i32 %conv216.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end222.i

do.end222.i:                                      ; preds = %if.then215.i, %if.then212.i, %if.end197.i
  %297 = load i32, i32* %f_refcount.i1190, align 8
  %inc223.i = add i32 %297, 1
  store i32 %inc223.i, i32* %f_refcount.i1190, align 8
  %298 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool229.i = icmp eq i8 %298, 0
  br i1 %tobool229.i, label %do.end238.i, label %if.then230.i, !prof !3

if.then230.i:                                     ; preds = %do.end222.i
  %299 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool232.i = icmp eq i64 %299, 0
  br i1 %tobool232.i, label %do.end238.i, label %if.then233.i, !prof !3

if.then233.i:                                     ; preds = %if.then230.i
  %300 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv234.i = trunc i64 %299 to i32
  call void %300(i32 %conv234.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end238.i

do.end238.i:                                      ; preds = %if.then233.i, %if.then230.i, %do.end222.i
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 629) #6
  %sub.i1193 = sub i32 %inc.i, %247
  %cmp241.i = icmp sge i32 %sub.i1193, %conv529
  %tobool11.i = icmp eq %struct.waiting_proc* %258, null
  %or.cond.i = or i1 %tobool11.i, %cmp241.i
  br i1 %or.cond.i, label %do.body246.i.loopexit, label %land.rhs.i.backedge

do.body246.i.loopexit:                            ; preds = %do.end80.i, %do.end238.i
  %phitmp = sext i32 %inc.i to i64
  br label %do.body246.i

do.body246.i:                                     ; preds = %do.body246.i.loopexit, %do.end.i1188
  %count.1.i = phi i64 [ 0, %do.end.i1188 ], [ %phitmp, %do.body246.i.loopexit ]
  %301 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool250.i = icmp eq i8 %301, 0
  br i1 %tobool250.i, label %futex_requeue.exit, label %if.then251.i, !prof !3

if.then251.i:                                     ; preds = %do.body246.i
  %302 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_requeue_return, i64 0, i64 0, i32 7), align 8
  %tobool253.i = icmp eq i64 %302, 0
  br i1 %tobool253.i, label %futex_requeue.exit, label %if.then254.i, !prof !3

if.then254.i:                                     ; preds = %if.then251.i
  %303 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv255.i = trunc i64 %302 to i32
  call void %303(i32 %conv255.i, i64 %count.1.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %futex_requeue.exit

futex_requeue.exit:                               ; preds = %do.body246.i, %if.then251.i, %if.then254.i
  %arrayidx535 = getelementptr %struct.thread, %struct.thread* %td, i64 0, i32 89, i32 0, i64 0
  store i64 %count.1.i, i64* %arrayidx535, align 8
  %304 = load %struct.futex*, %struct.futex** %f2, align 8
  call fastcc void @futex_put(%struct.futex* %304, %struct.waiting_proc* null) #7
  %305 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %305, %struct.waiting_proc* null) #7
  br label %do.body967

do.body537:                                       ; preds = %if.end53
  %306 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool541 = icmp eq i8 %306, 0
  br i1 %tobool541, label %do.body560, label %if.then542, !prof !3

if.then542:                                       ; preds = %do.body537
  %307 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_debug_wake_op, i64 0, i64 0, i32 7), align 8
  %tobool544 = icmp eq i64 %307, 0
  br i1 %tobool544, label %do.body560, label %if.then545, !prof !3

if.then545:                                       ; preds = %if.then542
  %308 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv546 = trunc i64 %307 to i32
  %uaddr547 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %309 = bitcast i8** %uaddr547 to i64*
  %310 = load i64, i64* %309, align 8
  %val550 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %311 = load i32, i32* %val550, align 8
  %conv551 = zext i32 %311 to i64
  %uaddr2552 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 13
  %312 = bitcast i32** %uaddr2552 to i64*
  %313 = load i64, i64* %312, align 8
  %val3553 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %314 = load i32, i32* %val3553, align 8
  %conv554 = zext i32 %314 to i64
  tail call void %308(i32 %conv546, i64 %310, i64 5, i64 %conv551, i64 %313, i64 %conv554) #6
  br label %do.body560

do.body560:                                       ; preds = %if.then542, %do.body537, %if.then545
  %uaddr561 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 1
  %315 = bitcast i8** %uaddr561 to i64*
  %316 = load i64, i64* %315, align 8
  %val562 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 7
  %317 = load i32, i32* %val562, align 8
  %conv563 = zext i32 %317 to i64
  %uaddr2564 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 13
  %318 = bitcast i32** %uaddr2564 to i64*
  %319 = load i64, i64* %318, align 8
  %val3565 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 16
  %320 = load i32, i32* %val3565, align 8
  %conv566 = zext i32 %320 to i64
  %timeout567 = getelementptr inbounds %struct.linux_sys_futex_args, %struct.linux_sys_futex_args* %args, i64 0, i32 10
  %321 = bitcast %struct.l_timespec** %timeout567 to i64*
  %322 = load i64, i64* %321, align 8
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 947, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.64, i64 0, i64 0), i64 %316, i64 %conv563, i64 %319, i64 %conv566, i64 %322, i64 0) #6
  %323 = load i8*, i8** %uaddr561, align 8
  %324 = bitcast i32** %uaddr2564 to i8**
  %325 = load i8*, i8** %324, align 8
  %cmp574 = icmp eq i8* %323, %325
  br i1 %cmp574, label %do.body577, label %retry2.preheader

retry2.preheader:                                 ; preds = %do.body560
  %326 = bitcast i8* %323 to i32*
  %327 = bitcast i8** %uaddr561 to i32**
  %or593 = or i32 %flags.0, 16
  %328 = bitcast i32* %oldval.i to i8*
  %329 = ptrtoint %struct.thread* %td to i64
  %call5941333 = call fastcc i32 @futex_get(i32* %326, %struct.waiting_proc** null, %struct.futex** nonnull %f, i32 %or593) #7
  %tobool5951334 = icmp eq i32 %call5941333, 0
  br i1 %tobool5951334, label %if.end612, label %do.body597

do.body577:                                       ; preds = %do.body560
  %330 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool581 = icmp eq i8 %330, 0
  br i1 %tobool581, label %cleanup, label %if.then582, !prof !3

if.then582:                                       ; preds = %do.body577
  %331 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool584 = icmp eq i64 %331, 0
  br i1 %tobool584, label %cleanup, label %if.then585, !prof !3

if.then585:                                       ; preds = %if.then582
  %332 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv586 = trunc i64 %331 to i32
  tail call void %332(i32 %conv586, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

do.body597:                                       ; preds = %if.end652.retry2_crit_edge, %retry2.preheader
  %call594.lcssa = phi i32 [ %call5941333, %retry2.preheader ], [ %call594, %if.end652.retry2_crit_edge ]
  %333 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool601 = icmp eq i8 %333, 0
  br i1 %tobool601, label %cleanup, label %if.then602, !prof !3

if.then602:                                       ; preds = %do.body597
  %334 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool604 = icmp eq i64 %334, 0
  br i1 %tobool604, label %cleanup, label %if.then605, !prof !3

if.then605:                                       ; preds = %if.then602
  %335 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv606 = trunc i64 %334 to i32
  %conv607 = sext i32 %call594.lcssa to i64
  call void %335(i32 %conv606, i64 %conv607, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end612:                                        ; preds = %retry2.preheader, %if.end652.retry2_crit_edge
  %336 = load i32*, i32** %uaddr2564, align 8
  %call615 = call fastcc i32 @futex_get(i32* %336, %struct.waiting_proc** null, %struct.futex** nonnull %f2, i32 %or593) #7
  %tobool616 = icmp eq i32 %call615, 0
  %337 = load %struct.futex*, %struct.futex** %f, align 8
  br i1 %tobool616, label %if.end633, label %if.then617

if.then617:                                       ; preds = %if.end612
  call fastcc void @futex_put(%struct.futex* %337, %struct.waiting_proc* null) #7
  %338 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool622 = icmp eq i8 %338, 0
  br i1 %tobool622, label %cleanup, label %if.then623, !prof !3

if.then623:                                       ; preds = %if.then617
  %339 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool625 = icmp eq i64 %339, 0
  br i1 %tobool625, label %cleanup, label %if.then626, !prof !3

if.then626:                                       ; preds = %if.then623
  %340 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv627 = trunc i64 %339 to i32
  %conv628 = sext i32 %call615 to i64
  call void %340(i32 %conv627, i64 %conv628, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end633:                                        ; preds = %if.end612
  %f_uaddr.i1194 = getelementptr inbounds %struct.futex, %struct.futex* %337, i64 0, i32 1
  %341 = bitcast i32** %f_uaddr.i1194 to i64*
  %342 = load i64, i64* %341, align 8
  %f_refcount.i1195 = getelementptr inbounds %struct.futex, %struct.futex* %337, i64 0, i32 3
  %343 = load i32, i32* %f_refcount.i1195, align 8
  %conv.i1196 = zext i32 %343 to i64
  %shared.i1197 = getelementptr inbounds %struct.futex, %struct.futex* %337, i64 0, i32 2, i32 2
  %344 = load i32, i32* %shared.i1197, align 8
  %conv2.i1198 = sext i32 %344 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %342, i64 %conv.i1196, i64 %conv2.i1198, i64 0, i64 0, i64 0) #6
  %mtx_lock.i1199 = getelementptr inbounds %struct.futex, %struct.futex* %337, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i1199, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i1199, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  %345 = load %struct.futex*, %struct.futex** %f2, align 8
  %f_uaddr.i1200 = getelementptr inbounds %struct.futex, %struct.futex* %345, i64 0, i32 1
  %346 = bitcast i32** %f_uaddr.i1200 to i64*
  %347 = load i64, i64* %346, align 8
  %f_refcount.i1201 = getelementptr inbounds %struct.futex, %struct.futex* %345, i64 0, i32 3
  %348 = load i32, i32* %f_refcount.i1201, align 8
  %conv.i1202 = zext i32 %348 to i64
  %shared.i1203 = getelementptr inbounds %struct.futex, %struct.futex* %345, i64 0, i32 2, i32 2
  %349 = load i32, i32* %shared.i1203, align 8
  %conv2.i1204 = sext i32 %349 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %347, i64 %conv.i1202, i64 %conv2.i1204, i64 0, i64 0, i64 0) #6
  %mtx_lock.i1205 = getelementptr inbounds %struct.futex, %struct.futex* %345, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i1205, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i1205, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  %call634 = call i32 @vm_fault_disable_pagefaults() #6
  %350 = load i32, i32* %val3565, align 8
  %351 = load i32*, i32** %uaddr2564, align 8
  %352 = lshr i32 %350, 28
  %and.i = and i32 %352, 7
  %353 = lshr i32 %350, 24
  %and2.i = and i32 %353, 15
  %shl.i = shl i32 %350, 8
  %shr3.i = ashr i32 %shl.i, 20
  %shl4.i = shl i32 %350, 20
  %shr5.i = ashr exact i32 %shl4.i, 20
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %328) #5
  store i32 0, i32* %oldval.i, align 4
  %354 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool6.i = icmp eq i8 %354, 0
  br i1 %tobool6.i, label %do.end.i1209, label %if.then.i1206, !prof !3

if.then.i1206:                                    ; preds = %if.end633
  %355 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_entry, i64 0, i64 0, i32 7), align 8
  %tobool8.i = icmp eq i64 %355, 0
  br i1 %tobool8.i, label %do.end.i1209, label %if.then9.i, !prof !3

if.then9.i:                                       ; preds = %if.then.i1206
  %356 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv10.i = trunc i64 %355 to i32
  %conv11.i = sext i32 %350 to i64
  %357 = ptrtoint i32* %351 to i64
  call void %356(i32 %conv10.i, i64 %329, i64 %conv11.i, i64 %357, i64 0, i64 0) #6
  br label %do.end.i1209

do.end.i1209:                                     ; preds = %if.then9.i, %if.then.i1206, %if.end633
  %tobool14.i1207 = icmp slt i32 %350, 0
  %shl16.i = shl i32 1, %shr3.i
  %spec.select.i1208 = select i1 %tobool14.i1207, i32 %shl16.i, i32 %shr3.i
  %358 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool22.i = icmp eq i8 %358, 0
  br i1 %tobool22.i, label %do.body36.i, label %if.then23.i, !prof !3

if.then23.i:                                      ; preds = %do.end.i1209
  %359 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_decoded_op, i64 0, i64 0, i32 7), align 8
  %tobool25.i = icmp eq i64 %359, 0
  br i1 %tobool25.i, label %do.body36.i, label %if.then26.i, !prof !3

if.then26.i:                                      ; preds = %if.then23.i
  %360 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv27.i = trunc i64 %359 to i32
  %361 = zext i32 %and.i to i64
  %362 = zext i32 %and2.i to i64
  %conv30.i = sext i32 %spec.select.i1208 to i64
  %conv31.i = sext i32 %shr5.i to i64
  call void %360(i32 %conv27.i, i64 %361, i64 %362, i64 %conv30.i, i64 %conv31.i, i64 0) #6
  br label %do.body36.i

do.body36.i:                                      ; preds = %if.then26.i, %if.then23.i, %do.end.i1209
  %363 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool40.i = icmp eq i8 %363, 0
  br i1 %tobool40.i, label %do.end49.i, label %if.then41.i, !prof !3

if.then41.i:                                      ; preds = %do.body36.i
  %364 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_missing_access_check, i64 0, i64 0, i32 7), align 8
  %tobool43.i = icmp eq i64 %364, 0
  br i1 %tobool43.i, label %do.end49.i, label %if.then44.i, !prof !3

if.then44.i:                                      ; preds = %if.then41.i
  %365 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv45.i = trunc i64 %364 to i32
  call void %365(i32 %conv45.i, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end49.i

do.end49.i:                                       ; preds = %if.then44.i, %if.then41.i, %do.body36.i
  %trunc.i = trunc i32 %352 to i3
  switch i3 %trunc.i, label %do.body58.i [
    i3 0, label %sw.bb.i
    i3 1, label %sw.bb50.i
    i3 2, label %sw.bb52.i
    i3 3, label %sw.bb54.i
    i3 -4, label %sw.bb56.i
  ]

sw.bb.i:                                          ; preds = %do.end49.i
  %call.i1210 = call i32 @futex_xchgl(i32 %spec.select.i1208, i32* %351, i32* nonnull %oldval.i) #6
  br label %sw.epilog.i

sw.bb50.i:                                        ; preds = %do.end49.i
  %call51.i = call i32 @futex_addl(i32 %spec.select.i1208, i32* %351, i32* nonnull %oldval.i) #6
  br label %sw.epilog.i

sw.bb52.i:                                        ; preds = %do.end49.i
  %call53.i = call i32 @futex_orl(i32 %spec.select.i1208, i32* %351, i32* nonnull %oldval.i) #6
  br label %sw.epilog.i

sw.bb54.i:                                        ; preds = %do.end49.i
  %neg.i = xor i32 %spec.select.i1208, -1
  %call55.i = call i32 @futex_andl(i32 %neg.i, i32* %351, i32* nonnull %oldval.i) #6
  br label %sw.epilog.i

sw.bb56.i:                                        ; preds = %do.end49.i
  %call57.i = call i32 @futex_xorl(i32 %spec.select.i1208, i32* %351, i32* nonnull %oldval.i) #6
  br label %sw.epilog.i

do.body58.i:                                      ; preds = %do.end49.i
  %366 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool62.i = icmp eq i8 %366, 0
  br i1 %tobool62.i, label %do.body75.i, label %if.then63.i, !prof !3

if.then63.i:                                      ; preds = %do.body58.i
  %367 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_unimplemented_op, i64 0, i64 0, i32 7), align 8
  %tobool65.i = icmp eq i64 %367, 0
  br i1 %tobool65.i, label %do.body75.i, label %if.then66.i, !prof !3

if.then66.i:                                      ; preds = %if.then63.i
  %368 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv67.i = trunc i64 %367 to i32
  %369 = zext i32 %and.i to i64
  call void %368(i32 %conv67.i, i64 %369, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body75.i

sw.epilog.i:                                      ; preds = %sw.bb56.i, %sw.bb54.i, %sw.bb52.i, %sw.bb50.i, %sw.bb.i
  %ret.0.i = phi i32 [ %call57.i, %sw.bb56.i ], [ %call55.i, %sw.bb54.i ], [ %call53.i, %sw.bb52.i ], [ %call51.i, %sw.bb50.i ], [ %call.i1210, %sw.bb.i ]
  %tobool73.i = icmp eq i32 %ret.0.i, 0
  br i1 %tobool73.i, label %if.end90.i, label %do.body75.i

do.body75.i:                                      ; preds = %sw.epilog.i, %if.then66.i, %if.then63.i, %do.body58.i
  %ret.0183.i = phi i32 [ %ret.0.i, %sw.epilog.i ], [ -78, %if.then63.i ], [ -78, %do.body58.i ], [ -78, %if.then66.i ]
  %370 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool79.i = icmp eq i8 %370, 0
  br i1 %tobool79.i, label %futex_atomic_op.exit, label %if.then80.i, !prof !3

if.then80.i:                                      ; preds = %do.body75.i
  %371 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_return, i64 0, i64 0, i32 7), align 8
  %tobool82.i = icmp eq i64 %371, 0
  br i1 %tobool82.i, label %futex_atomic_op.exit, label %if.then83.i, !prof !3

if.then83.i:                                      ; preds = %if.then80.i
  %372 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv84.i = trunc i64 %371 to i32
  %conv85.i = sext i32 %ret.0183.i to i64
  call void %372(i32 %conv84.i, i64 %conv85.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %futex_atomic_op.exit

if.end90.i:                                       ; preds = %sw.epilog.i
  %trunc181.i = trunc i32 %353 to i4
  switch i4 %trunc181.i, label %do.body110.i [
    i4 0, label %sw.bb91.i
    i4 1, label %sw.bb94.i
    i4 2, label %sw.bb97.i
    i4 5, label %sw.bb100.i
    i4 3, label %sw.bb103.i
    i4 4, label %sw.bb106.i
  ]

sw.bb91.i:                                        ; preds = %if.end90.i
  %373 = load i32, i32* %oldval.i, align 4
  %cmp92.i = icmp eq i32 %373, %shr5.i
  %conv93.i = zext i1 %cmp92.i to i32
  br label %do.body126.i

sw.bb94.i:                                        ; preds = %if.end90.i
  %374 = load i32, i32* %oldval.i, align 4
  %cmp95.i = icmp ne i32 %374, %shr5.i
  %conv96.i = zext i1 %cmp95.i to i32
  br label %do.body126.i

sw.bb97.i:                                        ; preds = %if.end90.i
  %375 = load i32, i32* %oldval.i, align 4
  %cmp98.i = icmp slt i32 %375, %shr5.i
  %conv99.i = zext i1 %cmp98.i to i32
  br label %do.body126.i

sw.bb100.i:                                       ; preds = %if.end90.i
  %376 = load i32, i32* %oldval.i, align 4
  %cmp101.i = icmp sge i32 %376, %shr5.i
  %conv102.i = zext i1 %cmp101.i to i32
  br label %do.body126.i

sw.bb103.i:                                       ; preds = %if.end90.i
  %377 = load i32, i32* %oldval.i, align 4
  %cmp104.i = icmp sle i32 %377, %shr5.i
  %conv105.i = zext i1 %cmp104.i to i32
  br label %do.body126.i

sw.bb106.i:                                       ; preds = %if.end90.i
  %378 = load i32, i32* %oldval.i, align 4
  %cmp107.i = icmp sgt i32 %378, %shr5.i
  %conv108.i = zext i1 %cmp107.i to i32
  br label %do.body126.i

do.body110.i:                                     ; preds = %if.end90.i
  %379 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool114.i = icmp eq i8 %379, 0
  br i1 %tobool114.i, label %do.body126.i, label %if.then115.i, !prof !3

if.then115.i:                                     ; preds = %do.body110.i
  %380 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_unimplemented_cmp, i64 0, i64 0, i32 7), align 8
  %tobool117.i = icmp eq i64 %380, 0
  br i1 %tobool117.i, label %do.body126.i, label %if.then118.i, !prof !3

if.then118.i:                                     ; preds = %if.then115.i
  %381 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv119.i = trunc i64 %380 to i32
  %382 = zext i32 %and2.i to i64
  call void %381(i32 %conv119.i, i64 %382, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body126.i

do.body126.i:                                     ; preds = %if.then118.i, %if.then115.i, %do.body110.i, %sw.bb106.i, %sw.bb103.i, %sw.bb100.i, %sw.bb97.i, %sw.bb94.i, %sw.bb91.i
  %ret.1.i = phi i32 [ %conv108.i, %sw.bb106.i ], [ %conv105.i, %sw.bb103.i ], [ %conv102.i, %sw.bb100.i ], [ %conv99.i, %sw.bb97.i ], [ %conv96.i, %sw.bb94.i ], [ %conv93.i, %sw.bb91.i ], [ -78, %if.then115.i ], [ -78, %do.body110.i ], [ -78, %if.then118.i ]
  %383 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool130.i = icmp eq i8 %383, 0
  br i1 %tobool130.i, label %futex_atomic_op.exit, label %if.then131.i, !prof !3

if.then131.i:                                     ; preds = %do.body126.i
  %384 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_atomic_op_return, i64 0, i64 0, i32 7), align 8
  %tobool133.i = icmp eq i64 %384, 0
  br i1 %tobool133.i, label %futex_atomic_op.exit, label %if.then134.i, !prof !3

if.then134.i:                                     ; preds = %if.then131.i
  %385 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv135.i = trunc i64 %384 to i32
  %conv136.i = sext i32 %ret.1.i to i64
  call void %385(i32 %conv135.i, i64 %conv136.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %futex_atomic_op.exit

futex_atomic_op.exit:                             ; preds = %do.body75.i, %if.then80.i, %if.then83.i, %do.body126.i, %if.then131.i, %if.then134.i
  %retval.0.i1211 = phi i32 [ %ret.0183.i, %if.then80.i ], [ %ret.0183.i, %do.body75.i ], [ %ret.0183.i, %if.then83.i ], [ %ret.1.i, %if.then131.i ], [ %ret.1.i, %do.body126.i ], [ %ret.1.i, %if.then134.i ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %328) #5
  call void @vm_fault_enable_pagefaults(i32 %call634) #6
  %386 = load i64, i64* %315, align 8
  %conv641 = sext i32 %retval.0.i1211 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 980, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.65, i64 0, i64 0), i64 %386, i64 %conv641, i64 0, i64 0, i64 0, i64 0) #6
  %cmp646 = icmp slt i32 %retval.0.i1211, 0
  br i1 %cmp646, label %if.then648, label %if.end674

if.then648:                                       ; preds = %futex_atomic_op.exit
  %387 = load %struct.futex*, %struct.futex** %f2, align 8
  %cmp649 = icmp eq %struct.futex* %387, null
  br i1 %cmp649, label %if.end652, label %if.then651

if.then651:                                       ; preds = %if.then648
  call fastcc void @futex_put(%struct.futex* nonnull %387, %struct.waiting_proc* null) #7
  br label %if.end652

if.end652:                                        ; preds = %if.then648, %if.then651
  %388 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %388, %struct.waiting_proc* null) #7
  %389 = load i8*, i8** %324, align 8
  %call654 = call i32 @copyin(i8* %389, i8* nonnull %4, i64 4) #6
  %cmp655 = icmp eq i32 %call654, 0
  br i1 %cmp655, label %if.end652.retry2_crit_edge, label %do.body659

if.end652.retry2_crit_edge:                       ; preds = %if.end652
  %.pre = load i32*, i32** %327, align 8
  %call594 = call fastcc i32 @futex_get(i32* %.pre, %struct.waiting_proc** null, %struct.futex** nonnull %f, i32 %or593) #7
  %tobool595 = icmp eq i32 %call594, 0
  br i1 %tobool595, label %if.end612, label %do.body597

do.body659:                                       ; preds = %if.end652
  %390 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool663 = icmp eq i8 %390, 0
  br i1 %tobool663, label %cleanup, label %if.then664, !prof !3

if.then664:                                       ; preds = %do.body659
  %391 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool666 = icmp eq i64 %391, 0
  br i1 %tobool666, label %cleanup, label %if.then667, !prof !3

if.then667:                                       ; preds = %if.then664
  %392 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv668 = trunc i64 %391 to i32
  %conv669 = sext i32 %call654 to i64
  call void %392(i32 %conv668, i64 %conv669, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end674:                                        ; preds = %futex_atomic_op.exit
  %393 = load %struct.futex*, %struct.futex** %f, align 8
  %394 = load i32, i32* %val562, align 8
  %395 = load i32, i32* %val3565, align 8
  %call677 = call fastcc i32 @futex_wake(%struct.futex* %393, i32 %394, i32 %395) #7
  %cmp678 = icmp eq i32 %retval.0.i1211, 0
  br i1 %cmp678, label %if.end694, label %if.then680

if.then680:                                       ; preds = %if.end674
  %396 = load i64, i64* %321, align 8
  %conv682 = trunc i64 %396 to i32
  %397 = load %struct.futex*, %struct.futex** %f2, align 8
  %cmp683 = icmp eq %struct.futex* %397, null
  br i1 %cmp683, label %if.else688, label %if.then685

if.then685:                                       ; preds = %if.then680
  %398 = load i32, i32* %val3565, align 8
  %call687 = call fastcc i32 @futex_wake(%struct.futex* nonnull %397, i32 %conv682, i32 %398) #7
  br label %if.end692

if.else688:                                       ; preds = %if.then680
  %399 = load %struct.futex*, %struct.futex** %f, align 8
  %400 = load i32, i32* %val3565, align 8
  %call690 = call fastcc i32 @futex_wake(%struct.futex* %399, i32 %conv682, i32 %400) #7
  br label %if.end692

if.end692:                                        ; preds = %if.else688, %if.then685
  %op_ret.0 = phi i32 [ %call687, %if.then685 ], [ %call690, %if.else688 ]
  %add693 = add i32 %op_ret.0, %call677
  br label %if.end694

if.end694:                                        ; preds = %if.end674, %if.end692
  %ret.0 = phi i32 [ %add693, %if.end692 ], [ %call677, %if.end674 ]
  %401 = load %struct.futex*, %struct.futex** %f2, align 8
  %cmp695 = icmp eq %struct.futex* %401, null
  br i1 %cmp695, label %if.end698, label %if.then697

if.then697:                                       ; preds = %if.end694
  call fastcc void @futex_put(%struct.futex* nonnull %401, %struct.waiting_proc* null) #7
  br label %if.end698

if.end698:                                        ; preds = %if.end694, %if.then697
  %402 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %402, %struct.waiting_proc* null) #7
  %conv699 = sext i32 %ret.0 to i64
  %arrayidx702 = getelementptr %struct.thread, %struct.thread* %td, i64 0, i32 89, i32 0, i64 0
  store i64 %conv699, i64* %arrayidx702, align 8
  br label %do.body967

sw.bb703:                                         ; preds = %if.end53
  %td_proc = getelementptr inbounds %struct.thread, %struct.thread* %td, i64 0, i32 1
  %403 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %call704 = tail call %struct.linux_pemuldata* @pem_find(%struct.proc* %403) #6
  %flags705 = getelementptr inbounds %struct.linux_pemuldata, %struct.linux_pemuldata* %call704, i64 0, i32 0
  %404 = load i32, i32* %flags705, align 8
  %and706 = and i32 %404, 4
  %cmp707 = icmp eq i32 %and706, 0
  br i1 %cmp707, label %if.then709, label %do.body727

if.then709:                                       ; preds = %sw.bb703
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* nonnull %td, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i64 0, i64 0)) #6
  %405 = load i32, i32* %flags705, align 8
  %or711 = or i32 %405, 4
  store i32 %or711, i32* %flags705, align 8
  %406 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool716 = icmp eq i8 %406, 0
  br i1 %tobool716, label %do.body727, label %if.then717, !prof !3

if.then717:                                       ; preds = %if.then709
  %407 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_lock_pi, i64 0, i64 0, i32 7), align 8
  %tobool719 = icmp eq i64 %407, 0
  br i1 %tobool719, label %do.body727, label %if.then720, !prof !3

if.then720:                                       ; preds = %if.then717
  %408 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv721 = trunc i64 %407 to i32
  tail call void %408(i32 %conv721, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body727

do.body727:                                       ; preds = %if.then717, %if.then709, %sw.bb703, %if.then720
  %409 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool731 = icmp eq i8 %409, 0
  br i1 %tobool731, label %cleanup, label %if.then732, !prof !3

if.then732:                                       ; preds = %do.body727
  %410 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool734 = icmp eq i64 %410, 0
  br i1 %tobool734, label %cleanup, label %if.then735, !prof !3

if.then735:                                       ; preds = %if.then732
  %411 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv736 = trunc i64 %410 to i32
  tail call void %411(i32 %conv736, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

sw.bb741:                                         ; preds = %if.end53
  %td_proc742 = getelementptr inbounds %struct.thread, %struct.thread* %td, i64 0, i32 1
  %412 = load %struct.proc*, %struct.proc** %td_proc742, align 8
  %call743 = tail call %struct.linux_pemuldata* @pem_find(%struct.proc* %412) #6
  %flags744 = getelementptr inbounds %struct.linux_pemuldata, %struct.linux_pemuldata* %call743, i64 0, i32 0
  %413 = load i32, i32* %flags744, align 8
  %and745 = and i32 %413, 4
  %cmp746 = icmp eq i32 %and745, 0
  br i1 %cmp746, label %if.then748, label %do.body766

if.then748:                                       ; preds = %sw.bb741
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* nonnull %td, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i64 0, i64 0)) #6
  %414 = load i32, i32* %flags744, align 8
  %or750 = or i32 %414, 4
  store i32 %or750, i32* %flags744, align 8
  %415 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool755 = icmp eq i8 %415, 0
  br i1 %tobool755, label %do.body766, label %if.then756, !prof !3

if.then756:                                       ; preds = %if.then748
  %416 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_unlock_pi, i64 0, i64 0, i32 7), align 8
  %tobool758 = icmp eq i64 %416, 0
  br i1 %tobool758, label %do.body766, label %if.then759, !prof !3

if.then759:                                       ; preds = %if.then756
  %417 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv760 = trunc i64 %416 to i32
  tail call void %417(i32 %conv760, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body766

do.body766:                                       ; preds = %if.then756, %if.then748, %sw.bb741, %if.then759
  %418 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool770 = icmp eq i8 %418, 0
  br i1 %tobool770, label %cleanup, label %if.then771, !prof !3

if.then771:                                       ; preds = %do.body766
  %419 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool773 = icmp eq i64 %419, 0
  br i1 %tobool773, label %cleanup, label %if.then774, !prof !3

if.then774:                                       ; preds = %if.then771
  %420 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv775 = trunc i64 %419 to i32
  tail call void %420(i32 %conv775, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

sw.bb780:                                         ; preds = %if.end53
  %td_proc781 = getelementptr inbounds %struct.thread, %struct.thread* %td, i64 0, i32 1
  %421 = load %struct.proc*, %struct.proc** %td_proc781, align 8
  %call782 = tail call %struct.linux_pemuldata* @pem_find(%struct.proc* %421) #6
  %flags783 = getelementptr inbounds %struct.linux_pemuldata, %struct.linux_pemuldata* %call782, i64 0, i32 0
  %422 = load i32, i32* %flags783, align 8
  %and784 = and i32 %422, 4
  %cmp785 = icmp eq i32 %and784, 0
  br i1 %cmp785, label %if.then787, label %do.body805

if.then787:                                       ; preds = %sw.bb780
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* nonnull %td, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i64 0, i64 0)) #6
  %423 = load i32, i32* %flags783, align 8
  %or789 = or i32 %423, 4
  store i32 %or789, i32* %flags783, align 8
  %424 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool794 = icmp eq i8 %424, 0
  br i1 %tobool794, label %do.body805, label %if.then795, !prof !3

if.then795:                                       ; preds = %if.then787
  %425 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_trylock_pi, i64 0, i64 0, i32 7), align 8
  %tobool797 = icmp eq i64 %425, 0
  br i1 %tobool797, label %do.body805, label %if.then798, !prof !3

if.then798:                                       ; preds = %if.then795
  %426 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv799 = trunc i64 %425 to i32
  tail call void %426(i32 %conv799, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body805

do.body805:                                       ; preds = %if.then795, %if.then787, %sw.bb780, %if.then798
  %427 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool809 = icmp eq i8 %427, 0
  br i1 %tobool809, label %cleanup, label %if.then810, !prof !3

if.then810:                                       ; preds = %do.body805
  %428 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool812 = icmp eq i64 %428, 0
  br i1 %tobool812, label %cleanup, label %if.then813, !prof !3

if.then813:                                       ; preds = %if.then810
  %429 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv814 = trunc i64 %428 to i32
  tail call void %429(i32 %conv814, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

sw.bb819:                                         ; preds = %if.end53
  %td_proc820 = getelementptr inbounds %struct.thread, %struct.thread* %td, i64 0, i32 1
  %430 = load %struct.proc*, %struct.proc** %td_proc820, align 8
  %call821 = tail call %struct.linux_pemuldata* @pem_find(%struct.proc* %430) #6
  %flags822 = getelementptr inbounds %struct.linux_pemuldata, %struct.linux_pemuldata* %call821, i64 0, i32 0
  %431 = load i32, i32* %flags822, align 8
  %and823 = and i32 %431, 1
  %cmp824 = icmp eq i32 %and823, 0
  br i1 %cmp824, label %if.then826, label %do.body844

if.then826:                                       ; preds = %sw.bb819
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* nonnull %td, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.67, i64 0, i64 0)) #6
  %432 = load i32, i32* %flags822, align 8
  %or828 = or i32 %432, 1
  store i32 %or828, i32* %flags822, align 8
  %433 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool833 = icmp eq i8 %433, 0
  br i1 %tobool833, label %do.body844, label %if.then834, !prof !3

if.then834:                                       ; preds = %if.then826
  %434 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_deprecated_requeue, i64 0, i64 0, i32 7), align 8
  %tobool836 = icmp eq i64 %434, 0
  br i1 %tobool836, label %do.body844, label %if.then837, !prof !3

if.then837:                                       ; preds = %if.then834
  %435 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv838 = trunc i64 %434 to i32
  tail call void %435(i32 %conv838, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body844

do.body844:                                       ; preds = %if.then834, %if.then826, %sw.bb819, %if.then837
  %436 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool848 = icmp eq i8 %436, 0
  br i1 %tobool848, label %cleanup, label %if.then849, !prof !3

if.then849:                                       ; preds = %do.body844
  %437 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool851 = icmp eq i64 %437, 0
  br i1 %tobool851, label %cleanup, label %if.then852, !prof !3

if.then852:                                       ; preds = %if.then849
  %438 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv853 = trunc i64 %437 to i32
  tail call void %438(i32 %conv853, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

sw.bb858:                                         ; preds = %if.end53
  %td_proc859 = getelementptr inbounds %struct.thread, %struct.thread* %td, i64 0, i32 1
  %439 = load %struct.proc*, %struct.proc** %td_proc859, align 8
  %call860 = tail call %struct.linux_pemuldata* @pem_find(%struct.proc* %439) #6
  %flags861 = getelementptr inbounds %struct.linux_pemuldata, %struct.linux_pemuldata* %call860, i64 0, i32 0
  %440 = load i32, i32* %flags861, align 8
  %and862 = and i32 %440, 4
  %cmp863 = icmp eq i32 %and862, 0
  br i1 %cmp863, label %if.then865, label %do.body883

if.then865:                                       ; preds = %sw.bb858
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* nonnull %td, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i64 0, i64 0)) #6
  %441 = load i32, i32* %flags861, align 8
  %or867 = or i32 %441, 4
  store i32 %or867, i32* %flags861, align 8
  %442 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool872 = icmp eq i8 %442, 0
  br i1 %tobool872, label %do.body883, label %if.then873, !prof !3

if.then873:                                       ; preds = %if.then865
  %443 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_wait_requeue_pi, i64 0, i64 0, i32 7), align 8
  %tobool875 = icmp eq i64 %443, 0
  br i1 %tobool875, label %do.body883, label %if.then876, !prof !3

if.then876:                                       ; preds = %if.then873
  %444 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv877 = trunc i64 %443 to i32
  tail call void %444(i32 %conv877, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body883

do.body883:                                       ; preds = %if.then873, %if.then865, %sw.bb858, %if.then876
  %445 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool887 = icmp eq i8 %445, 0
  br i1 %tobool887, label %cleanup, label %if.then888, !prof !3

if.then888:                                       ; preds = %do.body883
  %446 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool890 = icmp eq i64 %446, 0
  br i1 %tobool890, label %cleanup, label %if.then891, !prof !3

if.then891:                                       ; preds = %if.then888
  %447 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv892 = trunc i64 %446 to i32
  tail call void %447(i32 %conv892, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

sw.bb897:                                         ; preds = %if.end53
  %td_proc898 = getelementptr inbounds %struct.thread, %struct.thread* %td, i64 0, i32 1
  %448 = load %struct.proc*, %struct.proc** %td_proc898, align 8
  %call899 = tail call %struct.linux_pemuldata* @pem_find(%struct.proc* %448) #6
  %flags900 = getelementptr inbounds %struct.linux_pemuldata, %struct.linux_pemuldata* %call899, i64 0, i32 0
  %449 = load i32, i32* %flags900, align 8
  %and901 = and i32 %449, 4
  %cmp902 = icmp eq i32 %and901, 0
  br i1 %cmp902, label %if.then904, label %do.body922

if.then904:                                       ; preds = %sw.bb897
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* nonnull %td, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.66, i64 0, i64 0)) #6
  %450 = load i32, i32* %flags900, align 8
  %or906 = or i32 %450, 4
  store i32 %or906, i32* %flags900, align 8
  %451 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool911 = icmp eq i8 %451, 0
  br i1 %tobool911, label %do.body922, label %if.then912, !prof !3

if.then912:                                       ; preds = %if.then904
  %452 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unimplemented_cmp_requeue_pi, i64 0, i64 0, i32 7), align 8
  %tobool914 = icmp eq i64 %452, 0
  br i1 %tobool914, label %do.body922, label %if.then915, !prof !3

if.then915:                                       ; preds = %if.then912
  %453 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv916 = trunc i64 %452 to i32
  tail call void %453(i32 %conv916, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body922

do.body922:                                       ; preds = %if.then912, %if.then904, %sw.bb897, %if.then915
  %454 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool926 = icmp eq i8 %454, 0
  br i1 %tobool926, label %cleanup, label %if.then927, !prof !3

if.then927:                                       ; preds = %do.body922
  %455 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool929 = icmp eq i64 %455, 0
  br i1 %tobool929, label %cleanup, label %if.then930, !prof !3

if.then930:                                       ; preds = %if.then927
  %456 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv931 = trunc i64 %455 to i32
  tail call void %456(i32 %conv931, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

sw.default:                                       ; preds = %if.end53
  tail call void (%struct.thread*, i8*, ...) @linux_msg(%struct.thread* %td, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.68, i64 0, i64 0), i32 %and15) #6
  %457 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool941 = icmp eq i8 %457, 0
  br i1 %tobool941, label %do.body953, label %if.then942, !prof !3

if.then942:                                       ; preds = %sw.default
  %458 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_unknown_operation, i64 0, i64 0, i32 7), align 8
  %tobool944 = icmp eq i64 %458, 0
  br i1 %tobool944, label %do.body953, label %if.then945, !prof !3

if.then945:                                       ; preds = %if.then942
  %459 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv946 = trunc i64 %458 to i32
  %460 = load i32, i32* %op, align 8
  %conv948 = sext i32 %460 to i64
  tail call void %459(i32 %conv946, i64 %conv948, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body953

do.body953:                                       ; preds = %if.then942, %sw.default, %if.then945
  %461 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool957 = icmp eq i8 %461, 0
  br i1 %tobool957, label %cleanup, label %if.then958, !prof !3

if.then958:                                       ; preds = %do.body953
  %462 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool960 = icmp eq i64 %462, 0
  br i1 %tobool960, label %cleanup, label %if.then961, !prof !3

if.then961:                                       ; preds = %if.then958
  %463 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv962 = trunc i64 %462 to i32
  tail call void %463(i32 %conv962, i64 78, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

do.body967:                                       ; preds = %if.then55.i, %if.then52.i, %do.body47.i, %if.then18.i1173, %if.then15.i, %do.body10.i, %if.end316, %futex_requeue.exit, %if.end698
  %error.0 = phi i32 [ 0, %if.end698 ], [ 0, %futex_requeue.exit ], [ 0, %if.end316 ], [ 22, %if.then15.i ], [ 22, %do.body10.i ], [ 22, %if.then18.i1173 ], [ %error.0.i, %if.then52.i ], [ %error.0.i, %do.body47.i ], [ %error.0.i, %if.then55.i ]
  %464 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool971 = icmp eq i8 %464, 0
  br i1 %tobool971, label %cleanup, label %if.then972, !prof !3

if.then972:                                       ; preds = %do.body967
  %465 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_sys_futex_return, i64 0, i64 0, i32 7), align 8
  %tobool974 = icmp eq i64 %465, 0
  br i1 %tobool974, label %cleanup, label %if.then975, !prof !3

if.then975:                                       ; preds = %if.then972
  %466 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv976 = trunc i64 %465 to i32
  %conv977 = sext i32 %error.0 to i64
  call void %466(i32 %conv976, i64 %conv977, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then975, %do.body967, %if.then972, %if.then961, %do.body953, %if.then958, %if.then930, %do.body922, %if.then927, %if.then891, %do.body883, %if.then888, %if.then852, %do.body844, %if.then849, %if.then813, %do.body805, %if.then810, %if.then774, %do.body766, %if.then771, %if.then735, %do.body727, %if.then732, %if.then667, %do.body659, %if.then664, %if.then626, %if.then617, %if.then623, %if.then605, %do.body597, %if.then602, %if.then585, %do.body577, %if.then582, %if.then521, %do.body505, %if.then518, %if.then475, %do.body461, %if.then472, %if.then427, %if.then418, %if.then424, %if.then405, %do.body397, %if.then402, %if.then385, %do.body377, %if.then382, %if.then309, %if.then300, %if.then306, %if.then290, %do.body282, %if.then287, %if.then235, %do.body218, %if.then232, %if.then185, %do.body171, %if.then182, %if.then137, %do.body129, %if.then134, %if.then115, %do.body107, %if.then112, %if.then47, %do.body39, %if.then44
  %retval.0 = phi i32 [ 78, %if.then44 ], [ 78, %do.body39 ], [ 78, %if.then47 ], [ %retval.0.i, %if.then112 ], [ %retval.0.i, %do.body107 ], [ %retval.0.i, %if.then115 ], [ %call126, %if.then134 ], [ %call126, %do.body129 ], [ %call126, %if.then137 ], [ %call150, %if.then182 ], [ %call150, %do.body171 ], [ %call150, %if.then185 ], [ 35, %if.then232 ], [ 35, %do.body218 ], [ 35, %if.then235 ], [ %call279, %if.then287 ], [ %call279, %do.body282 ], [ %call279, %if.then290 ], [ 0, %if.then306 ], [ 0, %if.then300 ], [ 0, %if.then309 ], [ 22, %if.then382 ], [ 22, %do.body377 ], [ 22, %if.then385 ], [ %call394.lcssa, %if.then402 ], [ %call394.lcssa, %do.body397 ], [ %call394.lcssa, %if.then405 ], [ %call416, %if.then424 ], [ %call416, %if.then418 ], [ %call416, %if.then427 ], [ %call440, %if.then472 ], [ %call440, %do.body461 ], [ %call440, %if.then475 ], [ 35, %if.then518 ], [ 35, %do.body505 ], [ 35, %if.then521 ], [ 22, %if.then582 ], [ 22, %do.body577 ], [ 22, %if.then585 ], [ %call594.lcssa, %if.then602 ], [ %call594.lcssa, %do.body597 ], [ %call594.lcssa, %if.then605 ], [ %call615, %if.then623 ], [ %call615, %if.then617 ], [ %call615, %if.then626 ], [ %call654, %if.then664 ], [ %call654, %do.body659 ], [ %call654, %if.then667 ], [ 78, %if.then732 ], [ 78, %do.body727 ], [ 78, %if.then735 ], [ 78, %if.then771 ], [ 78, %do.body766 ], [ 78, %if.then774 ], [ 78, %if.then810 ], [ 78, %do.body805 ], [ 78, %if.then813 ], [ 22, %if.then849 ], [ 22, %do.body844 ], [ 22, %if.then852 ], [ 78, %if.then888 ], [ 78, %do.body883 ], [ 78, %if.then891 ], [ 78, %if.then927 ], [ 78, %do.body922 ], [ 78, %if.then930 ], [ 78, %if.then958 ], [ 78, %do.body953 ], [ 78, %if.then961 ], [ %error.0, %if.then972 ], [ %error.0, %do.body967 ], [ %error.0, %if.then975 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret i32 %retval.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @ktr_tracepoint(i64, i8*, i32, i8*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @futex_get(i32* %uaddr, %struct.waiting_proc** %wp, %struct.futex** %f, i32 %flags) unnamed_addr #0 {
entry:
  %key.i = alloca %struct.umtx_key, align 8
  %0 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %0, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %1, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %2 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %1 to i32
  %3 = ptrtoint i32* %uaddr to i64
  %4 = ptrtoint %struct.waiting_proc** %wp to i64
  %5 = ptrtoint %struct.futex** %f to i64
  tail call void %2(i32 %conv5, i64 %3, i64 %4, i64 %5, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %and = and i32 %flags, 1
  %tobool7 = icmp ne i32 %and, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %do.end
  %call = tail call noalias i8* @malloc(i64 32, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_FUTEX_WP, i64 0, i64 0), i32 2) #9
  %6 = bitcast %struct.waiting_proc** %wp to i8**
  store i8* %call, i8** %6, align 8
  %wp_flags = bitcast i8* %call to i32*
  store i32 0, i32* %wp_flags, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %do.end
  %7 = bitcast %struct.umtx_key* %key.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #5
  %8 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1.i = icmp eq i8 %8, 0
  br i1 %tobool1.i, label %do.end.i, label %if.then.i, !prof !3

if.then.i:                                        ; preds = %if.end9
  %9 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_entry, i64 0, i64 0, i32 7), align 8
  %tobool3.i = icmp eq i64 %9, 0
  br i1 %tobool3.i, label %do.end.i, label %if.then4.i, !prof !3

if.then4.i:                                       ; preds = %if.then.i
  %10 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5.i = trunc i64 %9 to i32
  %11 = ptrtoint i32* %uaddr to i64
  %12 = ptrtoint %struct.futex** %f to i64
  %conv6.i = zext i32 %flags to i64
  tail call void %10(i32 %conv5.i, i64 %11, i64 %12, i64 %conv6.i, i64 0, i64 0) #6
  br label %do.end.i

do.end.i:                                         ; preds = %if.then4.i, %if.then.i, %if.end9
  store %struct.futex* null, %struct.futex** %f, align 8
  %13 = bitcast i32* %uaddr to i8*
  %and.i = lshr i32 %flags, 2
  %14 = and i32 %and.i, 2
  %call.i = call i32 @umtx_key_get(i8* %13, i32 8, i32 %14, %struct.umtx_key* nonnull %key.i) #6
  %tobool9.i = icmp eq i32 %call.i, 0
  br i1 %tobool9.i, label %retry.preheader.i, label %do.body11.i

retry.preheader.i:                                ; preds = %do.end.i
  %and193.i = and i32 %flags, 2
  %tobool194.i = icmp eq i32 %and193.i, 0
  %type1.i.i = getelementptr inbounds %struct.umtx_key, %struct.umtx_key* %key.i, i64 0, i32 1
  %info2.i.i = getelementptr inbounds %struct.umtx_key, %struct.umtx_key* %key.i, i64 0, i32 3
  %a4.i.i = bitcast %union.anon.46* %info2.i.i to i8**
  %15 = getelementptr inbounds %struct.umtx_key, %struct.umtx_key* %key.i, i64 0, i32 3, i32 0, i32 1
  %and297.i = and i32 %flags, 16
  %cmp298.i = icmp eq i32 %and297.i, 0
  br label %retry.i

do.body11.i:                                      ; preds = %do.end.i
  %16 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool15.i = icmp eq i8 %16, 0
  br i1 %tobool15.i, label %do.body26.i, label %if.then16.i, !prof !3

if.then16.i:                                      ; preds = %do.body11.i
  %17 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_umtx_key_get_error, i64 0, i64 0, i32 7), align 8
  %tobool18.i = icmp eq i64 %17, 0
  br i1 %tobool18.i, label %do.body26.i, label %if.then19.i, !prof !3

if.then19.i:                                      ; preds = %if.then16.i
  %18 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv20.i = trunc i64 %17 to i32
  %conv21.i = sext i32 %call.i to i64
  call void %18(i32 %conv20.i, i64 %conv21.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body26.i

do.body26.i:                                      ; preds = %if.then19.i, %if.then16.i, %do.body11.i
  %19 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool30.i = icmp eq i8 %19, 0
  br i1 %tobool30.i, label %do.body13, label %if.then31.i, !prof !3

if.then31.i:                                      ; preds = %do.body26.i
  %20 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return, i64 0, i64 0, i32 7), align 8
  %tobool33.i = icmp eq i64 %20, 0
  br i1 %tobool33.i, label %do.body13, label %if.then34.i, !prof !3

if.then34.i:                                      ; preds = %if.then31.i
  %21 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv35.i = trunc i64 %20 to i32
  %conv36.i = sext i32 %call.i to i64
  call void %21(i32 %conv35.i, i64 %conv36.i, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body13

retry.i:                                          ; preds = %retry.i.backedge, %retry.preheader.i
  %22 = phi i8* [ null, %retry.preheader.i ], [ %call268.i, %retry.i.backedge ]
  %tmpf.0.i = phi %struct.futex* [ null, %retry.preheader.i ], [ %84, %retry.i.backedge ]
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 361) #6
  %23 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool47.i = icmp eq i8 %23, 0
  br i1 %tobool47.i, label %do.end58.i, label %if.then48.i, !prof !3

if.then48.i:                                      ; preds = %retry.i
  %24 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_locked, i64 0, i64 0, i32 7), align 8
  %tobool50.i = icmp eq i64 %24, 0
  br i1 %tobool50.i, label %do.end58.i, label %if.then51.i, !prof !3

if.then51.i:                                      ; preds = %if.then48.i
  %25 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv52.i = trunc i64 %24 to i32
  call void %25(i32 %conv52.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end58.i

do.end58.i:                                       ; preds = %if.then51.i, %if.then48.i, %retry.i
  %f.0476.i = load %struct.futex*, %struct.futex** getelementptr inbounds (%struct.futex_list, %struct.futex_list* @futex_list, i64 0, i32 0), align 8
  %tobool59477.i = icmp eq %struct.futex* %f.0476.i, null
  br i1 %tobool59477.i, label %for.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %do.end58.i
  %26 = load i32, i32* %type1.i.i, align 4
  %27 = load i8*, i8** %a4.i.i, align 8
  %28 = load i64, i64* %15, align 8
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %f.0478.i = phi %struct.futex* [ %f.0476.i, %for.body.lr.ph.i ], [ %f.0.i, %for.inc.i ]
  %type.i.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 2, i32 1
  %29 = load i32, i32* %type.i.i, align 4
  %cmp.i.i = icmp eq i32 %29, %26
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %for.inc.i

land.lhs.true.i.i:                                ; preds = %for.body.i
  %info.i.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 2, i32 3
  %a.i.i = bitcast %union.anon.46* %info.i.i to i8**
  %30 = load i8*, i8** %a.i.i, align 8
  %cmp5.i.i = icmp eq i8* %30, %27
  br i1 %cmp5.i.i, label %umtx_key_match.exit.i, label %for.inc.i

umtx_key_match.exit.i:                            ; preds = %land.lhs.true.i.i
  %31 = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 2, i32 3, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %cmp11.i.i = icmp eq i64 %32, %28
  br i1 %cmp11.i.i, label %if.then62.i, label %for.inc.i

if.then62.i:                                      ; preds = %umtx_key_match.exit.i
  %cmp.i = icmp eq %struct.futex* %tmpf.0.i, null
  br i1 %cmp.i, label %if.end91.i, label %if.then64.i

if.then64.i:                                      ; preds = %if.then62.i
  %mtx_lock.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 0, i32 1
  %33 = load volatile i64, i64* %mtx_lock.i, align 8
  %and65.i = and i64 %33, -8
  %34 = inttoptr i64 %and65.i to %struct.thread*
  %35 = call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #10, !srcloc !5
  %cmp67.i = icmp eq %struct.thread* %35, %34
  br i1 %cmp67.i, label %if.then69.i, label %do.body72.i

if.then69.i:                                      ; preds = %if.then64.i
  %f_uaddr.i.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 1
  %36 = bitcast i32** %f_uaddr.i.i to i64*
  %37 = load i64, i64* %36, align 8
  %f_refcount.i.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 3
  %38 = load i32, i32* %f_refcount.i.i, align 8
  %conv.i.i = zext i32 %38 to i64
  %shared.i.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 2, i32 2
  %39 = load i32, i32* %shared.i.i, align 8
  %conv2.i.i = sext i32 %39 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 488, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.95, i64 0, i64 0), i64 %37, i64 %conv.i.i, i64 %conv2.i.i, i64 0, i64 0, i64 0) #6
  call void @__mtx_assert(i64* nonnull %mtx_lock.i, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 489) #6
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 490) #6
  br label %do.body72.i

do.body72.i:                                      ; preds = %if.then69.i, %if.then64.i
  %40 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool76.i = icmp eq i8 %40, 0
  br i1 %tobool76.i, label %do.end86.i, label %if.then77.i, !prof !3

if.then77.i:                                      ; preds = %do.body72.i
  %41 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_destroy, i64 0, i64 0, i32 7), align 8
  %tobool79.i = icmp eq i64 %41, 0
  br i1 %tobool79.i, label %do.end86.i, label %if.then80.i, !prof !3

if.then80.i:                                      ; preds = %if.then77.i
  %42 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv81.i = trunc i64 %41 to i32
  %43 = ptrtoint %struct.futex* %tmpf.0.i to i64
  call void %42(i32 %conv81.i, i64 %43, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end86.i

do.end86.i:                                       ; preds = %if.then80.i, %if.then77.i, %do.body72.i
  call void @_mtx_destroy(i64* nonnull %mtx_lock.i) #6
  call void @free(i8* %22, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_FUTEX, i64 0, i64 0)) #6
  br label %if.end91.i

if.end91.i:                                       ; preds = %do.end86.i, %if.then62.i
  %and92.i = and i32 %flags, 4
  %tobool93.i = icmp eq i32 %and92.i, 0
  br i1 %tobool93.i, label %if.end126.i, label %do.body96.i

do.body96.i:                                      ; preds = %if.end91.i
  %44 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool100.i = icmp eq i8 %44, 0
  br i1 %tobool100.i, label %do.end109.i, label %if.then101.i, !prof !3

if.then101.i:                                     ; preds = %do.body96.i
  %45 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool103.i = icmp eq i64 %45, 0
  br i1 %tobool103.i, label %do.end109.i, label %if.then104.i, !prof !3

if.then104.i:                                     ; preds = %if.then101.i
  %46 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv105.i = trunc i64 %45 to i32
  call void %46(i32 %conv105.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end109.i

do.end109.i:                                      ; preds = %if.then104.i, %if.then101.i, %do.body96.i
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 371) #6
  call void @umtx_key_release(%struct.umtx_key* nonnull %key.i) #6
  %47 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool116.i = icmp eq i8 %47, 0
  br i1 %tobool116.i, label %do.body13, label %if.then117.i, !prof !3

if.then117.i:                                     ; preds = %do.end109.i
  %48 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return, i64 0, i64 0, i32 7), align 8
  %tobool119.i = icmp eq i64 %48, 0
  br i1 %tobool119.i, label %do.body13, label %if.then120.i, !prof !3

if.then120.i:                                     ; preds = %if.then117.i
  %49 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv121.i = trunc i64 %48 to i32
  call void %49(i32 %conv121.i, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body13

if.end126.i:                                      ; preds = %if.end91.i
  %f_refcount.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 3
  %50 = load i32, i32* %f_refcount.i, align 8
  %inc.i = add i32 %50, 1
  store i32 %inc.i, i32* %f_refcount.i, align 8
  %51 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool132.i = icmp eq i8 %51, 0
  br i1 %tobool132.i, label %do.end141.i, label %if.then133.i, !prof !3

if.then133.i:                                     ; preds = %if.end126.i
  %52 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool135.i = icmp eq i64 %52, 0
  br i1 %tobool135.i, label %do.end141.i, label %if.then136.i, !prof !3

if.then136.i:                                     ; preds = %if.then133.i
  %53 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv137.i = trunc i64 %52 to i32
  call void %53(i32 %conv137.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end141.i

do.end141.i:                                      ; preds = %if.then136.i, %if.then133.i, %if.end126.i
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 384) #6
  call void @umtx_key_release(%struct.umtx_key* nonnull %key.i) #6
  br i1 %cmp298.i, label %if.then147.i, label %if.end148.i

if.then147.i:                                     ; preds = %do.end141.i
  %f_uaddr.i452.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 1
  %54 = bitcast i32** %f_uaddr.i452.i to i64*
  %55 = load i64, i64* %54, align 8
  %56 = load i32, i32* %f_refcount.i, align 8
  %conv.i454.i = zext i32 %56 to i64
  %shared.i455.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 2, i32 2
  %57 = load i32, i32* %shared.i455.i, align 8
  %conv2.i456.i = sext i32 %57 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %55, i64 %conv.i454.i, i64 %conv2.i456.i, i64 0, i64 0, i64 0) #6
  %mtx_lock.i457.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 0, i32 1
  call void @__mtx_assert(i64* nonnull %mtx_lock.i457.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i457.i, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  br label %if.end148.i

if.end148.i:                                      ; preds = %if.then147.i, %do.end141.i
  store %struct.futex* %f.0478.i, %struct.futex** %f, align 8
  %58 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool153.i = icmp eq i8 %58, 0
  br i1 %tobool153.i, label %do.body168.i, label %if.then154.i, !prof !3

if.then154.i:                                     ; preds = %if.end148.i
  %59 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_shared, i64 0, i64 0, i32 7), align 8
  %tobool156.i = icmp eq i64 %59, 0
  br i1 %tobool156.i, label %do.body168.i, label %if.then157.i, !prof !3

if.then157.i:                                     ; preds = %if.then154.i
  %60 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv158.i = trunc i64 %59 to i32
  %61 = ptrtoint i32* %uaddr to i64
  %62 = load i32, i32* %f_refcount.i, align 8
  %conv160.i = zext i32 %62 to i64
  %shared.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 2, i32 2
  %63 = load i32, i32* %shared.i, align 8
  %conv162.i = sext i32 %63 to i64
  call void %60(i32 %conv158.i, i64 %61, i64 %conv160.i, i64 %conv162.i, i64 0, i64 0) #6
  br label %do.body168.i

do.body168.i:                                     ; preds = %if.then157.i, %if.then154.i, %if.end148.i
  %64 = ptrtoint i32* %uaddr to i64
  %65 = load i32, i32* %f_refcount.i, align 8
  %conv170.i = zext i32 %65 to i64
  %shared172.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 2, i32 2
  %66 = load i32, i32* %shared172.i, align 8
  %conv173.i = sext i32 %66 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 393, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.90, i64 0, i64 0), i64 %64, i64 %conv170.i, i64 %conv173.i, i64 0, i64 0, i64 0) #6
  %67 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool182.i = icmp eq i8 %67, 0
  br i1 %tobool182.i, label %if.end46, label %if.then183.i, !prof !3

if.then183.i:                                     ; preds = %do.body168.i
  %68 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return, i64 0, i64 0, i32 7), align 8
  %tobool185.i = icmp eq i64 %68, 0
  br i1 %tobool185.i, label %if.end46, label %if.then186.i, !prof !3

if.then186.i:                                     ; preds = %if.then183.i
  %69 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv187.i = trunc i64 %68 to i32
  call void %69(i32 %conv187.i, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %if.end46

for.inc.i:                                        ; preds = %umtx_key_match.exit.i, %land.lhs.true.i.i, %for.body.i
  %le_next.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0478.i, i64 0, i32 5, i32 0
  %f.0.i = load %struct.futex*, %struct.futex** %le_next.i, align 8
  %tobool59.i = icmp eq %struct.futex* %f.0.i, null
  br i1 %tobool59.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.inc.i, %do.end58.i
  br i1 %tobool194.i, label %if.end247.i, label %do.body197.i

do.body197.i:                                     ; preds = %for.end.i
  %70 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool201.i = icmp eq i8 %70, 0
  br i1 %tobool201.i, label %do.end210.i, label %if.then202.i, !prof !3

if.then202.i:                                     ; preds = %do.body197.i
  %71 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool204.i = icmp eq i64 %71, 0
  br i1 %tobool204.i, label %do.end210.i, label %if.then205.i, !prof !3

if.then205.i:                                     ; preds = %if.then202.i
  %72 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv206.i = trunc i64 %71 to i32
  call void %72(i32 %conv206.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end210.i

do.end210.i:                                      ; preds = %if.then205.i, %if.then202.i, %do.body197.i
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 401) #6
  call void @umtx_key_release(%struct.umtx_key* nonnull %key.i) #6
  %73 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool217.i = icmp eq i8 %73, 0
  br i1 %tobool217.i, label %do.body228.i, label %if.then218.i, !prof !3

if.then218.i:                                     ; preds = %do.end210.i
  %74 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_null, i64 0, i64 0, i32 7), align 8
  %tobool220.i = icmp eq i64 %74, 0
  br i1 %tobool220.i, label %do.body228.i, label %if.then221.i, !prof !3

if.then221.i:                                     ; preds = %if.then218.i
  %75 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv222.i = trunc i64 %74 to i32
  %76 = ptrtoint i32* %uaddr to i64
  call void %75(i32 %conv222.i, i64 %76, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body228.i

do.body228.i:                                     ; preds = %if.then221.i, %if.then218.i, %do.end210.i
  %77 = ptrtoint i32* %uaddr to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.91, i64 0, i64 0), i64 %77, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  %78 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool237.i = icmp eq i8 %78, 0
  br i1 %tobool237.i, label %if.end46, label %if.then238.i, !prof !3

if.then238.i:                                     ; preds = %do.body228.i
  %79 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return, i64 0, i64 0, i32 7), align 8
  %tobool240.i = icmp eq i64 %79, 0
  br i1 %tobool240.i, label %if.end46, label %if.then241.i, !prof !3

if.then241.i:                                     ; preds = %if.then238.i
  %80 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv242.i = trunc i64 %79 to i32
  call void %80(i32 %conv242.i, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %if.end46

if.end247.i:                                      ; preds = %for.end.i
  %cmp248.i = icmp eq %struct.futex* %tmpf.0.i, null
  br i1 %cmp248.i, label %do.body252.i, label %do.body304.i

do.body252.i:                                     ; preds = %if.end247.i
  %81 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool256.i = icmp eq i8 %81, 0
  br i1 %tobool256.i, label %do.end265.i, label %if.then257.i, !prof !3

if.then257.i:                                     ; preds = %do.body252.i
  %82 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool259.i = icmp eq i64 %82, 0
  br i1 %tobool259.i, label %do.end265.i, label %if.then260.i, !prof !3

if.then260.i:                                     ; preds = %if.then257.i
  %83 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv261.i = trunc i64 %82 to i32
  call void %83(i32 %conv261.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end265.i

do.end265.i:                                      ; preds = %if.then260.i, %if.then257.i, %do.body252.i
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 411) #6
  %call268.i = call noalias i8* @malloc(i64 112, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_FUTEX, i64 0, i64 0), i32 2) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %call268.i, i8 0, i64 112, i1 false) #5
  %84 = bitcast i8* %call268.i to %struct.futex*
  %f_uaddr.i = getelementptr inbounds i8, i8* %call268.i, i64 32
  %85 = bitcast i8* %f_uaddr.i to i32**
  store i32* %uaddr, i32** %85, align 8
  %f_key269.i = getelementptr inbounds i8, i8* %call268.i, i64 40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %f_key269.i, i8* nonnull align 8 %7, i64 32, i1 false) #5
  %f_refcount270.i = getelementptr inbounds i8, i8* %call268.i, i64 72
  %86 = bitcast i8* %f_refcount270.i to i32*
  store i32 1, i32* %86, align 8
  %f_bitset.i = getelementptr inbounds i8, i8* %call268.i, i64 76
  %87 = bitcast i8* %f_bitset.i to i32*
  store i32 -1, i32* %87, align 4
  %mtx_lock273.i = getelementptr inbounds i8, i8* %call268.i, i64 24
  %88 = bitcast i8* %mtx_lock273.i to i64*
  call void @_mtx_init(i64* nonnull %88, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i64 0, i64 0), i8* null, i32 16) #6
  %89 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool278.i = icmp eq i8 %89, 0
  br i1 %tobool278.i, label %do.body291.i, label %if.then279.i, !prof !3

if.then279.i:                                     ; preds = %do.end265.i
  %90 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_create, i64 0, i64 0, i32 7), align 8
  %tobool281.i = icmp eq i64 %90, 0
  br i1 %tobool281.i, label %do.body291.i, label %if.then282.i, !prof !3

if.then282.i:                                     ; preds = %if.then279.i
  %91 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv283.i = trunc i64 %90 to i32
  %92 = ptrtoint i8* %call268.i to i64
  call void %91(i32 %conv283.i, i64 %92, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body291.i

do.body291.i:                                     ; preds = %if.then282.i, %if.then279.i, %do.end265.i
  %f_waiting_proc.i = getelementptr inbounds i8, i8* %call268.i, i64 96
  %tqh_first.i = bitcast i8* %f_waiting_proc.i to %struct.waiting_proc**
  store %struct.waiting_proc* null, %struct.waiting_proc** %tqh_first.i, align 8
  %tqh_last.i = getelementptr inbounds i8, i8* %call268.i, i64 104
  %93 = bitcast i8* %tqh_last.i to i8**
  store i8* %f_waiting_proc.i, i8** %93, align 8
  br i1 %cmp298.i, label %if.then300.i, label %retry.i.backedge

if.then300.i:                                     ; preds = %do.body291.i
  %94 = bitcast i8* %f_uaddr.i to i64*
  %95 = load i64, i64* %94, align 8
  %96 = load i32, i32* %86, align 8
  %conv.i460.i = zext i32 %96 to i64
  %shared.i461.i = getelementptr inbounds i8, i8* %call268.i, i64 48
  %97 = bitcast i8* %shared.i461.i to i32*
  %98 = load i32, i32* %97, align 8
  %conv2.i462.i = sext i32 %98 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 478, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.105, i64 0, i64 0), i64 %95, i64 %conv.i460.i, i64 %conv2.i462.i, i64 0, i64 0, i64 0) #6
  call void @__mtx_assert(i64* nonnull %88, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 479) #6
  call void @__mtx_lock_flags(i64* nonnull %88, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 480) #6
  br label %retry.i.backedge

retry.i.backedge:                                 ; preds = %if.then300.i, %do.body291.i
  br label %retry.i

do.body304.i:                                     ; preds = %if.end247.i
  br i1 %tobool59477.i, label %do.end313.thread.i, label %land.lhs.true.i

do.end313.thread.i:                               ; preds = %do.body304.i
  %le_next315465.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 5, i32 0
  store %struct.futex* null, %struct.futex** %le_next315465.i, align 8
  br label %if.end323.i

land.lhs.true.i:                                  ; preds = %do.body304.i
  %le_prev.i = getelementptr inbounds %struct.futex, %struct.futex* %f.0476.i, i64 0, i32 5, i32 1
  %99 = load %struct.futex**, %struct.futex*** %le_prev.i, align 8
  %cmp308.i = icmp eq %struct.futex** %99, getelementptr inbounds (%struct.futex_list, %struct.futex_list* @futex_list, i64 0, i32 0)
  br i1 %cmp308.i, label %if.then318.i, label %if.then310.i

if.then310.i:                                     ; preds = %land.lhs.true.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.93, i64 0, i64 0), %struct.futex_list* nonnull @futex_list) #8
  unreachable

if.then318.i:                                     ; preds = %land.lhs.true.i
  %le_next315.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 5, i32 0
  store %struct.futex* %f.0476.i, %struct.futex** %le_next315.i, align 8
  store %struct.futex** %le_next315.i, %struct.futex*** %le_prev.i, align 8
  br label %if.end323.i

if.end323.i:                                      ; preds = %if.then318.i, %do.end313.thread.i
  store %struct.futex* %tmpf.0.i, %struct.futex** getelementptr inbounds (%struct.futex_list, %struct.futex_list* @futex_list, i64 0, i32 0), align 8
  %le_prev325.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 5, i32 1
  store %struct.futex** getelementptr inbounds (%struct.futex_list, %struct.futex_list* @futex_list, i64 0, i32 0), %struct.futex*** %le_prev325.i, align 8
  %100 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool333.i = icmp eq i8 %100, 0
  br i1 %tobool333.i, label %do.end342.i, label %if.then334.i, !prof !3

if.then334.i:                                     ; preds = %if.end323.i
  %101 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool336.i = icmp eq i64 %101, 0
  br i1 %tobool336.i, label %do.end342.i, label %if.then337.i, !prof !3

if.then337.i:                                     ; preds = %if.then334.i
  %102 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv338.i = trunc i64 %101 to i32
  call void %102(i32 %conv338.i, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end342.i

do.end342.i:                                      ; preds = %if.then337.i, %if.then334.i, %if.end323.i
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 430) #6
  %103 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool349.i = icmp eq i8 %103, 0
  br i1 %tobool349.i, label %do.body365.i, label %if.then350.i, !prof !3

if.then350.i:                                     ; preds = %do.end342.i
  %104 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_new, i64 0, i64 0, i32 7), align 8
  %tobool352.i = icmp eq i64 %104, 0
  br i1 %tobool352.i, label %do.body365.i, label %if.then353.i, !prof !3

if.then353.i:                                     ; preds = %if.then350.i
  %105 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv354.i = trunc i64 %104 to i32
  %106 = ptrtoint i32* %uaddr to i64
  %f_refcount355.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 3
  %107 = load i32, i32* %f_refcount355.i, align 8
  %conv356.i = zext i32 %107 to i64
  %shared358.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 2, i32 2
  %108 = load i32, i32* %shared358.i, align 8
  %conv359.i = sext i32 %108 to i64
  call void %105(i32 %conv354.i, i64 %106, i64 %conv356.i, i64 %conv359.i, i64 0, i64 0) #6
  br label %do.body365.i

do.body365.i:                                     ; preds = %if.then353.i, %if.then350.i, %do.end342.i
  %109 = ptrtoint i32* %uaddr to i64
  %f_refcount366.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 3
  %110 = load i32, i32* %f_refcount366.i, align 8
  %conv367.i = zext i32 %110 to i64
  %shared369.i = getelementptr inbounds %struct.futex, %struct.futex* %tmpf.0.i, i64 0, i32 2, i32 2
  %111 = load i32, i32* %shared369.i, align 8
  %conv370.i = sext i32 %111 to i64
  call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 435, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.94, i64 0, i64 0), i64 %109, i64 %conv367.i, i64 %conv370.i, i64 0, i64 0, i64 0) #6
  %112 = bitcast %struct.futex** %f to i8**
  store i8* %22, i8** %112, align 8
  %113 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool379.i = icmp eq i8 %113, 0
  br i1 %tobool379.i, label %if.end46, label %if.then380.i, !prof !3

if.then380.i:                                     ; preds = %do.body365.i
  %114 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get0_return, i64 0, i64 0, i32 7), align 8
  %tobool382.i = icmp eq i64 %114, 0
  br i1 %tobool382.i, label %if.end46, label %if.then383.i, !prof !3

if.then383.i:                                     ; preds = %if.then380.i
  %115 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv384.i = trunc i64 %114 to i32
  call void %115(i32 %conv384.i, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %if.end46

do.body13:                                        ; preds = %if.then120.i, %if.then117.i, %do.end109.i, %if.then34.i, %if.then31.i, %do.body26.i
  %retval.0.i = phi i32 [ %call.i, %if.then31.i ], [ %call.i, %do.body26.i ], [ %call.i, %if.then34.i ], [ 22, %if.then117.i ], [ 22, %do.end109.i ], [ 22, %if.then120.i ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  %116 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool17 = icmp eq i8 %116, 0
  br i1 %tobool17, label %do.end26, label %if.then18, !prof !3

if.then18:                                        ; preds = %do.body13
  %117 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_error, i64 0, i64 0, i32 7), align 8
  %tobool20 = icmp eq i64 %117, 0
  br i1 %tobool20, label %do.end26, label %if.then21, !prof !3

if.then21:                                        ; preds = %if.then18
  %118 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv22 = trunc i64 %117 to i32
  call void %118(i32 %conv22, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end26

do.end26:                                         ; preds = %if.then18, %do.body13, %if.then21
  br i1 %tobool7, label %if.then29, label %do.body31

if.then29:                                        ; preds = %do.end26
  %119 = bitcast %struct.waiting_proc** %wp to i8**
  %120 = load i8*, i8** %119, align 8
  call void @free(i8* %120, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_FUTEX_WP, i64 0, i64 0)) #6
  br label %do.body31

do.body31:                                        ; preds = %do.end26, %if.then29
  %121 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool35 = icmp eq i8 %121, 0
  br i1 %tobool35, label %cleanup, label %if.then36, !prof !3

if.then36:                                        ; preds = %do.body31
  %122 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_return, i64 0, i64 0, i32 7), align 8
  %tobool38 = icmp eq i64 %122, 0
  br i1 %tobool38, label %cleanup, label %if.then39, !prof !3

if.then39:                                        ; preds = %if.then36
  %123 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv40 = trunc i64 %122 to i32
  %conv41 = sext i32 %retval.0.i to i64
  call void %123(i32 %conv40, i64 %conv41, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end46:                                         ; preds = %if.then183.i, %do.body168.i, %if.then186.i, %if.then238.i, %do.body228.i, %if.then241.i, %if.then380.i, %do.body365.i, %if.then383.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #5
  br i1 %tobool7, label %do.body51, label %do.body89

do.body51:                                        ; preds = %if.end46
  %124 = load %struct.futex*, %struct.futex** %f, align 8
  %f_waiting_proc = getelementptr inbounds %struct.futex, %struct.futex* %124, i64 0, i32 6
  %tqh_first = getelementptr inbounds %struct.lf_waiting_proc, %struct.lf_waiting_proc* %f_waiting_proc, i64 0, i32 0
  %125 = load %struct.waiting_proc*, %struct.waiting_proc** %tqh_first, align 8
  %cmp = icmp eq %struct.waiting_proc* %125, null
  br i1 %cmp, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body51
  %tqe_prev = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %125, i64 0, i32 2, i32 1
  %126 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev, align 8
  %cmp57 = icmp eq %struct.waiting_proc** %126, %tqh_first
  br i1 %cmp57, label %if.then69, label %if.then59

if.then59:                                        ; preds = %land.lhs.true
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i64 0, i64 0), %struct.lf_waiting_proc* nonnull %f_waiting_proc) #8
  unreachable

if.then69:                                        ; preds = %land.lhs.true
  %127 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %tqe_next = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %127, i64 0, i32 2, i32 0
  store %struct.waiting_proc* %125, %struct.waiting_proc** %tqe_next, align 8
  %128 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %tqe_next71 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %128, i64 0, i32 2, i32 0
  %129 = load %struct.futex*, %struct.futex** %f, align 8
  %tqh_first73 = getelementptr inbounds %struct.futex, %struct.futex* %129, i64 0, i32 6, i32 0
  %130 = load %struct.waiting_proc*, %struct.waiting_proc** %tqh_first73, align 8
  %tqe_prev75 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %130, i64 0, i32 2, i32 1
  store %struct.waiting_proc** %tqe_next71, %struct.waiting_proc*** %tqe_prev75, align 8
  br label %if.end79

if.else:                                          ; preds = %do.body51
  %131 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %tqe_next160 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %131, i64 0, i32 2, i32 0
  store %struct.waiting_proc* %125, %struct.waiting_proc** %tqe_next160, align 8
  %132 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %tqe_next71161 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %132, i64 0, i32 2, i32 0
  %133 = load %struct.futex*, %struct.futex** %f, align 8
  %tqh_last = getelementptr inbounds %struct.futex, %struct.futex* %133, i64 0, i32 6, i32 1
  store %struct.waiting_proc** %tqe_next71161, %struct.waiting_proc*** %tqh_last, align 8
  br label %if.end79

if.end79:                                         ; preds = %if.else, %if.then69
  %134 = bitcast %struct.waiting_proc** %wp to i64*
  %135 = load i64, i64* %134, align 8
  %136 = load %struct.futex*, %struct.futex** %f, align 8
  %f_waiting_proc80 = getelementptr inbounds %struct.futex, %struct.futex* %136, i64 0, i32 6
  %137 = bitcast %struct.lf_waiting_proc* %f_waiting_proc80 to i64*
  store i64 %135, i64* %137, align 8
  %138 = load %struct.futex*, %struct.futex** %f, align 8
  %tqh_first83 = getelementptr inbounds %struct.futex, %struct.futex* %138, i64 0, i32 6, i32 0
  %139 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %tqe_prev85 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %139, i64 0, i32 2, i32 1
  store %struct.waiting_proc** %tqh_first83, %struct.waiting_proc*** %tqe_prev85, align 8
  %140 = bitcast %struct.futex** %f to i64*
  %141 = load i64, i64* %140, align 8
  %142 = load %struct.waiting_proc*, %struct.waiting_proc** %wp, align 8
  %wp_futex = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %142, i64 0, i32 1
  %143 = bitcast %struct.futex** %wp_futex to i64*
  store i64 %141, i64* %143, align 8
  br label %do.body89

do.body89:                                        ; preds = %if.end46, %if.end79
  %144 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool93 = icmp eq i8 %144, 0
  br i1 %tobool93, label %cleanup, label %if.then94, !prof !3

if.then94:                                        ; preds = %do.body89
  %145 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_get_return, i64 0, i64 0, i32 7), align 8
  %tobool96 = icmp eq i64 %145, 0
  br i1 %tobool96, label %cleanup, label %if.then97, !prof !3

if.then97:                                        ; preds = %if.then94
  %146 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv98 = trunc i64 %145 to i32
  call void %146(i32 %conv98, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then97, %do.body89, %if.then94, %if.then39, %do.body31, %if.then36
  %retval.0.i134 = phi i32 [ 0, %if.then97 ], [ 0, %do.body89 ], [ 0, %if.then94 ], [ %retval.0.i, %if.then39 ], [ %retval.0.i, %do.body31 ], [ %retval.0.i, %if.then36 ]
  ret i32 %retval.0.i134
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @copyin_nofault(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc void @futex_put(%struct.futex* %f, %struct.waiting_proc* %wp) unnamed_addr #0 {
entry:
  %0 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %0, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %1, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %2 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %1 to i32
  %3 = ptrtoint %struct.futex* %f to i64
  %4 = ptrtoint %struct.waiting_proc* %wp to i64
  tail call void %2(i32 %conv5, i64 %3, i64 %4, i64 0, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %cmp = icmp eq %struct.waiting_proc* %wp, null
  br i1 %cmp, label %do.body55, label %if.then8

if.then8:                                         ; preds = %do.end
  %wp_flags = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %wp, i64 0, i32 0
  %5 = load i32, i32* %wp_flags, align 8
  %and = and i32 %5, 2
  %cmp9 = icmp eq i32 %and, 0
  br i1 %cmp9, label %do.body13, label %if.end53

do.body13:                                        ; preds = %if.then8
  %tqe_next = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %wp, i64 0, i32 2, i32 0
  %6 = load %struct.waiting_proc*, %struct.waiting_proc** %tqe_next, align 8
  %cmp14 = icmp eq %struct.waiting_proc* %6, null
  br i1 %cmp14, label %do.body26, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body13
  %tqe_prev = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %6, i64 0, i32 2, i32 1
  %7 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev, align 8
  %cmp21 = icmp eq %struct.waiting_proc** %7, %tqe_next
  br i1 %cmp21, label %do.body26, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0), %struct.waiting_proc* nonnull %wp) #8
  unreachable

do.body26:                                        ; preds = %land.lhs.true, %do.body13
  %tqe_prev28 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %wp, i64 0, i32 2, i32 1
  %8 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev28, align 8
  %9 = load %struct.waiting_proc*, %struct.waiting_proc** %8, align 8
  %cmp29 = icmp eq %struct.waiting_proc* %9, %wp
  br i1 %cmp29, label %do.end33, label %if.then31

if.then31:                                        ; preds = %do.body26
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i64 0, i64 0), %struct.waiting_proc* nonnull %wp) #8
  unreachable

do.end33:                                         ; preds = %do.body26
  %tqh_last = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 6, i32 1
  %tqe_prev44 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %6, i64 0, i32 2, i32 1
  %tqh_last.sink = select i1 %cmp14, %struct.waiting_proc*** %tqh_last, %struct.waiting_proc*** %tqe_prev44
  store %struct.waiting_proc** %8, %struct.waiting_proc*** %tqh_last.sink, align 8
  %10 = bitcast %struct.waiting_proc** %tqe_next to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %struct.waiting_proc*** %tqe_prev28 to i64**
  %13 = load i64*, i64** %12, align 8
  store i64 %11, i64* %13, align 8
  br label %if.end53

if.end53:                                         ; preds = %do.end33, %if.then8
  %14 = bitcast %struct.waiting_proc* %wp to i8*
  tail call void @free(i8* %14, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_FUTEX_WP, i64 0, i64 0)) #6
  br label %do.body55

do.body55:                                        ; preds = %do.end, %if.end53
  tail call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 312) #6
  %15 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool60 = icmp eq i8 %15, 0
  br i1 %tobool60, label %do.end69, label %if.then61, !prof !3

if.then61:                                        ; preds = %do.body55
  %16 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_locked, i64 0, i64 0, i32 7), align 8
  %tobool63 = icmp eq i64 %16, 0
  br i1 %tobool63, label %do.end69, label %if.then64, !prof !3

if.then64:                                        ; preds = %if.then61
  %17 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv65 = trunc i64 %16 to i32
  tail call void %17(i32 %conv65, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end69

do.end69:                                         ; preds = %if.then61, %do.body55, %if.then64
  %f_refcount = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 3
  %18 = load i32, i32* %f_refcount, align 8
  %dec = add i32 %18, -1
  store i32 %dec, i32* %f_refcount, align 8
  %cmp70 = icmp eq i32 %dec, 0
  br i1 %cmp70, label %do.body74, label %do.body192

do.body74:                                        ; preds = %do.end69
  %le_next = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 5, i32 0
  %19 = load %struct.futex*, %struct.futex** %le_next, align 8
  %cmp75 = icmp eq %struct.futex* %19, null
  %20 = ptrtoint %struct.futex* %19 to i64
  br i1 %cmp75, label %do.body88, label %land.lhs.true77

land.lhs.true77:                                  ; preds = %do.body74
  %le_prev = getelementptr inbounds %struct.futex, %struct.futex* %19, i64 0, i32 5, i32 1
  %21 = load %struct.futex**, %struct.futex*** %le_prev, align 8
  %cmp83 = icmp eq %struct.futex** %21, %le_next
  br i1 %cmp83, label %do.body88, label %if.then85

if.then85:                                        ; preds = %land.lhs.true77
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0), %struct.futex* nonnull %f) #8
  unreachable

do.body88:                                        ; preds = %land.lhs.true77, %do.body74
  %le_prev90 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 5, i32 1
  %22 = load %struct.futex**, %struct.futex*** %le_prev90, align 8
  %23 = load %struct.futex*, %struct.futex** %22, align 8
  %cmp91 = icmp eq %struct.futex* %23, %f
  br i1 %cmp91, label %do.end95, label %if.then93

if.then93:                                        ; preds = %do.body88
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i64 0, i64 0), %struct.futex* nonnull %f) #8
  unreachable

do.end95:                                         ; preds = %do.body88
  %24 = bitcast %struct.futex** %22 to i64*
  br i1 %cmp75, label %if.end107, label %if.then100

if.then100:                                       ; preds = %do.end95
  %le_prev106 = getelementptr inbounds %struct.futex, %struct.futex* %19, i64 0, i32 5, i32 1
  store %struct.futex** %22, %struct.futex*** %le_prev106, align 8
  %.phi.trans.insert = bitcast %struct.futex** %le_next to i64*
  %.pre310 = load i64, i64* %.phi.trans.insert, align 8
  %.phi.trans.insert311 = bitcast %struct.futex*** %le_prev90 to i64**
  %.pre312 = load i64*, i64** %.phi.trans.insert311, align 8
  br label %if.end107

if.end107:                                        ; preds = %do.end95, %if.then100
  %25 = phi i64* [ %.pre312, %if.then100 ], [ %24, %do.end95 ]
  %26 = phi i64 [ %.pre310, %if.then100 ], [ %20, %do.end95 ]
  store i64 %26, i64* %25, align 8
  %27 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool118 = icmp eq i8 %27, 0
  br i1 %tobool118, label %do.end126, label %if.then119, !prof !3

if.then119:                                       ; preds = %if.end107
  %28 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool121 = icmp eq i64 %28, 0
  br i1 %tobool121, label %do.end126, label %if.then122, !prof !3

if.then122:                                       ; preds = %if.then119
  %29 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv123 = trunc i64 %28 to i32
  tail call void %29(i32 %conv123, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end126

do.end126:                                        ; preds = %if.then119, %if.end107, %if.then122
  tail call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 315) #6
  %mtx_lock = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 0, i32 1
  %30 = load volatile i64, i64* %mtx_lock, align 8
  %and128 = and i64 %30, -8
  %31 = inttoptr i64 %and128 to %struct.thread*
  %32 = tail call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #10, !srcloc !5
  %cmp129 = icmp eq %struct.thread* %32, %31
  br i1 %cmp129, label %if.then131, label %do.body133

if.then131:                                       ; preds = %do.end126
  %f_uaddr.i = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 1
  %33 = bitcast i32** %f_uaddr.i to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load i32, i32* %f_refcount, align 8
  %conv.i = zext i32 %35 to i64
  %shared.i = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 2, i32 2
  %36 = load i32, i32* %shared.i, align 8
  %conv2.i = sext i32 %36 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 488, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.95, i64 0, i64 0), i64 %34, i64 %conv.i, i64 %conv2.i, i64 0, i64 0, i64 0) #6
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 489) #6
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 490) #6
  br label %do.body133

do.body133:                                       ; preds = %do.end126, %if.then131
  %37 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool137 = icmp eq i8 %37, 0
  br i1 %tobool137, label %do.body150, label %if.then138, !prof !3

if.then138:                                       ; preds = %do.body133
  %38 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_destroy, i64 0, i64 0, i32 7), align 8
  %tobool140 = icmp eq i64 %38, 0
  br i1 %tobool140, label %do.body150, label %if.then141, !prof !3

if.then141:                                       ; preds = %if.then138
  %39 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv142 = trunc i64 %38 to i32
  %f_uaddr = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 1
  %40 = bitcast i32** %f_uaddr to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i32, i32* %f_refcount, align 8
  %conv144 = zext i32 %42 to i64
  %shared = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 2, i32 2
  %43 = load i32, i32* %shared, align 8
  %conv145 = sext i32 %43 to i64
  tail call void %39(i32 %conv142, i64 %41, i64 %conv144, i64 %conv145, i64 0, i64 0) #6
  br label %do.body150

do.body150:                                       ; preds = %if.then138, %do.body133, %if.then141
  %f_uaddr151 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 1
  %44 = bitcast i32** %f_uaddr151 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = load i32, i32* %f_refcount, align 8
  %conv153 = zext i32 %46 to i64
  %f_key154 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 2
  %shared155 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 2, i32 2
  %47 = load i32, i32* %shared155, align 8
  %conv156 = sext i32 %47 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 322, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.98, i64 0, i64 0), i64 %45, i64 %conv153, i64 %conv156, i64 0, i64 0, i64 0) #6
  tail call void @umtx_key_release(%struct.umtx_key* nonnull %f_key154) #6
  %48 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool165 = icmp eq i8 %48, 0
  br i1 %tobool165, label %do.end174, label %if.then166, !prof !3

if.then166:                                       ; preds = %do.body150
  %49 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_destroy, i64 0, i64 0, i32 7), align 8
  %tobool168 = icmp eq i64 %49, 0
  br i1 %tobool168, label %do.end174, label %if.then169, !prof !3

if.then169:                                       ; preds = %if.then166
  %50 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv170 = trunc i64 %49 to i32
  %51 = ptrtoint %struct.futex* %f to i64
  tail call void %50(i32 %conv170, i64 %51, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end174

do.end174:                                        ; preds = %if.then166, %do.body150, %if.then169
  tail call void @_mtx_destroy(i64* nonnull %mtx_lock) #6
  %52 = bitcast %struct.futex* %f to i8*
  tail call void @free(i8* %52, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_FUTEX, i64 0, i64 0)) #6
  %53 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool182 = icmp eq i8 %53, 0
  br i1 %tobool182, label %do.end256, label %if.then183, !prof !3

if.then183:                                       ; preds = %do.end174
  %54 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_return, i64 0, i64 0, i32 7), align 8
  %tobool185 = icmp eq i64 %54, 0
  br i1 %tobool185, label %do.end256, label %if.then186, !prof !3

if.then186:                                       ; preds = %if.then183
  %55 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv187 = trunc i64 %54 to i32
  tail call void %55(i32 %conv187, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end256

do.body192:                                       ; preds = %do.end69
  %56 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool196 = icmp eq i8 %56, 0
  br i1 %tobool196, label %do.body212, label %if.then197, !prof !3

if.then197:                                       ; preds = %do.body192
  %57 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_unlock, i64 0, i64 0, i32 7), align 8
  %tobool199 = icmp eq i64 %57, 0
  br i1 %tobool199, label %do.body212, label %if.then200, !prof !3

if.then200:                                       ; preds = %if.then197
  %58 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv201 = trunc i64 %57 to i32
  %f_uaddr202 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 1
  %59 = bitcast i32** %f_uaddr202 to i64*
  %60 = load i64, i64* %59, align 8
  %conv204 = zext i32 %dec to i64
  %shared206 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 2, i32 2
  %61 = load i32, i32* %shared206, align 8
  %conv207 = sext i32 %61 to i64
  tail call void %58(i32 %conv201, i64 %60, i64 %conv204, i64 %conv207, i64 0, i64 0) #6
  %.pre = load i32, i32* %f_refcount, align 8
  br label %do.body212

do.body212:                                       ; preds = %if.then197, %do.body192, %if.then200
  %62 = phi i32 [ %dec, %if.then197 ], [ %dec, %do.body192 ], [ %.pre, %if.then200 ]
  %f_uaddr213 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 1
  %63 = bitcast i32** %f_uaddr213 to i64*
  %64 = load i64, i64* %63, align 8
  %conv215 = zext i32 %62 to i64
  %shared217 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 2, i32 2
  %65 = load i32, i32* %shared217, align 8
  %conv218 = sext i32 %65 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 334, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.99, i64 0, i64 0), i64 %64, i64 %conv215, i64 %conv218, i64 0, i64 0, i64 0) #6
  %66 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool226 = icmp eq i8 %66, 0
  br i1 %tobool226, label %do.end234, label %if.then227, !prof !3

if.then227:                                       ; preds = %do.body212
  %67 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_locks_futex_mtx_unlock, i64 0, i64 0, i32 7), align 8
  %tobool229 = icmp eq i64 %67, 0
  br i1 %tobool229, label %do.end234, label %if.then230, !prof !3

if.then230:                                       ; preds = %if.then227
  %68 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv231 = trunc i64 %67 to i32
  tail call void %68(i32 %conv231, i64 ptrtoint (%struct.mtx* @futex_mtx to i64), i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end234

do.end234:                                        ; preds = %if.then227, %do.body212, %if.then230
  tail call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @futex_mtx, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 335) #6
  %mtx_lock237 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 0, i32 1
  %69 = load volatile i64, i64* %mtx_lock237, align 8
  %and238 = and i64 %69, -8
  %70 = inttoptr i64 %and238 to %struct.thread*
  %71 = tail call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #10, !srcloc !5
  %cmp240 = icmp eq %struct.thread* %71, %70
  br i1 %cmp240, label %if.then242, label %do.body244

if.then242:                                       ; preds = %do.end234
  %72 = load i64, i64* %63, align 8
  %73 = load i32, i32* %f_refcount, align 8
  %conv.i306 = zext i32 %73 to i64
  %74 = load i32, i32* %shared217, align 8
  %conv2.i308 = sext i32 %74 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 488, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.95, i64 0, i64 0), i64 %72, i64 %conv.i306, i64 %conv2.i308, i64 0, i64 0, i64 0) #6
  tail call void @__mtx_assert(i64* nonnull %mtx_lock237, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 489) #6
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock237, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 490) #6
  br label %do.body244

do.body244:                                       ; preds = %do.end234, %if.then242
  %75 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool248 = icmp eq i8 %75, 0
  br i1 %tobool248, label %do.end256, label %if.then249, !prof !3

if.then249:                                       ; preds = %do.body244
  %76 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_put_return, i64 0, i64 0, i32 7), align 8
  %tobool251 = icmp eq i64 %76, 0
  br i1 %tobool251, label %do.end256, label %if.then252, !prof !3

if.then252:                                       ; preds = %if.then249
  %77 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv253 = trunc i64 %76 to i32
  tail call void %77(i32 %conv253, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end256

do.end256:                                        ; preds = %if.then183, %do.end174, %if.then249, %do.body244, %if.then252, %if.then186
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @copyin(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @futex_wake(%struct.futex* %f, i32 %n, i32 %bitset) unnamed_addr #0 {
entry:
  %0 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %0, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %1, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %2 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %1 to i32
  %3 = ptrtoint %struct.futex* %f to i64
  %conv6 = sext i32 %n to i64
  %conv7 = zext i32 %bitset to i64
  tail call void %2(i32 %conv5, i64 %3, i64 %conv6, i64 %conv7, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %cmp = icmp eq i32 %bitset, 0
  br i1 %cmp, label %do.body11, label %if.end25

do.body11:                                        ; preds = %do.end
  %4 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool15 = icmp eq i8 %4, 0
  br i1 %tobool15, label %cleanup, label %if.then16, !prof !3

if.then16:                                        ; preds = %do.body11
  %5 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_return, i64 0, i64 0, i32 7), align 8
  %tobool18 = icmp eq i64 %5, 0
  br i1 %tobool18, label %cleanup, label %if.then19, !prof !3

if.then19:                                        ; preds = %if.then16
  %6 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv20 = trunc i64 %5 to i32
  tail call void %6(i32 %conv20, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end25:                                         ; preds = %do.end
  %mtx_lock = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 0, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 567) #6
  %tqh_first = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 6, i32 0
  %7 = load %struct.waiting_proc*, %struct.waiting_proc** %tqh_first, align 8
  %tobool26172 = icmp eq %struct.waiting_proc* %7, null
  br i1 %tobool26172, label %do.body119, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %if.end25
  %f_uaddr44 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 1
  %8 = bitcast i32** %f_uaddr44 to i64*
  %f_refcount45 = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 3
  %tqh_last = getelementptr inbounds %struct.futex, %struct.futex* %f, i64 0, i32 6, i32 1
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc
  %.in = phi %struct.waiting_proc* [ %7, %land.rhs.lr.ph ], [ %10, %for.inc ]
  %count.0174 = phi i32 [ 0, %land.rhs.lr.ph ], [ %count.1, %for.inc ]
  %9 = bitcast %struct.waiting_proc* %.in to i8*
  %tqe_next = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in, i64 0, i32 2, i32 0
  %10 = load %struct.waiting_proc*, %struct.waiting_proc** %tqe_next, align 8
  %11 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool31 = icmp eq i8 %11, 0
  br i1 %tobool31, label %do.body43, label %if.then32, !prof !3

if.then32:                                        ; preds = %land.rhs
  %12 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_iterate, i64 0, i64 0, i32 7), align 8
  %tobool34 = icmp eq i64 %12, 0
  br i1 %tobool34, label %do.body43, label %if.then35, !prof !3

if.then35:                                        ; preds = %if.then32
  %13 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv36 = trunc i64 %12 to i32
  %14 = load i64, i64* %8, align 8
  %15 = ptrtoint %struct.waiting_proc* %.in to i64
  %16 = load i32, i32* %f_refcount45, align 8
  %conv37 = zext i32 %16 to i64
  tail call void %13(i32 %conv36, i64 %14, i64 %15, i64 %conv37, i64 0, i64 0) #6
  br label %do.body43

do.body43:                                        ; preds = %if.then32, %land.rhs, %if.then35
  %17 = load i64, i64* %8, align 8
  %18 = ptrtoint %struct.waiting_proc* %.in to i64
  %19 = load i32, i32* %f_refcount45, align 8
  %conv46 = zext i32 %19 to i64
  tail call void @ktr_tracepoint(i64 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 572, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.104, i64 0, i64 0), i64 %17, i64 %18, i64 %conv46, i64 0, i64 0, i64 0) #6
  %wp_futex = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in, i64 0, i32 1
  %20 = load %struct.futex*, %struct.futex** %wp_futex, align 8
  %f_bitset = getelementptr inbounds %struct.futex, %struct.futex* %20, i64 0, i32 4
  %21 = load i32, i32* %f_bitset, align 4
  %and = and i32 %21, %bitset
  %tobool51 = icmp eq i32 %and, 0
  br i1 %tobool51, label %for.inc, label %if.end53

if.end53:                                         ; preds = %do.body43
  %wp_flags = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in, i64 0, i32 0
  %22 = load i32, i32* %wp_flags, align 8
  %or = or i32 %22, 2
  store i32 %or, i32* %wp_flags, align 8
  %23 = load %struct.waiting_proc*, %struct.waiting_proc** %tqe_next, align 8
  %cmp58 = icmp eq %struct.waiting_proc* %23, null
  br i1 %cmp58, label %do.body71, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end53
  %tqe_prev = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %23, i64 0, i32 2, i32 1
  %24 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev, align 8
  %cmp65 = icmp eq %struct.waiting_proc** %24, %tqe_next
  br i1 %cmp65, label %do.body71, label %if.then67

if.then67:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.96, i64 0, i64 0), %struct.waiting_proc* nonnull %.in) #8
  unreachable

do.body71:                                        ; preds = %land.lhs.true, %if.end53
  %tqe_prev73 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %.in, i64 0, i32 2, i32 1
  %25 = load %struct.waiting_proc**, %struct.waiting_proc*** %tqe_prev73, align 8
  %26 = load %struct.waiting_proc*, %struct.waiting_proc** %25, align 8
  %cmp74 = icmp eq %struct.waiting_proc* %26, %.in
  br i1 %cmp74, label %do.end79, label %if.then76

if.then76:                                        ; preds = %do.body71
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.97, i64 0, i64 0), %struct.waiting_proc* nonnull %.in) #8
  unreachable

do.end79:                                         ; preds = %do.body71
  %tqe_prev90 = getelementptr inbounds %struct.waiting_proc, %struct.waiting_proc* %23, i64 0, i32 2, i32 1
  %tqh_last.sink = select i1 %cmp58, %struct.waiting_proc*** %tqh_last, %struct.waiting_proc*** %tqe_prev90
  store %struct.waiting_proc** %25, %struct.waiting_proc*** %tqh_last.sink, align 8
  %27 = bitcast %struct.waiting_proc** %tqe_next to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.waiting_proc*** %tqe_prev73 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool105 = icmp eq i8 %31, 0
  br i1 %tobool105, label %do.end114, label %if.then106, !prof !3

if.then106:                                       ; preds = %do.end79
  %32 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_wakeup, i64 0, i64 0, i32 7), align 8
  %tobool108 = icmp eq i64 %32, 0
  br i1 %tobool108, label %do.end114, label %if.then109, !prof !3

if.then109:                                       ; preds = %if.then106
  %33 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv110 = trunc i64 %32 to i32
  tail call void %33(i32 %conv110, i64 %18, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.end114

do.end114:                                        ; preds = %if.then106, %do.end79, %if.then109
  tail call void @wakeup_one(i8* nonnull %9) #6
  %inc = add i32 %count.0174, 1
  %cmp115 = icmp eq i32 %inc, %n
  br i1 %cmp115, label %do.body119, label %for.inc

for.inc:                                          ; preds = %do.body43, %do.end114
  %count.1 = phi i32 [ %inc, %do.end114 ], [ %count.0174, %do.body43 ]
  %tobool26 = icmp eq %struct.waiting_proc* %10, null
  br i1 %tobool26, label %do.body119, label %land.rhs

do.body119:                                       ; preds = %do.end114, %for.inc, %if.end25
  %count.2 = phi i32 [ 0, %if.end25 ], [ %count.1, %for.inc ], [ %n, %do.end114 ]
  %34 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool123 = icmp eq i8 %34, 0
  br i1 %tobool123, label %cleanup, label %if.then124, !prof !3

if.then124:                                       ; preds = %do.body119
  %35 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_futex_wake_return, i64 0, i64 0, i32 7), align 8
  %tobool126 = icmp eq i64 %35, 0
  br i1 %tobool126, label %cleanup, label %if.then127, !prof !3

if.then127:                                       ; preds = %if.then124
  %36 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv128 = trunc i64 %35 to i32
  %conv129 = sext i32 %count.2 to i64
  tail call void %36(i32 %conv128, i64 %conv129, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then127, %do.body119, %if.then124, %if.then19, %do.body11, %if.then16
  %retval.0 = phi i32 [ 22, %if.then16 ], [ 22, %do.body11 ], [ 22, %if.then19 ], [ %count.2, %if.then124 ], [ %count.2, %do.body119 ], [ %count.2, %if.then127 ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @vm_fault_disable_pagefaults() local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @vm_fault_enable_pagefaults(i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.linux_pemuldata* @pem_find(%struct.proc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @linux_msg(%struct.thread*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @linux_set_robust_list(%struct.thread* %td, %struct.linux_set_robust_list_args* %args) local_unnamed_addr #0 {
entry:
  %0 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %0, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %1 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %1, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %2 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %1 to i32
  %3 = ptrtoint %struct.thread* %td to i64
  %4 = ptrtoint %struct.linux_set_robust_list_args* %args to i64
  tail call void %2(i32 %conv5, i64 %3, i64 %4, i64 0, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %len = getelementptr inbounds %struct.linux_set_robust_list_args, %struct.linux_set_robust_list_args* %args, i64 0, i32 4
  %5 = load i32, i32* %len, align 8
  %cmp = icmp eq i32 %5, 12
  br i1 %cmp, label %if.end38, label %do.body10

do.body10:                                        ; preds = %do.end
  %6 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool14 = icmp eq i8 %6, 0
  br i1 %tobool14, label %do.body24, label %if.then15, !prof !3

if.then15:                                        ; preds = %do.body10
  %7 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_size_error, i64 0, i64 0, i32 7), align 8
  %tobool17 = icmp eq i64 %7, 0
  br i1 %tobool17, label %do.body24, label %if.then18, !prof !3

if.then18:                                        ; preds = %if.then15
  %8 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv19 = trunc i64 %7 to i32
  tail call void %8(i32 %conv19, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body24

do.body24:                                        ; preds = %if.then15, %do.body10, %if.then18
  %9 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool28 = icmp eq i8 %9, 0
  br i1 %tobool28, label %cleanup, label %if.then29, !prof !3

if.then29:                                        ; preds = %do.body24
  %10 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool31 = icmp eq i64 %10, 0
  br i1 %tobool31, label %cleanup, label %if.then32, !prof !3

if.then32:                                        ; preds = %if.then29
  %11 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv33 = trunc i64 %10 to i32
  tail call void %11(i32 %conv33, i64 22, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end38:                                         ; preds = %do.end
  %call = tail call %struct.linux_emuldata* @em_find(%struct.thread* %td) #6
  %head = getelementptr inbounds %struct.linux_set_robust_list_args, %struct.linux_set_robust_list_args* %args, i64 0, i32 1
  %12 = bitcast %struct.linux_robust_list_head** %head to i64*
  %13 = load i64, i64* %12, align 8
  %robust_futexes = getelementptr inbounds %struct.linux_emuldata, %struct.linux_emuldata* %call, i64 0, i32 5
  %14 = bitcast %struct.linux_robust_list_head** %robust_futexes to i64*
  store i64 %13, i64* %14, align 8
  %15 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool43 = icmp eq i8 %15, 0
  br i1 %tobool43, label %cleanup, label %if.then44, !prof !3

if.then44:                                        ; preds = %if.end38
  %16 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_set_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool46 = icmp eq i64 %16, 0
  br i1 %tobool46, label %cleanup, label %if.then47, !prof !3

if.then47:                                        ; preds = %if.then44
  %17 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv48 = trunc i64 %16 to i32
  tail call void %17(i32 %conv48, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then47, %if.end38, %if.then44, %if.then32, %do.body24, %if.then29
  %retval.0 = phi i32 [ 22, %if.then29 ], [ 22, %do.body24 ], [ 22, %if.then32 ], [ 0, %if.then44 ], [ 0, %if.end38 ], [ 0, %if.then47 ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.linux_emuldata* @em_find(%struct.thread*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @linux_get_robust_list(%struct.thread* %td, %struct.linux_get_robust_list_args* %args) local_unnamed_addr #0 {
entry:
  %head = alloca %struct.linux_robust_list_head*, align 8
  %len = alloca i32, align 4
  %0 = bitcast %struct.linux_robust_list_head** %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %1 = bitcast i32* %len to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #5
  store i32 12, i32* %len, align 4
  %2 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %2, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %3, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %4 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %3 to i32
  %5 = ptrtoint %struct.thread* %td to i64
  %6 = ptrtoint %struct.linux_get_robust_list_args* %args to i64
  tail call void %4(i32 %conv5, i64 %5, i64 %6, i64 0, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %pid = getelementptr inbounds %struct.linux_get_robust_list_args, %struct.linux_get_robust_list_args* %args, i64 0, i32 1
  %7 = load i32, i32* %pid, align 8
  %tobool7 = icmp eq i32 %7, 0
  br i1 %tobool7, label %if.then8, label %if.else

if.then8:                                         ; preds = %do.end
  %call = tail call %struct.linux_emuldata* @em_find(%struct.thread* %td) #6
  %cmp = icmp eq %struct.linux_emuldata* %call, null
  br i1 %cmp, label %if.then14, label %do.end17, !prof !4

if.then14:                                        ; preds = %if.then8
  tail call void (i8*, ...) @kassert_panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69, i64 0, i64 0)) #6
  br label %do.end17

do.end17:                                         ; preds = %if.then14, %if.then8
  %robust_futexes = getelementptr inbounds %struct.linux_emuldata, %struct.linux_emuldata* %call, i64 0, i32 5
  %8 = bitcast %struct.linux_robust_list_head** %robust_futexes to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %struct.linux_robust_list_head** %head to i64*
  store i64 %9, i64* %10, align 8
  br label %if.end101

if.else:                                          ; preds = %do.end
  %call19 = tail call %struct.thread* @tdfind(i32 %7, i32 -1) #6
  %cmp20 = icmp eq %struct.thread* %call19, null
  br i1 %cmp20, label %do.body23, label %if.end37

do.body23:                                        ; preds = %if.else
  %11 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool27 = icmp eq i8 %11, 0
  br i1 %tobool27, label %cleanup, label %if.then28, !prof !3

if.then28:                                        ; preds = %do.body23
  %12 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool30 = icmp eq i64 %12, 0
  br i1 %tobool30, label %cleanup, label %if.then31, !prof !3

if.then31:                                        ; preds = %if.then28
  %13 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv32 = trunc i64 %12 to i32
  tail call void %13(i32 %conv32, i64 3, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end37:                                         ; preds = %if.else
  %td_proc = getelementptr inbounds %struct.thread, %struct.thread* %call19, i64 0, i32 1
  %14 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %p_sysent = getelementptr inbounds %struct.proc, %struct.proc* %14, i64 0, i32 69
  %15 = load %struct.sysentvec*, %struct.sysentvec** %p_sysent, align 8
  %sv_flags = getelementptr inbounds %struct.sysentvec, %struct.sysentvec* %15, i64 0, i32 23
  %16 = load i32, i32* %sv_flags, align 8
  %and = and i32 %16, 255
  %cmp38 = icmp eq i32 %and, 3
  br i1 %cmp38, label %if.end56, label %do.body41

do.body41:                                        ; preds = %if.end37
  %17 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool45 = icmp eq i8 %17, 0
  br i1 %tobool45, label %do.end54, label %if.then46, !prof !3

if.then46:                                        ; preds = %do.body41
  %18 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool48 = icmp eq i64 %18, 0
  br i1 %tobool48, label %do.end54, label %if.then49, !prof !3

if.then49:                                        ; preds = %if.then46
  %19 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv50 = trunc i64 %18 to i32
  tail call void %19(i32 %conv50, i64 1, i64 0, i64 0, i64 0, i64 0) #6
  %.pre = load %struct.proc*, %struct.proc** %td_proc, align 8
  br label %do.end54

do.end54:                                         ; preds = %if.then46, %do.body41, %if.then49
  %20 = phi %struct.proc* [ %14, %if.then46 ], [ %14, %do.body41 ], [ %.pre, %if.then49 ]
  %mtx_lock = getelementptr inbounds %struct.proc, %struct.proc* %20, i64 0, i32 22, i32 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 1160) #6
  br label %cleanup

if.end56:                                         ; preds = %if.end37
  %call57 = tail call %struct.linux_emuldata* @em_find(%struct.thread* nonnull %call19) #6
  %cmp59 = icmp eq %struct.linux_emuldata* %call57, null
  br i1 %cmp59, label %if.then66, label %do.end69, !prof !4

if.then66:                                        ; preds = %if.end56
  tail call void (i8*, ...) @kassert_panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69, i64 0, i64 0)) #6
  br label %do.end69

do.end69:                                         ; preds = %if.then66, %if.end56
  %call70 = tail call i32 @priv_check(%struct.thread* %td, i32 50) #6
  %tobool71 = icmp eq i32 %call70, 0
  br i1 %tobool71, label %lor.lhs.false, label %if.then78

lor.lhs.false:                                    ; preds = %do.end69
  %call72 = tail call i32 @priv_check(%struct.thread* %td, i32 51) #6
  %tobool73 = icmp eq i32 %call72, 0
  br i1 %tobool73, label %lor.lhs.false74, label %if.then78

lor.lhs.false74:                                  ; preds = %lor.lhs.false
  %21 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %call76 = tail call i32 @p_candebug(%struct.thread* %td, %struct.proc* %21) #6
  %tobool77 = icmp eq i32 %call76, 0
  br i1 %tobool77, label %if.end96, label %if.then78

if.then78:                                        ; preds = %lor.lhs.false74, %lor.lhs.false, %do.end69
  %22 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %mtx_lock81 = getelementptr inbounds %struct.proc, %struct.proc* %22, i64 0, i32 22, i32 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock81, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 1170) #6
  %23 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool86 = icmp eq i8 %23, 0
  br i1 %tobool86, label %cleanup, label %if.then87, !prof !3

if.then87:                                        ; preds = %if.then78
  %24 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool89 = icmp eq i64 %24, 0
  br i1 %tobool89, label %cleanup, label %if.then90, !prof !3

if.then90:                                        ; preds = %if.then87
  %25 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv91 = trunc i64 %24 to i32
  tail call void %25(i32 %conv91, i64 1, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end96:                                         ; preds = %lor.lhs.false74
  %robust_futexes97 = getelementptr inbounds %struct.linux_emuldata, %struct.linux_emuldata* %call57, i64 0, i32 5
  %26 = bitcast %struct.linux_robust_list_head** %robust_futexes97 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.linux_robust_list_head** %head to i64*
  store i64 %27, i64* %28, align 8
  %29 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %mtx_lock100 = getelementptr inbounds %struct.proc, %struct.proc* %29, i64 0, i32 22, i32 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock100, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i32 1178) #6
  br label %if.end101

if.end101:                                        ; preds = %if.end96, %do.end17
  %len102 = getelementptr inbounds %struct.linux_get_robust_list_args, %struct.linux_get_robust_list_args* %args, i64 0, i32 7
  %30 = bitcast i32** %len102 to i8**
  %31 = load i8*, i8** %30, align 8
  %call103 = call i32 @copyout(i8* nonnull %1, i8* %31, i64 4) #6
  %tobool104 = icmp eq i32 %call103, 0
  br i1 %tobool104, label %if.end135, label %do.body106

do.body106:                                       ; preds = %if.end101
  %32 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool110 = icmp eq i8 %32, 0
  br i1 %tobool110, label %do.body121, label %if.then111, !prof !3

if.then111:                                       ; preds = %do.body106
  %33 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_copyout_error, i64 0, i64 0, i32 7), align 8
  %tobool113 = icmp eq i64 %33, 0
  br i1 %tobool113, label %do.body121, label %if.then114, !prof !3

if.then114:                                       ; preds = %if.then111
  %34 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv115 = trunc i64 %33 to i32
  %conv116 = sext i32 %call103 to i64
  call void %34(i32 %conv115, i64 %conv116, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body121

do.body121:                                       ; preds = %if.then111, %do.body106, %if.then114
  %35 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool125 = icmp eq i8 %35, 0
  br i1 %tobool125, label %cleanup, label %if.then126, !prof !3

if.then126:                                       ; preds = %do.body121
  %36 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool128 = icmp eq i64 %36, 0
  br i1 %tobool128, label %cleanup, label %if.then129, !prof !3

if.then129:                                       ; preds = %if.then126
  %37 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv130 = trunc i64 %36 to i32
  call void %37(i32 %conv130, i64 14, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end135:                                        ; preds = %if.end101
  %head136 = getelementptr inbounds %struct.linux_get_robust_list_args, %struct.linux_get_robust_list_args* %args, i64 0, i32 4
  %38 = bitcast %struct.linux_robust_list_head*** %head136 to i8**
  %39 = load i8*, i8** %38, align 8
  %call137 = call i32 @copyout(i8* nonnull %0, i8* %39, i64 8) #6
  %tobool138 = icmp eq i32 %call137, 0
  br i1 %tobool138, label %do.body156, label %do.body140

do.body140:                                       ; preds = %if.end135
  %40 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool144 = icmp eq i8 %40, 0
  br i1 %tobool144, label %do.body156, label %if.then145, !prof !3

if.then145:                                       ; preds = %do.body140
  %41 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_copyout_error, i64 0, i64 0, i32 7), align 8
  %tobool147 = icmp eq i64 %41, 0
  br i1 %tobool147, label %do.body156, label %if.then148, !prof !3

if.then148:                                       ; preds = %if.then145
  %42 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv149 = trunc i64 %41 to i32
  %conv150 = sext i32 %call137 to i64
  call void %42(i32 %conv149, i64 %conv150, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body156

do.body156:                                       ; preds = %if.then145, %do.body140, %if.end135, %if.then148
  %43 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool160 = icmp eq i8 %43, 0
  br i1 %tobool160, label %cleanup, label %if.then161, !prof !3

if.then161:                                       ; preds = %do.body156
  %44 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_linux_get_robust_list_return, i64 0, i64 0, i32 7), align 8
  %tobool163 = icmp eq i64 %44, 0
  br i1 %tobool163, label %cleanup, label %if.then164, !prof !3

if.then164:                                       ; preds = %if.then161
  %45 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv165 = trunc i64 %44 to i32
  %conv166 = sext i32 %call137 to i64
  call void %45(i32 %conv165, i64 %conv166, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then164, %do.body156, %if.then161, %if.then129, %do.body121, %if.then126, %if.then90, %if.then78, %if.then87, %if.then31, %do.body23, %if.then28, %do.end54
  %retval.0 = phi i32 [ 1, %do.end54 ], [ 3, %if.then28 ], [ 3, %do.body23 ], [ 3, %if.then31 ], [ 1, %if.then87 ], [ 1, %if.then78 ], [ 1, %if.then90 ], [ 14, %if.then126 ], [ 14, %do.body121 ], [ 14, %if.then129 ], [ %call137, %if.then161 ], [ %call137, %do.body156 ], [ %call137, %if.then164 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @kassert_panic(i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.thread* @tdfind(i32, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @__mtx_unlock_flags(i64*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @priv_check(%struct.thread*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @p_candebug(%struct.thread*, %struct.proc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @copyout(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local void @release_futexes(%struct.thread* %td, %struct.linux_emuldata* %em) local_unnamed_addr #0 {
entry:
  %entry1 = alloca %struct.linux_robust_list*, align 8
  %next_entry = alloca %struct.linux_robust_list*, align 8
  %pending = alloca %struct.linux_robust_list*, align 8
  %pi = alloca i32, align 4
  %next_pi = alloca i32, align 4
  %pip = alloca i32, align 4
  %futex_offset = alloca i32, align 4
  %0 = bitcast %struct.linux_robust_list** %entry1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #5
  %1 = bitcast %struct.linux_robust_list** %next_entry to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #5
  %2 = bitcast %struct.linux_robust_list** %pending to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #5
  %3 = bitcast i32* %pi to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #5
  %4 = bitcast i32* %next_pi to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  %5 = bitcast i32* %pip to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  %6 = bitcast i32* %futex_offset to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #5
  %7 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool2 = icmp eq i8 %7, 0
  br i1 %tobool2, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %8 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_entry, i64 0, i64 0, i32 7), align 8
  %tobool4 = icmp eq i64 %8, 0
  br i1 %tobool4, label %do.end, label %if.then5, !prof !3

if.then5:                                         ; preds = %if.then
  %9 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv6 = trunc i64 %8 to i32
  %10 = ptrtoint %struct.thread* %td to i64
  %11 = ptrtoint %struct.linux_emuldata* %em to i64
  tail call void %9(i32 %conv6, i64 %10, i64 %11, i64 0, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then5
  %robust_futexes = getelementptr inbounds %struct.linux_emuldata, %struct.linux_emuldata* %em, i64 0, i32 5
  %12 = load %struct.linux_robust_list_head*, %struct.linux_robust_list_head** %robust_futexes, align 8
  %cmp = icmp eq %struct.linux_robust_list_head* %12, null
  br i1 %cmp, label %do.body10, label %if.end24

do.body10:                                        ; preds = %do.end
  %13 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool14 = icmp eq i8 %13, 0
  br i1 %tobool14, label %cleanup, label %if.then15, !prof !3

if.then15:                                        ; preds = %do.body10
  %14 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool17 = icmp eq i64 %14, 0
  br i1 %tobool17, label %cleanup, label %if.then18, !prof !3

if.then18:                                        ; preds = %if.then15
  %15 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv19 = trunc i64 %14 to i32
  tail call void %15(i32 %conv19, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end24:                                         ; preds = %do.end
  %list = getelementptr inbounds %struct.linux_robust_list_head, %struct.linux_robust_list_head* %12, i64 0, i32 0
  %16 = bitcast %struct.linux_robust_list_head* %12 to %struct.linux_robust_list**
  %call = call fastcc i32 @fetch_robust_entry(%struct.linux_robust_list** nonnull %entry1, %struct.linux_robust_list** %16, i32* nonnull %pi) #7
  %tobool25 = icmp eq i32 %call, 0
  br i1 %tobool25, label %if.end41, label %do.body27

do.body27:                                        ; preds = %if.end24
  %17 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool31 = icmp eq i8 %17, 0
  br i1 %tobool31, label %cleanup, label %if.then32, !prof !3

if.then32:                                        ; preds = %do.body27
  %18 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool34 = icmp eq i64 %18, 0
  br i1 %tobool34, label %cleanup, label %if.then35, !prof !3

if.then35:                                        ; preds = %if.then32
  %19 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv36 = trunc i64 %18 to i32
  call void %19(i32 %conv36, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end41:                                         ; preds = %if.end24
  %futex_offset42 = getelementptr inbounds %struct.linux_robust_list_head, %struct.linux_robust_list_head* %12, i64 0, i32 1
  %20 = bitcast i32* %futex_offset42 to i8*
  %call43 = call i32 @copyin(i8* nonnull %20, i8* nonnull %6, i64 4) #6
  %tobool44 = icmp eq i32 %call43, 0
  br i1 %tobool44, label %if.end75, label %do.body46

do.body46:                                        ; preds = %if.end41
  %21 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool50 = icmp eq i8 %21, 0
  br i1 %tobool50, label %do.body61, label %if.then51, !prof !3

if.then51:                                        ; preds = %do.body46
  %22 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_copyin_error, i64 0, i64 0, i32 7), align 8
  %tobool53 = icmp eq i64 %22, 0
  br i1 %tobool53, label %do.body61, label %if.then54, !prof !3

if.then54:                                        ; preds = %if.then51
  %23 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv55 = trunc i64 %22 to i32
  %conv56 = sext i32 %call43 to i64
  call void %23(i32 %conv55, i64 %conv56, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body61

do.body61:                                        ; preds = %if.then51, %do.body46, %if.then54
  %24 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool65 = icmp eq i8 %24, 0
  br i1 %tobool65, label %cleanup, label %if.then66, !prof !3

if.then66:                                        ; preds = %do.body61
  %25 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool68 = icmp eq i64 %25, 0
  br i1 %tobool68, label %cleanup, label %if.then69, !prof !3

if.then69:                                        ; preds = %if.then66
  %26 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv70 = trunc i64 %25 to i32
  call void %26(i32 %conv70, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end75:                                         ; preds = %if.end41
  %pending_list = getelementptr inbounds %struct.linux_robust_list_head, %struct.linux_robust_list_head* %12, i64 0, i32 2
  %27 = bitcast i32* %pending_list to %struct.linux_robust_list**
  %call76 = call fastcc i32 @fetch_robust_entry(%struct.linux_robust_list** nonnull %pending, %struct.linux_robust_list** nonnull %27, i32* nonnull %pip) #7
  %tobool77 = icmp eq i32 %call76, 0
  br i1 %tobool77, label %while.cond.preheader, label %do.body79

while.cond.preheader:                             ; preds = %if.end75
  %28 = load %struct.linux_robust_list*, %struct.linux_robust_list** %entry1, align 8
  %cmp95184 = icmp eq %struct.linux_robust_list* %28, %list
  br i1 %cmp95184, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %29 = bitcast %struct.linux_robust_list** %next_entry to i64*
  %30 = bitcast %struct.linux_robust_list** %entry1 to i64*
  br label %while.body

do.body79:                                        ; preds = %if.end75
  %31 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool83 = icmp eq i8 %31, 0
  br i1 %tobool83, label %cleanup, label %if.then84, !prof !3

if.then84:                                        ; preds = %do.body79
  %32 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool86 = icmp eq i64 %32, 0
  br i1 %tobool86, label %cleanup, label %if.then87, !prof !3

if.then87:                                        ; preds = %if.then84
  %33 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv88 = trunc i64 %32 to i32
  call void %33(i32 %conv88, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

while.body:                                       ; preds = %while.body.lr.ph, %if.end140
  %34 = phi %struct.linux_robust_list* [ %28, %while.body.lr.ph ], [ %51, %if.end140 ]
  %limit.0185 = phi i32 [ 2048, %while.body.lr.ph ], [ %dec, %if.end140 ]
  %35 = bitcast %struct.linux_robust_list* %34 to %struct.linux_robust_list**
  %call98 = call fastcc i32 @fetch_robust_entry(%struct.linux_robust_list** nonnull %next_entry, %struct.linux_robust_list** %35, i32* nonnull %next_pi) #7
  %36 = load %struct.linux_robust_list*, %struct.linux_robust_list** %entry1, align 8
  %37 = load %struct.linux_robust_list*, %struct.linux_robust_list** %pending, align 8
  %cmp99 = icmp eq %struct.linux_robust_list* %36, %37
  br i1 %cmp99, label %if.end120, label %if.then101

if.then101:                                       ; preds = %while.body
  %38 = bitcast %struct.linux_robust_list* %36 to i8*
  %39 = load i32, i32* %futex_offset, align 4
  %idx.ext = sext i32 %39 to i64
  %add.ptr = getelementptr i8, i8* %38, i64 %idx.ext
  %40 = bitcast i8* %add.ptr to i32*
  %41 = load i32, i32* %pi, align 4
  %call102 = call fastcc i32 @handle_futex_death(%struct.linux_emuldata* %em, i32* %40, i32 %41) #7
  %tobool103 = icmp eq i32 %call102, 0
  br i1 %tobool103, label %if.end120, label %do.body105

do.body105:                                       ; preds = %if.then101
  %42 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool109 = icmp eq i8 %42, 0
  br i1 %tobool109, label %cleanup, label %if.then110, !prof !3

if.then110:                                       ; preds = %do.body105
  %43 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool112 = icmp eq i64 %43, 0
  br i1 %tobool112, label %cleanup, label %if.then113, !prof !3

if.then113:                                       ; preds = %if.then110
  %44 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv114 = trunc i64 %43 to i32
  call void %44(i32 %conv114, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end120:                                        ; preds = %if.then101, %while.body
  %tobool121 = icmp eq i32 %call98, 0
  br i1 %tobool121, label %if.end137, label %do.body123

do.body123:                                       ; preds = %if.end120
  %45 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool127 = icmp eq i8 %45, 0
  br i1 %tobool127, label %cleanup, label %if.then128, !prof !3

if.then128:                                       ; preds = %do.body123
  %46 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool130 = icmp eq i64 %46, 0
  br i1 %tobool130, label %cleanup, label %if.then131, !prof !3

if.then131:                                       ; preds = %if.then128
  %47 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv132 = trunc i64 %46 to i32
  call void %47(i32 %conv132, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end137:                                        ; preds = %if.end120
  %48 = load i64, i64* %29, align 8
  store i64 %48, i64* %30, align 8
  %49 = load i32, i32* %next_pi, align 4
  store i32 %49, i32* %pi, align 4
  %dec = add nsw i32 %limit.0185, -1
  %tobool138 = icmp eq i32 %dec, 0
  br i1 %tobool138, label %while.end, label %if.end140

if.end140:                                        ; preds = %if.end137
  %50 = call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #10, !srcloc !5
  call void @sched_relinquish(%struct.thread* %50) #6
  %51 = load %struct.linux_robust_list*, %struct.linux_robust_list** %entry1, align 8
  %cmp95 = icmp eq %struct.linux_robust_list* %51, %list
  br i1 %cmp95, label %while.end, label %while.body

while.end:                                        ; preds = %if.end140, %if.end137, %while.cond.preheader
  %52 = load %struct.linux_robust_list*, %struct.linux_robust_list** %pending, align 8
  %tobool142 = icmp eq %struct.linux_robust_list* %52, null
  br i1 %tobool142, label %do.body148, label %if.then143

if.then143:                                       ; preds = %while.end
  %53 = bitcast %struct.linux_robust_list* %52 to i8*
  %54 = load i32, i32* %futex_offset, align 4
  %idx.ext144 = sext i32 %54 to i64
  %add.ptr145 = getelementptr i8, i8* %53, i64 %idx.ext144
  %55 = bitcast i8* %add.ptr145 to i32*
  %56 = load i32, i32* %pip, align 4
  %call146 = call fastcc i32 @handle_futex_death(%struct.linux_emuldata* %em, i32* %55, i32 %56) #7
  br label %do.body148

do.body148:                                       ; preds = %while.end, %if.then143
  %57 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool152 = icmp eq i8 %57, 0
  br i1 %tobool152, label %cleanup, label %if.then153, !prof !3

if.then153:                                       ; preds = %do.body148
  %58 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_release_futexes_return, i64 0, i64 0, i32 7), align 8
  %tobool155 = icmp eq i64 %58, 0
  br i1 %tobool155, label %cleanup, label %if.then156, !prof !3

if.then156:                                       ; preds = %if.then153
  %59 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv157 = trunc i64 %58 to i32
  call void %59(i32 %conv157, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then156, %do.body148, %if.then153, %if.then131, %do.body123, %if.then128, %if.then113, %do.body105, %if.then110, %if.then87, %do.body79, %if.then84, %if.then69, %do.body61, %if.then66, %if.then35, %do.body27, %if.then32, %if.then18, %do.body10, %if.then15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #5
  ret void
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @fetch_robust_entry(%struct.linux_robust_list** %entry1, %struct.linux_robust_list** %head, i32* %pi) unnamed_addr #0 {
entry:
  %uentry = alloca i32, align 4
  %0 = bitcast i32* %uentry to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #5
  %1 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool2 = icmp eq i8 %1, 0
  br i1 %tobool2, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %2 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_entry, i64 0, i64 0, i32 7), align 8
  %tobool4 = icmp eq i64 %2, 0
  br i1 %tobool4, label %do.end, label %if.then5, !prof !3

if.then5:                                         ; preds = %if.then
  %3 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv6 = trunc i64 %2 to i32
  %4 = ptrtoint %struct.linux_robust_list** %entry1 to i64
  %5 = ptrtoint %struct.linux_robust_list** %head to i64
  %6 = ptrtoint i32* %pi to i64
  tail call void %3(i32 %conv6, i64 %4, i64 %5, i64 %6, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then5
  %7 = bitcast %struct.linux_robust_list** %head to i8*
  %call = call i32 @copyin(i8* %7, i8* nonnull %0, i64 4) #6
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.end39, label %do.body10

do.body10:                                        ; preds = %do.end
  %8 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool14 = icmp eq i8 %8, 0
  br i1 %tobool14, label %do.body25, label %if.then15, !prof !3

if.then15:                                        ; preds = %do.body10
  %9 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_copyin_error, i64 0, i64 0, i32 7), align 8
  %tobool17 = icmp eq i64 %9, 0
  br i1 %tobool17, label %do.body25, label %if.then18, !prof !3

if.then18:                                        ; preds = %if.then15
  %10 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv19 = trunc i64 %9 to i32
  %conv20 = sext i32 %call to i64
  call void %10(i32 %conv19, i64 %conv20, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body25

do.body25:                                        ; preds = %if.then15, %do.body10, %if.then18
  %11 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool29 = icmp eq i8 %11, 0
  br i1 %tobool29, label %cleanup, label %if.then30, !prof !3

if.then30:                                        ; preds = %do.body25
  %12 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_return, i64 0, i64 0, i32 7), align 8
  %tobool32 = icmp eq i64 %12, 0
  br i1 %tobool32, label %cleanup, label %if.then33, !prof !3

if.then33:                                        ; preds = %if.then30
  %13 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv34 = trunc i64 %12 to i32
  call void %13(i32 %conv34, i64 14, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end39:                                         ; preds = %do.end
  %14 = load i32, i32* %uentry, align 4
  %15 = and i32 %14, -2
  %and = zext i32 %15 to i64
  %16 = inttoptr i64 %and to %struct.linux_robust_list*
  store %struct.linux_robust_list* %16, %struct.linux_robust_list** %entry1, align 8
  %and41 = and i32 %14, 1
  store i32 %and41, i32* %pi, align 4
  %17 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool46 = icmp eq i8 %17, 0
  br i1 %tobool46, label %cleanup, label %if.then47, !prof !3

if.then47:                                        ; preds = %if.end39
  %18 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_fetch_robust_entry_return, i64 0, i64 0, i32 7), align 8
  %tobool49 = icmp eq i64 %18, 0
  br i1 %tobool49, label %cleanup, label %if.then50, !prof !3

if.then50:                                        ; preds = %if.then47
  %19 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv51 = trunc i64 %18 to i32
  call void %19(i32 %conv51, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then50, %if.end39, %if.then47, %if.then33, %do.body25, %if.then30
  %retval.0 = phi i32 [ 14, %if.then30 ], [ 14, %do.body25 ], [ 14, %if.then33 ], [ 0, %if.then47 ], [ 0, %if.end39 ], [ 0, %if.then50 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #5
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @handle_futex_death(%struct.linux_emuldata* %em, i32* %uaddr, i32 %pi) unnamed_addr #0 {
entry:
  %uval = alloca i32, align 4
  %f = alloca %struct.futex*, align 8
  %0 = bitcast i32* %uval to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #5
  %1 = bitcast %struct.futex** %f to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #5
  %2 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool1 = icmp eq i8 %2, 0
  br i1 %tobool1, label %do.end, label %if.then, !prof !3

if.then:                                          ; preds = %entry
  %3 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_entry, i64 0, i64 0, i32 7), align 8
  %tobool3 = icmp eq i64 %3, 0
  br i1 %tobool3, label %do.end, label %if.then4, !prof !3

if.then4:                                         ; preds = %if.then
  %4 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv5 = trunc i64 %3 to i32
  %5 = ptrtoint %struct.linux_emuldata* %em to i64
  %6 = ptrtoint i32* %uaddr to i64
  %conv6 = zext i32 %pi to i64
  tail call void %4(i32 %conv5, i64 %5, i64 %6, i64 %conv6, i64 0, i64 0) #6
  br label %do.end

do.end:                                           ; preds = %if.then, %entry, %if.then4
  %7 = bitcast i32* %uaddr to i8*
  %em_tid = getelementptr inbounds %struct.linux_emuldata, %struct.linux_emuldata* %em, i64 0, i32 4
  br label %retry

retry:                                            ; preds = %if.end61, %do.end
  %call = call i32 @copyin(i8* %7, i8* nonnull %0, i64 4) #6
  %tobool8 = icmp eq i32 %call, 0
  br i1 %tobool8, label %if.end39, label %do.body10

do.body10:                                        ; preds = %retry
  %8 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool14 = icmp eq i8 %8, 0
  br i1 %tobool14, label %do.body25, label %if.then15, !prof !3

if.then15:                                        ; preds = %do.body10
  %9 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_copyin_error, i64 0, i64 0, i32 7), align 8
  %tobool17 = icmp eq i64 %9, 0
  br i1 %tobool17, label %do.body25, label %if.then18, !prof !3

if.then18:                                        ; preds = %if.then15
  %10 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv19 = trunc i64 %9 to i32
  %conv20 = sext i32 %call to i64
  call void %10(i32 %conv19, i64 %conv20, i64 0, i64 0, i64 0, i64 0) #6
  br label %do.body25

do.body25:                                        ; preds = %if.then15, %do.body10, %if.then18
  %11 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool29 = icmp eq i8 %11, 0
  br i1 %tobool29, label %cleanup, label %if.then30, !prof !3

if.then30:                                        ; preds = %do.body25
  %12 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_return, i64 0, i64 0, i32 7), align 8
  %tobool32 = icmp eq i64 %12, 0
  br i1 %tobool32, label %cleanup, label %if.then33, !prof !3

if.then33:                                        ; preds = %if.then30
  %13 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv34 = trunc i64 %12 to i32
  call void %13(i32 %conv34, i64 14, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end39:                                         ; preds = %retry
  %14 = load i32, i32* %uval, align 4
  %and = and i32 %14, 1073741823
  %15 = load i32, i32* %em_tid, align 8
  %cmp = icmp eq i32 %and, %15
  br i1 %cmp, label %if.then41, label %do.body96

if.then41:                                        ; preds = %if.end39
  %and42 = and i32 %14, -2147483648
  %or = or i32 %and42, 1073741824
  %call43 = call i32 @casuword32(i32* %uaddr, i32 %14, i32 %or) #6
  %cmp44 = icmp eq i32 %call43, -1
  br i1 %cmp44, label %do.body47, label %if.end61

do.body47:                                        ; preds = %if.then41
  %16 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool51 = icmp eq i8 %16, 0
  br i1 %tobool51, label %cleanup, label %if.then52, !prof !3

if.then52:                                        ; preds = %do.body47
  %17 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_return, i64 0, i64 0, i32 7), align 8
  %tobool54 = icmp eq i64 %17, 0
  br i1 %tobool54, label %cleanup, label %if.then55, !prof !3

if.then55:                                        ; preds = %if.then52
  %18 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv56 = trunc i64 %17 to i32
  call void %18(i32 %conv56, i64 14, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end61:                                         ; preds = %if.then41
  %19 = load i32, i32* %uval, align 4
  %cmp62 = icmp eq i32 %call43, %19
  br i1 %cmp62, label %if.end65, label %retry

if.end65:                                         ; preds = %if.end61
  %tobool66 = icmp eq i32 %pi, 0
  %tobool68 = icmp slt i32 %call43, 0
  %or.cond = and i1 %tobool66, %tobool68
  br i1 %or.cond, label %if.then69, label %do.body96

if.then69:                                        ; preds = %if.end65
  %call70 = call fastcc i32 @futex_get(i32* %uaddr, %struct.waiting_proc** null, %struct.futex** nonnull %f, i32 10) #7
  %tobool71 = icmp eq i32 %call70, 0
  br i1 %tobool71, label %if.end88, label %do.body73

do.body73:                                        ; preds = %if.then69
  %20 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool77 = icmp eq i8 %20, 0
  br i1 %tobool77, label %cleanup, label %if.then78, !prof !3

if.then78:                                        ; preds = %do.body73
  %21 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_return, i64 0, i64 0, i32 7), align 8
  %tobool80 = icmp eq i64 %21, 0
  br i1 %tobool80, label %cleanup, label %if.then81, !prof !3

if.then81:                                        ; preds = %if.then78
  %22 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv82 = trunc i64 %21 to i32
  %conv83 = sext i32 %call70 to i64
  call void %22(i32 %conv82, i64 %conv83, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

if.end88:                                         ; preds = %if.then69
  %23 = load %struct.futex*, %struct.futex** %f, align 8
  %cmp89 = icmp eq %struct.futex* %23, null
  br i1 %cmp89, label %do.body96, label %if.then91

if.then91:                                        ; preds = %if.end88
  %call92 = call fastcc i32 @futex_wake(%struct.futex* nonnull %23, i32 1, i32 -1) #7
  %24 = load %struct.futex*, %struct.futex** %f, align 8
  call fastcc void @futex_put(%struct.futex* %24, %struct.waiting_proc* null) #7
  br label %do.body96

do.body96:                                        ; preds = %if.end39, %if.end88, %if.end65, %if.then91
  %25 = load volatile i8, i8* @sdt_probes_enabled, align 1, !range !2
  %tobool100 = icmp eq i8 %25, 0
  br i1 %tobool100, label %cleanup, label %if.then101, !prof !3

if.then101:                                       ; preds = %do.body96
  %26 = load i64, i64* getelementptr inbounds ([1 x %struct.sdt_probe], [1 x %struct.sdt_probe]* @sdt_linuxulator32_futex_handle_futex_death_return, i64 0, i64 0, i32 7), align 8
  %tobool103 = icmp eq i64 %26, 0
  br i1 %tobool103, label %cleanup, label %if.then104, !prof !3

if.then104:                                       ; preds = %if.then101
  %27 = load void (i32, i64, i64, i64, i64, i64)*, void (i32, i64, i64, i64, i64, i64)** @sdt_probe_func, align 8
  %conv105 = trunc i64 %26 to i32
  call void %27(i32 %conv105, i64 0, i64 0, i64 0, i64 0, i64 0) #6
  br label %cleanup

cleanup:                                          ; preds = %if.then104, %do.body96, %if.then101, %if.then81, %do.body73, %if.then78, %if.then55, %do.body47, %if.then52, %if.then33, %do.body25, %if.then30
  %retval.0 = phi i32 [ 14, %if.then30 ], [ 14, %do.body25 ], [ 14, %if.then33 ], [ 14, %if.then52 ], [ 14, %do.body47 ], [ 14, %if.then55 ], [ %call70, %if.then78 ], [ %call70, %do.body73 ], [ %call70, %if.then81 ], [ 0, %if.then101 ], [ 0, %do.body96 ], [ 0, %if.then104 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #5
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @sched_relinquish(%struct.thread*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @linux_to_native_timespec(%struct.timespec*, %struct.l_timespec*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @nanotime(%struct.timespec*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @nanouptime(%struct.timespec*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone allocsize(0)
declare dso_local noalias i8* @malloc(i64, %struct.malloc_type*, i32) local_unnamed_addr #3

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @free(i8*, %struct.malloc_type*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone noreturn
declare dso_local void @panic(i8*, ...) local_unnamed_addr #4

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @umtx_key_get(i8*, i32, i32, %struct.umtx_key*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @__mtx_lock_flags(i64*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @_mtx_destroy(i64*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @umtx_key_release(%struct.umtx_key*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @_mtx_init(i64*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @__mtx_assert(i64*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @_sleep(i8*, %struct.lock_object*, i32, i8*, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @getbinuptime(%struct.bintime*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @binuptime(%struct.bintime*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @wakeup_one(i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @futex_xchgl(i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @futex_addl(i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @futex_orl(i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @futex_andl(i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @futex_xorl(i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @casuword32(i32*, i32, i32) local_unnamed_addr #2

attributes #0 = { noimplicitfloat noredzone nounwind ssp "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"=".mcount" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noimplicitfloat noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noimplicitfloat noredzone allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noimplicitfloat noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nobuiltin noimplicitfloat noredzone nounwind }
attributes #7 = { nobuiltin noimplicitfloat noredzone }
attributes #8 = { nobuiltin noimplicitfloat noredzone noreturn nounwind }
attributes #9 = { nobuiltin noimplicitfloat noredzone nounwind allocsize(0) }
attributes #10 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i32 363431}
