; ModuleID = '/usr/src/sys/dev/mfi/mfi.c'
source_filename = "/usr/src/sys/dev/mfi/mfi.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-portbld-freebsd12.0"

module asm ".ident\09\22$FreeBSD: head/sys/dev/mfi/mfi.c 332122 2018-04-06 17:35:35Z brooks $\22"
module asm ".globl __start_set_pcpu"
module asm ".globl __stop_set_pcpu"
module asm ".ident\09\22$FreeBSD: head/sys/dev/mfi/mfireg.h 326255 2017-11-27 14:52:40Z pfg $\22"
module asm ".ident\09\22$FreeBSD: head/sys/dev/mfi/mfi_ioctl.h 326255 2017-11-27 14:52:40Z pfg $\22"
module asm ".ident\09\22$FreeBSD: head/sys/dev/mfi/mfivar.h 326255 2017-11-27 14:52:40Z pfg $\22"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysctl_set"
module asm ".globl __stop_set_sysctl_set"
module asm ".globl __start_set_sysinit_set"
module asm ".globl __stop_set_sysinit_set"
module asm ".globl __start_set_sysuninit_set"
module asm ".globl __stop_set_sysuninit_set"

%struct.sysctl_oid = type { %struct.sysctl_oid_list, %struct.sysctl_oid_list*, %struct.anon, i32, i32, i8*, i64, i8*, i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)*, i8*, i32, i32, i8*, i8* }
%struct.sysctl_oid_list = type { %struct.sysctl_oid* }
%struct.anon = type { %struct.sysctl_oid* }
%struct.sysctl_req = type { %struct.thread*, i32, i8*, i64, i64, i32 (%struct.sysctl_req*, i8*, i64)*, i8*, i64, i64, i32 (%struct.sysctl_req*, i8*, i64)*, i64, i32 }
%struct.thread = type { %struct.mtx*, %struct.proc*, %struct.anon.29, %struct.anon.30, %struct.anon.31, %struct.anon.32, %struct.anon.33, %struct.cpuset*, %struct.domainset_ref, %struct.seltd*, %struct.sleepqueue*, %struct.turnstile*, %struct.rl_q_entry*, %struct.umtx_q*, i32, %struct.sigqueue, i8, i8, i32, i32, i32, i32, i32, i8*, i8*, i8, i8, i16, i16, i16, i16, i16, %struct.turnstile*, i8*, %struct.anon.34, %struct.lock_list_entry*, i32, i32, %struct.ucred*, %struct.plimit*, i32, i32, i32, i32, i32, %struct.rusage, %struct.rusage_ext, i64, i64, i32, i32, i32, i32, i32, %struct.__sigset, i32, %struct.sigaltstack, i32, i64, i32, [20 x i8], %struct.file*, i32, %struct.__siginfo, i32, %struct.osd, %struct.vm_map_entry*, i32, i32, i32, i8*, i64, i32, i64, %struct.kcov_info*, %struct.__sigset, i8, i8, i8, i8, i8, i8, i8, i64, i64, i64, %struct.syscall_args, %struct.pcb*, i32, %union.anon.36, i32, %struct.callout, %struct.trapframe*, %struct.vm_object*, i64, i32, i32, %struct.mdthread, %struct.kaudit_record*, [2 x %struct.lpohead], %struct.kdtrace_thread*, i32, %struct.vnet*, i8*, %struct.trapframe*, %struct.proc*, %struct.vm_page**, i32, i8*, i32, i32, i8*, %struct.epoch_tracker*, i32 }
%struct.mtx = type { %struct.lock_object, i64 }
%struct.lock_object = type { i8*, i32, i32, %struct.witness* }
%struct.witness = type opaque
%struct.anon.29 = type { %struct.thread*, %struct.thread** }
%struct.anon.30 = type { %struct.thread*, %struct.thread** }
%struct.anon.31 = type { %struct.thread*, %struct.thread** }
%struct.anon.32 = type { %struct.thread*, %struct.thread** }
%struct.anon.33 = type { %struct.thread*, %struct.thread** }
%struct.cpuset = type opaque
%struct.domainset_ref = type { %struct.domainset*, i32 }
%struct.domainset = type opaque
%struct.seltd = type opaque
%struct.sleepqueue = type opaque
%struct.rl_q_entry = type opaque
%struct.umtx_q = type opaque
%struct.sigqueue = type { %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.anon.18, %struct.proc*, i32 }
%struct.anon.18 = type { %struct.ksiginfo*, %struct.ksiginfo** }
%struct.ksiginfo = type { %struct.anon.11, %struct.__siginfo, i32, %struct.sigqueue* }
%struct.anon.11 = type { %struct.ksiginfo*, %struct.ksiginfo** }
%struct.turnstile = type opaque
%struct.anon.34 = type { %struct.turnstile* }
%struct.lock_list_entry = type opaque
%struct.ucred = type { i32, i32, i32, i32, i32, i32, i32, %struct.uidinfo*, %struct.uidinfo*, %struct.prison*, %struct.loginclass*, i32, [2 x i8*], %struct.label*, %struct.auditinfo_addr, i32*, i32, [16 x i32] }
%struct.uidinfo = type opaque
%struct.prison = type opaque
%struct.loginclass = type opaque
%struct.label = type opaque
%struct.auditinfo_addr = type { i32, %struct.au_mask, %struct.au_tid_addr, i32, i64 }
%struct.au_mask = type { i32, i32 }
%struct.au_tid_addr = type { i32, i32, [4 x i32] }
%struct.plimit = type opaque
%struct.rusage = type { %struct.timeval, %struct.timeval, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.rusage_ext = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.sigaltstack = type { i8*, i64, i32 }
%struct.file = type opaque
%struct.__siginfo = type { i32, i32, i32, i32, i32, i32, i8*, %union.sigval, %union.anon.12 }
%union.sigval = type { i8* }
%union.anon.12 = type { %struct.anon.17 }
%struct.anon.17 = type { i64, [7 x i32] }
%struct.osd = type { i32, i8**, %struct.anon.35 }
%struct.anon.35 = type { %struct.osd*, %struct.osd** }
%struct.vm_map_entry = type opaque
%struct.kcov_info = type opaque
%struct.__sigset = type { [4 x i32] }
%struct.syscall_args = type { i32, %struct.sysent*, [8 x i64], i32 }
%struct.sysent = type { i32, i32 (%struct.thread*, i8*)*, i16, void (i32, i8*, i64*, i32*)*, i32, i32, i32, i32 }
%struct.pcb = type opaque
%union.anon.36 = type { [2 x i64] }
%struct.callout = type { %union.anon, i64, i64, i8*, void (i8*)*, %struct.lock_object*, i16, i16, i32 }
%union.anon = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.callout*, %struct.callout** }
%struct.vm_object = type opaque
%struct.mdthread = type { i32, i64, i64, %struct.pmap_invl_gen, i64, i32 }
%struct.pmap_invl_gen = type { i64, %struct.anon.37 }
%struct.anon.37 = type { %struct.pmap_invl_gen*, %struct.pmap_invl_gen** }
%struct.kaudit_record = type opaque
%struct.lpohead = type { %struct.lock_profile_object* }
%struct.lock_profile_object = type opaque
%struct.kdtrace_thread = type opaque
%struct.vnet = type opaque
%struct.trapframe = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i16, i16, i64, i32, i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.proc = type { %struct.anon.0, %struct.anon.1, %struct.mtx, %struct.ucred*, %struct.filedesc*, %struct.filedesc_to_leader*, %struct.pstats*, %struct.plimit*, %struct.callout, %struct.sigacts*, i32, i32, i32, i32, %struct.anon.5, %struct.anon.6, %struct.proc*, %struct.anon.7, %struct.anon.8, %struct.proc*, %struct.anon.9, %struct.anon.10, %struct.mtx, %struct.mtx, %struct.mtx, %struct.mtx, %struct.ksiginfo*, %struct.sigqueue, i32, %struct.vmspace*, i32, i32, %struct.itimerval, %struct.rusage, %struct.rusage_ext, %struct.rusage_ext, i32, i32, i32, %struct.vnode*, %struct.ucred*, %struct.vnode*, i32, %struct.sigiolst, i32, i32, i64, i32, i32, i8, i8, i32, %struct.nlminfo*, %struct.kaioinfo*, %struct.thread*, i32, %struct.thread*, i32, i32, %struct.itimers*, %struct.procdesc*, i32, i32, %struct.filemon*, i32, i32, i32, i32, [20 x i8], %struct.sysentvec*, %struct.pargs*, i64, i8, i32, i32, i16, i64, i32, i32, %struct.pgrp*, %struct.knlist*, i32, %struct.mdproc, %struct.callout, i16, %struct.proc*, %struct.proc*, i8*, %struct.label*, %struct.anon.25, %struct.anon.26, %struct.kdtrace_proc*, %struct.cv, i64, %struct.racct*, i32, %struct.anon.27, %struct.anon.28 }
%struct.anon.0 = type { %struct.proc*, %struct.proc** }
%struct.anon.1 = type { %struct.thread*, %struct.thread** }
%struct.filedesc = type opaque
%struct.filedesc_to_leader = type opaque
%struct.pstats = type opaque
%struct.sigacts = type { [128 x void (i32)*], [128 x %struct.__sigset], %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, %struct.__sigset, i32, i32, %struct.mtx }
%struct.anon.5 = type { %struct.proc*, %struct.proc** }
%struct.anon.6 = type { %struct.proc*, %struct.proc** }
%struct.anon.7 = type { %struct.proc*, %struct.proc** }
%struct.anon.8 = type { %struct.proc* }
%struct.anon.9 = type { %struct.proc* }
%struct.anon.10 = type { %struct.proc*, %struct.proc** }
%struct.vmspace = type opaque
%struct.itimerval = type { %struct.timeval, %struct.timeval }
%struct.vnode = type opaque
%struct.sigiolst = type { %struct.sigio* }
%struct.sigio = type { %union.anon.19, %struct.anon.20, %struct.sigio**, %struct.ucred*, i32 }
%union.anon.19 = type { %struct.proc* }
%struct.anon.20 = type { %struct.sigio* }
%struct.nlminfo = type opaque
%struct.kaioinfo = type opaque
%struct.itimers = type opaque
%struct.procdesc = type opaque
%struct.filemon = type opaque
%struct.sysentvec = type { i32, %struct.sysent*, i32, i32*, i32 (i32, i32)*, i32 (i64**, %struct.image_params*)*, void (void (i32)*, %struct.ksiginfo*, %struct.__sigset*)*, i8*, i32*, i8*, i32 (%struct.thread*, %struct.vnode*, i64, i32)*, i32 (%struct.image_params*)*, i32, i32, i64, i64, i64, i64, i32, i64* (%struct.image_params*)*, void (%struct.thread*, %struct.image_params*, i64)*, void (%struct.rlimit*, i32)*, i64*, i32, void (%struct.thread*, i32)*, i32 (%struct.thread*)*, i8**, i64, i64, i64, i64, i8*, void (%struct.thread*)*, void (%struct.thread*)*, i32 (%struct.thread*)*, i64*, i64* }
%struct.image_params = type opaque
%struct.rlimit = type { i64, i64 }
%struct.pargs = type { i32, i32, [1 x i8] }
%struct.pgrp = type { %struct.anon.38, %struct.anon.39, %struct.session*, %struct.sigiolst, i32, i32, %struct.mtx }
%struct.anon.38 = type { %struct.pgrp*, %struct.pgrp** }
%struct.anon.39 = type { %struct.proc* }
%struct.session = type { i32, %struct.proc*, %struct.vnode*, %struct.cdev_priv*, %struct.tty*, i32, [40 x i8], %struct.mtx }
%struct.cdev_priv = type opaque
%struct.tty = type opaque
%struct.knlist = type { %struct.klist, void (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, i8*, i32 }
%struct.klist = type { %struct.knote* }
%struct.knote = type { %struct.anon.21, %struct.anon.22, %struct.knlist*, %struct.anon.23, %struct.kqueue*, %struct.kevent, i8*, i32, i32, i32, i32, i64, %union.anon.24, %struct.filterops* }
%struct.anon.21 = type { %struct.knote* }
%struct.anon.22 = type { %struct.knote* }
%struct.anon.23 = type { %struct.knote*, %struct.knote** }
%struct.kqueue = type opaque
%struct.kevent = type { i64, i16, i16, i32, i64, i8*, [4 x i64] }
%union.anon.24 = type { %struct.file* }
%struct.filterops = type { i32, i32 (%struct.knote*)*, void (%struct.knote*)*, i32 (%struct.knote*, i64)*, void (%struct.knote*, %struct.kevent*, i64)* }
%struct.mdproc = type { %struct.proc_ldt*, %struct.system_segment_descriptor }
%struct.proc_ldt = type { i8*, i32 }
%struct.system_segment_descriptor = type { i128 }
%struct.anon.25 = type { %struct.ktr_request*, %struct.ktr_request** }
%struct.ktr_request = type opaque
%struct.anon.26 = type { %struct.mqueue_notifier* }
%struct.mqueue_notifier = type opaque
%struct.kdtrace_proc = type opaque
%struct.cv = type { i8*, i32 }
%struct.racct = type opaque
%struct.anon.27 = type { %struct.proc*, %struct.proc** }
%struct.anon.28 = type { %struct.proc* }
%struct.vm_page = type opaque
%struct.epoch_tracker = type opaque
%struct.malloc_type = type { %struct.malloc_type*, i64, i8*, i8* }
%struct.sysinit = type { i32, i32, void (i8*)*, i8* }
%struct.cdevsw = type { i32, i32, i8*, i32 (%struct.cdev*, i32, i32, %struct.thread*)*, i32 (%struct.cdev*, i32, %struct.thread*, %struct.file*)*, i32 (%struct.cdev*, i32, i32, %struct.thread*)*, i32 (%struct.cdev*, %struct.uio*, i32)*, i32 (%struct.cdev*, %struct.uio*, i32)*, i32 (%struct.cdev*, i64, i8*, i32, %struct.thread*)*, i32 (%struct.cdev*, i32, %struct.thread*)*, i32 (%struct.cdev*, i64, i64*, i32, i8*)*, void (%struct.bio*)*, i32 (i8*, i8*, i64, i64, i64)*, i32 (%struct.cdev*, %struct.knote*)*, void (%struct.cdev*)*, i32 (%struct.cdev*, i64*, i64, %struct.vm_object**, i32)*, [3 x i32], [3 x i8*], %struct.anon.49, i32, %union.anon.50 }
%struct.cdev = type { i8*, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, i16, %struct.ucred*, i32, i32, %struct.anon.45, %struct.anon.46, %struct.anon.47, %struct.anon.48, %struct.cdev*, %struct.mount*, i8*, i8*, %struct.cdevsw*, i32, i64, i64, %union.anon.52, [256 x i8] }
%struct.timespec = type { i64, i64 }
%struct.anon.45 = type { %struct.cdev*, %struct.cdev** }
%struct.anon.46 = type { %struct.cdev*, %struct.cdev** }
%struct.anon.47 = type { %struct.cdev* }
%struct.anon.48 = type { %struct.cdev*, %struct.cdev** }
%struct.mount = type opaque
%union.anon.52 = type { %struct.snapdata* }
%struct.snapdata = type opaque
%struct.uio = type { %struct.iovec*, i32, i64, i64, i32, i32, %struct.thread* }
%struct.iovec = type { i8*, i64 }
%struct.bio = type { i16, i16, i16, i16, %struct.cdev*, %struct.disk*, i64, i64, i8*, %struct.vm_page**, i32, i32, i32, i64, void (%struct.bio*)*, i8*, i8*, i8*, i8*, %struct.anon.53, i8*, %struct.disk_zone_args, %struct.g_consumer*, %struct.g_provider*, i64, i64, i32, i32, %struct.bio*, %struct.bintime, void (i8*)*, i8*, i8*, i8*, i8*, i8*, i8, i64 }
%struct.disk = type opaque
%struct.anon.53 = type { %struct.bio*, %struct.bio** }
%struct.disk_zone_args = type { i8, %union.disk_zone_params }
%union.disk_zone_params = type { %struct.disk_zone_report }
%struct.disk_zone_report = type { i64, i8, %struct.disk_zone_rep_header, i32, i32, i32, %struct.disk_zone_rep_entry* }
%struct.disk_zone_rep_header = type { i8, i64, [64 x i8] }
%struct.disk_zone_rep_entry = type { i8, i8, i8, i64, i64, i64, [32 x i8] }
%struct.g_consumer = type opaque
%struct.g_provider = type opaque
%struct.bintime = type { i64, i64 }
%struct.anon.49 = type { %struct.cdev* }
%union.anon.50 = type { %struct.cdevsw* }
%struct.mfi_skinny_dma_info = type { [514 x %struct.bus_dma_tag*], [514 x %struct.bus_dmamap*], [514 x i32], i32 }
%struct.bus_dma_tag = type opaque
%struct.bus_dmamap = type opaque
%struct.sysinit_tslog = type { void (i8*)*, i8*, i8* }
%struct.taskqueue = type opaque
%struct.mfi_softc = type { %struct.device*, i32, %struct.bus_dma_tag*, %struct.bus_dmamap*, i64, i32*, [16 x i8*], [2 x %struct.bus_dma_tag*], [2 x %struct.bus_dmamap*], [2 x i64], %struct.mfi_hwcomms*, %struct.anon.40, %struct.anon.44, %struct.BUSYQ, %struct.bio_queue_head, [4 x %struct.mfi_qstat], %struct.resource*, i64, i64, i32, %struct.bus_dma_tag*, %struct.bus_dma_tag*, %struct.bus_dma_tag*, %struct.bus_dmamap*, i64, %struct.bus_dma_tag*, %struct.bus_dmamap*, i64, %union.mfi_frame*, %struct.bus_dma_tag*, %struct.bus_dmamap*, i64, i64, %union.mfi_frame*, %struct.anon.54, %struct.task, %struct.task, %struct.anon.75, %struct.mfi_command*, %struct.mfi_command*, %struct.mfi_command*, i32, i32, i32, i32, i32, %struct.selinfo, i32, i32, i32, %struct.bus_dma_tag*, %struct.bus_dmamap*, i64, %struct.mfi_sense*, %struct.resource*, i8*, i32, %struct.intr_config_hook, %struct.eventhandler_entry*, i8, i8, i8, i32, i32, i32, %struct.mfi_command*, i32, i32, i32, i32, i32, %struct.anon.79, %struct.anon.82, %struct.anon.90, %struct.anon.92, %struct.eventhandler_entry*, %struct.cdev*, %struct.anon.94, %struct.mfi_command* (i8*)*, void (%struct.mfi_softc*, i32)*, %struct.callout, %struct.mtx, %struct.sx, void (%struct.mfi_softc*)*, void (%struct.mfi_softc*)*, {}*, {}*, void (%struct.mfi_softc*, i64, i32)*, {}*, {}*, void (i8*)*, i32, i32, i16, i16, %struct.TB, %struct.bus_dma_tag*, %struct.bus_dmamap*, i64, i8*, i8*, i8*, i64, i64, i64, %struct.bus_dma_tag*, %struct.bus_dmamap*, i8*, %struct.mfi_cmd_tbolt**, %struct.mfi_mpi2_reply_header*, %struct.mfi_mpi2_reply_header*, i8*, i16, i8, i8, i8, i8 }
%struct.device = type opaque
%struct.mfi_hwcomms = type { i32, i32, [1 x i32] }
%struct.anon.40 = type { %struct.mfi_command*, %struct.mfi_command** }
%struct.anon.44 = type { %struct.mfi_command*, %struct.mfi_command** }
%struct.BUSYQ = type { %struct.mfi_command*, %struct.mfi_command** }
%struct.bio_queue_head = type { %struct.bio_queue, i64, %struct.bio*, i32, i32 }
%struct.bio_queue = type { %struct.bio*, %struct.bio** }
%struct.mfi_qstat = type { i32, i32 }
%union.mfi_frame = type { %struct.mfi_pass_frame, [8 x i8] }
%struct.mfi_pass_frame = type { %struct.mfi_frame_header, i32, i32, [16 x i8], %union.mfi_sgl }
%struct.mfi_frame_header = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i16, i16, i32 }
%union.mfi_sgl = type { [1 x %struct.mfi_sg_skinny] }
%struct.mfi_sg_skinny = type { i64, i32, i32 }
%struct.anon.54 = type { %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** }
%struct.mfi_evt_queue_elm = type { %struct.anon.55, %struct.mfi_evt_detail }
%struct.anon.55 = type { %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** }
%struct.mfi_evt_detail = type { i32, i32, i32, %union.mfi_evt, i8, [15 x i8], %union.anon.57, [128 x i8] }
%union.mfi_evt = type { i32 }
%union.anon.57 = type { [12 x i64] }
%struct.task = type { %struct.anon.74, i16, i16, void (i8*, i32)*, i8* }
%struct.anon.74 = type { %struct.task* }
%struct.anon.75 = type { %struct.mfi_aen*, %struct.mfi_aen** }
%struct.mfi_aen = type { %struct.anon.76, %struct.proc* }
%struct.anon.76 = type { %struct.mfi_aen*, %struct.mfi_aen** }
%struct.selinfo = type { %struct.selfdlist, %struct.knlist, %struct.mtx* }
%struct.selfdlist = type { %struct.selfd*, %struct.selfd** }
%struct.selfd = type opaque
%struct.mfi_sense = type { [128 x i8] }
%struct.resource = type { %struct.resource_i*, i64, i64 }
%struct.resource_i = type opaque
%struct.intr_config_hook = type { %struct.anon.77, void (i8*)*, i8* }
%struct.anon.77 = type { %struct.intr_config_hook*, %struct.intr_config_hook** }
%struct.mfi_command = type { %struct.anon.41, i64, %struct.mfi_softc*, %union.mfi_frame*, i64, %struct.mfi_sense*, i64, %struct.bus_dmamap*, %union.mfi_sgl*, i8*, i32, i32, i32, i32, i32, i8, void (%struct.mfi_command*)*, i8*, i32, i32 }
%struct.anon.41 = type { %struct.mfi_command*, %struct.mfi_command** }
%struct.anon.79 = type { %struct.mfi_disk*, %struct.mfi_disk** }
%struct.mfi_disk = type { %struct.anon.80, %struct.device*, i32, i32, %struct.mfi_softc*, %struct.mfi_ld_info*, %struct.disk*, i32 }
%struct.anon.80 = type { %struct.mfi_disk*, %struct.mfi_disk** }
%struct.mfi_ld_info = type { %struct.mfi_ld_config, i64, %struct.mfi_ld_progress, i16, i8, [1 x i8], [64 x i8], [16 x i8] }
%struct.mfi_ld_config = type { %struct.mfi_ld_props, %struct.mfi_ld_params, [8 x %struct.mfi_span] }
%struct.mfi_ld_props = type { %union.mfi_ld_ref, [16 x i8], i8, i8, i8, i8, i8, [7 x i8] }
%union.mfi_ld_ref = type { i32 }
%struct.mfi_ld_params = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, [16 x i8] }
%struct.mfi_span = type { i64, i64, i16, [6 x i8] }
%struct.mfi_ld_progress = type { i32, %struct.mfi_progress, %struct.mfi_progress, %struct.mfi_progress, %struct.mfi_progress, [4 x %struct.mfi_progress] }
%struct.mfi_progress = type { i16, i16 }
%struct.anon.82 = type { %struct.mfi_system_pd*, %struct.mfi_system_pd** }
%struct.mfi_system_pd = type { %struct.anon.83, %struct.device*, i32, i32, %struct.mfi_softc*, %struct.mfi_pd_info*, %struct.disk*, i32 }
%struct.anon.83 = type { %struct.mfi_system_pd*, %struct.mfi_system_pd** }
%struct.mfi_pd_info = type { %union.mfi_pd_ref, [96 x i8], [64 x i8], i8, i8, i8, i8, i32, i32, i32, i32, i16, i8, i8, %union.mfi_pd_ddf_type, %struct.anon.89, i64, i64, i64, i16, i8, i8, %struct.mfi_pd_progress, i8, i8, [64 x i8], [154 x i8] }
%union.mfi_pd_ref = type { i32 }
%union.mfi_pd_ddf_type = type { %struct.anon.88 }
%struct.anon.88 = type { i32 }
%struct.anon.89 = type { i8, i8, [6 x i8], [4 x i64] }
%struct.mfi_pd_progress = type { i32, %struct.mfi_progress, %struct.mfi_progress, %struct.mfi_progress, [4 x %struct.mfi_progress] }
%struct.anon.90 = type { %struct.mfi_disk_pending*, %struct.mfi_disk_pending** }
%struct.mfi_disk_pending = type { %struct.anon.91, i32 }
%struct.anon.91 = type { %struct.mfi_disk_pending*, %struct.mfi_disk_pending** }
%struct.anon.92 = type { %struct.mfi_system_pending*, %struct.mfi_system_pending** }
%struct.mfi_system_pending = type { %struct.anon.93, i32 }
%struct.anon.93 = type { %struct.mfi_system_pending*, %struct.mfi_system_pending** }
%struct.eventhandler_entry = type { %struct.anon.78, i32, i8* }
%struct.anon.78 = type { %struct.eventhandler_entry*, %struct.eventhandler_entry** }
%struct.anon.94 = type { %struct.ccb_hdr*, %struct.ccb_hdr** }
%struct.ccb_hdr = type opaque
%struct.sx = type { %struct.lock_object, i64 }
%struct.TB = type { %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** }
%struct.mfi_cmd_tbolt = type { %union.mfi_mpi2_request_descriptor*, %struct.mfi_mpi2_request_raid_scsi_io*, i64, i64, i64, %union._MPI2_SGE_IO_UNION*, i8*, %struct.anon.97, i32, i16, i8 }
%union.mfi_mpi2_request_descriptor = type { i64 }
%struct.mfi_mpi2_request_raid_scsi_io = type { i16, i8, i8, i16, i8, i8, i8, i8, i16, i32, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i16, i16, i32, i32, i16, i16, [8 x i8], i32, %union.MPI2_SCSI_IO_CDB_UNION, %struct._MPI2_SCSI_IO_VENDOR_UNIQUE, %union._MPI2_SGE_IO_UNION }
%union.MPI2_SCSI_IO_CDB_UNION = type { %struct._MPI2_SGE_SIMPLE_UNION, [16 x i8] }
%struct._MPI2_SGE_SIMPLE_UNION = type { i32, %union.anon.95 }
%union.anon.95 = type { i64 }
%struct._MPI2_SCSI_IO_VENDOR_UNIQUE = type { i16, i16, i8, i8, i16, i64, i32, i16, i8, i8, i8, i8, i16, i8, [3 x i8] }
%union._MPI2_SGE_IO_UNION = type { %struct._MPI2_SGE_SIMPLE_UNION }
%struct.anon.97 = type { %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** }
%struct.mfi_mpi2_reply_header = type { i8, i8, i16 }
%struct.mfi_ctrl_info = type { %struct.mfi_info_pci, %struct.mfi_info_host, %struct.mfi_info_device, i32, i32, [8 x %struct.mfi_info_component], i32, [8 x %struct.mfi_info_component], i8, i8, i8, i8, [80 x i8], [32 x i8], i32, i32, i16, i16, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i16, i32, i32, i32, %struct.anon.108, i32, i32, i8, [11 x i8], %struct.mfi_ctrl_props, [96 x i8], [352 x i8] }
%struct.mfi_info_pci = type { i16, i16, i16, i16, [24 x i8] }
%struct.mfi_info_host = type { i8, [6 x i8], i8, [8 x i64] }
%struct.mfi_info_device = type { i8, [6 x i8], i8, [8 x i64] }
%struct.mfi_info_component = type { [8 x i8], [32 x i8], [16 x i8], [16 x i8] }
%struct.anon.108 = type { i8, i8, [2 x i8] }
%struct.mfi_ctrl_props = type { i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, i8, %struct.anon.109, i8, i8, i16, [24 x i8] }
%struct.anon.109 = type { i32 }
%struct.bus_dma_impl = type { i32 (%struct.bus_dma_tag*, i64, i64, i64, i64, i32 (i8*, i64)*, i8*, i64, i32, i64, i32, void (i8*, i32)*, i8*, %struct.bus_dma_tag**)*, i32 (%struct.bus_dma_tag*)*, i32 (%struct.bus_dma_tag*)*, i32 (%struct.bus_dma_tag*, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*, %struct.vm_page**, i64, i32, i32, %struct.bus_dma_segment*, i32*)*, i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*, i64, i64, i32, %struct.bus_dma_segment*, i32*)*, i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*, i8*, i64, %struct.pmap*, i32, %struct.bus_dma_segment*, i32*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, %struct.memdesc*, void (i8*, %struct.bus_dma_segment*, i32, i32)*, i8*)*, %struct.bus_dma_segment* (%struct.bus_dma_tag*, %struct.bus_dmamap*, %struct.bus_dma_segment*, i32, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)* }
%struct.bus_dma_segment = type { i64, i64 }
%struct.pmap = type opaque
%struct.memdesc = type opaque
%struct.mfi_init_frame = type { %struct.mfi_frame_header, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.mfi_init_qinfo = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.eventhandler_list = type { i8*, i32, i32, %struct.mtx, %struct.anon.98, %struct.anon.99 }
%struct.anon.98 = type { %struct.eventhandler_list*, %struct.eventhandler_list** }
%struct.anon.99 = type { %struct.eventhandler_entry*, %struct.eventhandler_entry** }
%struct.sysctl_ctx_list = type { %struct.sysctl_ctx_entry*, %struct.sysctl_ctx_entry** }
%struct.sysctl_ctx_entry = type { %struct.sysctl_oid*, %struct.anon.100 }
%struct.anon.100 = type { %struct.sysctl_ctx_entry*, %struct.sysctl_ctx_entry** }
%struct.anon.110 = type { %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** }
%struct.anon.56 = type { i16, i8, i8 }
%struct.mfi_evt_log_state = type { i32, i32, i32, i32, i32 }
%struct.mfi_dcmd_frame = type { %struct.mfi_frame_header, i32, [12 x i8], %union.mfi_sgl }
%struct.mfi_sg32 = type { i32, i32 }
%struct.mfi_io_frame = type { %struct.mfi_frame_header, i32, i32, i32, i32, %union.mfi_sgl }
%struct.mfi_abort_frame = type { %struct.mfi_frame_header, i32, i32, i32, i32, [6 x i32] }
%union.ccb = type opaque
%struct.mfi_sg64 = type <{ i64, i32 }>
%struct.mfi_ioc_passthru = type <{ %struct.mfi_dcmd_frame, i32, i8* }>
%struct.mfi_linux_ioc_packet = type { i16, i16, i32, i32, i32, i32, %union.anon.104, [16 x %struct.iovec32] }
%union.anon.104 = type { %struct.mfi_frame_header, [104 x i8] }
%struct.iovec32 = type { i32, i32 }
%struct.mfi_linux_ioc_aen = type { i16, i16, i32, i32 }
%struct.devclass = type opaque
%struct.megasas_sge = type { i64, i32 }
%struct.mfi_stp_frame = type { %struct.mfi_frame_header, [10 x i16], i32, %union.anon.43 }
%union.anon.43 = type { [2 x %struct.mfi_sg32], [8 x i8] }
%struct.mfi_config_data = type { i32, i16, i16, i16, i16, i16, i16, [16 x i8], [0 x %struct.mfi_array], [0 x %struct.mfi_ld_config], [0 x %struct.mfi_spare] }
%struct.mfi_array = type { i64, i8, i8, i16, [20 x i8], [32 x %struct.anon.105] }
%struct.anon.105 = type { %union.mfi_pd_ref, i16, %struct.anon.106 }
%struct.anon.106 = type { i8, i8 }
%struct.mfi_spare = type { %union.mfi_pd_ref, i8, [2 x i8], i8, [16 x i16] }
%struct.mfi_ld_list = type { i32, i32, [64 x %struct.anon.107] }
%struct.anon.107 = type { %union.mfi_ld_ref, i8, [3 x i8], i64 }
%struct.mfi_pd_list = type { i32, i32, [240 x %struct.mfi_pd_address] }
%struct.mfi_pd_address = type { i16, i16, i8, i8, i8, i8, [2 x i64] }

@sysctl___hw = external dso_local global %struct.sysctl_oid, align 8
@.str = private unnamed_addr constant [4 x i8] c"mfi\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"N\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@sysctl___hw_mfi = dso_local global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -2147483647, i8* null, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi to i8*), section "set_sysctl_set", align 8
@sysctl___hw_mfi_event_locale = internal global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw_mfi, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -1072955390, i8* bitcast (i32* @mfi_event_locale to i8*), i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi_event_locale = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi_event_locale to i8*), section "set_sysctl_set", align 8
@sysctl___hw_mfi_event_class = internal global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw_mfi, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -1072955390, i8* bitcast (i32* @mfi_event_class to i8*), i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi_event_class = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi_event_class to i8*), section "set_sysctl_set", align 8
@sysctl___hw_mfi_max_cmds = internal global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw_mfi, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -2146697214, i8* bitcast (i32* @mfi_max_cmds to i8*), i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi_max_cmds = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi_max_cmds to i8*), section "set_sysctl_set", align 8
@sysctl___hw_mfi_detect_jbod_change = internal global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw_mfi, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -1072955390, i8* bitcast (i32* @mfi_detect_jbod_change to i8*), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi_detect_jbod_change = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi_detect_jbod_change to i8*), section "set_sysctl_set", align 8
@mfi_polled_cmd_timeout = dso_local global i32 60, align 4
@sysctl___hw_mfi_polled_cmd_timeout = internal global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw_mfi, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -1072955390, i8* bitcast (i32* @mfi_polled_cmd_timeout to i8*), i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi_polled_cmd_timeout = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi_polled_cmd_timeout to i8*), section "set_sysctl_set", align 8
@sysctl___hw_mfi_cmd_timeout = internal global %struct.sysctl_oid { %struct.sysctl_oid_list zeroinitializer, %struct.sysctl_oid_list* getelementptr inbounds (%struct.sysctl_oid, %struct.sysctl_oid* @sysctl___hw_mfi, i32 0, i32 0), %struct.anon zeroinitializer, i32 -1, i32 -1072955390, i8* bitcast (i32* @mfi_cmd_timeout to i8*), i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i32 0, i32 0), i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 0, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0), i8* null }, align 8
@__set_sysctl_set_sym_sysctl___hw_mfi_cmd_timeout = internal constant i8* bitcast (%struct.sysctl_oid* @sysctl___hw_mfi_cmd_timeout to i8*), section "set_sysctl_set", align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"mfibuf\00", align 1
@M_MFIBUF = dso_local global [1 x %struct.malloc_type] [%struct.malloc_type { %struct.malloc_type* null, i64 877983977, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* null }], align 16
@M_MFIBUF_init_sys_init = internal global %struct.sysinit { i32 25165824, i32 2, void (i8*)* @sysinit_tslog_shim, i8* bitcast (%struct.sysinit_tslog* @M_MFIBUF_init_sys_init_tslog to i8*) }, align 8
@__set_sysinit_set_sym_M_MFIBUF_init_sys_init = internal global i8* bitcast (%struct.sysinit* @M_MFIBUF_init_sys_init to i8*), section "set_sysinit_set", align 8
@M_MFIBUF_uninit_sys_uninit = internal global %struct.sysinit { i32 25165824, i32 268435455, void (i8*)* @malloc_uninit, i8* bitcast ([1 x %struct.malloc_type]* @M_MFIBUF to i8*) }, align 8
@__set_sysuninit_set_sym_M_MFIBUF_uninit_sys_uninit = internal global i8* bitcast (%struct.sysinit* @M_MFIBUF_uninit_sys_uninit to i8*), section "set_sysuninit_set", align 8
@bootverbose = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [38 x i8] c"Waiting for firmware to become ready\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Firmware fault\0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Unknown firmware state %#x\0A\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"Firmware stuck in state %#x\0A\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"Megaraid SAS driver Ver %s \0A\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"4.23\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"MFI I/O lock\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"MFI config\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Firmware not in READY state, error %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [39 x i8] c"Cannot allocate verbuf_h_dmat DMA tag\0A\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Cannot allocate verbuf_h_dmamap memory\0A\00", align 1
@mfi_max_cmds = internal global i32 128, align 4
@.str.15 = private unnamed_addr constant [33 x i8] c"FW MaxCmds = %d, limiting to %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"MaxCmd = %d, Drv MaxCmd = %d, MaxSgl = %d, state = %#x\0A\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"Cannot allocate comms DMA tag\0A\00", align 1
@.str.18 = private unnamed_addr constant [30 x i8] c"Cannot allocate comms memory\0A\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"Cannot allocate init DMA tag\0A\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"Cannot allocate init memory\0A\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"Thunderbolt pool preparation error\0A\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"Cannot allocate buffer DMA tag\0A\00", align 1
@.str.23 = private unnamed_addr constant [31 x i8] c"Cannot allocate frame DMA tag\0A\00", align 1
@.str.24 = private unnamed_addr constant [31 x i8] c"Cannot allocate frames memory\0A\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"Cannot allocate sense DMA tag\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"Cannot allocate sense memory\0A\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"/usr/src/sys/dev/mfi/mfi.c\00", align 1
@.str.28 = private unnamed_addr constant [34 x i8] c"TB Init has failed with error %d\0A\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"Cannot set up interrupt\0A\00", align 1
@.str.30 = private unnamed_addr constant [37 x i8] c"Cannot establish configuration hook\0A\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"shutdown_final\00", align 1
@.str.32 = private unnamed_addr constant [45 x i8] c"Warning: shutdown event registration failed\0A\00", align 1
@mfi_cdevsw = internal global %struct.cdevsw { i32 1548272467, i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 (%struct.cdev*, i32, i32, %struct.thread*)* @mfi_open, i32 (%struct.cdev*, i32, %struct.thread*, %struct.file*)* null, i32 (%struct.cdev*, i32, i32, %struct.thread*)* @mfi_close, i32 (%struct.cdev*, %struct.uio*, i32)* null, i32 (%struct.cdev*, %struct.uio*, i32)* null, i32 (%struct.cdev*, i64, i8*, i32, %struct.thread*)* @mfi_ioctl, i32 (%struct.cdev*, i32, %struct.thread*)* @mfi_poll, i32 (%struct.cdev*, i64, i64*, i32, i8*)* null, void (%struct.bio*)* null, i32 (i8*, i8*, i64, i64, i64)* null, i32 (%struct.cdev*, %struct.knote*)* null, void (%struct.cdev*)* null, i32 (%struct.cdev*, i64*, i64, %struct.vm_object**, i32)* null, [3 x i32] zeroinitializer, [3 x i8*] zeroinitializer, %struct.anon.49 zeroinitializer, i32 0, %union.anon.50 zeroinitializer }, align 8
@.str.33 = private unnamed_addr constant [6 x i8] c"mfi%d\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"megaraid_sas_ioctl_node\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"delete_busy_volumes\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"keep_deleted_volumes\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"mfip\00", align 1
@tick_sbt = external dso_local local_unnamed_addr global i64, align 8
@mfi_cmd_timeout = internal global i32 30, align 4
@hz = external dso_local local_unnamed_addr global i32, align 4
@.str.40 = private unnamed_addr constant [50 x i8] c"Command %p is still on another queue, flags = %#x\00", align 1
@mfi_event_locale = internal global i32 65535, align 4
@mfi_event_class = internal global i32 0, align 4
@.str.41 = private unnamed_addr constant [8 x i8] c"mfiwait\00", align 1
@.str.42 = private unnamed_addr constant [31 x i8] c"Failed to shutdown controller\0A\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"Failed to startio\0A\00", align 1
@.str.44 = private unnamed_addr constant [20 x i8] c"failed dump blocks\0A\00", align 1
@mfi_skinny = common dso_local local_unnamed_addr global %struct.mfi_skinny_dma_info zeroinitializer, align 8
@.str.45 = private unnamed_addr constant [13 x i8] c"event_locale\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"event_class\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"max_cmds\00", align 1
@mfi_detect_jbod_change = internal global i32 1, align 4
@.str.48 = private unnamed_addr constant [19 x i8] c"detect_jbod_change\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"polled_cmd_timeout\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"cmd_timeout\00", align 1
@M_MFIBUF_init_sys_init_tslog = internal global %struct.sysinit_tslog { void (i8*)* @malloc_init, i8* bitcast ([1 x %struct.malloc_type]* @M_MFIBUF to i8*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0) }, align 8
@.str.51 = private unnamed_addr constant [8 x i8] c"SYSINIT\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"M_MFIBUF_init\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"Bad link elm %p next->prev != elm\00", align 1
@.str.54 = private unnamed_addr constant [34 x i8] c"Bad link elm %p prev->next != elm\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"mfid%d\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"Copy in failed\0A\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"Controller polled failed\0A\00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"Copy out failed\0A\00", align 1
@.str.59 = private unnamed_addr constant [25 x i8] c"IOCTL 0x%lx not handled\0A\00", align 1
@.str.60 = private unnamed_addr constant [40 x i8] c"Cannot allocate mfi_kbuff_arr_dmat tag\0A\00", align 1
@.str.61 = private unnamed_addr constant [45 x i8] c"Cannot allocate mfi_kbuff_arr_dmamap memory\0A\00", align 1
@.str.62 = private unnamed_addr constant [46 x i8] c"Could not allocate memory for kbuff_arr info\0A\00", align 1
@.str.63 = private unnamed_addr constant [42 x i8] c"Failed to allocateMFI_DCMD_LD_GET_INFO %d\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"failed to get log drv\0A\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"volume dissappeared\00", align 1
@Giant = external dso_local global %struct.mtx, align 8
@.str.66 = private unnamed_addr constant [30 x i8] c"Failed to get device listing\0A\00", align 1
@.str.67 = private unnamed_addr constant [32 x i8] c"MFI_DCMD_LD_GET_LIST failed %x\0A\00", align 1
@.str.68 = private unnamed_addr constant [37 x i8] c"Bad tailq NEXT(%p->tqh_last) != NULL\00", align 1
@.str.69 = private unnamed_addr constant [48 x i8] c"Failed to allocate for MFI_DCMD_LD_GET_INFO %d\0A\00", align 1
@.str.70 = private unnamed_addr constant [33 x i8] c"Failed to get logical drive: %d\0A\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"mfid\00", align 1
@.str.72 = private unnamed_addr constant [28 x i8] c"Failed to add logical disk\0A\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"MFI Logical Disk\00", align 1
@.str.74 = private unnamed_addr constant [28 x i8] c"AEN IMPLEMENTED for pid %d\0A\00", align 1
@.str.75 = private unnamed_addr constant [18 x i8] c"failed to copyin\0A\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"mfiioc\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"ioctl failed %d\0A\00", align 1
@.str.78 = private unnamed_addr constant [57 x i8] c"Failed to allocate %d command blocks, only allocated %d\0A\00", align 1
@.str.79 = private unnamed_addr constant [49 x i8] c"command %p not in queue, flags = %#x, bit = %#x\0A\00", align 1
@.str.80 = private unnamed_addr constant [45 x i8] c"command %p is on another queue, flags = %#x\0A\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"failed to send init command\0A\00", align 1
@.str.82 = private unnamed_addr constant [31 x i8] c"Failed to get controller info\0A\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"Failed to get log state\0A\00", align 1
@.str.84 = private unnamed_addr constant [36 x i8] c"Error while forming SYSTEM PD list\0A\00", align 1
@.str.85 = private unnamed_addr constant [36 x i8] c"Failed to get syspd device listing\0A\00", align 1
@.str.86 = private unnamed_addr constant [34 x i8] c"MFI_DCMD_PD_LIST_QUERY failed %x\0A\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"DELETE\0A\00", align 1
@.str.88 = private unnamed_addr constant [49 x i8] c"Failed to allocated for MFI_DCMD_PD_GET_INFO %d\0A\00", align 1
@.str.89 = private unnamed_addr constant [38 x i8] c"Failed to get physical drive info %d\0A\00", align 1
@.str.90 = private unnamed_addr constant [24 x i8] c"PD=%x is not SYSTEM PD\0A\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"mfisyspd\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"Failed to add system pd\0A\00", align 1
@.str.93 = private unnamed_addr constant [14 x i8] c"MFI System PD\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"%d (%s/0x%04x/%s) - %s\0A\00", align 1
@.str.95 = private unnamed_addr constant [21 x i8] c"HostBus scan raised\0A\00", align 1
@format_timestamp.buffer = internal global [32 x i8] zeroinitializer, align 16
@.str.96 = private unnamed_addr constant [11 x i8] c"boot + %us\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"%us\00", align 1
@format_class.buffer = internal global [6 x i8] zeroinitializer, align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"progress\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"WARN\00", align 1
@.str.102 = private unnamed_addr constant [5 x i8] c"CRIT\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"FATAL\00", align 1
@.str.104 = private unnamed_addr constant [5 x i8] c"DEAD\00", align 1
@.str.105 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@taskqueue_swi = external dso_local local_unnamed_addr global %struct.taskqueue*, align 8
@.str.106 = private unnamed_addr constant [34 x i8] c"Failed to get controller entries\0A\00", align 1
@.str.107 = private unnamed_addr constant [38 x i8] c"Error %d fetching controller entries\0A\00", align 1
@.str.108 = private unnamed_addr constant [28 x i8] c"Unsupported bio command %x\0A\00", align 1
@unmapped_buf = external dso_local local_unnamed_addr global i8*, align 8
@.str.109 = private unnamed_addr constant [48 x i8] c"I/O error, cmd=%p, status=%#x, scsi_status=%#x\0A\00", align 1
@.str.110 = private unnamed_addr constant [30 x i8] c"I/O error, cmd=%p, error=%#x\0A\00", align 1
@.str.111 = private unnamed_addr constant [47 x i8] c"sense error %d, sense_key %d, asc %d, ascq %d\0A\00", align 1
@.str.112 = private unnamed_addr constant [38 x i8] c"Bad tailq head %p first->prev != head\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"error %d in callback\0A\00", align 1
@.str.114 = private unnamed_addr constant [42 x i8] c"error %d in callback from mfi_send_frame\0A\00", align 1
@time_uptime = external dso_local global i64, align 8
@.str.115 = private unnamed_addr constant [33 x i8] c"Frame %p timed out command 0x%X\0A\00", align 1
@.str.116 = private unnamed_addr constant [25 x i8] c"failed to abort command\0A\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"mfiabort\00", align 1
@.str.118 = private unnamed_addr constant [37 x i8] c"COMMAND %p TIMEOUT AFTER %d SECONDS\0A\00", align 1
@__FUNCTION__.mfi_timeout = private unnamed_addr constant [12 x i8] c"mfi_timeout\00", align 1
@llvm.used = appending global [9 x i8*] [i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi to i8*), i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi_cmd_timeout to i8*), i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi_detect_jbod_change to i8*), i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi_event_class to i8*), i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi_event_locale to i8*), i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi_max_cmds to i8*), i8* bitcast (i8** @__set_sysctl_set_sym_sysctl___hw_mfi_polled_cmd_timeout to i8*), i8* bitcast (i8** @__set_sysinit_set_sym_M_MFIBUF_init_sys_init to i8*), i8* bitcast (i8** @__set_sysuninit_set_sym_M_MFIBUF_uninit_sys_uninit to i8*)], section "llvm.metadata"
@switch.table.mfi_handle_evt = private unnamed_addr constant [7 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i64 0, i64 0)]

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_transition_firmware(%struct.mfi_softc* %sc) local_unnamed_addr #0 {
entry:
  %mfi_read_fw_status = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 85
  %mfi_read_fw_status1 = bitcast {}** %mfi_read_fw_status to i32 (%struct.mfi_softc*)**
  %0 = load i32 (%struct.mfi_softc*)*, i32 (%struct.mfi_softc*)** %mfi_read_fw_status1, align 8
  %call = tail call i32 %0(%struct.mfi_softc* %sc) #7
  %and = and i32 %call, -268435456
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %mfi_btag12 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %mfi_bhandle13 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  br label %while.cond

while.cond:                                       ; preds = %for.end, %entry
  %fw_state.0 = phi i32 [ %and, %entry ], [ %and55.lcssa, %for.end ]
  %cur_abs_reg_val.0 = phi i32 [ %call, %entry ], [ %call54, %for.end ]
  %prev_abs_reg_val.0 = phi i32 [ 0, %entry ], [ %prev_abs_reg_val.1, %for.end ]
  %cmp = icmp eq i32 %fw_state.0, -1342177280
  br i1 %cmp, label %cleanup, label %while.body

while.body:                                       ; preds = %while.cond
  %1 = load i32, i32* @bootverbose, align 4
  %tobool = icmp eq i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  %2 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call2 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0)) #7
  br label %if.end

if.end:                                           ; preds = %while.body, %if.then
  %3 = lshr exact i32 %fw_state.0, 28
  %4 = xor i32 %3, 8
  %trunc = trunc i32 %4 to i4
  switch i4 %trunc, label %sw.default [
    i4 7, label %sw.bb
    i4 -2, label %sw.bb5
    i4 4, label %sw.bb15
    i4 -8, label %sw.epilog
    i4 -7, label %sw.epilog
    i4 -1, label %sw.epilog
    i4 -4, label %sw.epilog
    i4 2, label %sw.epilog
    i4 0, label %sw.bb33
    i4 1, label %sw.bb34
  ]

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call4 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %cleanup

sw.bb5:                                           ; preds = %if.end
  %6 = load i32, i32* %mfi_flags, align 8
  %7 = and i32 %6, 384
  %8 = icmp eq i32 %7, 0
  %9 = load i64, i64* %mfi_btag12, align 8
  %10 = load i64, i64* %mfi_bhandle13, align 8
  %cmp.i123 = icmp eq i64 %9, 0
  br i1 %8, label %if.else, label %if.then11

if.then11:                                        ; preds = %sw.bb5
  br i1 %cmp.i123, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then11
  %conv.i = trunc i64 %10 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 8, i32 %conv.i) #8, !srcloc !2
  br label %sw.epilog

if.else.i:                                        ; preds = %if.then11
  %11 = inttoptr i64 %10 to i32*
  store volatile i32 8, i32* %11, align 4
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb5
  %add.i = add i64 %10, 32
  br i1 %cmp.i123, label %if.then.i125, label %if.else.i126

if.then.i125:                                     ; preds = %if.else
  %conv.i124 = trunc i64 %add.i to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 8, i32 %conv.i124) #8, !srcloc !2
  br label %sw.epilog

if.else.i126:                                     ; preds = %if.else
  %12 = inttoptr i64 %add.i to i32*
  store volatile i32 8, i32* %12, align 4
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end
  %13 = load i32, i32* %mfi_flags, align 8
  %14 = and i32 %13, 384
  %15 = icmp eq i32 %14, 0
  %16 = load i64, i64* %mfi_btag12, align 8
  %17 = load i64, i64* %mfi_bhandle13, align 8
  %cmp.i133 = icmp eq i64 %16, 0
  br i1 %15, label %if.else26, label %if.then23

if.then23:                                        ; preds = %sw.bb15
  br i1 %cmp.i133, label %if.then.i130, label %if.else.i131

if.then.i130:                                     ; preds = %if.then23
  %conv.i129 = trunc i64 %17 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 7, i32 %conv.i129) #8, !srcloc !2
  br label %sw.epilog

if.else.i131:                                     ; preds = %if.then23
  %18 = inttoptr i64 %17 to i32*
  store volatile i32 7, i32* %18, align 4
  br label %sw.epilog

if.else26:                                        ; preds = %sw.bb15
  %add.i134 = add i64 %17, 32
  br i1 %cmp.i133, label %if.then.i136, label %if.else.i137

if.then.i136:                                     ; preds = %if.else26
  %conv.i135 = trunc i64 %add.i134 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 2, i32 %conv.i135) #8, !srcloc !2
  br label %sw.epilog

if.else.i137:                                     ; preds = %if.else26
  %19 = inttoptr i64 %add.i134 to i32*
  store volatile i32 2, i32* %19, align 4
  br label %sw.epilog

sw.bb33:                                          ; preds = %if.end
  br label %sw.epilog

sw.bb34:                                          ; preds = %if.end
  %20 = load i32, i32* %mfi_flags, align 8
  %21 = and i32 %20, 384
  %22 = icmp eq i32 %21, 0
  %23 = load i64, i64* %mfi_btag12, align 8
  %24 = load i64, i64* %mfi_bhandle13, align 8
  %cmp.i144 = icmp eq i64 %23, 0
  br i1 %22, label %if.else45, label %if.then42

if.then42:                                        ; preds = %sw.bb34
  br i1 %cmp.i144, label %if.then.i141, label %if.else.i142

if.then.i141:                                     ; preds = %if.then42
  %conv.i140 = trunc i64 %24 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 16, i32 %conv.i140) #8, !srcloc !2
  br label %sw.epilog

if.else.i142:                                     ; preds = %if.then42
  %25 = inttoptr i64 %24 to i32*
  store volatile i32 16, i32* %25, align 4
  br label %sw.epilog

if.else45:                                        ; preds = %sw.bb34
  %add.i145 = add i64 %24, 32
  br i1 %cmp.i144, label %if.then.i147, label %if.else.i148

if.then.i147:                                     ; preds = %if.else45
  %conv.i146 = trunc i64 %add.i145 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 16, i32 %conv.i146) #8, !srcloc !2
  br label %sw.epilog

if.else.i148:                                     ; preds = %if.else45
  %26 = inttoptr i64 %add.i145 to i32*
  store volatile i32 16, i32* %26, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %27 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call50 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 %fw_state.0) #7
  br label %cleanup

sw.epilog:                                        ; preds = %if.else.i148, %if.then.i147, %if.else.i142, %if.then.i141, %if.else.i137, %if.then.i136, %if.else.i131, %if.then.i130, %if.else.i126, %if.then.i125, %if.else.i, %if.then.i, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb33
  %prev_abs_reg_val.1 = phi i32 [ %cur_abs_reg_val.0, %sw.bb33 ], [ %prev_abs_reg_val.0, %if.end ], [ %prev_abs_reg_val.0, %if.end ], [ %prev_abs_reg_val.0, %if.end ], [ %prev_abs_reg_val.0, %if.end ], [ %prev_abs_reg_val.0, %if.end ], [ %prev_abs_reg_val.0, %if.then.i ], [ %prev_abs_reg_val.0, %if.else.i ], [ %prev_abs_reg_val.0, %if.then.i125 ], [ %prev_abs_reg_val.0, %if.else.i126 ], [ %prev_abs_reg_val.0, %if.then.i130 ], [ %prev_abs_reg_val.0, %if.else.i131 ], [ %prev_abs_reg_val.0, %if.then.i136 ], [ %prev_abs_reg_val.0, %if.else.i137 ], [ %prev_abs_reg_val.0, %if.then.i141 ], [ %prev_abs_reg_val.0, %if.else.i142 ], [ %prev_abs_reg_val.0, %if.then.i147 ], [ %prev_abs_reg_val.0, %if.else.i148 ]
  br label %for.body

for.body:                                         ; preds = %sw.epilog, %if.then57
  %i.0153 = phi i32 [ 0, %sw.epilog ], [ %inc, %if.then57 ]
  %28 = load i32 (%struct.mfi_softc*)*, i32 (%struct.mfi_softc*)** %mfi_read_fw_status1, align 8
  %call54 = tail call i32 %28(%struct.mfi_softc* nonnull %sc) #7
  %and55 = and i32 %call54, -268435456
  %cmp56 = icmp eq i32 %and55, %fw_state.0
  br i1 %cmp56, label %if.then57, label %for.end

if.then57:                                        ; preds = %for.body
  tail call void @DELAY(i32 100000) #7
  %inc = add nuw nsw i32 %i.0153, 1
  %cmp51 = icmp ult i32 %inc, 1800
  br i1 %cmp51, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %if.then57
  %and55.lcssa = phi i32 [ %and55, %for.body ], [ %fw_state.0, %if.then57 ]
  %cmp60 = icmp ne i32 %and55.lcssa, -2147483648
  %cmp62 = icmp eq i32 %prev_abs_reg_val.1, %call54
  %or.cond121 = or i1 %cmp60, %cmp62
  %cmp66 = icmp eq i32 %and55.lcssa, %fw_state.0
  %or.cond122 = and i1 %cmp66, %or.cond121
  br i1 %or.cond122, label %if.then67, label %while.cond

if.then67:                                        ; preds = %for.end
  %29 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call69 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %29, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 %fw_state.0) #7
  br label %cleanup

cleanup:                                          ; preds = %while.cond, %if.then67, %sw.default, %sw.bb
  %retval.0 = phi i32 [ 6, %sw.default ], [ 6, %if.then67 ], [ 6, %sw.bb ], [ 0, %while.cond ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #1

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @device_printf(%struct.device*, i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @DELAY(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #1

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_attach(%struct.mfi_softc* %sc) local_unnamed_addr #0 {
entry:
  %cm.i = alloca %struct.mfi_command*, align 8
  %ci.i = alloca %struct.mfi_ctrl_info*, align 8
  %dev_t = alloca %struct.cdev*, align 8
  %0 = bitcast %struct.cdev** %dev_t to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  %cmp = icmp eq %struct.mfi_softc* %sc, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %1 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #7
  %mfi_io_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @_mtx_init(i64* nonnull %mtx_lock, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* null, i32 0) #7
  %mfi_config_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 82
  tail call void @sx_init_flags(%struct.sx* nonnull %mfi_config_lock, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i32 0) #7
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  store %struct.mfi_disk* null, %struct.mfi_disk** %tqh_first, align 8
  %tqh_last = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 1
  store %struct.mfi_disk** %tqh_first, %struct.mfi_disk*** %tqh_last, align 8
  %tqh_first5 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 72, i32 0
  store %struct.mfi_system_pd* null, %struct.mfi_system_pd** %tqh_first5, align 8
  %tqh_last9 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 72, i32 1
  store %struct.mfi_system_pd** %tqh_first5, %struct.mfi_system_pd*** %tqh_last9, align 8
  %tqh_first13 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 73, i32 0
  store %struct.mfi_disk_pending* null, %struct.mfi_disk_pending** %tqh_first13, align 8
  %tqh_last17 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 73, i32 1
  store %struct.mfi_disk_pending** %tqh_first13, %struct.mfi_disk_pending*** %tqh_last17, align 8
  %tqh_first21 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 74, i32 0
  store %struct.mfi_system_pending* null, %struct.mfi_system_pending** %tqh_first21, align 8
  %tqh_last25 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 74, i32 1
  store %struct.mfi_system_pending** %tqh_first21, %struct.mfi_system_pending*** %tqh_last25, align 8
  %tqh_first29 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 34, i32 0
  store %struct.mfi_evt_queue_elm* null, %struct.mfi_evt_queue_elm** %tqh_first29, align 8
  %tqh_last33 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 34, i32 1
  store %struct.mfi_evt_queue_elm** %tqh_first29, %struct.mfi_evt_queue_elm*** %tqh_last33, align 8
  %ta_pending = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 35, i32 1
  store i16 0, i16* %ta_pending, align 8
  %ta_priority = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 35, i32 2
  store i16 0, i16* %ta_priority, align 2
  %ta_func = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 35, i32 3
  store void (i8*, i32)* @mfi_handle_evt, void (i8*, i32)** %ta_func, align 8
  %2 = bitcast %struct.mfi_softc* %sc to i8*
  %ta_context = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 35, i32 4
  %3 = bitcast i8** %ta_context to %struct.mfi_softc**
  store %struct.mfi_softc* %sc, %struct.mfi_softc** %3, align 8
  %ta_pending43 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 36, i32 1
  store i16 0, i16* %ta_pending43, align 8
  %ta_priority45 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 36, i32 2
  store i16 0, i16* %ta_priority45, align 2
  %ta_func47 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 36, i32 3
  store void (i8*, i32)* @mfi_handle_map_sync, void (i8*, i32)** %ta_func47, align 8
  %ta_context49 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 36, i32 4
  %4 = bitcast i8** %ta_context49 to %struct.mfi_softc**
  store %struct.mfi_softc* %sc, %struct.mfi_softc** %4, align 8
  %tqh_first53 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 37, i32 0
  store %struct.mfi_aen* null, %struct.mfi_aen** %tqh_first53, align 8
  %tqh_last57 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 37, i32 1
  store %struct.mfi_aen** %tqh_first53, %struct.mfi_aen*** %tqh_last57, align 8
  %tqh_first61 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 77, i32 0
  store %struct.ccb_hdr* null, %struct.ccb_hdr** %tqh_first61, align 8
  %tqh_last65 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 77, i32 1
  store %struct.ccb_hdr** %tqh_first61, %struct.ccb_hdr*** %tqh_last65, align 8
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqh_first.i, align 8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  store %struct.mfi_command** %tqh_first.i, %struct.mfi_command*** %tqh_last.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  store i32 0, i32* %q_length.i, align 8
  %q_max.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 1
  store i32 0, i32* %q_max.i, align 4
  %tqh_first.i713 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 12, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqh_first.i713, align 8
  %tqh_last.i714 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 12, i32 1
  store %struct.mfi_command** %tqh_first.i713, %struct.mfi_command*** %tqh_last.i714, align 8
  %q_length.i715 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 2, i32 0
  store i32 0, i32* %q_length.i715, align 8
  %q_max.i716 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 2, i32 1
  store i32 0, i32* %q_max.i716, align 4
  %tqh_first.i717 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 13, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqh_first.i717, align 8
  %tqh_last.i718 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 13, i32 1
  store %struct.mfi_command** %tqh_first.i717, %struct.mfi_command*** %tqh_last.i718, align 8
  %q_length.i719 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 3, i32 0
  store i32 0, i32* %q_length.i719, align 8
  %q_max.i720 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 3, i32 1
  store i32 0, i32* %q_max.i720, align 4
  %mfi_bioq.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 14
  tail call void @bioq_init(%struct.bio_queue_head* nonnull %mfi_bioq.i) #7
  %q_length.i721 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 1, i32 0
  store i32 0, i32* %q_length.i721, align 8
  %q_max.i722 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 1, i32 1
  store i32 0, i32* %q_max.i722, align 4
  %adpreset = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 59
  store i8 0, i8* %adpreset, align 8
  %last_seq_num = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 63
  store i32 0, i32* %last_seq_num, align 8
  %disableOnlineCtrlReset = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 61
  store i8 1, i8* %disableOnlineCtrlReset, align 2
  %issuepend_done = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 60
  store i8 1, i8* %issuepend_done, align 1
  %hw_crit_error = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 64
  store volatile i32 0, i32* %hw_crit_error, align 4
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %5 = load i32, i32* %mfi_flags, align 8
  %and = and i32 %5, 16
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then68

if.then68:                                        ; preds = %if.end
  %mfi_enable_intr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 83
  store void (%struct.mfi_softc*)* @mfi_enable_intr_xscale, void (%struct.mfi_softc*)** %mfi_enable_intr, align 8
  %mfi_read_fw_status = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 85
  %mfi_read_fw_status69 = bitcast {}** %mfi_read_fw_status to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_read_fw_status_xscale, i32 (%struct.mfi_softc*)** %mfi_read_fw_status69, align 8
  %mfi_check_clear_intr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 86
  %mfi_check_clear_intr70 = bitcast {}** %mfi_check_clear_intr to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_check_clear_intr_xscale, i32 (%struct.mfi_softc*)** %mfi_check_clear_intr70, align 8
  %mfi_issue_cmd = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 87
  store void (%struct.mfi_softc*, i64, i32)* @mfi_issue_cmd_xscale, void (%struct.mfi_softc*, i64, i32)** %mfi_issue_cmd, align 8
  br label %if.end98

if.else:                                          ; preds = %if.end
  %and72 = and i32 %5, 256
  %tobool73 = icmp eq i32 %and72, 0
  %mfi_enable_intr75 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 83
  br i1 %tobool73, label %if.else90, label %if.then74

if.then74:                                        ; preds = %if.else
  store void (%struct.mfi_softc*)* @mfi_tbolt_enable_intr_ppc, void (%struct.mfi_softc*)** %mfi_enable_intr75, align 8
  %mfi_disable_intr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 84
  store void (%struct.mfi_softc*)* @mfi_tbolt_disable_intr_ppc, void (%struct.mfi_softc*)** %mfi_disable_intr, align 8
  %mfi_read_fw_status76 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 85
  %mfi_read_fw_status77 = bitcast {}** %mfi_read_fw_status76 to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_tbolt_read_fw_status_ppc, i32 (%struct.mfi_softc*)** %mfi_read_fw_status77, align 8
  %mfi_check_clear_intr78 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 86
  %mfi_check_clear_intr79 = bitcast {}** %mfi_check_clear_intr78 to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_tbolt_check_clear_intr_ppc, i32 (%struct.mfi_softc*)** %mfi_check_clear_intr79, align 8
  %mfi_issue_cmd80 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 87
  store void (%struct.mfi_softc*, i64, i32)* @mfi_tbolt_issue_cmd_ppc, void (%struct.mfi_softc*, i64, i32)** %mfi_issue_cmd80, align 8
  %mfi_adp_reset = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 88
  %mfi_adp_reset81 = bitcast {}** %mfi_adp_reset to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_tbolt_adp_reset, i32 (%struct.mfi_softc*)** %mfi_adp_reset81, align 8
  %mfi_tbolt = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 91
  store i32 1, i32* %mfi_tbolt, align 8
  %tqh_first83 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 95, i32 0
  store %struct.mfi_cmd_tbolt* null, %struct.mfi_cmd_tbolt** %tqh_first83, align 8
  %tqh_last87 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 95, i32 1
  store %struct.mfi_cmd_tbolt** %tqh_first83, %struct.mfi_cmd_tbolt*** %tqh_last87, align 8
  br label %if.end98

if.else90:                                        ; preds = %if.else
  store void (%struct.mfi_softc*)* @mfi_enable_intr_ppc, void (%struct.mfi_softc*)** %mfi_enable_intr75, align 8
  %mfi_read_fw_status92 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 85
  %mfi_read_fw_status93 = bitcast {}** %mfi_read_fw_status92 to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_read_fw_status_ppc, i32 (%struct.mfi_softc*)** %mfi_read_fw_status93, align 8
  %mfi_check_clear_intr94 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 86
  %mfi_check_clear_intr95 = bitcast {}** %mfi_check_clear_intr94 to i32 (%struct.mfi_softc*)**
  store i32 (%struct.mfi_softc*)* @mfi_check_clear_intr_ppc, i32 (%struct.mfi_softc*)** %mfi_check_clear_intr95, align 8
  %mfi_issue_cmd96 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 87
  store void (%struct.mfi_softc*, i64, i32)* @mfi_issue_cmd_ppc, void (%struct.mfi_softc*, i64, i32)** %mfi_issue_cmd96, align 8
  br label %if.end98

if.end98:                                         ; preds = %if.then74, %if.else90, %if.then68
  %call99 = tail call i32 @mfi_transition_firmware(%struct.mfi_softc* nonnull %sc) #9
  %cmp100 = icmp eq i32 %call99, 0
  br i1 %cmp100, label %if.end104, label %if.then101

if.then101:                                       ; preds = %if.end98
  %6 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call103 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %6, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %call99) #7
  br label %cleanup

if.end104:                                        ; preds = %if.end98
  %mfi_parent_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 20
  %7 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %verbuf_h_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 2
  %call105 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %7, i64 1, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 256, i32 1, i64 256, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %verbuf_h_dmat) #7
  %tobool106 = icmp eq i32 %call105, 0
  br i1 %tobool106, label %if.end110, label %if.then107

if.then107:                                       ; preds = %if.end104
  %8 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call109 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i64 0, i64 0)) #7
  br label %cleanup

if.end110:                                        ; preds = %if.end104
  %9 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %verbuf_h_dmat, align 8
  %verbuf = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 5
  %10 = bitcast i32** %verbuf to i8**
  %verbuf_h_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 3
  %impl.i = bitcast %struct.bus_dma_tag* %9 to %struct.bus_dma_impl**
  %11 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %mem_alloc.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %11, i64 0, i32 5
  %12 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i, align 8
  %call.i723 = tail call i32 %12(%struct.bus_dma_tag* %9, i8** nonnull %10, i32 1, %struct.bus_dmamap** nonnull %verbuf_h_dmamap) #7
  %tobool113 = icmp eq i32 %call.i723, 0
  br i1 %tobool113, label %if.end117, label %if.then114

if.then114:                                       ; preds = %if.end110
  %13 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call116 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %13, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0)) #7
  br label %cleanup

if.end117:                                        ; preds = %if.end110
  %14 = load i8*, i8** %10, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %14, i8 0, i64 256, i1 false)
  %15 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %verbuf_h_dmat, align 8
  %16 = load %struct.bus_dmamap*, %struct.bus_dmamap** %verbuf_h_dmamap, align 8
  %17 = load i8*, i8** %10, align 8
  %verbuf_h_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 4
  %18 = bitcast i64* %verbuf_h_busaddr to i8*
  %call122 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %15, %struct.bus_dmamap* %16, i8* %17, i64 256, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %18, i32 0) #7
  %mfi_read_fw_status123 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 85
  %mfi_read_fw_status124 = bitcast {}** %mfi_read_fw_status123 to i32 (%struct.mfi_softc*)**
  %19 = load i32 (%struct.mfi_softc*)*, i32 (%struct.mfi_softc*)** %mfi_read_fw_status124, align 8
  %call125 = tail call i32 %19(%struct.mfi_softc* nonnull %sc) #7
  %and126 = and i32 %call125, 65535
  %20 = load i32, i32* @mfi_max_cmds, align 4
  %cmp127 = icmp sgt i32 %20, 0
  %cmp128 = icmp slt i32 %20, %and126
  %or.cond = and i1 %cmp127, %cmp128
  br i1 %or.cond, label %if.then129, label %if.end134

if.then129:                                       ; preds = %if.end117
  %21 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call131 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %21, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i32 %and126, i32 %20) #7
  %22 = load i32, i32* @mfi_max_cmds, align 4
  br label %if.end134

if.end134:                                        ; preds = %if.end117, %if.then129
  %.sink = phi i32 [ %22, %if.then129 ], [ %and126, %if.end117 ]
  %23 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 66
  store i32 %.sink, i32* %23, align 8
  %and135 = lshr i32 %call125, 16
  %shr = and i32 %and135, 255
  %cmp.i724 = icmp ult i32 %shr, 33
  %cond.i = select i1 %cmp.i724, i32 %shr, i32 33
  %mfi_max_sge = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 67
  store i32 %cond.i, i32* %mfi_max_sge, align 4
  %24 = load i32, i32* %mfi_flags, align 8
  %and138 = and i32 %24, 256
  %tobool139 = icmp eq i32 %and138, 0
  br i1 %tobool139, label %if.end217, label %if.then140

if.then140:                                       ; preds = %if.end134
  tail call void @mfi_tbolt_init_globals(%struct.mfi_softc* nonnull %sc) #7
  %25 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %26 = load i32, i32* %23, align 8
  %27 = load i32, i32* %mfi_max_sge, align 4
  %call144 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %25, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i64 0, i64 0), i32 %and126, i32 %26, i32 %27, i32 %call125) #7
  %call145 = tail call i32 @mfi_tbolt_get_memory_requirement(%struct.mfi_softc* nonnull %sc) #7
  %28 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %conv = zext i32 %call145 to i64
  %mfi_tb_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 96
  %call148 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %28, i64 1, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 %conv, i32 1, i64 %conv, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %mfi_tb_dmat) #7
  %tobool149 = icmp eq i32 %call148, 0
  br i1 %tobool149, label %if.end153, label %if.then150

if.then150:                                       ; preds = %if.then140
  %29 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call152 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %29, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0)) #7
  br label %cleanup

if.end153:                                        ; preds = %if.then140
  %30 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_dmat, align 8
  %request_message_pool = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 99
  %mfi_tb_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 97
  %impl.i725 = bitcast %struct.bus_dma_tag* %30 to %struct.bus_dma_impl**
  %31 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i725, align 8
  %mem_alloc.i726 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %31, i64 0, i32 5
  %32 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i726, align 8
  %call.i727 = tail call i32 %32(%struct.bus_dma_tag* %30, i8** nonnull %request_message_pool, i32 1, %struct.bus_dmamap** nonnull %mfi_tb_dmamap) #7
  %tobool156 = icmp eq i32 %call.i727, 0
  br i1 %tobool156, label %if.end160, label %if.then157

if.then157:                                       ; preds = %if.end153
  %33 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call159 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %33, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i64 0, i64 0)) #7
  br label %cleanup

if.end160:                                        ; preds = %if.end153
  %34 = load i8*, i8** %request_message_pool, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 %conv, i1 false)
  %35 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_dmat, align 8
  %36 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_dmamap, align 8
  %37 = load i8*, i8** %request_message_pool, align 8
  %mfi_tb_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 98
  %38 = bitcast i64* %mfi_tb_busaddr to i8*
  %call167 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %35, %struct.bus_dmamap* %36, i8* %37, i64 %conv, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %38, i32 0) #7
  %39 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %mfi_tb_init_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 29
  %call169 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %39, i64 256, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 64, i32 1, i64 64, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %mfi_tb_init_dmat) #7
  %tobool170 = icmp eq i32 %call169, 0
  br i1 %tobool170, label %if.end174, label %if.then171

if.then171:                                       ; preds = %if.end160
  %40 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call173 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %40, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0)) #7
  br label %cleanup

if.end174:                                        ; preds = %if.end160
  %41 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_init_dmat, align 8
  %mfi_tb_init = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 33
  %42 = bitcast %union.mfi_frame** %mfi_tb_init to i8**
  %mfi_tb_init_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 30
  %impl.i728 = bitcast %struct.bus_dma_tag* %41 to %struct.bus_dma_impl**
  %43 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i728, align 8
  %mem_alloc.i729 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %43, i64 0, i32 5
  %44 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i729, align 8
  %call.i730 = tail call i32 %44(%struct.bus_dma_tag* %41, i8** nonnull %42, i32 1, %struct.bus_dmamap** nonnull %mfi_tb_init_dmamap) #7
  %tobool177 = icmp eq i32 %call.i730, 0
  br i1 %tobool177, label %if.end181, label %if.then178

if.then178:                                       ; preds = %if.end174
  %45 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call180 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %45, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0)) #7
  br label %cleanup

if.end181:                                        ; preds = %if.end174
  %46 = load i8*, i8** %42, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %46, i8 0, i64 64, i1 false)
  %47 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_init_dmat, align 8
  %48 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_init_dmamap, align 8
  %49 = load i8*, i8** %42, align 8
  %mfi_tb_init_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 31
  %50 = bitcast i64* %mfi_tb_init_busaddr to i8*
  %call186 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %47, %struct.bus_dmamap* %48, i8* %49, i64 64, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %50, i32 0) #7
  %51 = load i8*, i8** %request_message_pool, align 8
  %call188 = tail call i32 @mfi_tbolt_init_desc_pool(%struct.mfi_softc* nonnull %sc, i8* %51, i32 %call145) #7
  %tobool189 = icmp eq i32 %call188, 0
  br i1 %tobool189, label %if.end193, label %if.then190

if.then190:                                       ; preds = %if.end181
  %52 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call192 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %52, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0)) #7
  br label %cleanup

if.end193:                                        ; preds = %if.end181
  %53 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %mfi_tb_ioc_init_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 105
  %call197 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %53, i64 1, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 72, i32 1, i64 72, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %mfi_tb_ioc_init_dmat) #7
  %tobool198 = icmp eq i32 %call197, 0
  br i1 %tobool198, label %if.end202, label %if.then199

if.then199:                                       ; preds = %if.end193
  %54 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call201 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %54, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0)) #7
  br label %cleanup

if.end202:                                        ; preds = %if.end193
  %55 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_ioc_init_dmat, align 8
  %mfi_tb_ioc_init_desc = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 107
  %mfi_tb_ioc_init_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 106
  %impl.i731 = bitcast %struct.bus_dma_tag* %55 to %struct.bus_dma_impl**
  %56 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i731, align 8
  %mem_alloc.i732 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %56, i64 0, i32 5
  %57 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i732, align 8
  %call.i733 = tail call i32 %57(%struct.bus_dma_tag* %55, i8** nonnull %mfi_tb_ioc_init_desc, i32 1, %struct.bus_dmamap** nonnull %mfi_tb_ioc_init_dmamap) #7
  %tobool205 = icmp eq i32 %call.i733, 0
  br i1 %tobool205, label %if.end209, label %if.then206

if.then206:                                       ; preds = %if.end202
  %58 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call208 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %58, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i64 0, i64 0)) #7
  br label %cleanup

if.end209:                                        ; preds = %if.end202
  %59 = load i8*, i8** %mfi_tb_ioc_init_desc, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 0, i64 72, i1 false)
  %60 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_ioc_init_dmat, align 8
  %61 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_ioc_init_dmamap, align 8
  %62 = load i8*, i8** %mfi_tb_ioc_init_desc, align 8
  %mfi_tb_ioc_init_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 32
  %63 = bitcast i64* %mfi_tb_ioc_init_busaddr to i8*
  %call216 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %60, %struct.bus_dmamap* %61, i8* %62, i64 72, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %63, i32 0) #7
  %.pre = load i32, i32* %mfi_max_sge, align 4
  br label %if.end217

if.end217:                                        ; preds = %if.end134, %if.end209
  %64 = phi i32 [ %cond.i, %if.end134 ], [ %.pre, %if.end209 ]
  %65 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %66 = bitcast %struct.mtx* %mfi_io_lock to i8*
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %call221 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %65, i64 1, i64 0, i64 -1, i64 -1, i32 (i8*, i64)* null, i8* null, i64 4294967295, i32 %64, i64 4294967295, i32 2, void (i8*, i32)* nonnull @busdma_lock_mutex, i8* nonnull %66, %struct.bus_dma_tag** nonnull %mfi_buffer_dmat) #7
  %tobool222 = icmp eq i32 %call221, 0
  br i1 %tobool222, label %if.end226, label %if.then223

if.then223:                                       ; preds = %if.end217
  %67 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call225 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %67, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0)) #7
  br label %cleanup

if.end226:                                        ; preds = %if.end217
  %68 = load i32, i32* %23, align 8
  %mul = shl i32 %68, 2
  %add = add i32 %mul, 12
  %69 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %conv231 = sext i32 %add to i64
  %mfi_comms_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 22
  %call233 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %69, i64 1, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 %conv231, i32 1, i64 %conv231, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %mfi_comms_dmat) #7
  %tobool234 = icmp eq i32 %call233, 0
  br i1 %tobool234, label %if.end238, label %if.then235

if.then235:                                       ; preds = %if.end226
  %70 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call237 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %70, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0)) #7
  br label %cleanup

if.end238:                                        ; preds = %if.end226
  %71 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_comms_dmat, align 8
  %mfi_comms = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 10
  %72 = bitcast %struct.mfi_hwcomms** %mfi_comms to i8**
  %mfi_comms_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 23
  %impl.i734 = bitcast %struct.bus_dma_tag* %71 to %struct.bus_dma_impl**
  %73 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i734, align 8
  %mem_alloc.i735 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %73, i64 0, i32 5
  %74 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i735, align 8
  %call.i736 = tail call i32 %74(%struct.bus_dma_tag* %71, i8** nonnull %72, i32 1, %struct.bus_dmamap** nonnull %mfi_comms_dmamap) #7
  %tobool241 = icmp eq i32 %call.i736, 0
  br i1 %tobool241, label %if.end245, label %if.then242

if.then242:                                       ; preds = %if.end238
  %75 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call244 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %75, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.18, i64 0, i64 0)) #7
  br label %cleanup

if.end245:                                        ; preds = %if.end238
  %76 = load i8*, i8** %72, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 %conv231, i1 false)
  %77 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_comms_dmat, align 8
  %78 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_comms_dmamap, align 8
  %79 = load i8*, i8** %72, align 8
  %mfi_comms_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 24
  %80 = bitcast i64* %mfi_comms_busaddr to i8*
  %call252 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %77, %struct.bus_dmamap* %78, i8* %79, i64 %conv231, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %80, i32 0) #7
  %mfi_sge_size = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 69
  store i32 12, i32* %mfi_sge_size, align 4
  %81 = load i32, i32* %mfi_flags, align 8
  %or = or i32 %81, 1
  store i32 %or, i32* %mfi_flags, align 8
  %82 = trunc i32 %81 to i8
  %tobool256 = icmp slt i8 %82, 0
  br i1 %tobool256, label %if.then257, label %if.end259

if.then257:                                       ; preds = %if.end245
  store i32 16, i32* %mfi_sge_size, align 4
  br label %if.end259

if.end259:                                        ; preds = %if.then257, %if.end245
  %83 = phi i32 [ 16, %if.then257 ], [ 12, %if.end245 ]
  %84 = load i32, i32* %mfi_max_sge, align 4
  %mul262 = mul i32 %84, %83
  %sub = add i32 %mul262, -1
  %div = sdiv i32 %sub, 64
  %add263 = shl nsw i32 %div, 6
  %mul264 = add i32 %add263, 128
  %mfi_cmd_size = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 68
  store i32 %mul264, i32* %mfi_cmd_size, align 8
  %85 = load i32, i32* %23, align 8
  %mul267 = mul i32 %mul264, %85
  %86 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %conv269 = sext i32 %mul267 to i64
  %mfi_frames_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 25
  %call271 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %86, i64 64, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 %conv269, i32 1, i64 %conv269, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %mfi_frames_dmat) #7
  %tobool272 = icmp eq i32 %call271, 0
  br i1 %tobool272, label %if.end276, label %if.then273

if.then273:                                       ; preds = %if.end259
  %87 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call275 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %87, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.23, i64 0, i64 0)) #7
  br label %cleanup

if.end276:                                        ; preds = %if.end259
  %88 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_frames_dmat, align 8
  %mfi_frames = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 28
  %89 = bitcast %union.mfi_frame** %mfi_frames to i8**
  %mfi_frames_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 26
  %impl.i737 = bitcast %struct.bus_dma_tag* %88 to %struct.bus_dma_impl**
  %90 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i737, align 8
  %mem_alloc.i738 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %90, i64 0, i32 5
  %91 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i738, align 8
  %call.i739 = tail call i32 %91(%struct.bus_dma_tag* %88, i8** nonnull %89, i32 1, %struct.bus_dmamap** nonnull %mfi_frames_dmamap) #7
  %tobool279 = icmp eq i32 %call.i739, 0
  br i1 %tobool279, label %if.end283, label %if.then280

if.then280:                                       ; preds = %if.end276
  %92 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call282 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %92, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i64 0, i64 0)) #7
  br label %cleanup

if.end283:                                        ; preds = %if.end276
  %93 = load i8*, i8** %89, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 0, i64 %conv269, i1 false)
  %94 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_frames_dmat, align 8
  %95 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_frames_dmamap, align 8
  %96 = load i8*, i8** %89, align 8
  %mfi_frames_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 27
  %97 = bitcast i64* %mfi_frames_busaddr to i8*
  %call290 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %94, %struct.bus_dmamap* %95, i8* %96, i64 %conv269, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %97, i32 0) #7
  %98 = load i32, i32* %23, align 8
  %mul292 = shl i32 %98, 7
  %99 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %conv294 = sext i32 %mul292 to i64
  %mfi_sense_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 50
  %call296 = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %99, i64 4, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 %conv294, i32 1, i64 %conv294, i32 0, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** nonnull %mfi_sense_dmat) #7
  %tobool297 = icmp eq i32 %call296, 0
  br i1 %tobool297, label %if.end301, label %if.then298

if.then298:                                       ; preds = %if.end283
  %100 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call300 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %100, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0)) #7
  br label %cleanup

if.end301:                                        ; preds = %if.end283
  %101 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_sense_dmat, align 8
  %mfi_sense = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 53
  %102 = bitcast %struct.mfi_sense** %mfi_sense to i8**
  %mfi_sense_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 51
  %impl.i740 = bitcast %struct.bus_dma_tag* %101 to %struct.bus_dma_impl**
  %103 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i740, align 8
  %mem_alloc.i741 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %103, i64 0, i32 5
  %104 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i741, align 8
  %call.i742 = tail call i32 %104(%struct.bus_dma_tag* %101, i8** nonnull %102, i32 1, %struct.bus_dmamap** nonnull %mfi_sense_dmamap) #7
  %tobool304 = icmp eq i32 %call.i742, 0
  br i1 %tobool304, label %if.end308, label %if.then305

if.then305:                                       ; preds = %if.end301
  %105 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call307 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %105, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0)) #7
  br label %cleanup

if.end308:                                        ; preds = %if.end301
  %106 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_sense_dmat, align 8
  %107 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_sense_dmamap, align 8
  %108 = load i8*, i8** %102, align 8
  %mfi_sense_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 52
  %109 = bitcast i64* %mfi_sense_busaddr to i8*
  %call313 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %106, %struct.bus_dmamap* %107, i8* %108, i64 %conv294, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* nonnull %109, i32 0) #7
  %110 = load i32, i32* %23, align 8
  %conv.i743 = sext i32 %110 to i64
  %mul.i744 = mul nsw i64 %conv.i743, 136
  %call.i745 = tail call noalias i8* @malloc(i64 %mul.i744, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 258) #10
  %mfi_commands.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 65
  %111 = bitcast %struct.mfi_command** %mfi_commands.i to i8**
  store i8* %call.i745, i8** %111, align 8
  %112 = load i32, i32* %23, align 8
  %cmp88.i = icmp sgt i32 %112, 0
  br i1 %cmp88.i, label %for.body.lr.ph.i, label %if.end318

for.body.lr.ph.i:                                 ; preds = %if.end308
  %113 = bitcast i8* %call.i745 to %struct.mfi_command*
  %114 = bitcast %union.mfi_frame** %mfi_frames to i64*
  br label %for.body.i

for.body.i:                                       ; preds = %if.then.for.body_crit_edge.i, %for.body.lr.ph.i
  %115 = phi %struct.mfi_command* [ %113, %for.body.lr.ph.i ], [ %.pre.i, %if.then.for.body_crit_edge.i ]
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %if.then.for.body_crit_edge.i ]
  %116 = load i64, i64* %114, align 8
  %117 = load i32, i32* %mfi_cmd_size, align 8
  %118 = trunc i64 %indvars.iv.i to i32
  %mul4.i = mul i32 %117, %118
  %conv5.i = sext i32 %mul4.i to i64
  %add.i = add i64 %116, %conv5.i
  %119 = inttoptr i64 %add.i to %union.mfi_frame*
  %cm_frame.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 3
  store %union.mfi_frame* %119, %union.mfi_frame** %cm_frame.i, align 8
  %120 = load i64, i64* %mfi_frames_busaddr, align 8
  %121 = load i32, i32* %mfi_cmd_size, align 8
  %mul7.i = mul i32 %121, %118
  %conv8.i = sext i32 %mul7.i to i64
  %add9.i = add i64 %120, %conv8.i
  %cm_frame_busaddr.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 4
  store i64 %add9.i, i64* %cm_frame_busaddr.i, align 8
  %context.i = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %119, i64 0, i32 0, i32 0, i32 8
  store i32 %118, i32* %context.i, align 1
  %122 = load %struct.mfi_sense*, %struct.mfi_sense** %mfi_sense, align 8
  %arrayidx12.i = getelementptr %struct.mfi_sense, %struct.mfi_sense* %122, i64 %indvars.iv.i
  %cm_sense.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 5
  store %struct.mfi_sense* %arrayidx12.i, %struct.mfi_sense** %cm_sense.i, align 8
  %123 = load i64, i64* %mfi_sense_busaddr, align 8
  %mul13.i = shl i32 %118, 7
  %conv14.i = sext i32 %mul13.i to i64
  %add15.i = add i64 %123, %conv14.i
  %cm_sense_busaddr.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 6
  store i64 %add15.i, i64* %cm_sense_busaddr.i, align 8
  %cm_sc.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 2
  store %struct.mfi_softc* %sc, %struct.mfi_softc** %cm_sc.i, align 8
  %cm_index.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 18
  store i32 %118, i32* %cm_index.i, align 8
  %124 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap.i748 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i, i32 7
  %impl.i.i749 = bitcast %struct.bus_dma_tag* %124 to %struct.bus_dma_impl**
  %125 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.i749, align 8
  %map_create.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %125, i64 0, i32 3
  %126 = load i32 (%struct.bus_dma_tag*, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i32, %struct.bus_dmamap**)** %map_create.i.i, align 8
  %call.i.i = tail call i32 %126(%struct.bus_dma_tag* %124, i32 0, %struct.bus_dmamap** nonnull %cm_dmamap.i748) #7
  %cmp17.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp17.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.body.i
  %arrayidx.i = getelementptr %struct.mfi_command, %struct.mfi_command* %115, i64 %indvars.iv.i
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 824) #7
  tail call void @mfi_release_command(%struct.mfi_command* %arrayidx.i) #7
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 826) #7
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %127 = load i32, i32* %23, align 8
  %128 = sext i32 %127 to i64
  %cmp.i750 = icmp slt i64 %indvars.iv.next.i, %128
  br i1 %cmp.i750, label %if.then.for.body_crit_edge.i, label %if.end318

if.then.for.body_crit_edge.i:                     ; preds = %if.then.i
  %.pre.i = load %struct.mfi_command*, %struct.mfi_command** %mfi_commands.i, align 8
  br label %for.body.i

if.else.i:                                        ; preds = %for.body.i
  %129 = trunc i64 %indvars.iv.i to i32
  %130 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %131 = load i32, i32* %23, align 8
  %sub.i752 = add i32 %129, -1
  %call22.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %130, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.78, i64 0, i64 0), i32 %131, i32 %sub.i752) #7
  %cmp2486.i = icmp sgt i32 %129, 0
  %132 = load %struct.mfi_command*, %struct.mfi_command** %mfi_commands.i, align 8
  br i1 %cmp2486.i, label %for.body26.i, label %mfi_alloc_commands.exit

for.body26.i:                                     ; preds = %if.else.i, %for.body26.i
  %133 = phi %struct.mfi_command* [ %138, %for.body26.i ], [ %132, %if.else.i ]
  %j.087.i = phi i32 [ %inc.i, %for.body26.i ], [ 0, %if.else.i ]
  %134 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %133, i64 %indvars.iv.i, i32 7
  %135 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap31.i, align 8
  %impl.i83.i = bitcast %struct.bus_dma_tag* %134 to %struct.bus_dma_impl**
  %136 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i83.i, align 8
  %map_destroy.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %136, i64 0, i32 4
  %137 = load i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_destroy.i.i, align 8
  %call.i84.i = tail call i32 %137(%struct.bus_dma_tag* %134, %struct.bus_dmamap* %135) #7
  %inc.i = add nuw nsw i32 %j.087.i, 1
  %138 = load %struct.mfi_command*, %struct.mfi_command** %mfi_commands.i, align 8
  %exitcond.i = icmp eq i32 %inc.i, %129
  br i1 %exitcond.i, label %mfi_alloc_commands.exit, label %for.body26.i

mfi_alloc_commands.exit:                          ; preds = %for.body26.i, %if.else.i
  %.lcssa.i = phi %struct.mfi_command* [ %132, %if.else.i ], [ %138, %for.body26.i ]
  %139 = bitcast %struct.mfi_command* %.lcssa.i to i8*
  tail call void @free(i8* %139, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  store %struct.mfi_command* null, %struct.mfi_command** %mfi_commands.i, align 8
  br label %cleanup

if.end318:                                        ; preds = %if.then.i, %if.end308
  %140 = load i32, i32* %mfi_flags, align 8
  %and320 = and i32 %140, 256
  %tobool321 = icmp eq i32 %and320, 0
  br i1 %tobool321, label %if.else350, label %if.then322

if.then322:                                       ; preds = %if.end318
  %mfi_disable_intr323 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 84
  %141 = load void (%struct.mfi_softc*)*, void (%struct.mfi_softc*)** %mfi_disable_intr323, align 8
  tail call void %141(%struct.mfi_softc* nonnull %sc) #7
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 701) #7
  %call326 = tail call i32 @mfi_tbolt_init_MFI_queue(%struct.mfi_softc* nonnull %sc) #7
  %cmp327 = icmp eq i32 %call326, 0
  br i1 %cmp327, label %if.end334, label %if.then329

if.then329:                                       ; preds = %if.then322
  %142 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call331 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %142, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28, i64 0, i64 0), i32 %call326) #7
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 705) #7
  br label %cleanup

if.end334:                                        ; preds = %if.then322
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 708) #7
  %call337 = tail call i32 @mfi_tbolt_alloc_cmd(%struct.mfi_softc* nonnull %sc) #7
  %cmp338 = icmp eq i32 %call337, 0
  br i1 %cmp338, label %if.end341, label %cleanup

if.end341:                                        ; preds = %if.end334
  %143 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %mfi_irq = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 54
  %144 = load %struct.resource*, %struct.resource** %mfi_irq, align 8
  %mfi_intr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 55
  %call343 = tail call i32 @bus_setup_intr(%struct.device* %143, %struct.resource* %144, i32 514, i32 (i8*)* null, void (i8*)* nonnull @mfi_intr_tbolt, i8* nonnull %2, i8** nonnull %mfi_intr) #7
  %tobool344 = icmp eq i32 %call343, 0
  br i1 %tobool344, label %if.end348, label %if.then345

if.then345:                                       ; preds = %if.end341
  %145 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call347 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %145, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)) #7
  br label %cleanup

if.end348:                                        ; preds = %if.end341
  %mfi_intr_ptr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 90
  store void (i8*)* @mfi_intr_tbolt, void (i8*)** %mfi_intr_ptr, align 8
  %mfi_enable_intr349 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 83
  %146 = load void (%struct.mfi_softc*)*, void (%struct.mfi_softc*)** %mfi_enable_intr349, align 8
  tail call void %146(%struct.mfi_softc* nonnull %sc) #7
  br label %if.end367

if.else350:                                       ; preds = %if.end318
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 969) #7
  %147 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i.i754 = icmp eq %struct.mfi_command* %147, null
  br i1 %cmp.i.i754, label %mfi_comms_init.exit.thread, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.else350
  %cm_flags.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %147, i64 0, i32 14
  %148 = load i32, i32* %cm_flags.i.i, align 8
  %and.i.i = and i32 %148, 512
  %cmp1.i.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp1.i.i, label %if.then2.i.i, label %do.body4.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %147, i32 %148, i32 512) #11
  unreachable

do.body4.i.i:                                     ; preds = %if.then.i.i
  %tqe_next.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %147, i64 0, i32 0, i32 0
  %149 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i.i, align 8
  %cmp5.i.i = icmp eq %struct.mfi_command* %149, null
  br i1 %cmp5.i.i, label %do.body14.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.body4.i.i
  %tqe_prev.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %149, i64 0, i32 0, i32 1
  %150 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i.i, align 8
  %cmp11.i.i = icmp eq %struct.mfi_command** %150, %tqe_next.i.i
  br i1 %cmp11.i.i, label %do.body14.i.i, label %if.then12.i.i

if.then12.i.i:                                    ; preds = %land.lhs.true.i.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %147) #11
  unreachable

do.body14.i.i:                                    ; preds = %land.lhs.true.i.i, %do.body4.i.i
  %tqe_prev16.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %147, i64 0, i32 0, i32 1
  %151 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i.i, align 8
  %152 = load %struct.mfi_command*, %struct.mfi_command** %151, align 8
  %cmp17.i.i = icmp eq %struct.mfi_command* %152, %147
  br i1 %cmp17.i.i, label %do.end21.i.i, label %if.then18.i.i

if.then18.i.i:                                    ; preds = %do.body14.i.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %147) #11
  unreachable

do.end21.i.i:                                     ; preds = %do.body14.i.i
  %tqe_prev31.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %149, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i.i
  store %struct.mfi_command** %151, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %153 = bitcast %struct.mfi_command* %147 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %struct.mfi_command*** %tqe_prev16.i.i to i64**
  %156 = load i64*, i64** %155, align 8
  store i64 %154, i64* %156, align 8
  %157 = load i32, i32* %cm_flags.i.i, align 8
  %and43.i.i = and i32 %157, -513
  store i32 %and43.i.i, i32* %cm_flags.i.i, align 8
  %158 = load i32, i32* %q_length.i, align 8
  %dec.i.i = add i32 %158, -1
  store i32 %dec.i.i, i32* %q_length.i, align 8
  %cm_frame.i756 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %147, i64 0, i32 3
  %159 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame.i756, align 8
  %context3.i = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %159, i64 0, i32 0, i32 0, i32 8
  %160 = load i32, i32* %context3.i, align 1
  %161 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %159, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %161, i8 0, i64 72, i1 false) #8
  %162 = bitcast %union.mfi_frame** %cm_frame.i756 to %struct.mfi_frame_header**
  %163 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %162, align 8
  %context7.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %163, i64 0, i32 8
  store i32 %160, i32* %context7.i, align 1
  %164 = bitcast %union.mfi_frame** %cm_frame.i756 to %struct.mfi_init_frame**
  %165 = load %struct.mfi_init_frame*, %struct.mfi_init_frame** %164, align 8
  %166 = ptrtoint %struct.mfi_init_frame* %165 to i64
  %add.i757 = add i64 %166, 64
  %167 = inttoptr i64 %add.i757 to %struct.mfi_init_qinfo*
  %168 = inttoptr i64 %add.i757 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %168, i8 0, i64 32, i1 false) #8
  %169 = load i32, i32* %23, align 8
  %add10.i = add i32 %169, 1
  %rq_entries.i = getelementptr inbounds %struct.mfi_init_qinfo, %struct.mfi_init_qinfo* %167, i64 0, i32 1
  store i32 %add10.i, i32* %rq_entries.i, align 1
  %170 = load i64, i64* %mfi_comms_busaddr, align 8
  %171 = trunc i64 %170 to i32
  %conv.i759 = add i32 %171, 8
  %rq_addr_lo.i = getelementptr inbounds %struct.mfi_init_qinfo, %struct.mfi_init_qinfo* %167, i64 0, i32 2
  store i32 %conv.i759, i32* %rq_addr_lo.i, align 1
  %172 = load i64, i64* %mfi_comms_busaddr, align 8
  %conv14.i760 = trunc i64 %172 to i32
  %pi_addr_lo.i = getelementptr inbounds %struct.mfi_init_qinfo, %struct.mfi_init_qinfo* %167, i64 0, i32 4
  store i32 %conv14.i760, i32* %pi_addr_lo.i, align 1
  %173 = load i64, i64* %mfi_comms_busaddr, align 8
  %174 = trunc i64 %173 to i32
  %conv17.i = add i32 %174, 4
  %ci_addr_lo.i = getelementptr inbounds %struct.mfi_init_qinfo, %struct.mfi_init_qinfo* %167, i64 0, i32 6
  store i32 %conv17.i, i32* %ci_addr_lo.i, align 1
  %cmd.i = getelementptr inbounds %struct.mfi_init_frame, %struct.mfi_init_frame* %165, i64 0, i32 0, i32 0
  store i8 0, i8* %cmd.i, align 1
  %data_len.i = getelementptr inbounds %struct.mfi_init_frame, %struct.mfi_init_frame* %165, i64 0, i32 0, i32 12
  store i32 32, i32* %data_len.i, align 1
  %cm_frame_busaddr.i761 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %147, i64 0, i32 4
  %175 = load i64, i64* %cm_frame_busaddr.i761, align 8
  %176 = trunc i64 %175 to i32
  %conv21.i = add i32 %176, 64
  %qinfo_new_addr_lo.i = getelementptr inbounds %struct.mfi_init_frame, %struct.mfi_init_frame* %165, i64 0, i32 1
  store i32 %conv21.i, i32* %qinfo_new_addr_lo.i, align 1
  %cm_data.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %147, i64 0, i32 9
  store i8* null, i8** %cm_data.i, align 8
  store i32 16, i32* %cm_flags.i.i, align 8
  %call22.i762 = tail call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %147) #7
  %cmp23.i = icmp eq i32 %call22.i762, 0
  br i1 %cmp23.i, label %if.end355.critedge, label %if.then25.i

mfi_comms_init.exit.thread:                       ; preds = %if.else350
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 971) #7
  br label %cleanup

if.then25.i:                                      ; preds = %do.end21.i.i
  %177 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call26.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %177, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0)) #7
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %147) #7
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1005) #7
  br label %cleanup

if.end355.critedge:                               ; preds = %do.end21.i.i
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %147) #7
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1005) #7
  %178 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %mfi_irq357 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 54
  %179 = load %struct.resource*, %struct.resource** %mfi_irq357, align 8
  %mfi_intr358 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 55
  %call359 = tail call i32 @bus_setup_intr(%struct.device* %178, %struct.resource* %179, i32 514, i32 (i8*)* null, void (i8*)* nonnull @mfi_intr, i8* nonnull %2, i8** nonnull %mfi_intr358) #7
  %tobool360 = icmp eq i32 %call359, 0
  br i1 %tobool360, label %if.end364, label %if.then361

if.then361:                                       ; preds = %if.end355.critedge
  %180 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call363 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %180, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0)) #7
  br label %cleanup

if.end364:                                        ; preds = %if.end355.critedge
  %mfi_intr_ptr365 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 90
  store void (i8*)* @mfi_intr, void (i8*)** %mfi_intr_ptr365, align 8
  %mfi_enable_intr366 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 83
  %181 = load void (%struct.mfi_softc*)*, void (%struct.mfi_softc*)** %mfi_enable_intr366, align 8
  tail call void %181(%struct.mfi_softc* nonnull %sc) #7
  br label %if.end367

if.end367:                                        ; preds = %if.end364, %if.end348
  %182 = bitcast %struct.mfi_command** %cm.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #8
  store %struct.mfi_command* null, %struct.mfi_command** %cm.i, align 8
  %183 = bitcast %struct.mfi_ctrl_info** %ci.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #8
  store %struct.mfi_ctrl_info* null, %struct.mfi_ctrl_info** %ci.i, align 8
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1018) #7
  %184 = bitcast %struct.mfi_ctrl_info** %ci.i to i8**
  %call.i = call i32 @mfi_dcmd_command(%struct.mfi_softc* nonnull %sc, %struct.mfi_command** nonnull %cm.i, i32 16842752, i8** nonnull %184, i64 2048) #7
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.end.i, label %out.i

if.end.i:                                         ; preds = %if.end367
  %185 = load %struct.mfi_command*, %struct.mfi_command** %cm.i, align 8
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %185, i64 0, i32 14
  store i32 18, i32* %cm_flags.i, align 8
  %call1.i = call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* %185) #7
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %186 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call3.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %186, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82, i64 0, i64 0)) #7
  %187 = load i32, i32* %mfi_max_sge, align 4
  %sub.i = shl i32 %187, 12
  %mul.i = add i32 %sub.i, -4096
  %div.i = sdiv i32 %mul.i, 512
  %mfi_max_io.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 70
  store i32 %div.i, i32* %mfi_max_io.i, align 8
  br label %out.i

if.end4.i:                                        ; preds = %if.end.i
  %188 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %185, i64 0, i32 7
  %189 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i, align 8
  %cmp.i.i = icmp eq %struct.bus_dmamap* %189, null
  br i1 %cmp.i.i, label %bus_dmamap_unload.exit.i, label %bus_dmamap_sync.exit.i

bus_dmamap_sync.exit.i:                           ; preds = %if.end4.i
  %impl.i.i = bitcast %struct.bus_dma_tag* %188 to %struct.bus_dma_impl**
  %190 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.i, align 8
  %map_sync.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %190, i64 0, i32 13
  %191 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i.i, align 8
  call void %191(%struct.bus_dma_tag* %188, %struct.bus_dmamap* nonnull %189, i32 2) #7
  %.pr.i = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i, align 8
  %192 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cmp.i33.i = icmp eq %struct.bus_dmamap* %.pr.i, null
  br i1 %cmp.i33.i, label %bus_dmamap_unload.exit.i, label %if.then.i35.i

if.then.i35.i:                                    ; preds = %bus_dmamap_sync.exit.i
  %impl.i34.i = bitcast %struct.bus_dma_tag* %192 to %struct.bus_dma_impl**
  %193 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i34.i, align 8
  %map_unload.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %193, i64 0, i32 12
  %194 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i.i, align 8
  call void %194(%struct.bus_dma_tag* %192, %struct.bus_dmamap* nonnull %.pr.i) #7
  br label %bus_dmamap_unload.exit.i

bus_dmamap_unload.exit.i:                         ; preds = %if.then.i35.i, %bus_dmamap_sync.exit.i, %if.end4.i
  %195 = load %struct.mfi_ctrl_info*, %struct.mfi_ctrl_info** %ci.i, align 8
  %max.i = getelementptr inbounds %struct.mfi_ctrl_info, %struct.mfi_ctrl_info* %195, i64 0, i32 37, i32 1
  %196 = load i8, i8* %max.i, align 1
  %conv.i = zext i8 %196 to i32
  %max_strips_per_io.i = getelementptr inbounds %struct.mfi_ctrl_info, %struct.mfi_ctrl_info* %195, i64 0, i32 33
  %197 = load i16, i16* %max_strips_per_io.i, align 1
  %conv7.i = zext i16 %197 to i32
  %mul8.i = shl i32 %conv7.i, %conv.i
  %max_request_size.i = getelementptr inbounds %struct.mfi_ctrl_info, %struct.mfi_ctrl_info* %195, i64 0, i32 18
  %198 = load i32, i32* %max_request_size.i, align 1
  %cmp.i36.i = icmp ult i32 %mul8.i, %198
  %cond.i.i = select i1 %cmp.i36.i, i32 %mul8.i, i32 %198
  %mfi_max_io10.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 70
  store i32 %cond.i.i, i32* %mfi_max_io10.i, align 8
  %199 = getelementptr inbounds %struct.mfi_ctrl_info, %struct.mfi_ctrl_info* %195, i64 0, i32 42, i32 27, i32 0
  %bf.load.i = load i32, i32* %199, align 1
  %bf.lshr.i = lshr i32 %bf.load.i, 10
  %200 = trunc i32 %bf.lshr.i to i8
  %conv11.i = and i8 %200, 1
  store i8 %conv11.i, i8* %disableOnlineCtrlReset, align 2
  br label %out.i

out.i:                                            ; preds = %bus_dmamap_unload.exit.i, %if.then2.i, %if.end367
  %201 = load %struct.mfi_ctrl_info*, %struct.mfi_ctrl_info** %ci.i, align 8
  %tobool12.i = icmp eq %struct.mfi_ctrl_info* %201, null
  br i1 %tobool12.i, label %if.end14.i, label %if.then13.i

if.then13.i:                                      ; preds = %out.i
  %202 = bitcast %struct.mfi_ctrl_info* %201 to i8*
  call void @free(i8* %202, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then13.i, %out.i
  %203 = load %struct.mfi_command*, %struct.mfi_command** %cm.i, align 8
  %tobool15.i = icmp eq %struct.mfi_command* %203, null
  br i1 %tobool15.i, label %mfi_get_controller_info.exit, label %if.then16.i

if.then16.i:                                      ; preds = %if.end14.i
  call void @mfi_release_command(%struct.mfi_command* nonnull %203) #7
  br label %mfi_get_controller_info.exit

mfi_get_controller_info.exit:                     ; preds = %if.end14.i, %if.then16.i
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1048) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #8
  br i1 %tobool.i, label %if.end372, label %cleanup

if.end372:                                        ; preds = %mfi_get_controller_info.exit
  store i8 0, i8* %disableOnlineCtrlReset, align 2
  %mfi_ich = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 57
  %ich_func = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 57, i32 1
  store void (i8*)* @mfi_startup, void (i8*)** %ich_func, align 8
  %ich_arg = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 57, i32 2
  %204 = bitcast i8** %ich_arg to %struct.mfi_softc**
  store %struct.mfi_softc* %sc, %struct.mfi_softc** %204, align 8
  %call376 = call i32 @config_intrhook_establish(%struct.intr_config_hook* nonnull %mfi_ich) #7
  %cmp377 = icmp eq i32 %call376, 0
  br i1 %cmp377, label %if.end382, label %if.then379

if.then379:                                       ; preds = %if.end372
  %205 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call381 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %205, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.30, i64 0, i64 0)) #7
  br label %cleanup

if.end382:                                        ; preds = %if.end372
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 744) #7
  %call385 = call i32 @mfi_aen_setup(%struct.mfi_softc* nonnull %sc, i32 0) #9
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 749) #7
  %call392 = call %struct.eventhandler_entry* @eventhandler_register(%struct.eventhandler_list* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0), i8* bitcast (i32 (%struct.mfi_softc*)* @mfi_shutdown to i8*), i8* nonnull %2, i32 10000) #7
  %mfi_eh = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 75
  store %struct.eventhandler_entry* %call392, %struct.eventhandler_entry** %mfi_eh, align 8
  %cmp393 = icmp eq %struct.eventhandler_entry* %call392, null
  br i1 %cmp393, label %if.then395, label %if.end398

if.then395:                                       ; preds = %if.end382
  %206 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call397 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %206, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.32, i64 0, i64 0)) #7
  br label %if.end398

if.end398:                                        ; preds = %if.then395, %if.end382
  %207 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call400 = call i32 @device_get_unit(%struct.device* %207) #7
  %call401 = call %struct.cdev* (%struct.cdevsw*, i32, i32, i32, i32, i8*, ...) @make_dev(%struct.cdevsw* nonnull @mfi_cdevsw, i32 %call400, i32 0, i32 5, i32 416, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), i32 %call400) #7
  %mfi_cdev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 76
  store %struct.cdev* %call401, %struct.cdev** %mfi_cdev, align 8
  %cmp402 = icmp eq i32 %call400, 0
  br i1 %cmp402, label %if.then404, label %if.end407

if.then404:                                       ; preds = %if.end398
  %call406 = call i32 (i32, %struct.cdev**, %struct.cdev*, i8*, ...) @make_dev_alias_p(i32 40, %struct.cdev** nonnull %dev_t, %struct.cdev* %call401, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i64 0, i64 0)) #7
  %.pr = load %struct.cdev*, %struct.cdev** %mfi_cdev, align 8
  br label %if.end407

if.end407:                                        ; preds = %if.then404, %if.end398
  %208 = phi %struct.cdev* [ %.pr, %if.then404 ], [ %call401, %if.end398 ]
  %cmp409 = icmp eq %struct.cdev* %208, null
  br i1 %cmp409, label %if.end413, label %if.then411

if.then411:                                       ; preds = %if.end407
  %si_drv1 = getelementptr inbounds %struct.cdev, %struct.cdev* %208, i64 0, i32 17
  %209 = bitcast i8** %si_drv1 to %struct.mfi_softc**
  store %struct.mfi_softc* %sc, %struct.mfi_softc** %209, align 8
  br label %if.end413

if.end413:                                        ; preds = %if.end407, %if.then411
  %mfi_delete_busy_volumes = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 47
  %210 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call415 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(%struct.device* %210) #7
  %211 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call417 = call %struct.sysctl_oid* @device_get_sysctl_tree(%struct.device* %211) #7
  %oid_children = getelementptr inbounds %struct.sysctl_oid, %struct.sysctl_oid* %call417, i64 0, i32 0
  %212 = bitcast i32* %mfi_delete_busy_volumes to i8*
  %call418 = call %struct.sysctl_oid* @sysctl_add_oid(%struct.sysctl_ctx_list* %call415, %struct.sysctl_oid_list* %oid_children, i32 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0), i32 -1073479678, i8* nonnull %212, i64 0, i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* nonnull @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* null) #7
  %mfi_keep_deleted_volumes = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 48
  %213 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call422 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(%struct.device* %213) #7
  %214 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call424 = call %struct.sysctl_oid* @device_get_sysctl_tree(%struct.device* %214) #7
  %oid_children425 = getelementptr inbounds %struct.sysctl_oid, %struct.sysctl_oid* %call424, i64 0, i32 0
  %215 = bitcast i32* %mfi_keep_deleted_volumes to i8*
  %call426 = call %struct.sysctl_oid* @sysctl_add_oid(%struct.sysctl_ctx_list* %call422, %struct.sysctl_oid_list* %oid_children425, i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0), i32 -1073479678, i8* nonnull %215, i64 0, i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)* nonnull @sysctl_handle_int, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* null) #7
  %216 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call428 = call %struct.device* @device_add_child(%struct.device* %216, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i32 -1) #7
  %217 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call430 = call i32 @bus_generic_attach(%struct.device* %217) #7
  %mfi_watchdog_callout = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 80
  call void @callout_init(%struct.callout* nonnull %mfi_watchdog_callout, i32 1) #7
  %218 = load i64, i64* @tick_sbt, align 8
  %219 = load i32, i32* @mfi_cmd_timeout, align 4
  %220 = load i32, i32* @hz, align 4
  %mul432 = mul i32 %220, %219
  %conv433 = sext i32 %mul432 to i64
  %mul434 = mul i64 %218, %conv433
  %call435 = call i32 @callout_reset_sbt_on(%struct.callout* nonnull %mfi_watchdog_callout, i64 %mul434, i64 0, void (i8*)* nonnull @mfi_timeout, i8* nonnull %2, i32 -1, i32 256) #7
  %221 = load i32, i32* %mfi_flags, align 8
  %and437 = and i32 %221, 256
  %tobool438 = icmp eq i32 %and437, 0
  br i1 %tobool438, label %cleanup, label %if.then439

if.then439:                                       ; preds = %if.end413
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 790) #7
  call void @mfi_tbolt_sync_map_info(%struct.mfi_softc* nonnull %sc) #7
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 792) #7
  br label %cleanup

cleanup:                                          ; preds = %if.then25.i, %mfi_comms_init.exit.thread, %mfi_alloc_commands.exit, %if.then439, %if.end413, %mfi_get_controller_info.exit, %if.end334, %entry, %if.then379, %if.then361, %if.then345, %if.then329, %if.then305, %if.then298, %if.then280, %if.then273, %if.then242, %if.then235, %if.then223, %if.then206, %if.then199, %if.then190, %if.then178, %if.then171, %if.then157, %if.then150, %if.then114, %if.then107, %if.then101
  %retval.0 = phi i32 [ 6, %if.then101 ], [ 12, %if.then107 ], [ 12, %if.then114 ], [ 12, %if.then150 ], [ 12, %if.then157 ], [ 12, %if.then171 ], [ 12, %if.then178 ], [ 0, %if.then190 ], [ 12, %if.then199 ], [ 12, %if.then206 ], [ 12, %if.then223 ], [ 12, %if.then235 ], [ 12, %if.then242 ], [ 12, %if.then273 ], [ 12, %if.then280 ], [ 12, %if.then298 ], [ 12, %if.then305 ], [ %call326, %if.then329 ], [ 22, %if.then345 ], [ 22, %if.then379 ], [ 22, %if.then361 ], [ 22, %entry ], [ 12, %mfi_alloc_commands.exit ], [ %call337, %if.end334 ], [ %call22.i762, %if.then25.i ], [ %call.i, %mfi_get_controller_info.exit ], [ 0, %if.end413 ], [ 0, %if.then439 ], [ 16, %mfi_comms_init.exit.thread ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @_mtx_init(i64*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @sx_init_flags(%struct.sx*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_handle_evt(i8* %context, i32 %pending) #0 {
entry:
  %queue = alloca %struct.anon.110, align 8
  %0 = bitcast %struct.anon.110* %queue to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #8
  %1 = bitcast i8* %context to %struct.mfi_softc*
  %tqh_first = getelementptr inbounds %struct.anon.110, %struct.anon.110* %queue, i64 0, i32 0
  store %struct.mfi_evt_queue_elm* null, %struct.mfi_evt_queue_elm** %tqh_first, align 8
  %tqh_last = getelementptr inbounds %struct.anon.110, %struct.anon.110* %queue, i64 0, i32 1
  store %struct.mfi_evt_queue_elm** %tqh_first, %struct.mfi_evt_queue_elm*** %tqh_last, align 8
  %mtx_lock = getelementptr inbounds i8, i8* %context, i64 1080
  %2 = bitcast i8* %mtx_lock to i64*
  call void @__mtx_lock_flags(i64* nonnull %2, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1659) #7
  %mfi_evt_queue = getelementptr inbounds i8, i8* %context, i64 496
  %tqh_first3 = bitcast i8* %mfi_evt_queue to %struct.mfi_evt_queue_elm**
  %3 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %tqh_first3, align 8
  %cmp = icmp eq %struct.mfi_evt_queue_elm* %3, null
  br i1 %cmp, label %do.end23, label %if.then

if.then:                                          ; preds = %entry
  %4 = load %struct.mfi_evt_queue_elm**, %struct.mfi_evt_queue_elm*** %tqh_last, align 8
  store %struct.mfi_evt_queue_elm* %3, %struct.mfi_evt_queue_elm** %4, align 8
  %5 = bitcast %struct.mfi_evt_queue_elm*** %tqh_last to i64*
  %6 = load i64, i64* %5, align 8
  %7 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %tqh_first3, align 8
  %tqe_prev = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %7, i64 0, i32 0, i32 1
  %8 = bitcast %struct.mfi_evt_queue_elm*** %tqe_prev to i64*
  store i64 %6, i64* %8, align 8
  %tqh_last11 = getelementptr inbounds i8, i8* %context, i64 504
  %9 = bitcast i8* %tqh_last11 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5, align 8
  store %struct.mfi_evt_queue_elm* null, %struct.mfi_evt_queue_elm** %tqh_first3, align 8
  %11 = bitcast i8* %tqh_last11 to i8**
  store i8* %mfi_evt_queue, i8** %11, align 8
  br label %do.end23

do.end23:                                         ; preds = %if.then, %entry
  call void @__mtx_unlock_flags(i64* nonnull %2, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1661) #7
  %12 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %tqh_first, align 8
  %cmp2798 = icmp eq %struct.mfi_evt_queue_elm* %12, null
  br i1 %cmp2798, label %while.end, label %do.body29.lr.ph

do.body29.lr.ph:                                  ; preds = %do.end23
  %mfi_dev.i = bitcast i8* %context to %struct.device**
  %mfi_boot_seq_num.i = getelementptr inbounds i8, i8* %context, i64 632
  %13 = bitcast i8* %mfi_boot_seq_num.i to i32*
  %mfi_detaching.i = getelementptr inbounds i8, i8* %context, i64 728
  %14 = bitcast i8* %mfi_detaching.i to i32*
  %tqh_first.i = getelementptr inbounds i8, i8* %context, i64 880
  %15 = bitcast i8* %tqh_first.i to %struct.mfi_disk**
  %tqh_first49.i = getelementptr inbounds i8, i8* %context, i64 896
  %16 = bitcast i8* %tqh_first49.i to %struct.mfi_system_pd**
  %mfi_cam_rescan_cb.i = getelementptr inbounds i8, i8* %context, i64 984
  %17 = bitcast i8* %mfi_cam_rescan_cb.i to void (%struct.mfi_softc*, i32)**
  %mfi_config_lock.i = getelementptr inbounds i8, i8* %context, i64 1088
  %18 = bitcast i8* %mfi_config_lock.i to %struct.sx*
  br label %do.body29

do.body29:                                        ; preds = %do.body29.lr.ph, %mfi_decode_evt.exit
  %19 = phi %struct.mfi_evt_queue_elm* [ %12, %do.body29.lr.ph ], [ %60, %mfi_decode_evt.exit ]
  %tqe_next = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 0, i32 0
  %20 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %tqe_next, align 8
  %cmp31 = icmp eq %struct.mfi_evt_queue_elm* %20, null
  br i1 %cmp31, label %do.body43, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body29
  %tqe_prev35 = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %20, i64 0, i32 0, i32 1
  %21 = load %struct.mfi_evt_queue_elm**, %struct.mfi_evt_queue_elm*** %tqe_prev35, align 8
  %cmp38 = icmp eq %struct.mfi_evt_queue_elm** %21, %tqe_next
  br i1 %cmp38, label %do.body43, label %if.then39

if.then39:                                        ; preds = %land.lhs.true
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_evt_queue_elm* nonnull %19) #11
  unreachable

do.body43:                                        ; preds = %land.lhs.true, %do.body29
  %tqe_prev45 = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 0, i32 1
  %22 = load %struct.mfi_evt_queue_elm**, %struct.mfi_evt_queue_elm*** %tqe_prev45, align 8
  %23 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %22, align 8
  %cmp46 = icmp eq %struct.mfi_evt_queue_elm* %23, %19
  br i1 %cmp46, label %do.end50, label %if.then47

if.then47:                                        ; preds = %do.body43
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_evt_queue_elm* nonnull %19) #11
  unreachable

do.end50:                                         ; preds = %do.body43
  %tqe_prev60 = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %20, i64 0, i32 0, i32 1
  %tqh_last.sink = select i1 %cmp31, %struct.mfi_evt_queue_elm*** %tqh_last, %struct.mfi_evt_queue_elm*** %tqe_prev60
  store %struct.mfi_evt_queue_elm** %22, %struct.mfi_evt_queue_elm*** %tqh_last.sink, align 8
  %24 = bitcast %struct.mfi_evt_queue_elm* %19 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %struct.mfi_evt_queue_elm*** %tqe_prev45 to i64**
  %27 = load i64*, i64** %26, align 8
  store i64 %25, i64* %27, align 8
  %28 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %seq.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 0
  %29 = load i32, i32* %seq.i, align 1
  %time.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 1
  %30 = load i32, i32* %time.i, align 1
  %cmp.i.i = icmp ugt i32 %30, -16777217
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %do.end50
  %and1.i.i = and i32 %30, 16777215
  %call.i.i = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @format_timestamp.buffer, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.96, i64 0, i64 0), i32 %and1.i.i) #7
  br label %format_timestamp.exit.i

if.else.i.i:                                      ; preds = %do.end50
  %call2.i.i = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @format_timestamp.buffer, i64 0, i64 0), i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i32 %30) #7
  br label %format_timestamp.exit.i

format_timestamp.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %evt_class.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 3
  %members.i = bitcast %union.mfi_evt* %evt_class.i to %struct.anon.56*
  %locale.i = bitcast %union.mfi_evt* %evt_class.i to i16*
  %31 = load i16, i16* %locale.i, align 1
  %conv.i = zext i16 %31 to i32
  %evt_class3.i = getelementptr inbounds %struct.anon.56, %struct.anon.56* %members.i, i64 0, i32 2
  %32 = load i8, i8* %evt_class3.i, align 1
  %conv.i.i = sext i8 %32 to i32
  %switch.tableidx = add nsw i32 %conv.i.i, 2
  %33 = icmp ult i32 %switch.tableidx, 7
  br i1 %33, label %switch.lookup, label %sw.default.i.i

sw.default.i.i:                                   ; preds = %format_timestamp.exit.i
  %call.i142.i = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @format_class.buffer, i64 0, i64 0), i64 6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.105, i64 0, i64 0), i32 %conv.i.i) #7
  br label %format_class.exit.i

switch.lookup:                                    ; preds = %format_timestamp.exit.i
  %34 = sext i32 %switch.tableidx to i64
  %switch.gep = getelementptr inbounds [7 x i8*], [7 x i8*]* @switch.table.mfi_handle_evt, i64 0, i64 %34
  %switch.load = load i8*, i8** %switch.gep, align 8
  br label %format_class.exit.i

format_class.exit.i:                              ; preds = %switch.lookup, %sw.default.i.i
  %retval.0.i.i = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @format_class.buffer, i64 0, i64 0), %sw.default.i.i ], [ %switch.load, %switch.lookup ]
  %arraydecay.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 7, i64 0
  %call5.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %28, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i64 0, i64 0), i32 %29, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @format_timestamp.buffer, i64 0, i64 0), i32 %conv.i, i8* nonnull %retval.0.i.i, i8* nonnull %arraydecay.i) #7
  %35 = load i32, i32* %seq.i, align 1
  %36 = load i32, i32* %13, align 8
  %cmp.i = icmp ult i32 %35, %36
  br i1 %cmp.i, label %mfi_decode_evt.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %format_class.exit.i
  %37 = load i32, i32* %14, align 8
  %tobool.i = icmp eq i32 %37, 0
  br i1 %tobool.i, label %if.end.i, label %mfi_decode_evt.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  %arg_type.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 4
  %38 = load i8, i8* %arg_type.i, align 1
  switch i8 %38, label %mfi_decode_evt.exit [
    i8 0, label %sw.bb.i
    i8 8, label %sw.bb22.i
    i8 10, label %sw.bb42.i
  ]

sw.bb.i:                                          ; preds = %if.end.i
  %code.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 2
  %39 = load i32, i32* %code.i, align 1
  %cmp9.i = icmp eq i32 %39, 338
  br i1 %cmp9.i, label %if.then11.i, label %mfi_decode_evt.exit

if.then11.i:                                      ; preds = %sw.bb.i
  %40 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call13.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.95, i64 0, i64 0)) #7
  %41 = load i32, i32* @mfi_detect_jbod_change, align 4
  %tobool14.i = icmp eq i32 %41, 0
  br i1 %tobool14.i, label %mfi_decode_evt.exit, label %if.then15.i

if.then15.i:                                      ; preds = %if.then11.i
  %call16.i = call i32 @_sx_xlock(%struct.sx* nonnull %18, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1564) #7
  call void @__mtx_lock_flags(i64* nonnull %2, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1565) #7
  call fastcc void @mfi_syspdprobe(%struct.mfi_softc* nonnull %1) #7
  call void @__mtx_unlock_flags(i64* nonnull %2, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1567) #7
  call void @_sx_xunlock(%struct.sx* nonnull %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1568) #7
  br label %mfi_decode_evt.exit

sw.bb22.i:                                        ; preds = %if.end.i
  %args.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 6
  %new_state.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 6, i32 0, i64 1
  %42 = bitcast i64* %new_state.i to i32*
  %43 = load i32, i32* %42, align 1
  %cmp23.i = icmp eq i32 %43, 0
  br i1 %cmp23.i, label %if.then25.i, label %mfi_decode_evt.exit

if.then25.i:                                      ; preds = %sw.bb22.i
  %ld.0145.i = load %struct.mfi_disk*, %struct.mfi_disk** %15, align 8
  %tobool26146.i = icmp eq %struct.mfi_disk* %ld.0145.i, null
  br i1 %tobool26146.i, label %mfi_decode_evt.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.then25.i
  %target_id.i = bitcast %union.anon.57* %args.i to i16*
  %44 = load i16, i16* %target_id.i, align 1
  %conv30.i = zext i16 %44 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %ld.0147.i = phi %struct.mfi_disk* [ %ld.0145.i, %for.body.lr.ph.i ], [ %ld.0.i, %for.inc.i ]
  %ld_id.i = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0147.i, i64 0, i32 2
  %45 = load i32, i32* %ld_id.i, align 8
  %cmp31.i = icmp eq i32 %45, %conv30.i
  br i1 %cmp31.i, label %if.then37.i, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0147.i, i64 0, i32 0, i32 0
  %ld.0.i = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next.i, align 8
  %tobool26.i = icmp eq %struct.mfi_disk* %ld.0.i, null
  br i1 %tobool26.i, label %mfi_decode_evt.exit, label %for.body.i

if.then37.i:                                      ; preds = %for.body.i
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1590) #7
  %46 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %ld_dev.i = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0147.i, i64 0, i32 1
  %47 = load %struct.device*, %struct.device** %ld_dev.i, align 8
  %call39.i = call i32 @device_delete_child(%struct.device* %46, %struct.device* %47) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1592) #7
  br label %mfi_decode_evt.exit

sw.bb42.i:                                        ; preds = %if.end.i
  %code43.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 2
  %48 = load i32, i32* %code43.i, align 1
  %cmp44.i = icmp eq i32 %48, 112
  %49 = load i32, i32* @mfi_detect_jbod_change, align 4
  %tobool47.i = icmp ne i32 %49, 0
  %or.cond.i = and i1 %cmp44.i, %tobool47.i
  br i1 %or.cond.i, label %if.then48.i, label %if.end65.i

if.then48.i:                                      ; preds = %sw.bb42.i
  %syspd.0148.i = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %16, align 8
  %tobool51149.i = icmp eq %struct.mfi_system_pd* %syspd.0148.i, null
  br i1 %tobool51149.i, label %if.end80.i, label %for.body52.lr.ph.i

for.body52.lr.ph.i:                               ; preds = %if.then48.i
  %args53.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 6
  %device_id.i = bitcast %union.anon.57* %args53.i to i16*
  %50 = load i16, i16* %device_id.i, align 1
  %conv54.i = zext i16 %50 to i32
  br label %for.body52.i

for.body52.i:                                     ; preds = %for.inc61.i, %for.body52.lr.ph.i
  %syspd.0150.i = phi %struct.mfi_system_pd* [ %syspd.0148.i, %for.body52.lr.ph.i ], [ %syspd.0.i, %for.inc61.i ]
  %pd_id.i = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0150.i, i64 0, i32 2
  %51 = load i32, i32* %pd_id.i, align 8
  %cmp55.i = icmp eq i32 %51, %conv54.i
  br i1 %cmp55.i, label %if.then57.i, label %for.inc61.i

if.then57.i:                                      ; preds = %for.body52.i
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1607) #7
  %52 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %pd_dev.i = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0150.i, i64 0, i32 1
  %53 = load %struct.device*, %struct.device** %pd_dev.i, align 8
  %call59.i = call i32 @device_delete_child(%struct.device* %52, %struct.device* %53) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1611) #7
  %.pre.i = load i32, i32* %code43.i, align 1
  %.pre153.i = load i32, i32* @mfi_detect_jbod_change, align 4
  br label %if.end65.i

for.inc61.i:                                      ; preds = %for.body52.i
  %tqe_next62.i = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0150.i, i64 0, i32 0, i32 0
  %syspd.0.i = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqe_next62.i, align 8
  %tobool51.i = icmp eq %struct.mfi_system_pd* %syspd.0.i, null
  br i1 %tobool51.i, label %if.end80.i, label %for.body52.i

if.end65.i:                                       ; preds = %if.then57.i, %sw.bb42.i
  %54 = phi i32 [ %.pre153.i, %if.then57.i ], [ %49, %sw.bb42.i ]
  %55 = phi i32 [ %.pre.i, %if.then57.i ], [ %48, %sw.bb42.i ]
  %cmp67.i = icmp eq i32 %55, 91
  %tobool70.i = icmp ne i32 %54, 0
  %or.cond97.i = and i1 %tobool70.i, %cmp67.i
  br i1 %or.cond97.i, label %if.then71.i, label %if.end80.i

if.then71.i:                                      ; preds = %if.end65.i
  %call73.i = call i32 @_sx_xlock(%struct.sx* nonnull %18, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1620) #7
  call void @__mtx_lock_flags(i64* nonnull %2, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1621) #7
  call fastcc void @mfi_syspdprobe(%struct.mfi_softc* nonnull %1) #7
  call void @__mtx_unlock_flags(i64* nonnull %2, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1623) #7
  call void @_sx_xunlock(%struct.sx* nonnull %18, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1624) #7
  br label %if.end80.i

if.end80.i:                                       ; preds = %for.inc61.i, %if.then71.i, %if.end65.i, %if.then48.i
  %56 = load void (%struct.mfi_softc*, i32)*, void (%struct.mfi_softc*, i32)** %17, align 8
  %cmp81.i = icmp eq void (%struct.mfi_softc*, i32)* %56, null
  br i1 %cmp81.i, label %mfi_decode_evt.exit, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end80.i
  %57 = load i32, i32* %code43.i, align 1
  switch i32 %57, label %mfi_decode_evt.exit [
    i32 91, label %if.then90.i
    i32 112, label %if.then90.i
  ]

if.then90.i:                                      ; preds = %land.lhs.true.i, %land.lhs.true.i
  %args92.i = getelementptr inbounds %struct.mfi_evt_queue_elm, %struct.mfi_evt_queue_elm* %19, i64 0, i32 1, i32 6
  %device_id94.i = bitcast %union.anon.57* %args92.i to i16*
  %58 = load i16, i16* %device_id94.i, align 1
  %conv95.i = zext i16 %58 to i32
  call void %56(%struct.mfi_softc* nonnull %1, i32 %conv95.i) #7
  br label %mfi_decode_evt.exit

mfi_decode_evt.exit:                              ; preds = %for.inc.i, %format_class.exit.i, %lor.lhs.false.i, %if.end.i, %sw.bb.i, %if.then11.i, %if.then15.i, %sw.bb22.i, %if.then25.i, %if.then37.i, %if.end80.i, %land.lhs.true.i, %if.then90.i
  %59 = bitcast %struct.mfi_evt_queue_elm* %19 to i8*
  call void @free(i8* %59, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  %60 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %tqh_first, align 8
  %cmp27 = icmp eq %struct.mfi_evt_queue_elm* %60, null
  br i1 %cmp27, label %while.end, label %do.body29

while.end:                                        ; preds = %mfi_decode_evt.exit, %do.end23
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #8
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_handle_map_sync(i8*, i32) #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_enable_intr_xscale(%struct.mfi_softc* nocapture readonly %sc) #0 {
entry:
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %0 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %1 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i = icmp eq i64 %0, 0
  %add.i = add i64 %1, 52
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %conv.i = trunc i64 %add.i to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 1, i32 %conv.i) #8, !srcloc !2
  br label %bus_space_write_4.exit

if.else.i:                                        ; preds = %entry
  %2 = inttoptr i64 %add.i to i32*
  store volatile i32 1, i32* %2, align 4
  br label %bus_space_write_4.exit

bus_space_write_4.exit:                           ; preds = %if.then.i, %if.else.i
  ret void
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_read_fw_status_xscale(%struct.mfi_softc* nocapture readonly %sc) #0 {
entry:
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %0 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %1 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i = icmp eq i64 %0, 0
  %add.i = add i64 %1, 24
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %conv.i = trunc i64 %add.i to i32
  %2 = tail call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv.i) #8, !srcloc !3
  br label %bus_space_read_4.exit

if.end.i:                                         ; preds = %entry
  %3 = inttoptr i64 %add.i to i32*
  %4 = load volatile i32, i32* %3, align 4
  br label %bus_space_read_4.exit

bus_space_read_4.exit:                            ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi i32 [ %2, %if.then.i ], [ %4, %if.end.i ]
  ret i32 %retval.0.i
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_check_clear_intr_xscale(%struct.mfi_softc* nocapture readonly %sc) #0 {
entry:
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %0 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %1 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i = icmp eq i64 %0, 0
  %add.i = add i64 %1, 48
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %conv.i = trunc i64 %add.i to i32
  %2 = tail call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv.i) #8, !srcloc !3
  br label %bus_space_read_4.exit

if.end.i:                                         ; preds = %entry
  %3 = inttoptr i64 %add.i to i32*
  %4 = load volatile i32, i32* %3, align 4
  br label %bus_space_read_4.exit

bus_space_read_4.exit:                            ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi i32 [ %2, %if.then.i ], [ %4, %if.end.i ]
  %and = and i32 %retval.0.i, 2
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %bus_space_read_4.exit
  %5 = load i64, i64* %mfi_btag, align 8
  %6 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i8 = icmp eq i64 %5, 0
  %add.i9 = add i64 %6, 48
  br i1 %cmp.i8, label %if.then.i11, label %if.else.i

if.then.i11:                                      ; preds = %if.end
  %conv.i10 = trunc i64 %add.i9 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %retval.0.i, i32 %conv.i10) #8, !srcloc !2
  br label %cleanup

if.else.i:                                        ; preds = %if.end
  %7 = inttoptr i64 %add.i9 to i32*
  store volatile i32 %retval.0.i, i32* %7, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else.i, %if.then.i11, %bus_space_read_4.exit
  %retval.0 = phi i32 [ 1, %bus_space_read_4.exit ], [ 0, %if.then.i11 ], [ 0, %if.else.i ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_issue_cmd_xscale(%struct.mfi_softc* nocapture readonly %sc, i64 %bus_add, i32 %frame_cnt) #0 {
entry:
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %0 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %1 = load i64, i64* %mfi_bhandle, align 8
  %shr = lshr i64 %bus_add, 3
  %2 = trunc i64 %shr to i32
  %conv1 = or i32 %2, %frame_cnt
  %cmp.i = icmp eq i64 %0, 0
  %add.i = add i64 %1, 64
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %conv.i = trunc i64 %add.i to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv1, i32 %conv.i) #8, !srcloc !2
  br label %bus_space_write_4.exit

if.else.i:                                        ; preds = %entry
  %3 = inttoptr i64 %add.i to i32*
  store volatile i32 %conv1, i32* %3, align 4
  br label %bus_space_write_4.exit

bus_space_write_4.exit:                           ; preds = %if.then.i, %if.else.i
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_tbolt_enable_intr_ppc(%struct.mfi_softc*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_tbolt_disable_intr_ppc(%struct.mfi_softc*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_read_fw_status_ppc(%struct.mfi_softc*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_check_clear_intr_ppc(%struct.mfi_softc*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_tbolt_issue_cmd_ppc(%struct.mfi_softc*, i64, i32) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_adp_reset(%struct.mfi_softc*) #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_enable_intr_ppc(%struct.mfi_softc* nocapture readonly %sc) #0 {
entry:
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %0 = load i32, i32* %mfi_flags, align 8
  %and = and i32 %0, 32
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %1 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %2 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i = icmp eq i64 %1, 0
  %add.i = add i64 %2, 160
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %conv.i = trunc i64 %add.i to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 -1, i32 %conv.i) #8, !srcloc !2
  br label %bus_space_write_4.exit

if.else.i:                                        ; preds = %if.then
  %3 = inttoptr i64 %add.i to i32*
  store volatile i32 -1, i32* %3, align 4
  br label %bus_space_write_4.exit

bus_space_write_4.exit:                           ; preds = %if.then.i, %if.else.i
  %4 = load i64, i64* %mfi_btag, align 8
  %5 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i30 = icmp eq i64 %4, 0
  %add.i31 = add i64 %5, 52
  br i1 %cmp.i30, label %if.then.i33, label %if.else.i34

if.then.i33:                                      ; preds = %bus_space_write_4.exit
  %conv.i32 = trunc i64 %add.i31 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 2147483643, i32 %conv.i32) #8, !srcloc !2
  br label %if.end19

if.else.i34:                                      ; preds = %bus_space_write_4.exit
  %6 = inttoptr i64 %add.i31 to i32*
  store volatile i32 2147483643, i32* %6, align 4
  br label %if.end19

if.else:                                          ; preds = %entry
  %and4 = and i32 %0, 64
  %tobool5 = icmp eq i32 %and4, 0
  br i1 %tobool5, label %if.else11, label %if.then6

if.then6:                                         ; preds = %if.else
  %mfi_btag7 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %7 = load i64, i64* %mfi_btag7, align 8
  %mfi_bhandle8 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %8 = load i64, i64* %mfi_bhandle8, align 8
  %cmp.i36 = icmp eq i64 %7, 0
  %add.i37 = add i64 %8, 160
  br i1 %cmp.i36, label %if.then.i39, label %if.else.i40

if.then.i39:                                      ; preds = %if.then6
  %conv.i38 = trunc i64 %add.i37 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 -1, i32 %conv.i38) #8, !srcloc !2
  br label %bus_space_write_4.exit41

if.else.i40:                                      ; preds = %if.then6
  %9 = inttoptr i64 %add.i37 to i32*
  store volatile i32 -1, i32* %9, align 4
  br label %bus_space_write_4.exit41

bus_space_write_4.exit41:                         ; preds = %if.then.i39, %if.else.i40
  %10 = load i64, i64* %mfi_btag7, align 8
  %11 = load i64, i64* %mfi_bhandle8, align 8
  %cmp.i42 = icmp eq i64 %10, 0
  %add.i43 = add i64 %11, 52
  br i1 %cmp.i42, label %if.then.i45, label %if.else.i46

if.then.i45:                                      ; preds = %bus_space_write_4.exit41
  %conv.i44 = trunc i64 %add.i43 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 -6, i32 %conv.i44) #8, !srcloc !2
  br label %if.end19

if.else.i46:                                      ; preds = %bus_space_write_4.exit41
  %12 = inttoptr i64 %add.i43 to i32*
  store volatile i32 -6, i32* %12, align 4
  br label %if.end19

if.else11:                                        ; preds = %if.else
  %13 = trunc i32 %0 to i8
  %tobool14 = icmp slt i8 %13, 0
  br i1 %tobool14, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.else11
  %mfi_btag16 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %14 = load i64, i64* %mfi_btag16, align 8
  %mfi_bhandle17 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %15 = load i64, i64* %mfi_bhandle17, align 8
  %cmp.i48 = icmp eq i64 %14, 0
  %add.i49 = add i64 %15, 52
  br i1 %cmp.i48, label %if.then.i51, label %if.else.i52

if.then.i51:                                      ; preds = %if.then15
  %conv.i50 = trunc i64 %add.i49 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 -2, i32 %conv.i50) #8, !srcloc !2
  br label %if.end19

if.else.i52:                                      ; preds = %if.then15
  %16 = inttoptr i64 %add.i49 to i32*
  store volatile i32 -2, i32* %16, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.else.i52, %if.then.i51, %if.else.i46, %if.then.i45, %if.else.i34, %if.then.i33, %if.else11
  ret void
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_read_fw_status_ppc(%struct.mfi_softc* nocapture readonly %sc) #0 {
entry:
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %0 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %1 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i = icmp eq i64 %0, 0
  %add.i = add i64 %1, 176
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %conv.i = trunc i64 %add.i to i32
  %2 = tail call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv.i) #8, !srcloc !3
  br label %bus_space_read_4.exit

if.end.i:                                         ; preds = %entry
  %3 = inttoptr i64 %add.i to i32*
  %4 = load volatile i32, i32* %3, align 4
  br label %bus_space_read_4.exit

bus_space_read_4.exit:                            ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi i32 [ %2, %if.then.i ], [ %4, %if.end.i ]
  ret i32 %retval.0.i
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_check_clear_intr_ppc(%struct.mfi_softc* nocapture readonly %sc) #0 {
entry:
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %0 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %1 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i = icmp eq i64 %0, 0
  %add.i = add i64 %1, 48
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  %conv.i = trunc i64 %add.i to i32
  %2 = tail call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv.i) #8, !srcloc !3
  br label %bus_space_read_4.exit

if.end.i:                                         ; preds = %entry
  %3 = inttoptr i64 %add.i to i32*
  %4 = load volatile i32, i32* %3, align 4
  br label %bus_space_read_4.exit

bus_space_read_4.exit:                            ; preds = %if.then.i, %if.end.i
  %retval.0.i = phi i32 [ %2, %if.then.i ], [ %4, %if.end.i ]
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %5 = load i32, i32* %mfi_flags, align 8
  %and = and i32 %5, 32
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %bus_space_read_4.exit
  %tobool2 = icmp slt i32 %retval.0.i, 0
  br i1 %tobool2, label %if.end23, label %cleanup

if.else:                                          ; preds = %bus_space_read_4.exit
  %and5 = and i32 %5, 64
  %tobool6 = icmp eq i32 %and5, 0
  br i1 %tobool6, label %if.else12, label %if.then7

if.then7:                                         ; preds = %if.else
  %and8 = and i32 %retval.0.i, 1
  %tobool9 = icmp eq i32 %and8, 0
  br i1 %tobool9, label %cleanup, label %if.end23

if.else12:                                        ; preds = %if.else
  %6 = trunc i32 %5 to i8
  %tobool15 = icmp slt i8 %6, 0
  %and17 = and i32 %retval.0.i, 1
  %tobool18 = icmp eq i32 %and17, 0
  %or.cond = and i1 %tobool18, %tobool15
  br i1 %or.cond, label %cleanup, label %if.end23

if.end23:                                         ; preds = %if.then7, %if.else12, %if.then
  %7 = trunc i32 %5 to i8
  %tobool26 = icmp slt i8 %7, 0
  %8 = load i64, i64* %mfi_btag, align 8
  %9 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i45 = icmp eq i64 %8, 0
  br i1 %tobool26, label %if.then27, label %if.else30

if.then27:                                        ; preds = %if.end23
  %add.i46 = add i64 %9, 48
  br i1 %cmp.i45, label %if.then.i48, label %if.else.i

if.then.i48:                                      ; preds = %if.then27
  %conv.i47 = trunc i64 %add.i46 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %retval.0.i, i32 %conv.i47) #8, !srcloc !2
  br label %cleanup

if.else.i:                                        ; preds = %if.then27
  %10 = inttoptr i64 %add.i46 to i32*
  store volatile i32 %retval.0.i, i32* %10, align 4
  br label %cleanup

if.else30:                                        ; preds = %if.end23
  %add.i51 = add i64 %9, 160
  br i1 %cmp.i45, label %if.then.i53, label %if.else.i54

if.then.i53:                                      ; preds = %if.else30
  %conv.i52 = trunc i64 %add.i51 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %retval.0.i, i32 %conv.i52) #8, !srcloc !2
  br label %cleanup

if.else.i54:                                      ; preds = %if.else30
  %11 = inttoptr i64 %add.i51 to i32*
  store volatile i32 %retval.0.i, i32* %11, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else.i54, %if.then.i53, %if.else.i, %if.then.i48, %if.else12, %if.then7, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 1, %if.then7 ], [ 1, %if.else12 ], [ 0, %if.then.i48 ], [ 0, %if.else.i ], [ 0, %if.then.i53 ], [ 0, %if.else.i54 ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_issue_cmd_ppc(%struct.mfi_softc* nocapture readonly %sc, i64 %bus_add, i32 %frame_cnt) #0 {
entry:
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %0 = load i32, i32* %mfi_flags, align 8
  %1 = trunc i32 %0 to i8
  %tobool = icmp slt i8 %1, 0
  %mfi_btag = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 18
  %2 = load i64, i64* %mfi_btag, align 8
  %mfi_bhandle = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 17
  %3 = load i64, i64* %mfi_bhandle, align 8
  %shl = shl i32 %frame_cnt, 1
  %4 = trunc i64 %bus_add to i32
  %5 = or i32 %shl, %4
  %conv2 = or i32 %5, 1
  %cmp.i = icmp eq i64 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %add.i = add i64 %3, 192
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then
  %conv.i = trunc i64 %add.i to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv2, i32 %conv.i) #8, !srcloc !2
  br label %bus_space_write_4.exit

if.else.i:                                        ; preds = %if.then
  %6 = inttoptr i64 %add.i to i32*
  store volatile i32 %conv2, i32* %6, align 4
  br label %bus_space_write_4.exit

bus_space_write_4.exit:                           ; preds = %if.then.i, %if.else.i
  %7 = load i64, i64* %mfi_btag, align 8
  %8 = load i64, i64* %mfi_bhandle, align 8
  %cmp.i16 = icmp eq i64 %7, 0
  %add.i17 = add i64 %8, 196
  br i1 %cmp.i16, label %if.then.i19, label %if.else.i20

if.then.i19:                                      ; preds = %bus_space_write_4.exit
  %conv.i18 = trunc i64 %add.i17 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 0, i32 %conv.i18) #8, !srcloc !2
  br label %if.end

if.else.i20:                                      ; preds = %bus_space_write_4.exit
  %9 = inttoptr i64 %add.i17 to i32*
  store volatile i32 0, i32* %9, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %add.i23 = add i64 %3, 64
  br i1 %cmp.i, label %if.then.i25, label %if.else.i26

if.then.i25:                                      ; preds = %if.else
  %conv.i24 = trunc i64 %add.i23 to i32
  tail call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %conv2, i32 %conv.i24) #8, !srcloc !2
  br label %if.end

if.else.i26:                                      ; preds = %if.else
  %10 = inttoptr i64 %add.i23 to i32*
  store volatile i32 %conv2, i32* %10, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.i26, %if.then.i25, %if.else.i20, %if.then.i19
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_dma_tag_create(%struct.bus_dma_tag*, i64, i64, i64, i64, i32 (i8*, i64)*, i8*, i64, i32, i64, i32, void (i8*, i32)*, i8*, %struct.bus_dma_tag**) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #1

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_dmamap_load(%struct.bus_dma_tag*, %struct.bus_dmamap*, i8*, i64, void (i8*, %struct.bus_dma_segment*, i32, i32)*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat norecurse noredzone nounwind ssp
define internal void @mfi_addr_cb(i8* nocapture %arg, %struct.bus_dma_segment* nocapture readonly %segs, i32 %nsegs, i32 %error) #3 {
entry:
  %0 = bitcast i8* %arg to i64*
  %ds_addr = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 0, i32 0
  %1 = load i64, i64* %ds_addr, align 8
  store i64 %1, i64* %0, align 8
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_tbolt_init_globals(%struct.mfi_softc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_get_memory_requirement(%struct.mfi_softc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_init_desc_pool(%struct.mfi_softc*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @busdma_lock_mutex(i8*, i32) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @__mtx_lock_flags(i64*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_init_MFI_queue(%struct.mfi_softc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @__mtx_unlock_flags(i64*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_alloc_cmd(%struct.mfi_softc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_setup_intr(%struct.device*, %struct.resource*, i32, i32 (i8*)*, void (i8*)*, i8*, i8**) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_intr_tbolt(i8*) #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_intr(i8* %arg) #0 {
entry:
  %0 = bitcast i8* %arg to %struct.mfi_softc*
  %mfi_check_clear_intr = getelementptr inbounds i8, i8* %arg, i64 1144
  %mfi_check_clear_intr1 = bitcast i8* %mfi_check_clear_intr to i32 (%struct.mfi_softc*)**
  %1 = load i32 (%struct.mfi_softc*)*, i32 (%struct.mfi_softc*)** %mfi_check_clear_intr1, align 8
  %call = tail call i32 %1(%struct.mfi_softc* %0) #7
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %restart.preheader, label %cleanup

restart.preheader:                                ; preds = %entry
  %mfi_comms = getelementptr inbounds i8, i8* %arg, i64 224
  %2 = bitcast i8* %mfi_comms to %struct.mfi_hwcomms**
  %mtx_lock = getelementptr inbounds i8, i8* %arg, i64 1080
  %3 = bitcast i8* %mtx_lock to i64*
  %mfi_flags = getelementptr inbounds i8, i8* %arg, i64 8
  %4 = bitcast i8* %mfi_flags to i32*
  %mfi_read_fw_status = getelementptr inbounds i8, i8* %arg, i64 1136
  %mfi_read_fw_status17 = bitcast i8* %mfi_read_fw_status to i32 (%struct.mfi_softc*)**
  %mfi_max_fw_cmds = getelementptr inbounds i8, i8* %arg, i64 856
  %5 = bitcast i8* %mfi_max_fw_cmds to i32*
  %mfi_commands = getelementptr inbounds i8, i8* %arg, i64 848
  %6 = bitcast i8* %mfi_commands to %struct.mfi_command**
  %.pre = load %struct.mfi_hwcomms*, %struct.mfi_hwcomms** %2, align 8
  %hw_pi.phi.trans.insert = getelementptr inbounds %struct.mfi_hwcomms, %struct.mfi_hwcomms* %.pre, i64 0, i32 0
  %.pre76 = load i32, i32* %hw_pi.phi.trans.insert, align 4
  br label %restart

restart:                                          ; preds = %restart.preheader, %while.end
  %7 = phi i32 [ %.pre76, %restart.preheader ], [ %33, %while.end ]
  %8 = phi %struct.mfi_hwcomms* [ %.pre, %restart.preheader ], [ %32, %while.end ]
  %hw_ci = getelementptr inbounds %struct.mfi_hwcomms, %struct.mfi_hwcomms* %8, i64 0, i32 1
  %9 = load i32, i32* %hw_ci, align 4
  tail call void @__mtx_lock_flags(i64* nonnull %3, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1294) #7
  %cmp67 = icmp eq i32 %9, %7
  %10 = load %struct.mfi_hwcomms*, %struct.mfi_hwcomms** %2, align 8
  br i1 %cmp67, label %while.end, label %while.body.preheader

while.body.preheader:                             ; preds = %restart
  %.pre77 = load i32, i32* %5, align 8
  br label %while.body

while.body:                                       ; preds = %while.body.preheader, %if.end8
  %11 = phi %struct.mfi_hwcomms* [ %28, %if.end8 ], [ %10, %while.body.preheader ]
  %12 = phi i32 [ %29, %if.end8 ], [ %.pre77, %while.body.preheader ]
  %ci.068 = phi i32 [ %spec.store.select, %if.end8 ], [ %9, %while.body.preheader ]
  %idxprom = zext i32 %ci.068 to i64
  %arrayidx = getelementptr %struct.mfi_hwcomms, %struct.mfi_hwcomms* %11, i64 0, i32 2, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %cmp4 = icmp ult i32 %13, %12
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %while.body
  %14 = load %struct.mfi_command*, %struct.mfi_command** %6, align 8
  %idxprom6 = zext i32 %13 to i64
  %arrayidx7 = getelementptr %struct.mfi_command, %struct.mfi_command* %14, i64 %idxprom6
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %14, i64 %idxprom6, i32 14
  %15 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %15, 2048
  %cmp.i = icmp eq i32 %and.i, 0
  br i1 %cmp.i, label %if.then.i, label %do.body2.i

if.then.i:                                        ; preds = %if.then5
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %arrayidx7, i32 %15, i32 2048) #11
  unreachable

do.body2.i:                                       ; preds = %if.then5
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %arrayidx7, i64 0, i32 0, i32 0
  %16 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp3.i = icmp eq %struct.mfi_command* %16, null
  br i1 %cmp3.i, label %do.body12.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body2.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %16, i64 0, i32 0, i32 1
  %17 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp9.i = icmp eq %struct.mfi_command** %17, %tqe_next.i
  br i1 %cmp9.i, label %do.body12.i, label %if.then10.i

if.then10.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %arrayidx7) #11
  unreachable

do.body12.i:                                      ; preds = %land.lhs.true.i, %do.body2.i
  %tqe_prev14.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %14, i64 %idxprom6, i32 0, i32 1
  %18 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev14.i, align 8
  %19 = load %struct.mfi_command*, %struct.mfi_command** %18, align 8
  %cmp15.i = icmp eq %struct.mfi_command* %19, %arrayidx7
  br i1 %cmp15.i, label %do.end18.i, label %if.then16.i

if.then16.i:                                      ; preds = %do.body12.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %arrayidx7) #11
  unreachable

do.end18.i:                                       ; preds = %do.body12.i
  br i1 %cmp3.i, label %if.else.i, label %if.then22.i

if.then22.i:                                      ; preds = %do.end18.i
  %tqe_prev28.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %16, i64 0, i32 0, i32 1
  store %struct.mfi_command** %18, %struct.mfi_command*** %tqe_prev28.i, align 8
  %.pre.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %14, i64 %idxprom6, i32 2
  br label %mfi_remove_busy.exit

if.else.i:                                        ; preds = %do.end18.i
  %cm_sc.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %14, i64 %idxprom6, i32 2
  %20 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %20, i64 0, i32 13, i32 1
  store %struct.mfi_command** %18, %struct.mfi_command*** %tqh_last.i, align 8
  br label %mfi_remove_busy.exit

mfi_remove_busy.exit:                             ; preds = %if.then22.i, %if.else.i
  %cm_sc39.pre-phi.i = phi %struct.mfi_softc** [ %cm_sc.i, %if.else.i ], [ %.pre.i, %if.then22.i ]
  %21 = bitcast %struct.mfi_command* %arrayidx7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %struct.mfi_command*** %tqe_prev14.i to i64**
  %24 = load i64*, i64** %23, align 8
  store i64 %22, i64* %24, align 8
  %25 = load i32, i32* %cm_flags.i, align 8
  %and38.i = and i32 %25, -2049
  store i32 %and38.i, i32* %cm_flags.i, align 8
  %26 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc39.pre-phi.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %26, i64 0, i32 15, i64 3, i32 0
  %27 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %27, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %cm_error = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %14, i64 %idxprom6, i32 19
  store i32 0, i32* %cm_error, align 4
  tail call void @mfi_complete(%struct.mfi_softc* nonnull %0, %struct.mfi_command* nonnull %arrayidx7) #9
  %.pre78 = load i32, i32* %5, align 8
  %.pre79 = load %struct.mfi_hwcomms*, %struct.mfi_hwcomms** %2, align 8
  br label %if.end8

if.end8:                                          ; preds = %mfi_remove_busy.exit, %while.body
  %28 = phi %struct.mfi_hwcomms* [ %.pre79, %mfi_remove_busy.exit ], [ %11, %while.body ]
  %29 = phi i32 [ %.pre78, %mfi_remove_busy.exit ], [ %12, %while.body ]
  %inc = add i32 %ci.068, 1
  %cmp10 = icmp eq i32 %ci.068, %29
  %spec.store.select = select i1 %cmp10, i32 0, i32 %inc
  %cmp = icmp eq i32 %spec.store.select, %7
  br i1 %cmp, label %while.end, label %while.body

while.end:                                        ; preds = %if.end8, %restart
  %.lcssa = phi %struct.mfi_hwcomms* [ %10, %restart ], [ %28, %if.end8 ]
  %hw_ci14 = getelementptr inbounds %struct.mfi_hwcomms, %struct.mfi_hwcomms* %.lcssa, i64 0, i32 1
  store i32 %7, i32* %hw_ci14, align 4
  %30 = load i32, i32* %4, align 8
  %and = and i32 %30, -3
  store i32 %and, i32* %4, align 8
  tail call void @mfi_startio(%struct.mfi_softc* nonnull %0) #9
  tail call void @__mtx_unlock_flags(i64* nonnull %3, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1312) #7
  %31 = load i32 (%struct.mfi_softc*)*, i32 (%struct.mfi_softc*)** %mfi_read_fw_status17, align 8
  %call18 = tail call i32 %31(%struct.mfi_softc* nonnull %0) #7
  %32 = load %struct.mfi_hwcomms*, %struct.mfi_hwcomms** %2, align 8
  %hw_pi20 = getelementptr inbounds %struct.mfi_hwcomms, %struct.mfi_hwcomms* %32, i64 0, i32 0
  %33 = load i32, i32* %hw_pi20, align 4
  %cmp21 = icmp eq i32 %7, %33
  br i1 %cmp21, label %cleanup, label %restart

cleanup:                                          ; preds = %while.end, %entry
  ret void
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_startup(i8* %arg) #0 {
entry:
  %0 = bitcast i8* %arg to %struct.mfi_softc*
  %mfi_enable_intr = getelementptr inbounds i8, i8* %arg, i64 1120
  %1 = bitcast i8* %mfi_enable_intr to void (%struct.mfi_softc*)**
  %2 = load void (%struct.mfi_softc*)*, void (%struct.mfi_softc*)** %1, align 8
  tail call void %2(%struct.mfi_softc* %0) #7
  %mfi_config_lock = getelementptr inbounds i8, i8* %arg, i64 1088
  %3 = bitcast i8* %mfi_config_lock to %struct.sx*
  %call = tail call i32 @_sx_xlock(%struct.sx* nonnull %3, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1268) #7
  %mtx_lock = getelementptr inbounds i8, i8* %arg, i64 1080
  %4 = bitcast i8* %mtx_lock to i64*
  tail call void @__mtx_lock_flags(i64* nonnull %4, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1269) #7
  tail call fastcc void @mfi_ldprobe(%struct.mfi_softc* %0) #9
  %mfi_flags = getelementptr inbounds i8, i8* %arg, i64 8
  %5 = bitcast i8* %mfi_flags to i32*
  %6 = load i32, i32* %5, align 8
  %7 = trunc i32 %6 to i8
  %tobool = icmp slt i8 %7, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call fastcc void @mfi_syspdprobe(%struct.mfi_softc* %0) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @__mtx_unlock_flags(i64* nonnull %4, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1273) #7
  tail call void @_sx_xunlock(%struct.sx* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1274) #7
  %mfi_ich = getelementptr inbounds i8, i8* %arg, i64 792
  %8 = bitcast i8* %mfi_ich to %struct.intr_config_hook*
  tail call void @config_intrhook_disestablish(%struct.intr_config_hook* nonnull %8) #7
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @config_intrhook_establish(%struct.intr_config_hook*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_aen_setup(%struct.mfi_softc* %sc, i32 %seq_start) local_unnamed_addr #0 {
entry:
  %cm.i = alloca %struct.mfi_command*, align 8
  %log_state = alloca %struct.mfi_evt_log_state*, align 8
  %0 = bitcast %struct.mfi_evt_log_state** %log_state to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  store %struct.mfi_evt_log_state* null, %struct.mfi_evt_log_state** %log_state, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1089) #7
  %1 = load i32, i32* @mfi_event_locale, align 4
  %2 = load i32, i32* @mfi_event_class, align 4
  %cmp = icmp eq i32 %seq_start, 0
  br i1 %cmp, label %if.then, label %entry.if.end14_crit_edge

entry.if.end14_crit_edge:                         ; preds = %entry
  %.pre99 = bitcast %struct.mfi_evt_log_state** %log_state to i8**
  br label %if.end14

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.mfi_command** %cm.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #8
  store %struct.mfi_command* null, %struct.mfi_command** %cm.i, align 8
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1058) #7
  %4 = bitcast %struct.mfi_evt_log_state** %log_state to i8**
  %call.i = call i32 @mfi_dcmd_command(%struct.mfi_softc* %sc, %struct.mfi_command** nonnull %cm.i, i32 17039616, i8** nonnull %4, i64 20) #7
  %tobool.i = icmp eq i32 %call.i, 0
  %5 = load %struct.mfi_command*, %struct.mfi_command** %cm.i, align 8
  br i1 %tobool.i, label %if.end.i, label %out.i

if.end.i:                                         ; preds = %if.then
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 14
  store i32 18, i32* %cm_flags.i, align 8
  %call1.i = call i32 @mfi_mapcmd(%struct.mfi_softc* %sc, %struct.mfi_command* %5) #7
  %cmp.i = icmp eq i32 %call1.i, 0
  br i1 %cmp.i, label %if.end4.i, label %out.i.thread

out.i.thread:                                     ; preds = %if.end.i
  %mfi_dev.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %6 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call3.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0)) #7
  br label %mfi_get_log_state.exit

if.end4.i:                                        ; preds = %if.end.i
  %mfi_buffer_dmat.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %7 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat.i, align 8
  %cm_dmamap.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 7
  %8 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i, align 8
  %cmp.i.i = icmp eq %struct.bus_dmamap* %8, null
  br i1 %cmp.i.i, label %mfi_get_log_state.exit, label %bus_dmamap_sync.exit.i

bus_dmamap_sync.exit.i:                           ; preds = %if.end4.i
  %impl.i.i = bitcast %struct.bus_dma_tag* %7 to %struct.bus_dma_impl**
  %9 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.i, align 8
  %map_sync.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %9, i64 0, i32 13
  %10 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i.i, align 8
  call void %10(%struct.bus_dma_tag* %7, %struct.bus_dmamap* nonnull %8, i32 2) #7
  %.pr.i = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i, align 8
  %11 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat.i, align 8
  %cmp.i16.i = icmp eq %struct.bus_dmamap* %.pr.i, null
  br i1 %cmp.i16.i, label %mfi_get_log_state.exit, label %if.then.i18.i

if.then.i18.i:                                    ; preds = %bus_dmamap_sync.exit.i
  %impl.i17.i = bitcast %struct.bus_dma_tag* %11 to %struct.bus_dma_impl**
  %12 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i17.i, align 8
  %map_unload.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %12, i64 0, i32 12
  %13 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i.i, align 8
  call void %13(%struct.bus_dma_tag* %11, %struct.bus_dmamap* nonnull %.pr.i) #7
  br label %mfi_get_log_state.exit

out.i:                                            ; preds = %if.then
  %tobool7.i = icmp eq %struct.mfi_command* %5, null
  br i1 %tobool7.i, label %mfi_get_log_state.exit.thread, label %mfi_get_log_state.exit

mfi_get_log_state.exit.thread:                    ; preds = %out.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  br label %out

mfi_get_log_state.exit:                           ; preds = %if.end4.i, %bus_dmamap_sync.exit.i, %if.then.i18.i, %out.i, %out.i.thread
  %error.021.i = phi i32 [ %call.i, %out.i ], [ 0, %bus_dmamap_sync.exit.i ], [ 0, %if.then.i18.i ], [ 0, %if.end4.i ], [ %call1.i, %out.i.thread ]
  call void @mfi_release_command(%struct.mfi_command* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #8
  %cmp5 = icmp eq i32 %error.021.i, 0
  br i1 %cmp5, label %if.end, label %out

if.end:                                           ; preds = %mfi_get_log_state.exit
  %14 = load %struct.mfi_evt_log_state*, %struct.mfi_evt_log_state** %log_state, align 8
  %boot_seq_num = getelementptr inbounds %struct.mfi_evt_log_state, %struct.mfi_evt_log_state* %14, i64 0, i32 4
  %15 = load i32, i32* %boot_seq_num, align 1
  %mfi_boot_seq_num = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 45
  store i32 %15, i32* %mfi_boot_seq_num, align 8
  %shutdown_seq_num = getelementptr inbounds %struct.mfi_evt_log_state, %struct.mfi_evt_log_state* %14, i64 0, i32 3
  %16 = load i32, i32* %shutdown_seq_num, align 1
  %newest_seq_num = getelementptr inbounds %struct.mfi_evt_log_state, %struct.mfi_evt_log_state* %14, i64 0, i32 0
  %17 = load i32, i32* %newest_seq_num, align 1
  call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1781) #7
  %18 = load i32, i32* @mfi_event_locale, align 4
  %19 = load i32, i32* @mfi_event_class, align 4
  %call.i25 = call noalias i8* @malloc(i64 3848, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 257) #10
  %cmp.i26 = icmp eq i8* %call.i25, null
  br i1 %cmp.i26, label %out, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end
  %tqh_first.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %20 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i.i, align 8
  %cmp.i171.i = icmp eq %struct.mfi_command* %20, null
  br i1 %cmp.i171.i, label %if.then9.i, label %if.then.i.lr.ph.i

if.then.i.lr.ph.i:                                ; preds = %for.cond.preheader.i
  %tqh_last.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  %q_length.i.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %class_locale.sroa.5.0.insert.shift.i = shl i32 %19, 24
  %class_locale.sroa.0.0.insert.ext.i = and i32 %18, 65535
  %class_locale.sroa.0.0.insert.insert.i = or i32 %class_locale.sroa.5.0.insert.shift.i, %class_locale.sroa.0.0.insert.ext.i
  %mfi_buffer_dmat.i27 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %count.i = bitcast i8* %call.i25 to i32*
  %event67.i = getelementptr inbounds i8, i8* %call.i25, i64 8
  %21 = bitcast i8* %event67.i to [1 x %struct.mfi_evt_detail]*
  %cmp51.i = icmp sle i32 %16, %17
  %tqh_last.i141.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 34, i32 1
  %22 = bitcast %struct.mfi_evt_queue_elm*** %tqh_last.i141.i to i8**
  %mfi_evt_task.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 35
  %arrayidx46.i66 = bitcast i8* %event67.i to %struct.mfi_evt_detail*
  %seq47.i67 = bitcast i8* %event67.i to i32*
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %for.end.i, %if.then.i.lr.ph.i
  %23 = phi %struct.mfi_command* [ %20, %if.then.i.lr.ph.i ], [ %63, %for.end.i ]
  %seq.0172.i = phi i32 [ %16, %if.then.i.lr.ph.i ], [ %add.i, %for.end.i ]
  %cm_flags.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 14
  %24 = load i32, i32* %cm_flags.i.i, align 8
  %and.i.i = and i32 %24, 512
  %cmp1.i.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp1.i.i, label %if.then2.i.i, label %do.body4.i.i

if.then2.i.i:                                     ; preds = %if.then.i.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %23, i32 %24, i32 512) #11
  unreachable

do.body4.i.i:                                     ; preds = %if.then.i.i
  %tqe_next.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 0, i32 0
  %25 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i.i, align 8
  %cmp5.i.i = icmp eq %struct.mfi_command* %25, null
  br i1 %cmp5.i.i, label %do.body14.i.i, label %land.lhs.true.i.i

land.lhs.true.i.i:                                ; preds = %do.body4.i.i
  %tqe_prev.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %25, i64 0, i32 0, i32 1
  %26 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i.i, align 8
  %cmp11.i.i = icmp eq %struct.mfi_command** %26, %tqe_next.i.i
  br i1 %cmp11.i.i, label %do.body14.i.i, label %if.then12.i.i

if.then12.i.i:                                    ; preds = %land.lhs.true.i.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %23) #11
  unreachable

do.body14.i.i:                                    ; preds = %land.lhs.true.i.i, %do.body4.i.i
  %tqe_prev16.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 0, i32 1
  %27 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i.i, align 8
  %28 = load %struct.mfi_command*, %struct.mfi_command** %27, align 8
  %cmp17.i.i = icmp eq %struct.mfi_command* %28, %23
  br i1 %cmp17.i.i, label %do.end21.i.i, label %if.then18.i.i

if.then18.i.i:                                    ; preds = %do.body14.i.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %23) #11
  unreachable

do.end21.i.i:                                     ; preds = %do.body14.i.i
  %tqe_prev31.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %25, i64 0, i32 0, i32 1
  %tqh_last.i.i.sink = select i1 %cmp5.i.i, %struct.mfi_command*** %tqh_last.i.i, %struct.mfi_command*** %tqe_prev31.i.i
  store %struct.mfi_command** %27, %struct.mfi_command*** %tqh_last.i.i.sink, align 8
  %29 = bitcast %struct.mfi_command* %23 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %struct.mfi_command*** %tqe_prev16.i.i to i64**
  %32 = load i64*, i64** %31, align 8
  store i64 %30, i64* %32, align 8
  %33 = load i32, i32* %cm_flags.i.i, align 8
  %and43.i.i = and i32 %33, -513
  store i32 %and43.i.i, i32* %cm_flags.i.i, align 8
  %34 = load i32, i32* %q_length.i.i, align 8
  %dec.i.i = add i32 %34, -1
  store i32 %dec.i.i, i32* %q_length.i.i, align 8
  %cm_frame.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 3
  %35 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_dcmd_frame**
  %36 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %35, align 8
  %mbox.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 2
  %37 = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 2, i64 8
  %38 = bitcast i8* %37 to i32*
  store i32 0, i32* %38, align 1
  %cmd.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 0, i32 0
  store i8 5, i8* %cmd.i, align 1
  %timeout.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 0, i32 11
  store i16 0, i16* %timeout.i, align 1
  %data_len.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 0, i32 12
  store i32 3848, i32* %data_len.i, align 1
  %opcode.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 1
  store i32 17040128, i32* %opcode.i, align 1
  %39 = bitcast [12 x i8]* %mbox.i to i32*
  store i32 %seq.0172.i, i32* %39, align 1
  %arrayidx16.i = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 2, i64 4
  %40 = bitcast i8* %arrayidx16.i to i32*
  store i32 %class_locale.sroa.0.0.insert.insert.i, i32* %40, align 1
  %sgl.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 3
  %cm_sg.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 8
  store %union.mfi_sgl* %sgl.i, %union.mfi_sgl** %cm_sg.i, align 8
  %cm_total_frame_size.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 12
  store i32 40, i32* %cm_total_frame_size.i, align 8
  store i32 18, i32* %cm_flags.i.i, align 8
  %cm_data.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 9
  store i8* %call.i25, i8** %cm_data.i, align 8
  %cm_len.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 10
  store i32 3848, i32* %cm_len.i, align 8
  %call17.i = call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %23) #7
  %cmp18.i = icmp eq i32 %call17.i, 0
  br i1 %cmp18.i, label %if.end22.i, label %if.then20.i

if.then9.i:                                       ; preds = %for.end.i, %for.cond.preheader.i
  call void @free(i8* nonnull %call.i25, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %out

if.then20.i:                                      ; preds = %do.end21.i.i
  %mfi_dev.i28 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %41 = load %struct.device*, %struct.device** %mfi_dev.i28, align 8
  %call21.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %41, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.106, i64 0, i64 0)) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %23) #7
  br label %mfi_parse_entries.exit.thread41

if.end22.i:                                       ; preds = %do.end21.i.i
  %42 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat.i27, align 8
  %cm_dmamap.i29 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 7
  %43 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i29, align 8
  %cmp.i136.i = icmp eq %struct.bus_dmamap* %43, null
  br i1 %cmp.i136.i, label %bus_dmamap_unload.exit.i, label %bus_dmamap_sync.exit.i33

bus_dmamap_sync.exit.i33:                         ; preds = %if.end22.i
  %impl.i.i30 = bitcast %struct.bus_dma_tag* %42 to %struct.bus_dma_impl**
  %44 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.i30, align 8
  %map_sync.i.i31 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %44, i64 0, i32 13
  %45 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i.i31, align 8
  call void %45(%struct.bus_dma_tag* %42, %struct.bus_dmamap* nonnull %43, i32 2) #7
  %.pr.i32 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i29, align 8
  %46 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat.i27, align 8
  %cmp.i138.i = icmp eq %struct.bus_dmamap* %.pr.i32, null
  br i1 %cmp.i138.i, label %bus_dmamap_unload.exit.i, label %if.then.i140.i

if.then.i140.i:                                   ; preds = %bus_dmamap_sync.exit.i33
  %impl.i139.i = bitcast %struct.bus_dma_tag* %46 to %struct.bus_dma_impl**
  %47 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i139.i, align 8
  %map_unload.i.i34 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %47, i64 0, i32 12
  %48 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i.i34, align 8
  call void %48(%struct.bus_dma_tag* %46, %struct.bus_dmamap* nonnull %.pr.i32) #7
  br label %bus_dmamap_unload.exit.i

bus_dmamap_unload.exit.i:                         ; preds = %if.then.i140.i, %bus_dmamap_sync.exit.i33, %if.end22.i
  %cmd_status.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %36, i64 0, i32 0, i32 2
  %49 = load i8, i8* %cmd_status.i, align 1
  switch i8 %49, label %if.then36.i [
    i8 35, label %if.end12
    i8 0, label %if.end42.i
  ]

if.then36.i:                                      ; preds = %bus_dmamap_unload.exit.i
  %conv26.i = zext i8 %49 to i32
  %mfi_dev37.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %50 = load %struct.device*, %struct.device** %mfi_dev37.i, align 8
  %call41.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %50, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0), i32 %conv26.i) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %23) #7
  br label %mfi_parse_entries.exit.thread41

if.end42.i:                                       ; preds = %bus_dmamap_unload.exit.i
  call void @mfi_release_command(%struct.mfi_command* nonnull %23) #7
  %51 = load i32, i32* %count.i, align 1
  %cmp44168.i = icmp eq i32 %51, 0
  br i1 %cmp44168.i, label %for.end.i, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %if.end42.i
  %52 = load i32, i32* %seq47.i67, align 1
  %cmp48.i68 = icmp uge i32 %52, %17
  %cmp58.i69 = icmp ult i32 %52, %16
  %or.cond.i70 = or i1 %cmp51.i, %cmp58.i69
  %or.cond173.i71 = and i1 %cmp48.i68, %or.cond.i70
  br i1 %or.cond173.i71, label %for.end.i, label %if.end63.i

for.body.i:                                       ; preds = %mfi_queue_evt.exit.i
  %idxprom.i = sext i32 %inc.i to i64
  %arrayidx46.i = getelementptr [1 x %struct.mfi_evt_detail], [1 x %struct.mfi_evt_detail]* %21, i64 0, i64 %idxprom.i
  %seq47.i = getelementptr inbounds %struct.mfi_evt_detail, %struct.mfi_evt_detail* %arrayidx46.i, i64 0, i32 0
  %53 = load i32, i32* %seq47.i, align 1
  %cmp48.i = icmp uge i32 %53, %17
  %cmp58.i = icmp ult i32 %53, %16
  %or.cond.i = or i1 %cmp51.i, %cmp58.i
  %or.cond173.i = and i1 %cmp48.i, %or.cond.i
  br i1 %or.cond173.i, label %for.end.i, label %if.end63.i

if.end63.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %arrayidx46.i73 = phi %struct.mfi_evt_detail* [ %arrayidx46.i, %for.body.i ], [ %arrayidx46.i66, %for.body.i.preheader ]
  %i.0169.i72 = phi i32 [ %inc.i, %for.body.i ], [ 0, %for.body.i.preheader ]
  call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1641) #7
  %call.i.i = call noalias i8* @malloc(i64 272, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 1) #10
  %cond.i.i = icmp eq i8* %call.i.i, null
  br i1 %cond.i.i, label %mfi_queue_evt.exit.i, label %if.then.i142.i, !prof !4

if.then.i142.i:                                   ; preds = %if.end63.i
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %call.i.i, i8 0, i64 16, i1 false) #8
  %detail6.i.i = getelementptr inbounds i8, i8* %call.i.i, i64 16
  %54 = bitcast %struct.mfi_evt_detail* %arrayidx46.i73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %detail6.i.i, i8* align 1 %54, i64 256, i1 false) #8
  %55 = load %struct.mfi_evt_queue_elm**, %struct.mfi_evt_queue_elm*** %tqh_last.i141.i, align 8
  %56 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %55, align 8
  %cmp8.i.i = icmp eq %struct.mfi_evt_queue_elm* %56, null
  br i1 %cmp8.i.i, label %do.end.i.i, label %if.then10.i.i

if.then10.i.i:                                    ; preds = %if.then.i142.i
  %mfi_evt_queue.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 34
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.54* nonnull %mfi_evt_queue.i.i) #11
  unreachable

do.end.i.i:                                       ; preds = %if.then.i142.i
  %57 = ptrtoint %struct.mfi_evt_queue_elm** %55 to i64
  %tqe_next.i143.i = bitcast i8* %call.i.i to %struct.mfi_evt_queue_elm**
  store %struct.mfi_evt_queue_elm* null, %struct.mfi_evt_queue_elm** %tqe_next.i143.i, align 8
  %tqe_prev.i144.i = getelementptr inbounds i8, i8* %call.i.i, i64 8
  %58 = bitcast i8* %tqe_prev.i144.i to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %struct.mfi_evt_queue_elm** %55 to i8**
  store i8* %call.i.i, i8** %59, align 8
  store i8* %call.i.i, i8** %22, align 8
  %60 = load %struct.taskqueue*, %struct.taskqueue** @taskqueue_swi, align 8
  %call24.i.i = call i32 @taskqueue_enqueue(%struct.taskqueue* %60, %struct.task* nonnull %mfi_evt_task.i.i) #7
  br label %mfi_queue_evt.exit.i

mfi_queue_evt.exit.i:                             ; preds = %do.end.i.i, %if.end63.i
  %inc.i = add nuw i32 %i.0169.i72, 1
  %61 = load i32, i32* %count.i, align 1
  %cmp44.i = icmp ult i32 %inc.i, %61
  br i1 %cmp44.i, label %for.body.i, label %for.end.i

for.end.i:                                        ; preds = %for.body.i, %mfi_queue_evt.exit.i, %for.body.i.preheader, %if.end42.i
  %.lcssa.i = phi i32 [ 0, %if.end42.i ], [ %51, %for.body.i.preheader ], [ %61, %mfi_queue_evt.exit.i ], [ %61, %for.body.i ]
  %sub.i = add i32 %.lcssa.i, -1
  %idxprom69.i = zext i32 %sub.i to i64
  %seq71.i = getelementptr [1 x %struct.mfi_evt_detail], [1 x %struct.mfi_evt_detail]* %21, i64 0, i64 %idxprom69.i, i32 0
  %62 = load i32, i32* %seq71.i, align 1
  %add.i = add i32 %62, 1
  %63 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i.i, align 8
  %cmp.i.i35 = icmp eq %struct.mfi_command* %63, null
  br i1 %cmp.i.i35, label %if.then9.i, label %if.then.i.i

mfi_parse_entries.exit.thread41:                  ; preds = %if.then20.i, %if.then36.i
  %error.0.i36.ph = phi i32 [ 5, %if.then36.i ], [ %call17.i, %if.then20.i ]
  call void @free(i8* nonnull %call.i25, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %out

if.end12:                                         ; preds = %bus_dmamap_unload.exit.i
  call void @mfi_release_command(%struct.mfi_command* nonnull %23) #7
  call void @free(i8* nonnull %call.i25, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  %64 = load %struct.mfi_evt_log_state*, %struct.mfi_evt_log_state** %log_state, align 8
  %newest_seq_num13 = getelementptr inbounds %struct.mfi_evt_log_state, %struct.mfi_evt_log_state* %64, i64 0, i32 0
  %65 = load i32, i32* %newest_seq_num13, align 1
  br label %if.end14

if.end14:                                         ; preds = %entry.if.end14_crit_edge, %if.end12
  %.pre.pre-phi = phi i8** [ %.pre99, %entry.if.end14_crit_edge ], [ %4, %if.end12 ]
  %seq.0 = phi i32 [ %seq_start, %entry.if.end14_crit_edge ], [ %65, %if.end12 ]
  %class_locale.sroa.5.0.insert.shift = shl i32 %2, 24
  %class_locale.sroa.0.0.insert.ext = and i32 %1, 65535
  %class_locale.sroa.0.0.insert.insert = or i32 %class_locale.sroa.5.0.insert.shift, %class_locale.sroa.0.0.insert.ext
  %call15 = call fastcc i32 @mfi_aen_register(%struct.mfi_softc* %sc, i32 %seq.0, i32 %class_locale.sroa.0.0.insert.insert) #9
  br label %out

out:                                              ; preds = %if.end, %if.then9.i, %mfi_parse_entries.exit.thread41, %mfi_get_log_state.exit.thread, %mfi_get_log_state.exit, %if.end14
  %.pre-phi = phi i8** [ %4, %if.end ], [ %4, %if.then9.i ], [ %4, %mfi_parse_entries.exit.thread41 ], [ %4, %mfi_get_log_state.exit.thread ], [ %4, %mfi_get_log_state.exit ], [ %.pre.pre-phi, %if.end14 ]
  %error.0 = phi i32 [ 12, %if.end ], [ 16, %if.then9.i ], [ %error.0.i36.ph, %mfi_parse_entries.exit.thread41 ], [ %call.i, %mfi_get_log_state.exit.thread ], [ %error.021.i, %mfi_get_log_state.exit ], [ %call15, %if.end14 ]
  %66 = load i8*, i8** %.pre-phi, align 8
  call void @free(i8* %66, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret i32 %error.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.eventhandler_entry* @eventhandler_register(%struct.eventhandler_list*, i8*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_shutdown(%struct.mfi_softc* %sc) #0 {
entry:
  %cm = alloca %struct.mfi_command*, align 8
  %0 = bitcast %struct.mfi_command** %cm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  %mfi_aen_cm = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 38
  %1 = load %struct.mfi_command*, %struct.mfi_command** %mfi_aen_cm, align 8
  %cmp = icmp eq %struct.mfi_command* %1, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %cm_aen_abort = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 41
  store i32 1, i32* %cm_aen_abort, align 8
  tail call fastcc void @mfi_abort(%struct.mfi_softc* nonnull %sc, %struct.mfi_command** nonnull %mfi_aen_cm) #9
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %mfi_map_sync_cm = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 40
  %2 = load %struct.mfi_command*, %struct.mfi_command** %mfi_map_sync_cm, align 8
  %cmp2 = icmp eq %struct.mfi_command* %2, null
  br i1 %cmp2, label %if.end6, label %if.then3

if.then3:                                         ; preds = %if.end
  %cm_map_abort = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 42
  store i32 1, i32* %cm_map_abort, align 4
  tail call fastcc void @mfi_abort(%struct.mfi_softc* nonnull %sc, %struct.mfi_command** nonnull %mfi_map_sync_cm) #9
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then3
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1343) #7
  %call7 = call i32 @mfi_dcmd_command(%struct.mfi_softc* nonnull %sc, %struct.mfi_command** nonnull %cm, i32 17104896, i8** null, i64 0) #9
  %tobool = icmp eq i32 %call7, 0
  br i1 %tobool, label %if.end11, label %if.then8

if.then8:                                         ; preds = %if.end6
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1346) #7
  br label %cleanup

if.end11:                                         ; preds = %if.end6
  %3 = load %struct.mfi_command*, %struct.mfi_command** %cm, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 3
  %4 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_dcmd_frame**
  %5 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %4, align 8
  %flags = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %5, i64 0, i32 0, i32 10
  store i16 0, i16* %flags, align 1
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 14
  store i32 16, i32* %cm_flags, align 8
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 9
  store i8* null, i8** %cm_data, align 8
  %call13 = tail call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* %3) #9
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end11
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %6 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call16 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.42, i64 0, i64 0)) #7
  br label %if.end17

if.end17:                                         ; preds = %if.end11, %if.then15
  tail call void @mfi_release_command(%struct.mfi_command* %3) #9
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1359) #7
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.then8
  %retval.0 = phi i32 [ %call7, %if.then8 ], [ %call13, %if.end17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @device_get_unit(%struct.device*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.cdev* @make_dev(%struct.cdevsw*, i32, i32, i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @make_dev_alias_p(i32, %struct.cdev**, %struct.cdev*, i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.sysctl_oid* @sysctl_add_oid(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i8*, i64, i32 (%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*)*, i8*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(%struct.device*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.sysctl_oid* @device_get_sysctl_tree(%struct.device*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @sysctl_handle_int(%struct.sysctl_oid*, i8*, i64, %struct.sysctl_req*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.device* @device_add_child(%struct.device*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_generic_attach(%struct.device*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @callout_init(%struct.callout*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @callout_reset_sbt_on(%struct.callout*, i64, i64, void (i8*)*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_timeout(i8* %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.mfi_softc*
  %1 = load volatile i64, i64* @time_uptime, align 8
  %2 = load i32, i32* @mfi_cmd_timeout, align 4
  %conv = sext i32 %2 to i64
  %sub = sub i64 %1, %conv
  %3 = getelementptr inbounds i8, i8* %data, i64 832
  %4 = load i8, i8* %3, align 8
  %cmp = icmp eq i8 %4, 0
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %call = tail call i32 @mfi_tbolt_reset(%struct.mfi_softc* %0) #7
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.then
  %mfi_watchdog_callout = getelementptr inbounds i8, i8* %data, i64 992
  %5 = bitcast i8* %mfi_watchdog_callout to %struct.callout*
  %6 = load i64, i64* @tick_sbt, align 8
  %7 = load i32, i32* @mfi_cmd_timeout, align 4
  %8 = load i32, i32* @hz, align 4
  %mul = mul i32 %8, %7
  %conv4 = sext i32 %mul to i64
  %mul5 = mul i64 %6, %conv4
  %call6 = tail call i32 @callout_reset_sbt_on(%struct.callout* nonnull %5, i64 %mul5, i64 0, void (i8*)* nonnull @mfi_timeout, i8* nonnull %data, i32 -1, i32 256) #7
  br label %cleanup

if.end7:                                          ; preds = %if.then, %entry
  %mtx_lock = getelementptr inbounds i8, i8* %data, i64 1080
  %9 = bitcast i8* %mtx_lock to i64*
  tail call void @__mtx_lock_flags(i64* nonnull %9, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3755) #7
  %mfi_busy = getelementptr inbounds i8, i8* %data, i64 264
  %tqh_first = bitcast i8* %mfi_busy to %struct.mfi_command**
  %10 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first, align 8
  %tobool872 = icmp eq %struct.mfi_command* %10, null
  br i1 %tobool872, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end7
  %mfi_aen_cm = getelementptr inbounds i8, i8* %data, i64 592
  %11 = bitcast i8* %mfi_aen_cm to %struct.mfi_command**
  %mfi_map_sync_cm = getelementptr inbounds i8, i8* %data, i64 608
  %12 = bitcast i8* %mfi_map_sync_cm to %struct.mfi_command**
  %mfi_dev = bitcast i8* %data to %struct.device**
  %13 = getelementptr inbounds i8, i8* %data, i64 833
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %cm.073 = phi %struct.mfi_command* [ %10, %for.body.lr.ph ], [ %14, %for.inc ]
  %tqe_next = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.073, i64 0, i32 0, i32 0
  %14 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next, align 8
  %15 = load %struct.mfi_command*, %struct.mfi_command** %11, align 8
  %cmp9 = icmp eq %struct.mfi_command* %15, %cm.073
  br i1 %cmp9, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %16 = load %struct.mfi_command*, %struct.mfi_command** %12, align 8
  %cmp11 = icmp eq %struct.mfi_command* %16, %cm.073
  br i1 %cmp11, label %for.inc, label %if.end14

if.end14:                                         ; preds = %lor.lhs.false
  %cm_timestamp = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.073, i64 0, i32 1
  %17 = load i64, i64* %cm_timestamp, align 8
  %cmp15 = icmp sgt i64 %17, %sub
  br i1 %cmp15, label %for.inc, label %if.then17

if.then17:                                        ; preds = %if.end14
  %18 = load i8, i8* %3, align 8
  %cmp20 = icmp eq i8 %18, 0
  br i1 %cmp20, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then17
  %19 = load i8, i8* %13, align 1
  %cmp23 = icmp eq i8 %19, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %land.lhs.true
  %20 = load volatile i64, i64* @time_uptime, align 8
  store i64 %20, i64* %cm_timestamp, align 8
  br label %for.inc

if.else:                                          ; preds = %if.then17, %land.lhs.true
  %21 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %22 = load volatile i64, i64* @time_uptime, align 8
  %sub28 = sub i64 %22, %17
  %conv29 = trunc i64 %sub28 to i32
  %call30 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %21, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.118, i64 0, i64 0), %struct.mfi_command* nonnull %cm.073, i32 %conv29) #7
  tail call void @mfi_print_cmd(%struct.mfi_command* nonnull %cm.073) #7
  tail call void @mfi_validate_sg(%struct.mfi_softc* nonnull %0, %struct.mfi_command* nonnull %cm.073, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__FUNCTION__.mfi_timeout, i64 0, i64 0), i32 3768) #7
  br label %for.inc

for.inc:                                          ; preds = %if.end14, %if.else, %if.then25, %for.body, %lor.lhs.false
  %tobool8 = icmp eq %struct.mfi_command* %14, null
  br i1 %tobool8, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %if.end7
  tail call void @__mtx_unlock_flags(i64* nonnull %9, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3789) #7
  %mfi_watchdog_callout35 = getelementptr inbounds i8, i8* %data, i64 992
  %23 = bitcast i8* %mfi_watchdog_callout35 to %struct.callout*
  %24 = load i64, i64* @tick_sbt, align 8
  %25 = load i32, i32* @mfi_cmd_timeout, align 4
  %26 = load i32, i32* @hz, align 4
  %mul36 = mul i32 %26, %25
  %conv37 = sext i32 %mul36 to i64
  %mul38 = mul i64 %24, %conv37
  %call39 = tail call i32 @callout_reset_sbt_on(%struct.callout* nonnull %23, i64 %mul38, i64 0, void (i8*)* nonnull @mfi_timeout, i8* nonnull %data, i32 -1, i32 256) #7
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then3
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_tbolt_sync_map_info(%struct.mfi_softc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local void @mfi_release_command(%struct.mfi_command* %cm) local_unnamed_addr #0 {
entry:
  %cm_sc = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  %0 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 852) #7
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 9
  %1 = load i8*, i8** %cm_data, align 8
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %3 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %2, align 8
  %sg_count = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %3, i64 0, i32 7
  %4 = load i8, i8* %sg_count, align 1
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 8
  %5 = bitcast %union.mfi_sgl** %cm_sg to [1 x %struct.mfi_sg32]**
  %6 = load [1 x %struct.mfi_sg32]*, [1 x %struct.mfi_sg32]** %5, align 8
  %len = getelementptr [1 x %struct.mfi_sg32], [1 x %struct.mfi_sg32]* %6, i64 0, i64 0, i32 1
  store i32 0, i32* %len, align 1
  %7 = load [1 x %struct.mfi_sg32]*, [1 x %struct.mfi_sg32]** %5, align 8
  %addr = getelementptr [1 x %struct.mfi_sg32], [1 x %struct.mfi_sg32]* %7, i64 0, i64 0, i32 0
  store i32 0, i32* %addr, align 1
  br label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 14
  %8 = load i32, i32* %cm_flags, align 8
  %and = and i32 %8, 2048
  %cmp4 = icmp eq i32 %and, 0
  br i1 %cmp4, label %if.end7, label %do.body2.i

do.body2.i:                                       ; preds = %if.end
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 0
  %9 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp3.i = icmp eq %struct.mfi_command* %9, null
  br i1 %cmp3.i, label %do.body12.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body2.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 0, i32 1
  %10 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp9.i = icmp eq %struct.mfi_command** %10, %tqe_next.i
  br i1 %cmp9.i, label %do.body12.i, label %if.then10.i

if.then10.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %cm) #11
  unreachable

do.body12.i:                                      ; preds = %land.lhs.true.i, %do.body2.i
  %tqe_prev14.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 1
  %11 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev14.i, align 8
  %12 = load %struct.mfi_command*, %struct.mfi_command** %11, align 8
  %cmp15.i = icmp eq %struct.mfi_command* %12, %cm
  br i1 %cmp15.i, label %do.end18.i, label %if.then16.i

if.then16.i:                                      ; preds = %do.body12.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %cm) #11
  unreachable

do.end18.i:                                       ; preds = %do.body12.i
  br i1 %cmp3.i, label %if.else.i, label %if.then22.i

if.then22.i:                                      ; preds = %do.end18.i
  %tqe_prev28.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 0, i32 1
  br label %mfi_remove_busy.exit

if.else.i:                                        ; preds = %do.end18.i
  %13 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %13, i64 0, i32 13, i32 1
  br label %mfi_remove_busy.exit

mfi_remove_busy.exit:                             ; preds = %if.then22.i, %if.else.i
  %tqe_prev28.i.sink = phi %struct.mfi_command*** [ %tqe_prev28.i, %if.then22.i ], [ %tqh_last.i, %if.else.i ]
  store %struct.mfi_command** %11, %struct.mfi_command*** %tqe_prev28.i.sink, align 8
  %14 = bitcast %struct.mfi_command* %cm to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %struct.mfi_command*** %tqe_prev14.i to i64**
  %17 = load i64*, i64** %16, align 8
  store i64 %15, i64* %17, align 8
  %18 = load i32, i32* %cm_flags, align 8
  %and38.i = and i32 %18, -2049
  store i32 %and38.i, i32* %cm_flags, align 8
  %19 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %19, i64 0, i32 15, i64 3, i32 0
  %20 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %20, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %.pre = load i32, i32* %cm_flags, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.end, %mfi_remove_busy.exit
  %21 = phi i32 [ %8, %if.end ], [ %.pre, %mfi_remove_busy.exit ]
  %and9 = and i32 %21, 1024
  %cmp10 = icmp eq i32 %and9, 0
  br i1 %cmp10, label %if.end13, label %do.body2.i75

do.body2.i75:                                     ; preds = %if.end7
  %tqe_next.i73 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 0
  %22 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i73, align 8
  %cmp3.i74 = icmp eq %struct.mfi_command* %22, null
  br i1 %cmp3.i74, label %do.body12.i82, label %land.lhs.true.i78

land.lhs.true.i78:                                ; preds = %do.body2.i75
  %tqe_prev.i76 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %22, i64 0, i32 0, i32 1
  %23 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i76, align 8
  %cmp9.i77 = icmp eq %struct.mfi_command** %23, %tqe_next.i73
  br i1 %cmp9.i77, label %do.body12.i82, label %if.then10.i79

if.then10.i79:                                    ; preds = %land.lhs.true.i78
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %cm) #11
  unreachable

do.body12.i82:                                    ; preds = %land.lhs.true.i78, %do.body2.i75
  %tqe_prev14.i80 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 1
  %24 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev14.i80, align 8
  %25 = load %struct.mfi_command*, %struct.mfi_command** %24, align 8
  %cmp15.i81 = icmp eq %struct.mfi_command* %25, %cm
  br i1 %cmp15.i81, label %do.end18.i84, label %if.then16.i83

if.then16.i83:                                    ; preds = %do.body12.i82
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %cm) #11
  unreachable

do.end18.i84:                                     ; preds = %do.body12.i82
  br i1 %cmp3.i74, label %if.else.i90, label %if.then22.i87

if.then22.i87:                                    ; preds = %do.end18.i84
  %tqe_prev28.i85 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %22, i64 0, i32 0, i32 1
  br label %mfi_remove_ready.exit

if.else.i90:                                      ; preds = %do.end18.i84
  %26 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %tqh_last.i89 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %26, i64 0, i32 12, i32 1
  br label %mfi_remove_ready.exit

mfi_remove_ready.exit:                            ; preds = %if.then22.i87, %if.else.i90
  %tqe_prev28.i85.sink = phi %struct.mfi_command*** [ %tqe_prev28.i85, %if.then22.i87 ], [ %tqh_last.i89, %if.else.i90 ]
  store %struct.mfi_command** %24, %struct.mfi_command*** %tqe_prev28.i85.sink, align 8
  %27 = bitcast %struct.mfi_command* %cm to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.mfi_command*** %tqe_prev14.i80 to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = load i32, i32* %cm_flags, align 8
  %and38.i92 = and i32 %31, -1025
  store i32 %and38.i92, i32* %cm_flags, align 8
  %32 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %q_length.i93 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %32, i64 0, i32 15, i64 2, i32 0
  %33 = load i32, i32* %q_length.i93, align 8
  %dec.i94 = add i32 %33, -1
  store i32 %dec.i94, i32* %q_length.i93, align 8
  %.pre106 = load i32, i32* %cm_flags, align 8
  br label %if.end13

if.end13:                                         ; preds = %if.end7, %mfi_remove_ready.exit
  %34 = phi i32 [ %21, %if.end7 ], [ %.pre106, %mfi_remove_ready.exit ]
  %and15 = and i32 %34, 3584
  %cmp16 = icmp eq i32 %and15, 0
  br i1 %cmp16, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end13
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.40, i64 0, i64 0), %struct.mfi_command* nonnull %cm, i32 %34) #11
  unreachable

if.end20:                                         ; preds = %if.end13
  %and22 = and i32 %34, 256
  %cmp23 = icmp eq i32 %and22, 0
  br i1 %cmp23, label %if.end20.do.body2.i102_crit_edge, label %if.then25

if.end20.do.body2.i102_crit_edge:                 ; preds = %if.end20
  %.pre107 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 13
  br label %do.body2.i102

if.then25:                                        ; preds = %if.end20
  %35 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %mfi_cmd_pool_tbolt = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 108
  %36 = load %struct.mfi_cmd_tbolt**, %struct.mfi_cmd_tbolt*** %mfi_cmd_pool_tbolt, align 8
  %cm_extra_frames = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 13
  %37 = load i32, i32* %cm_extra_frames, align 4
  %sub = add i32 %37, -1
  %idxprom = sext i32 %sub to i64
  %arrayidx28 = getelementptr %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** %36, i64 %idxprom
  %38 = load %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** %arrayidx28, align 8
  tail call void @mfi_tbolt_return_cmd(%struct.mfi_softc* %35, %struct.mfi_cmd_tbolt* %38, %struct.mfi_command* nonnull %cm) #7
  br label %do.body2.i102

do.body2.i102:                                    ; preds = %if.end20.do.body2.i102_crit_edge, %if.then25
  %cm_extra_frames35.pre-phi = phi i32* [ %.pre107, %if.end20.do.body2.i102_crit_edge ], [ %cm_extra_frames, %if.then25 ]
  %39 = bitcast %union.mfi_frame** %cm_frame to i32**
  %40 = load i32*, i32** %39, align 8
  store i32 0, i32* %40, align 4
  %arrayidx32 = getelementptr i32, i32* %40, i64 1
  store i32 0, i32* %arrayidx32, align 4
  %arrayidx33 = getelementptr i32, i32* %40, i64 4
  store i32 0, i32* %arrayidx33, align 4
  %arrayidx34 = getelementptr i32, i32* %40, i64 5
  store i32 0, i32* %arrayidx34, align 4
  store i32 0, i32* %cm_extra_frames35.pre-phi, align 4
  store i32 0, i32* %cm_flags, align 8
  %cm_complete = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 16
  store void (%struct.mfi_command*)* null, void (%struct.mfi_command*)** %cm_complete, align 8
  %cm_private = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 17
  store i8* null, i8** %cm_private, align 8
  store i8* null, i8** %cm_data, align 8
  %cm_sg38 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 8
  store %union.mfi_sgl* null, %union.mfi_sgl** %cm_sg38, align 8
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 12
  store i32 0, i32* %cm_total_frame_size, align 8
  %retry_for_fw_reset = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 15
  store i8 0, i8* %retry_for_fw_reset, align 4
  %41 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %tqh_last.i100 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %41, i64 0, i32 11, i32 1
  %42 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i100, align 8
  %43 = load %struct.mfi_command*, %struct.mfi_command** %42, align 8
  %cmp3.i101 = icmp eq %struct.mfi_command* %43, null
  br i1 %cmp3.i101, label %do.end.i, label %if.then4.i

if.then4.i:                                       ; preds = %do.body2.i102
  %mfi_free.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %41, i64 0, i32 11
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.40* nonnull %mfi_free.i) #11
  unreachable

do.end.i:                                         ; preds = %do.body2.i102
  %tqe_next.i103 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqe_next.i103, align 8
  %44 = bitcast %struct.mfi_command*** %tqh_last.i100 to i64*
  %45 = load i64, i64* %44, align 8
  %tqe_prev.i104 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 1
  %46 = bitcast %struct.mfi_command*** %tqe_prev.i104 to i64*
  store i64 %45, i64* %46, align 8
  %47 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i100, align 8
  store %struct.mfi_command* %cm, %struct.mfi_command** %47, align 8
  %48 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %tqh_last19.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %48, i64 0, i32 11, i32 1
  store %struct.mfi_command** %tqe_next.i103, %struct.mfi_command*** %tqh_last19.i, align 8
  %49 = load i32, i32* %cm_flags, align 8
  %or.i = or i32 %49, 512
  store i32 %or.i, i32* %cm_flags, align 8
  %50 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %q_length.i105 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %50, i64 0, i32 15, i64 0, i32 0
  %51 = load i32, i32* %q_length.i105, align 4
  %inc.i = add i32 %51, 1
  store i32 %inc.i, i32* %q_length.i105, align 4
  %q_max.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %50, i64 0, i32 15, i64 0, i32 1
  %52 = load i32, i32* %q_max.i, align 4
  %cmp25.i = icmp ugt i32 %inc.i, %52
  br i1 %cmp25.i, label %if.then26.i, label %mfi_enqueue_free.exit

if.then26.i:                                      ; preds = %do.end.i
  store i32 %inc.i, i32* %q_max.i, align 4
  br label %mfi_enqueue_free.exit

mfi_enqueue_free.exit:                            ; preds = %do.end.i, %if.then26.i
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @__mtx_assert(i64*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone noreturn
declare dso_local void @panic(i8*, ...) local_unnamed_addr #4

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_tbolt_return_cmd(%struct.mfi_softc*, %struct.mfi_cmd_tbolt*, %struct.mfi_command*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_dcmd_command(%struct.mfi_softc* %sc, %struct.mfi_command** nocapture %cmp, i32 %opcode, i8** %bufp, i64 %bufsize) local_unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 915) #7
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %0 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %0, null
  br i1 %cmp.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 14
  %1 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %1, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %0, i32 %1, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 0
  %2 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %2, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %3 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %3, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 1
  %4 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %5 = load %struct.mfi_command*, %struct.mfi_command** %4, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %5, %0
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %4, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %6 = bitcast %struct.mfi_command* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %9 = load i64*, i64** %8, align 8
  store i64 %7, i64* %9, align 8
  %10 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %10, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %11 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %11, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 3
  %12 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %context2 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %12, i64 0, i32 0, i32 0, i32 8
  %13 = load i32, i32* %context2, align 1
  %14 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 72, i1 false)
  %15 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %16 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %15, align 8
  %context6 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %16, i64 0, i32 8
  store i32 %13, i32* %context6, align 1
  %cmp7 = icmp ne i64 %bufsize, 0
  %cmp8 = icmp ne i8** %bufp, null
  %or.cond = and i1 %cmp8, %cmp7
  br i1 %or.cond, label %if.then9, label %if.end17

if.then9:                                         ; preds = %do.end21.i
  %17 = load i8*, i8** %bufp, align 8
  %cmp10 = icmp eq i8* %17, null
  br i1 %cmp10, label %if.then11, label %if.end17

if.then11:                                        ; preds = %if.then9
  %call12 = tail call noalias i8* @malloc(i64 %bufsize, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 257) #10
  %cmp13 = icmp eq i8* %call12, null
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.then11
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %0) #9
  br label %cleanup

if.end15:                                         ; preds = %if.then11
  store i8* %call12, i8** %bufp, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then9, %if.end15, %do.end21.i
  %buf.0 = phi i8* [ %call12, %if.end15 ], [ null, %do.end21.i ], [ %17, %if.then9 ]
  %18 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_dcmd_frame**
  %19 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %18, align 8
  %arraydecay = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 2, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %arraydecay, i8 0, i64 12, i1 false)
  %cmd = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 0, i32 0
  store i8 5, i8* %cmd, align 1
  %timeout = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 0, i32 11
  store i16 0, i16* %timeout, align 1
  %flags = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 0, i32 10
  store i16 0, i16* %flags, align 1
  %conv = trunc i64 %bufsize to i32
  %data_len = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 0, i32 12
  store i32 %conv, i32* %data_len, align 1
  %scsi_status = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status, align 1
  %opcode25 = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 1
  store i32 %opcode, i32* %opcode25, align 1
  %sgl = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %19, i64 0, i32 3
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 8
  store %union.mfi_sgl* %sgl, %union.mfi_sgl** %cm_sg, align 8
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 12
  store i32 40, i32* %cm_total_frame_size, align 8
  store i32 0, i32* %cm_flags.i, align 8
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 9
  store i8* %buf.0, i8** %cm_data, align 8
  %cm_private = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 17
  store i8* %buf.0, i8** %cm_private, align 8
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 10
  store i32 %conv, i32* %cm_len, align 8
  store %struct.mfi_command* %0, %struct.mfi_command** %cmp, align 8
  br i1 %cmp8, label %land.lhs.true29, label %cleanup

land.lhs.true29:                                  ; preds = %if.end17
  %20 = load i8*, i8** %bufp, align 8
  %cmp30 = icmp eq i8* %20, null
  %cmp33 = icmp ne i8* %buf.0, null
  %or.cond40 = and i1 %cmp33, %cmp30
  br i1 %or.cond40, label %if.then35, label %cleanup

if.then35:                                        ; preds = %land.lhs.true29
  store i8* %buf.0, i8** %bufp, align 8
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end17, %land.lhs.true29, %if.then35, %if.then14
  %retval.0 = phi i32 [ 12, %if.then14 ], [ 0, %if.then35 ], [ 0, %land.lhs.true29 ], [ 0, %if.end17 ], [ 16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone allocsize(0)
declare dso_local noalias i8* @malloc(i64, %struct.malloc_type*, i32) local_unnamed_addr #5

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @mfi_aen_register(%struct.mfi_softc* %sc, i32 %seq, i32 %locale) unnamed_addr #0 {
entry:
  %cm = alloca %struct.mfi_command*, align 8
  %ed = alloca %struct.mfi_evt_detail*, align 8
  %0 = bitcast %struct.mfi_command** %cm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  %1 = bitcast %struct.mfi_evt_detail** %ed to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8
  store %struct.mfi_evt_detail* null, %struct.mfi_evt_detail** %ed, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1678) #7
  %mfi_aen_cm = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 38
  %2 = load %struct.mfi_command*, %struct.mfi_command** %mfi_aen_cm, align 8
  %cmp = icmp eq %struct.mfi_command* %2, null
  br i1 %cmp, label %if.end41, label %if.then

if.then:                                          ; preds = %entry
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 3
  %3 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_dcmd_frame**
  %4 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %3, align 8
  %arrayidx = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %4, i64 0, i32 2, i64 4
  %5 = bitcast i8* %arrayidx to i32*
  %6 = load i32, i32* %5, align 1
  %conv = ashr i32 %6, 24
  %conv6 = ashr i32 %locale, 24
  %cmp7 = icmp sgt i32 %conv, %conv6
  br i1 %cmp7, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %conv14 = and i32 %locale, 65535
  %7 = xor i32 %6, -1
  %xor = and i32 %conv14, %7
  %tobool = icmp eq i32 %xor, 0
  br i1 %tobool, label %cleanup, label %if.else

if.else:                                          ; preds = %land.lhs.true, %if.then
  tail call fastcc void @mfi_abort(%struct.mfi_softc* nonnull %sc, %struct.mfi_command** nonnull %mfi_aen_cm) #9
  br label %if.end41

if.end41:                                         ; preds = %entry, %if.else
  %8 = bitcast %struct.mfi_evt_detail** %ed to i8**
  %call42 = call i32 @mfi_dcmd_command(%struct.mfi_softc* nonnull %sc, %struct.mfi_command** nonnull %cm, i32 17040640, i8** nonnull %8, i64 256) #9
  %tobool43 = icmp eq i32 %call42, 0
  br i1 %tobool43, label %if.end45, label %cleanup

if.end45:                                         ; preds = %if.end41
  %9 = load %struct.mfi_command*, %struct.mfi_command** %cm, align 8
  %cm_frame46 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 3
  %10 = bitcast %union.mfi_frame** %cm_frame46 to %struct.mfi_dcmd_frame**
  %11 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %10, align 8
  %mbox48 = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %11, i64 0, i32 2
  %12 = bitcast [12 x i8]* %mbox48 to i32*
  store i32 %seq, i32* %12, align 1
  %arrayidx51 = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %11, i64 0, i32 2, i64 4
  %13 = bitcast i8* %arrayidx51 to i32*
  store i32 %locale, i32* %13, align 1
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 14
  store i32 2, i32* %cm_flags, align 8
  %cm_complete = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 16
  store void (%struct.mfi_command*)* @mfi_aen_complete, void (%struct.mfi_command*)** %cm_complete, align 8
  %last_seq_num = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 63
  store i32 %seq, i32* %last_seq_num, align 8
  %14 = ptrtoint %struct.mfi_command* %9 to i64
  %15 = bitcast %struct.mfi_command** %mfi_aen_cm to i64*
  store i64 %14, i64* %15, align 8
  %16 = load i32, i32* %cm_flags, align 8
  %and.i = and i32 %16, 3584
  %cmp.i = icmp eq i32 %and.i, 0
  br i1 %cmp.i, label %do.body2.i, label %if.then.i

if.then.i:                                        ; preds = %if.end45
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80, i64 0, i64 0), %struct.mfi_command* nonnull %9, i32 %16) #11
  unreachable

do.body2.i:                                       ; preds = %if.end45
  %cm_sc.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 2
  %17 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %17, i64 0, i32 12, i32 1
  %18 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i, align 8
  %19 = load %struct.mfi_command*, %struct.mfi_command** %18, align 8
  %cmp3.i = icmp eq %struct.mfi_command* %19, null
  br i1 %cmp3.i, label %do.end.i, label %if.then4.i

if.then4.i:                                       ; preds = %do.body2.i
  %mfi_ready.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %17, i64 0, i32 12
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.44* nonnull %mfi_ready.i) #11
  unreachable

do.end.i:                                         ; preds = %do.body2.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 0, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqe_next.i, align 8
  %20 = bitcast %struct.mfi_command*** %tqh_last.i to i64*
  %21 = load i64, i64* %20, align 8
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %9, i64 0, i32 0, i32 1
  %22 = bitcast %struct.mfi_command*** %tqe_prev.i to i64*
  store i64 %21, i64* %22, align 8
  %23 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i, align 8
  store %struct.mfi_command* %9, %struct.mfi_command** %23, align 8
  %24 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_last19.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %24, i64 0, i32 12, i32 1
  store %struct.mfi_command** %tqe_next.i, %struct.mfi_command*** %tqh_last19.i, align 8
  %25 = load i32, i32* %cm_flags, align 8
  %or.i = or i32 %25, 1024
  store i32 %or.i, i32* %cm_flags, align 8
  %26 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %26, i64 0, i32 15, i64 2, i32 0
  %27 = load i32, i32* %q_length.i, align 4
  %inc.i = add i32 %27, 1
  store i32 %inc.i, i32* %q_length.i, align 4
  %q_max.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %26, i64 0, i32 15, i64 2, i32 1
  %28 = load i32, i32* %q_max.i, align 4
  %cmp25.i = icmp ugt i32 %inc.i, %28
  br i1 %cmp25.i, label %if.then26.i, label %mfi_enqueue_ready.exit

if.then26.i:                                      ; preds = %do.end.i
  store i32 %inc.i, i32* %q_max.i, align 4
  br label %mfi_enqueue_ready.exit

mfi_enqueue_ready.exit:                           ; preds = %do.end.i, %if.then26.i
  call void @mfi_startio(%struct.mfi_softc* nonnull %sc) #9
  br label %cleanup

cleanup:                                          ; preds = %mfi_enqueue_ready.exit, %if.end41, %land.lhs.true
  %retval.0 = phi i32 [ 0, %land.lhs.true ], [ %call42, %if.end41 ], [ 0, %mfi_enqueue_ready.exit ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @free(i8*, %struct.malloc_type*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_wait_command(%struct.mfi_softc* %sc, %struct.mfi_command* %cm) local_unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1121) #7
  %cm_complete = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 16
  store void (%struct.mfi_command*)* null, void (%struct.mfi_command*)** %cm_complete, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %0 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %1 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 1
  %2 = load i32, i32* %1, align 1
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %cmd_status = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %cmd_status, align 1
  %cm_error = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 19
  store i32 0, i32* %cm_error, align 4
  br label %return

if.end:                                           ; preds = %entry
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 14
  %3 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %3, 3584
  %cmp.i = icmp eq i32 %and.i, 0
  br i1 %cmp.i, label %do.body2.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80, i64 0, i64 0), %struct.mfi_command* nonnull %cm, i32 %3) #11
  unreachable

do.body2.i:                                       ; preds = %if.end
  %cm_sc.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  %4 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %4, i64 0, i32 12, i32 1
  %5 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i, align 8
  %6 = load %struct.mfi_command*, %struct.mfi_command** %5, align 8
  %cmp3.i = icmp eq %struct.mfi_command* %6, null
  br i1 %cmp3.i, label %do.end.i, label %if.then4.i

if.then4.i:                                       ; preds = %do.body2.i
  %mfi_ready.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %4, i64 0, i32 12
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.44* nonnull %mfi_ready.i) #11
  unreachable

do.end.i:                                         ; preds = %do.body2.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqe_next.i, align 8
  %7 = bitcast %struct.mfi_command*** %tqh_last.i to i64*
  %8 = load i64, i64* %7, align 8
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 1
  %9 = bitcast %struct.mfi_command*** %tqe_prev.i to i64*
  store i64 %8, i64* %9, align 8
  %10 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i, align 8
  store %struct.mfi_command* %cm, %struct.mfi_command** %10, align 8
  %11 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_last19.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %11, i64 0, i32 12, i32 1
  store %struct.mfi_command** %tqe_next.i, %struct.mfi_command*** %tqh_last19.i, align 8
  %12 = load i32, i32* %cm_flags.i, align 8
  %or.i = or i32 %12, 1024
  store i32 %or.i, i32* %cm_flags.i, align 8
  %13 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %13, i64 0, i32 15, i64 2, i32 0
  %14 = load i32, i32* %q_length.i, align 4
  %inc.i = add i32 %14, 1
  store i32 %inc.i, i32* %q_length.i, align 4
  %q_max.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %13, i64 0, i32 15, i64 2, i32 1
  %15 = load i32, i32* %q_max.i, align 4
  %cmp25.i = icmp ugt i32 %inc.i, %15
  br i1 %cmp25.i, label %if.then26.i, label %mfi_enqueue_ready.exit

if.then26.i:                                      ; preds = %do.end.i
  store i32 %inc.i, i32* %q_max.i, align 4
  br label %mfi_enqueue_ready.exit

mfi_enqueue_ready.exit:                           ; preds = %do.end.i, %if.then26.i
  tail call void @mfi_startio(%struct.mfi_softc* %sc) #9
  %16 = load i32, i32* %cm_flags.i, align 8
  %and = and i32 %16, 8
  %cmp3 = icmp eq i32 %and, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %mfi_enqueue_ready.exit
  %17 = bitcast %struct.mfi_command* %cm to i8*
  %lock_object = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 0
  %call = tail call i32 @_sleep(i8* %17, %struct.lock_object* nonnull %lock_object, i32 92, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i64 0, i64 0, i32 256) #7
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %mfi_enqueue_ready.exit
  %cm_error7 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 19
  %18 = load i32, i32* %cm_error7, align 4
  br label %return

return:                                           ; preds = %if.end6, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %18, %if.end6 ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local void @mfi_startio(%struct.mfi_softc* %sc) local_unnamed_addr #0 {
entry:
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 12, i32 0
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 77, i32 0
  %q_length.i31 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %mfi_cam_start = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 78
  %mfi_bioq.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 14
  %q_length.i.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 1, i32 0
  %mtx_lock.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  %tqh_first.i.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 12, i32 1
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 2, i32 0
  %tqh_last.i.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  br label %for.cond

for.cond:                                         ; preds = %if.end13, %entry
  %0 = load i32, i32* %mfi_flags, align 8
  %and = and i32 %0, 2
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end, label %for.end

if.end:                                           ; preds = %for.cond
  %1 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %1, null
  br i1 %cmp.i, label %if.then1, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %1, i64 0, i32 14
  %2 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %2, 1024
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %1, i32 %2, i32 1024) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %1, i64 0, i32 0, i32 0
  %3 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %3, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 0, i32 1
  %4 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %4, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %1) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %1, i64 0, i32 0, i32 1
  %5 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %6 = load %struct.mfi_command*, %struct.mfi_command** %5, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %6, %1
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %1) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %5, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %7 = bitcast %struct.mfi_command* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %10 = load i64*, i64** %9, align 8
  store i64 %8, i64* %10, align 8
  %11 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %11, -1025
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %12 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %12, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  br label %if.end13

if.then1:                                         ; preds = %if.end
  %13 = load %struct.ccb_hdr*, %struct.ccb_hdr** %tqh_first, align 8
  %cmp2 = icmp eq %struct.ccb_hdr* %13, null
  br i1 %cmp2, label %if.then8, label %if.end6

if.end6:                                          ; preds = %if.then1
  %14 = load %struct.mfi_command* (i8*)*, %struct.mfi_command* (i8*)** %mfi_cam_start, align 8
  %15 = bitcast %struct.ccb_hdr* %13 to i8*
  %call4 = tail call %struct.mfi_command* %14(i8* %15) #7
  %cmp7 = icmp eq %struct.mfi_command* %call4, null
  br i1 %cmp7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.then1, %if.end6
  %16 = load i32, i32* %q_length.i31, align 8
  %cmp.i32 = icmp ult i32 %16, 2
  br i1 %cmp.i32, label %for.end, label %if.end.i

if.end.i:                                         ; preds = %if.then8
  %call.i.i = tail call %struct.bio* @bioq_first(%struct.bio_queue_head* nonnull %mfi_bioq.i.i) #7
  %cmp.i.i = icmp eq %struct.bio* %call.i.i, null
  br i1 %cmp.i.i, label %for.end, label %if.end3.i

if.end3.i:                                        ; preds = %if.end.i
  tail call void @bioq_remove(%struct.bio_queue_head* nonnull %mfi_bioq.i.i, %struct.bio* nonnull %call.i.i) #7
  %17 = load i32, i32* %q_length.i.i, align 8
  %dec.i.i = add i32 %17, -1
  store i32 %dec.i.i, i32* %q_length.i.i, align 8
  %bio_driver2.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 16
  %18 = bitcast i8** %bio_driver2.i to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %if.then13.i [
    i64 1, label %if.then5.i
    i64 0, label %if.then9.i
  ]

if.then5.i:                                       ; preds = %if.end3.i
  tail call void @__mtx_assert(i64* nonnull %mtx_lock.i.i, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2193) #7
  %20 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i.i.i, align 8
  %cmp.i.i.i = icmp eq %struct.mfi_command* %20, null
  br i1 %cmp.i.i.i, label %if.then13.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then5.i
  %cm_flags.i.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 14
  %21 = load i32, i32* %cm_flags.i.i.i, align 8
  %and.i.i.i = and i32 %21, 512
  %cmp1.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp1.i.i.i, label %if.then2.i.i.i, label %do.body4.i.i.i

if.then2.i.i.i:                                   ; preds = %if.then.i.i.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %20, i32 %21, i32 512) #11
  unreachable

do.body4.i.i.i:                                   ; preds = %if.then.i.i.i
  %tqe_next.i.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 0, i32 0
  %22 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i.i.i, align 8
  %cmp5.i.i.i = icmp eq %struct.mfi_command* %22, null
  br i1 %cmp5.i.i.i, label %do.body14.i.i.i, label %land.lhs.true.i.i.i

land.lhs.true.i.i.i:                              ; preds = %do.body4.i.i.i
  %tqe_prev.i.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %22, i64 0, i32 0, i32 1
  %23 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i.i.i, align 8
  %cmp11.i.i.i = icmp eq %struct.mfi_command** %23, %tqe_next.i.i.i
  br i1 %cmp11.i.i.i, label %do.body14.i.i.i, label %if.then12.i.i.i

if.then12.i.i.i:                                  ; preds = %land.lhs.true.i.i.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %20) #11
  unreachable

do.body14.i.i.i:                                  ; preds = %land.lhs.true.i.i.i, %do.body4.i.i.i
  %tqe_prev16.i.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 0, i32 1
  %24 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i.i.i, align 8
  %25 = load %struct.mfi_command*, %struct.mfi_command** %24, align 8
  %cmp17.i.i.i = icmp eq %struct.mfi_command* %25, %20
  br i1 %cmp17.i.i.i, label %do.end21.i.i.i, label %if.then18.i.i.i

if.then18.i.i.i:                                  ; preds = %do.body14.i.i.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %20) #11
  unreachable

do.end21.i.i.i:                                   ; preds = %do.body14.i.i.i
  %tqe_prev31.i.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %22, i64 0, i32 0, i32 1
  %tqh_last.i.i.i.sink = select i1 %cmp5.i.i.i, %struct.mfi_command*** %tqh_last.i.i.i, %struct.mfi_command*** %tqe_prev31.i.i.i
  store %struct.mfi_command** %24, %struct.mfi_command*** %tqh_last.i.i.i.sink, align 8
  %26 = bitcast %struct.mfi_command* %20 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.mfi_command*** %tqe_prev16.i.i.i to i64**
  %29 = load i64*, i64** %28, align 8
  store i64 %27, i64* %29, align 8
  %30 = load i32, i32* %cm_flags.i.i.i, align 8
  %and43.i.i.i = and i32 %30, -513
  store i32 %and43.i.i.i, i32* %cm_flags.i.i.i, align 8
  %31 = load i32, i32* %q_length.i31, align 8
  %dec.i.i.i = add i32 %31, -1
  store i32 %dec.i.i.i, i32* %q_length.i31, align 8
  %cm_frame.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 3
  %32 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame.i.i, align 8
  %context1.i.i = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %32, i64 0, i32 0, i32 0, i32 8
  %33 = load i32, i32* %context1.i.i, align 1
  %34 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %34, i8 0, i64 72, i1 false) #8
  %35 = bitcast %union.mfi_frame** %cm_frame.i.i to %struct.mfi_frame_header**
  %36 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %35, align 8
  %context5.i.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %36, i64 0, i32 8
  store i32 %33, i32* %context5.i.i, align 1
  %37 = bitcast %union.mfi_frame** %cm_frame.i.i to %struct.mfi_io_frame**
  %38 = load %struct.mfi_io_frame*, %struct.mfi_io_frame** %37, align 8
  %bio_cmd.i.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 0
  %39 = load i16, i16* %bio_cmd.i.i, align 8
  switch i16 %39, label %sw.default.i.i [
    i16 1, label %sw.epilog.i.i
    i16 2, label %sw.bb9.i.i
  ]

sw.bb9.i.i:                                       ; preds = %do.end21.i.i.i
  br label %sw.epilog.i.i

sw.default.i.i:                                   ; preds = %do.end21.i.i.i
  %conv.i.i = zext i16 %39 to i32
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.108, i64 0, i64 0), i32 %conv.i.i) #11
  unreachable

sw.epilog.i.i:                                    ; preds = %do.end21.i.i.i, %sw.bb9.i.i
  %.sink = phi i8 [ 2, %sw.bb9.i.i ], [ 1, %do.end21.i.i.i ]
  %flags.0.i.i = phi i32 [ 132, %sw.bb9.i.i ], [ 130, %do.end21.i.i.i ]
  %cmd11.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 0
  store i8 %.sink, i8* %cmd11.i.i, align 1
  %bio_bcount.i.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 7
  %40 = load i64, i64* %bio_bcount.i.i, align 8
  %add.i.i = add i64 %40, 511
  %div.i.i = sdiv i64 %add.i.i, 512
  %conv14.i.i = trunc i64 %div.i.i to i32
  %bio_driver1.i.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 15
  %41 = bitcast i8** %bio_driver1.i.i to i64*
  %42 = load i64, i64* %41, align 8
  %conv15.i.i = trunc i64 %42 to i8
  %target_id.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 4
  store i8 %conv15.i.i, i8* %target_id.i.i, align 1
  %timeout.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 11
  store i16 0, i16* %timeout.i.i, align 1
  %flags19.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 10
  store i16 0, i16* %flags19.i.i, align 1
  %scsi_status.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status.i.i, align 1
  %sense_len.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 1
  store i8 -128, i8* %sense_len.i.i, align 1
  %data_len.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 0, i32 12
  store i32 %conv14.i.i, i32* %data_len.i.i, align 1
  %cm_sense_busaddr.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 6
  %43 = load i64, i64* %cm_sense_busaddr.i.i, align 8
  %conv23.i.i = trunc i64 %43 to i32
  %sense_addr_lo.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 1
  store i32 %conv23.i.i, i32* %sense_addr_lo.i.i, align 1
  %44 = load i64, i64* %cm_sense_busaddr.i.i, align 8
  %shr.i.i = lshr i64 %44, 32
  %conv25.i.i = trunc i64 %shr.i.i to i32
  %sense_addr_hi.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 2
  store i32 %conv25.i.i, i32* %sense_addr_hi.i.i, align 1
  %bio_pblkno.i.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 37
  %45 = load i64, i64* %bio_pblkno.i.i, align 8
  %shr26.i.i = lshr i64 %45, 32
  %conv27.i.i = trunc i64 %shr26.i.i to i32
  %lba_hi.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 4
  store i32 %conv27.i.i, i32* %lba_hi.i.i, align 1
  %46 = load i64, i64* %bio_pblkno.i.i, align 8
  %conv30.i.i = trunc i64 %46 to i32
  %lba_lo.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 3
  store i32 %conv30.i.i, i32* %lba_lo.i.i, align 1
  %cm_complete.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 16
  store void (%struct.mfi_command*)* @mfi_bio_complete, void (%struct.mfi_command*)** %cm_complete.i.i, align 8
  %cm_private.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 17
  %47 = bitcast i8** %cm_private.i.i to %struct.bio**
  store %struct.bio* %call.i.i, %struct.bio** %47, align 8
  %48 = load i64, i64* bitcast (i8** @unmapped_buf to i64*), align 8
  %cm_data.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 9
  %49 = bitcast i8** %cm_data.i.i to i64*
  store i64 %48, i64* %49, align 8
  %50 = load i64, i64* %bio_bcount.i.i, align 8
  %conv32.i.i = trunc i64 %50 to i32
  %cm_len.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 10
  store i32 %conv32.i.i, i32* %cm_len.i.i, align 8
  %sgl.i.i = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %38, i64 0, i32 5
  %cm_sg.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 8
  store %union.mfi_sgl* %sgl.i.i, %union.mfi_sgl** %cm_sg.i.i, align 8
  %cm_total_frame_size.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %20, i64 0, i32 12
  store i32 40, i32* %cm_total_frame_size.i.i, align 8
  store i32 %flags.0.i.i, i32* %cm_flags.i.i.i, align 8
  br label %if.end13

if.then9.i:                                       ; preds = %if.end3.i
  tail call void @__mtx_assert(i64* nonnull %mtx_lock.i.i, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2132) #7
  %51 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i.i.i, align 8
  %cmp.i.i29.i = icmp eq %struct.mfi_command* %51, null
  br i1 %cmp.i.i29.i, label %if.then13.i, label %if.then.i.i33.i

if.then.i.i33.i:                                  ; preds = %if.then9.i
  %cm_flags.i.i30.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 14
  %52 = load i32, i32* %cm_flags.i.i30.i, align 8
  %and.i.i31.i = and i32 %52, 512
  %cmp1.i.i32.i = icmp eq i32 %and.i.i31.i, 0
  br i1 %cmp1.i.i32.i, label %if.then2.i.i34.i, label %do.body4.i.i37.i

if.then2.i.i34.i:                                 ; preds = %if.then.i.i33.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %51, i32 %52, i32 512) #11
  unreachable

do.body4.i.i37.i:                                 ; preds = %if.then.i.i33.i
  %tqe_next.i.i35.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 0, i32 0
  %53 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i.i35.i, align 8
  %cmp5.i.i36.i = icmp eq %struct.mfi_command* %53, null
  br i1 %cmp5.i.i36.i, label %do.body14.i.i44.i, label %land.lhs.true.i.i40.i

land.lhs.true.i.i40.i:                            ; preds = %do.body4.i.i37.i
  %tqe_prev.i.i38.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %53, i64 0, i32 0, i32 1
  %54 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i.i38.i, align 8
  %cmp11.i.i39.i = icmp eq %struct.mfi_command** %54, %tqe_next.i.i35.i
  br i1 %cmp11.i.i39.i, label %do.body14.i.i44.i, label %if.then12.i.i41.i

if.then12.i.i41.i:                                ; preds = %land.lhs.true.i.i40.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %51) #11
  unreachable

do.body14.i.i44.i:                                ; preds = %land.lhs.true.i.i40.i, %do.body4.i.i37.i
  %tqe_prev16.i.i42.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 0, i32 1
  %55 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i.i42.i, align 8
  %56 = load %struct.mfi_command*, %struct.mfi_command** %55, align 8
  %cmp17.i.i43.i = icmp eq %struct.mfi_command* %56, %51
  br i1 %cmp17.i.i43.i, label %do.end21.i.i46.i, label %if.then18.i.i45.i

if.then18.i.i45.i:                                ; preds = %do.body14.i.i44.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %51) #11
  unreachable

do.end21.i.i46.i:                                 ; preds = %do.body14.i.i44.i
  %tqe_prev31.i.i47.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %53, i64 0, i32 0, i32 1
  %tqh_last.i.i.i.sink229 = select i1 %cmp5.i.i36.i, %struct.mfi_command*** %tqh_last.i.i.i, %struct.mfi_command*** %tqe_prev31.i.i47.i
  store %struct.mfi_command** %55, %struct.mfi_command*** %tqh_last.i.i.i.sink229, align 8
  %57 = bitcast %struct.mfi_command* %51 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %struct.mfi_command*** %tqe_prev16.i.i42.i to i64**
  %60 = load i64*, i64** %59, align 8
  store i64 %58, i64* %60, align 8
  %61 = load i32, i32* %cm_flags.i.i30.i, align 8
  %and43.i.i51.i = and i32 %61, -513
  store i32 %and43.i.i51.i, i32* %cm_flags.i.i30.i, align 8
  %62 = load i32, i32* %q_length.i31, align 8
  %dec.i.i53.i = add i32 %62, -1
  store i32 %dec.i.i53.i, i32* %q_length.i31, align 8
  %cm_frame.i54.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 3
  %63 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame.i54.i, align 8
  %context1.i55.i = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %63, i64 0, i32 0, i32 0, i32 8
  %64 = load i32, i32* %context1.i55.i, align 1
  %65 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 0, i64 72, i1 false) #8
  %66 = bitcast %union.mfi_frame** %cm_frame.i54.i to %struct.mfi_frame_header**
  %67 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %66, align 8
  %context5.i56.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %67, i64 0, i32 8
  store i32 %64, i32* %context5.i56.i, align 1
  %68 = bitcast %union.mfi_frame** %cm_frame.i54.i to %struct.mfi_pass_frame**
  %69 = load %struct.mfi_pass_frame*, %struct.mfi_pass_frame** %68, align 8
  %arraydecay.i.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 3, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %arraydecay.i.i, i8 0, i64 16, i1 false) #8
  %cmd.i57.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 0
  store i8 4, i8* %cmd.i57.i, align 1
  %bio_cmd.i58.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 0
  %70 = load i16, i16* %bio_cmd.i58.i, align 8
  switch i16 %70, label %sw.default.i62.i [
    i16 1, label %sw.epilog.i87.i
    i16 2, label %sw.bb9.i60.i
  ]

sw.bb9.i60.i:                                     ; preds = %do.end21.i.i46.i
  br label %sw.epilog.i87.i

sw.default.i62.i:                                 ; preds = %do.end21.i.i46.i
  %conv.i61.i = zext i16 %70 to i32
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.108, i64 0, i64 0), i32 %conv.i61.i) #11
  unreachable

sw.epilog.i87.i:                                  ; preds = %sw.bb9.i60.i, %do.end21.i.i46.i
  %flags.0.i63.i = phi i32 [ 132, %sw.bb9.i60.i ], [ 130, %do.end21.i.i46.i ]
  %readop.0.i.i = phi i32 [ 0, %sw.bb9.i60.i ], [ 1, %do.end21.i.i46.i ]
  %bio_bcount.i64.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 7
  %71 = load i64, i64* %bio_bcount.i64.i, align 8
  %add.i65.i = add i64 %71, 511
  %div.i66.i = sdiv i64 %add.i65.i, 512
  %conv12.i.i = trunc i64 %div.i66.i to i32
  %bio_pblkno.i67.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 37
  %72 = load i64, i64* %bio_pblkno.i67.i, align 8
  %call15.i.i = tail call i32 @mfi_build_cdb(i32 %readop.0.i.i, i8 zeroext 0, i64 %72, i32 %conv12.i.i, i8* nonnull %arraydecay.i.i) #7
  %conv16.i.i = trunc i32 %call15.i.i to i8
  %bio_driver1.i68.i = getelementptr inbounds %struct.bio, %struct.bio* %call.i.i, i64 0, i32 15
  %73 = bitcast i8** %bio_driver1.i68.i to i64*
  %74 = load i64, i64* %73, align 8
  %conv17.i.i = trunc i64 %74 to i8
  %target_id.i69.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 4
  store i8 %conv17.i.i, i8* %target_id.i69.i, align 1
  %lun_id.i.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 5
  store i8 0, i8* %lun_id.i.i, align 1
  %timeout.i70.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 11
  store i16 0, i16* %timeout.i70.i, align 1
  %flags22.i.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 10
  store i16 0, i16* %flags22.i.i, align 1
  %scsi_status.i71.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status.i71.i, align 1
  %sense_len.i72.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 1
  store i8 -128, i8* %sense_len.i72.i, align 1
  %75 = load i64, i64* %bio_bcount.i64.i, align 8
  %conv26.i.i = trunc i64 %75 to i32
  %data_len.i73.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 12
  store i32 %conv26.i.i, i32* %data_len.i73.i, align 1
  %cdb_len29.i.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 0, i32 6
  store i8 %conv16.i.i, i8* %cdb_len29.i.i, align 1
  %cm_sense_busaddr.i74.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 6
  %76 = load i64, i64* %cm_sense_busaddr.i74.i, align 8
  %conv30.i75.i = trunc i64 %76 to i32
  %sense_addr_lo.i76.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 1
  store i32 %conv30.i75.i, i32* %sense_addr_lo.i76.i, align 1
  %77 = load i64, i64* %cm_sense_busaddr.i74.i, align 8
  %shr.i77.i = lshr i64 %77, 32
  %conv32.i78.i = trunc i64 %shr.i77.i to i32
  %sense_addr_hi.i79.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 2
  store i32 %conv32.i78.i, i32* %sense_addr_hi.i79.i, align 1
  %cm_complete.i80.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 16
  store void (%struct.mfi_command*)* @mfi_bio_complete, void (%struct.mfi_command*)** %cm_complete.i80.i, align 8
  %cm_private.i81.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 17
  %78 = bitcast i8** %cm_private.i81.i to %struct.bio**
  store %struct.bio* %call.i.i, %struct.bio** %78, align 8
  %79 = load i64, i64* bitcast (i8** @unmapped_buf to i64*), align 8
  %cm_data.i82.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 9
  %80 = bitcast i8** %cm_data.i82.i to i64*
  store i64 %79, i64* %80, align 8
  %81 = load i64, i64* %bio_bcount.i64.i, align 8
  %conv34.i.i = trunc i64 %81 to i32
  %cm_len.i83.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 10
  store i32 %conv34.i.i, i32* %cm_len.i83.i, align 8
  %sgl.i84.i = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %69, i64 0, i32 4
  %cm_sg.i85.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 8
  store %union.mfi_sgl* %sgl.i84.i, %union.mfi_sgl** %cm_sg.i85.i, align 8
  %cm_total_frame_size.i86.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %51, i64 0, i32 12
  store i32 48, i32* %cm_total_frame_size.i86.i, align 8
  store i32 %flags.0.i63.i, i32* %cm_flags.i.i30.i, align 8
  br label %if.end13

if.then13.i:                                      ; preds = %if.then9.i, %if.then5.i, %if.end3.i
  tail call void @bioq_insert_tail(%struct.bio_queue_head* nonnull %mfi_bioq.i.i, %struct.bio* nonnull %call.i.i) #7
  %82 = load i32, i32* %q_length.i.i, align 4
  %inc.i.i = add i32 %82, 1
  store i32 %inc.i.i, i32* %q_length.i.i, align 4
  %q_max.i.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 1, i32 1
  %83 = load i32, i32* %q_max.i.i, align 4
  %cmp.i90.i = icmp ugt i32 %inc.i.i, %83
  br i1 %cmp.i90.i, label %if.then.i91.i, label %for.end

if.then.i91.i:                                    ; preds = %if.then13.i
  store i32 %inc.i.i, i32* %q_max.i.i, align 4
  br label %for.end

if.end13:                                         ; preds = %if.end6, %do.end21.i, %sw.epilog.i.i, %sw.epilog.i87.i
  %cm.1 = phi %struct.mfi_command* [ %call4, %if.end6 ], [ %1, %do.end21.i ], [ %20, %sw.epilog.i.i ], [ %51, %sw.epilog.i87.i ]
  %call14 = tail call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %cm.1) #9
  %cmp15 = icmp eq i32 %call14, 0
  br i1 %cmp15, label %for.cond, label %if.then16

if.then16:                                        ; preds = %if.end13
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %84 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call17 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %84, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0)) #7
  %cm_flags.i33 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.1, i64 0, i32 14
  %85 = load i32, i32* %cm_flags.i33, align 8
  %and.i34 = and i32 %85, 3584
  %cmp.i35 = icmp eq i32 %and.i34, 0
  br i1 %cmp.i35, label %do.body2.i, label %if.then.i36

if.then.i36:                                      ; preds = %if.then16
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80, i64 0, i64 0), %struct.mfi_command* nonnull %cm.1, i32 %85) #11
  unreachable

do.body2.i:                                       ; preds = %if.then16
  %cm_sc.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.1, i64 0, i32 2
  %86 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %mfi_ready.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %86, i64 0, i32 12
  %tqh_first.i37 = getelementptr inbounds %struct.anon.44, %struct.anon.44* %mfi_ready.i, i64 0, i32 0
  %87 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i37, align 8
  %cmp3.i = icmp eq %struct.mfi_command* %87, null
  br i1 %cmp3.i, label %if.else.i42, label %land.lhs.true.i39

land.lhs.true.i39:                                ; preds = %do.body2.i
  %tqe_prev.i38 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %87, i64 0, i32 0, i32 1
  %88 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i38, align 8
  %cmp10.i = icmp eq %struct.mfi_command** %88, %tqh_first.i37
  br i1 %cmp10.i, label %if.then20.i, label %if.then11.i

if.then11.i:                                      ; preds = %land.lhs.true.i39
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.112, i64 0, i64 0), %struct.anon.44* nonnull %mfi_ready.i) #11
  unreachable

if.then20.i:                                      ; preds = %land.lhs.true.i39
  %tqe_next.i40 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.1, i64 0, i32 0, i32 0
  store %struct.mfi_command* %87, %struct.mfi_command** %tqe_next.i40, align 8
  %tqh_first17.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %86, i64 0, i32 12, i32 0
  %89 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first17.i, align 8
  %tqe_prev27.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %89, i64 0, i32 0, i32 1
  store %struct.mfi_command** %tqe_next.i40, %struct.mfi_command*** %tqe_prev27.i, align 8
  br label %if.end32.i

if.else.i42:                                      ; preds = %do.body2.i
  %tqe_next72.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.1, i64 0, i32 0, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqe_next72.i, align 8
  %tqh_last.i41 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %86, i64 0, i32 12, i32 1
  store %struct.mfi_command** %tqe_next72.i, %struct.mfi_command*** %tqh_last.i41, align 8
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.else.i42, %if.then20.i
  %90 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_first35.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %90, i64 0, i32 12, i32 0
  store %struct.mfi_command* %cm.1, %struct.mfi_command** %tqh_first35.i, align 8
  %91 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_first38.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %91, i64 0, i32 12, i32 0
  %tqe_prev40.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm.1, i64 0, i32 0, i32 1
  store %struct.mfi_command** %tqh_first38.i, %struct.mfi_command*** %tqe_prev40.i, align 8
  %92 = load i32, i32* %cm_flags.i33, align 8
  %or.i = or i32 %92, 1024
  store i32 %or.i, i32* %cm_flags.i33, align 8
  %q_length.i43 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %91, i64 0, i32 15, i64 2, i32 0
  %93 = load i32, i32* %q_length.i43, align 4
  %inc.i = add i32 %93, 1
  store i32 %inc.i, i32* %q_length.i43, align 4
  %q_max.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %91, i64 0, i32 15, i64 2, i32 1
  %94 = load i32, i32* %q_max.i, align 4
  %cmp46.i = icmp ugt i32 %inc.i, %94
  br i1 %cmp46.i, label %if.then47.i, label %for.end

if.then47.i:                                      ; preds = %if.end32.i
  store i32 %inc.i, i32* %q_max.i, align 4
  br label %for.end

for.end:                                          ; preds = %if.end.i, %if.then8, %for.cond, %if.then.i91.i, %if.then13.i, %if.then47.i, %if.end32.i
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @_sleep(i8*, %struct.lock_object*, i32, i8*, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local void @mfi_free(%struct.mfi_softc* %sc) local_unnamed_addr #0 {
entry:
  %mfi_watchdog_callout = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 80
  %call = tail call i32 @_callout_stop_safe(%struct.callout* nonnull %mfi_watchdog_callout, i32 1, void (i8*)* null) #7
  %mfi_cdev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 76
  %0 = load %struct.cdev*, %struct.cdev** %mfi_cdev, align 8
  %cmp = icmp eq %struct.cdev* %0, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @destroy_dev(%struct.cdev* nonnull %0) #7
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %mfi_commands = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 65
  %1 = load %struct.mfi_command*, %struct.mfi_command** %mfi_commands, align 8
  %cmp2 = icmp eq %struct.mfi_command* %1, null
  br i1 %cmp2, label %if.end9, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %mfi_max_fw_cmds = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 66
  %2 = load i32, i32* %mfi_max_fw_cmds, align 8
  %cmp4326 = icmp sgt i32 %2, 0
  br i1 %cmp4326, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv329 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next330, %for.body ]
  %3 = phi %struct.mfi_command* [ %1, %for.body.lr.ph ], [ %10, %for.body ]
  %4 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 %indvars.iv329, i32 7
  %5 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %impl.i = bitcast %struct.bus_dma_tag* %4 to %struct.bus_dma_impl**
  %6 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_destroy.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %6, i64 0, i32 4
  %7 = load i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, i32 (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_destroy.i, align 8
  %call.i = tail call i32 %7(%struct.bus_dma_tag* %4, %struct.bus_dmamap* %5) #7
  %indvars.iv.next330 = add nuw nsw i64 %indvars.iv329, 1
  %8 = load i32, i32* %mfi_max_fw_cmds, align 8
  %9 = sext i32 %8 to i64
  %cmp4 = icmp slt i64 %indvars.iv.next330, %9
  %10 = load %struct.mfi_command*, %struct.mfi_command** %mfi_commands, align 8
  br i1 %cmp4, label %for.body, label %for.end

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %.lcssa = phi %struct.mfi_command* [ %1, %for.cond.preheader ], [ %10, %for.body ]
  %11 = bitcast %struct.mfi_command* %.lcssa to i8*
  tail call void @free(i8* %11, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  store %struct.mfi_command* null, %struct.mfi_command** %mfi_commands, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.end, %for.end
  %mfi_intr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 55
  %12 = load i8*, i8** %mfi_intr, align 8
  %tobool = icmp eq i8* %12, null
  br i1 %tobool, label %if.end9.if.end13_crit_edge, label %if.then10

if.end9.if.end13_crit_edge:                       ; preds = %if.end9
  %.pre333 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 54
  br label %if.end13

if.then10:                                        ; preds = %if.end9
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %13 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %mfi_irq = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 54
  %14 = load %struct.resource*, %struct.resource** %mfi_irq, align 8
  %call12 = tail call i32 @bus_teardown_intr(%struct.device* %13, %struct.resource* %14, i8* nonnull %12) #7
  br label %if.end13

if.end13:                                         ; preds = %if.end9.if.end13_crit_edge, %if.then10
  %mfi_irq14.pre-phi = phi %struct.resource** [ %.pre333, %if.end9.if.end13_crit_edge ], [ %mfi_irq, %if.then10 ]
  %15 = load %struct.resource*, %struct.resource** %mfi_irq14.pre-phi, align 8
  %cmp15 = icmp eq %struct.resource* %15, null
  br i1 %cmp15, label %if.end20, label %if.then16

if.then16:                                        ; preds = %if.end13
  %mfi_dev17 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %16 = load %struct.device*, %struct.device** %mfi_dev17, align 8
  %mfi_irq_rid = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 56
  %17 = load i32, i32* %mfi_irq_rid, align 8
  %call19 = tail call i32 @bus_release_resource(%struct.device* %16, i32 1, i32 %17, %struct.resource* nonnull %15) #7
  br label %if.end20

if.end20:                                         ; preds = %if.end13, %if.then16
  %mfi_sense_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 52
  %18 = load i64, i64* %mfi_sense_busaddr, align 8
  %cmp21 = icmp eq i64 %18, 0
  br i1 %cmp21, label %if.end23, label %if.then22

if.then22:                                        ; preds = %if.end20
  %mfi_sense_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 50
  %19 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_sense_dmat, align 8
  %mfi_sense_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 51
  %20 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_sense_dmamap, align 8
  %cmp.i = icmp eq %struct.bus_dmamap* %20, null
  br i1 %cmp.i, label %if.end23, label %if.then.i

if.then.i:                                        ; preds = %if.then22
  %impl.i280 = bitcast %struct.bus_dma_tag* %19 to %struct.bus_dma_impl**
  %21 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i280, align 8
  %map_unload.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %21, i64 0, i32 12
  %22 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i, align 8
  tail call void %22(%struct.bus_dma_tag* %19, %struct.bus_dmamap* nonnull %20) #7
  br label %if.end23

if.end23:                                         ; preds = %if.then.i, %if.then22, %if.end20
  %mfi_sense = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 53
  %23 = load %struct.mfi_sense*, %struct.mfi_sense** %mfi_sense, align 8
  %cmp24 = icmp eq %struct.mfi_sense* %23, null
  %.pre334 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 50
  br i1 %cmp24, label %if.end29, label %if.then25

if.then25:                                        ; preds = %if.end23
  %24 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre334, align 8
  %25 = getelementptr inbounds %struct.mfi_sense, %struct.mfi_sense* %23, i64 0, i32 0, i64 0
  %mfi_sense_dmamap28 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 51
  %26 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_sense_dmamap28, align 8
  %impl.i281 = bitcast %struct.bus_dma_tag* %24 to %struct.bus_dma_impl**
  %27 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i281, align 8
  %mem_free.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %27, i64 0, i32 6
  %28 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i, align 8
  tail call void %28(%struct.bus_dma_tag* %24, i8* nonnull %25, %struct.bus_dmamap* %26) #7
  br label %if.end29

if.end29:                                         ; preds = %if.end23, %if.then25
  %29 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre334, align 8
  %cmp31 = icmp eq %struct.bus_dma_tag* %29, null
  br i1 %cmp31, label %if.end35, label %if.then32

if.then32:                                        ; preds = %if.end29
  %call34 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %29) #7
  br label %if.end35

if.end35:                                         ; preds = %if.end29, %if.then32
  %mfi_frames_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 27
  %30 = load i64, i64* %mfi_frames_busaddr, align 8
  %cmp36 = icmp eq i64 %30, 0
  br i1 %cmp36, label %if.end38, label %if.then37

if.then37:                                        ; preds = %if.end35
  %mfi_frames_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 25
  %31 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_frames_dmat, align 8
  %mfi_frames_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 26
  %32 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_frames_dmamap, align 8
  %cmp.i282 = icmp eq %struct.bus_dmamap* %32, null
  br i1 %cmp.i282, label %if.end38, label %if.then.i285

if.then.i285:                                     ; preds = %if.then37
  %impl.i283 = bitcast %struct.bus_dma_tag* %31 to %struct.bus_dma_impl**
  %33 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i283, align 8
  %map_unload.i284 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %33, i64 0, i32 12
  %34 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i284, align 8
  tail call void %34(%struct.bus_dma_tag* %31, %struct.bus_dmamap* nonnull %32) #7
  br label %if.end38

if.end38:                                         ; preds = %if.then.i285, %if.then37, %if.end35
  %mfi_frames = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 28
  %35 = load %union.mfi_frame*, %union.mfi_frame** %mfi_frames, align 8
  %cmp39 = icmp eq %union.mfi_frame* %35, null
  %.pre335 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 25
  br i1 %cmp39, label %if.end44, label %if.then40

if.then40:                                        ; preds = %if.end38
  %36 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre335, align 8
  %37 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %35, i64 0, i32 0, i32 0, i32 0
  %mfi_frames_dmamap43 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 26
  %38 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_frames_dmamap43, align 8
  %impl.i287 = bitcast %struct.bus_dma_tag* %36 to %struct.bus_dma_impl**
  %39 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i287, align 8
  %mem_free.i288 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %39, i64 0, i32 6
  %40 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i288, align 8
  tail call void %40(%struct.bus_dma_tag* %36, i8* nonnull %37, %struct.bus_dmamap* %38) #7
  br label %if.end44

if.end44:                                         ; preds = %if.end38, %if.then40
  %41 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre335, align 8
  %cmp46 = icmp eq %struct.bus_dma_tag* %41, null
  br i1 %cmp46, label %if.end50, label %if.then47

if.then47:                                        ; preds = %if.end44
  %call49 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %41) #7
  br label %if.end50

if.end50:                                         ; preds = %if.end44, %if.then47
  %mfi_comms_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 24
  %42 = load i64, i64* %mfi_comms_busaddr, align 8
  %cmp51 = icmp eq i64 %42, 0
  br i1 %cmp51, label %if.end53, label %if.then52

if.then52:                                        ; preds = %if.end50
  %mfi_comms_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 22
  %43 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_comms_dmat, align 8
  %mfi_comms_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 23
  %44 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_comms_dmamap, align 8
  %cmp.i289 = icmp eq %struct.bus_dmamap* %44, null
  br i1 %cmp.i289, label %if.end53, label %if.then.i292

if.then.i292:                                     ; preds = %if.then52
  %impl.i290 = bitcast %struct.bus_dma_tag* %43 to %struct.bus_dma_impl**
  %45 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i290, align 8
  %map_unload.i291 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %45, i64 0, i32 12
  %46 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i291, align 8
  tail call void %46(%struct.bus_dma_tag* %43, %struct.bus_dmamap* nonnull %44) #7
  br label %if.end53

if.end53:                                         ; preds = %if.then.i292, %if.then52, %if.end50
  %mfi_comms = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 10
  %47 = load %struct.mfi_hwcomms*, %struct.mfi_hwcomms** %mfi_comms, align 8
  %cmp54 = icmp eq %struct.mfi_hwcomms* %47, null
  %.pre336 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 22
  br i1 %cmp54, label %if.end59, label %if.then55

if.then55:                                        ; preds = %if.end53
  %48 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre336, align 8
  %49 = bitcast %struct.mfi_hwcomms* %47 to i8*
  %mfi_comms_dmamap58 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 23
  %50 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_comms_dmamap58, align 8
  %impl.i294 = bitcast %struct.bus_dma_tag* %48 to %struct.bus_dma_impl**
  %51 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i294, align 8
  %mem_free.i295 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %51, i64 0, i32 6
  %52 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i295, align 8
  tail call void %52(%struct.bus_dma_tag* %48, i8* %49, %struct.bus_dmamap* %50) #7
  br label %if.end59

if.end59:                                         ; preds = %if.end53, %if.then55
  %53 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre336, align 8
  %cmp61 = icmp eq %struct.bus_dma_tag* %53, null
  br i1 %cmp61, label %if.end65, label %if.then62

if.then62:                                        ; preds = %if.end59
  %call64 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %53) #7
  br label %if.end65

if.end65:                                         ; preds = %if.end59, %if.then62
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %54 = load i32, i32* %mfi_flags, align 8
  %and = and i32 %54, 256
  %tobool66 = icmp eq i32 %and, 0
  br i1 %tobool66, label %if.end158, label %if.then67

if.then67:                                        ; preds = %if.end65
  %mfi_tb_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 98
  %55 = load i64, i64* %mfi_tb_busaddr, align 8
  %cmp68 = icmp eq i64 %55, 0
  br i1 %cmp68, label %if.end70, label %if.then69

if.then69:                                        ; preds = %if.then67
  %mfi_tb_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 96
  %56 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_dmat, align 8
  %mfi_tb_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 97
  %57 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_dmamap, align 8
  %cmp.i296 = icmp eq %struct.bus_dmamap* %57, null
  br i1 %cmp.i296, label %if.end70, label %if.then.i299

if.then.i299:                                     ; preds = %if.then69
  %impl.i297 = bitcast %struct.bus_dma_tag* %56 to %struct.bus_dma_impl**
  %58 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i297, align 8
  %map_unload.i298 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %58, i64 0, i32 12
  %59 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i298, align 8
  tail call void %59(%struct.bus_dma_tag* %56, %struct.bus_dmamap* nonnull %57) #7
  br label %if.end70

if.end70:                                         ; preds = %if.then.i299, %if.then69, %if.then67
  %request_message_pool = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 99
  %60 = load i8*, i8** %request_message_pool, align 8
  %cmp71 = icmp eq i8* %60, null
  %.pre337 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 96
  br i1 %cmp71, label %if.end76, label %if.then72

if.then72:                                        ; preds = %if.end70
  %61 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre337, align 8
  %mfi_tb_dmamap75 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 97
  %62 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_dmamap75, align 8
  %impl.i301 = bitcast %struct.bus_dma_tag* %61 to %struct.bus_dma_impl**
  %63 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i301, align 8
  %mem_free.i302 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %63, i64 0, i32 6
  %64 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i302, align 8
  tail call void %64(%struct.bus_dma_tag* %61, i8* nonnull %60, %struct.bus_dmamap* %62) #7
  br label %if.end76

if.end76:                                         ; preds = %if.end70, %if.then72
  %65 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre337, align 8
  %cmp78 = icmp eq %struct.bus_dma_tag* %65, null
  br i1 %cmp78, label %if.end82, label %if.then79

if.then79:                                        ; preds = %if.end76
  %call81 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %65) #7
  br label %if.end82

if.end82:                                         ; preds = %if.end76, %if.then79
  %verbuf_h_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 4
  %66 = load i64, i64* %verbuf_h_busaddr, align 8
  %cmp83 = icmp eq i64 %66, 0
  br i1 %cmp83, label %if.end85, label %if.then84

if.then84:                                        ; preds = %if.end82
  %verbuf_h_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 2
  %67 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %verbuf_h_dmat, align 8
  %verbuf_h_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 3
  %68 = load %struct.bus_dmamap*, %struct.bus_dmamap** %verbuf_h_dmamap, align 8
  %cmp.i303 = icmp eq %struct.bus_dmamap* %68, null
  br i1 %cmp.i303, label %if.end85, label %if.then.i306

if.then.i306:                                     ; preds = %if.then84
  %impl.i304 = bitcast %struct.bus_dma_tag* %67 to %struct.bus_dma_impl**
  %69 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i304, align 8
  %map_unload.i305 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %69, i64 0, i32 12
  %70 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i305, align 8
  tail call void %70(%struct.bus_dma_tag* %67, %struct.bus_dmamap* nonnull %68) #7
  br label %if.end85

if.end85:                                         ; preds = %if.then.i306, %if.then84, %if.end82
  %verbuf = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 5
  %71 = load i32*, i32** %verbuf, align 8
  %cmp86 = icmp eq i32* %71, null
  %.pre338 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 2
  br i1 %cmp86, label %if.end91, label %if.then87

if.then87:                                        ; preds = %if.end85
  %72 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre338, align 8
  %73 = bitcast i32* %71 to i8*
  %verbuf_h_dmamap90 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 3
  %74 = load %struct.bus_dmamap*, %struct.bus_dmamap** %verbuf_h_dmamap90, align 8
  %impl.i308 = bitcast %struct.bus_dma_tag* %72 to %struct.bus_dma_impl**
  %75 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i308, align 8
  %mem_free.i309 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %75, i64 0, i32 6
  %76 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i309, align 8
  tail call void %76(%struct.bus_dma_tag* %72, i8* %73, %struct.bus_dmamap* %74) #7
  br label %if.end91

if.end91:                                         ; preds = %if.end85, %if.then87
  %77 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre338, align 8
  %cmp93 = icmp eq %struct.bus_dma_tag* %77, null
  br i1 %cmp93, label %if.end97, label %if.then94

if.then94:                                        ; preds = %if.end91
  %call96 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %77) #7
  br label %if.end97

if.end97:                                         ; preds = %if.end91, %if.then94
  %mfi_tb_init_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 31
  %78 = load i64, i64* %mfi_tb_init_busaddr, align 8
  %cmp98 = icmp eq i64 %78, 0
  br i1 %cmp98, label %if.end100, label %if.then99

if.then99:                                        ; preds = %if.end97
  %mfi_tb_init_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 29
  %79 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_init_dmat, align 8
  %mfi_tb_init_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 30
  %80 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_init_dmamap, align 8
  %cmp.i310 = icmp eq %struct.bus_dmamap* %80, null
  br i1 %cmp.i310, label %if.end100, label %if.then.i313

if.then.i313:                                     ; preds = %if.then99
  %impl.i311 = bitcast %struct.bus_dma_tag* %79 to %struct.bus_dma_impl**
  %81 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i311, align 8
  %map_unload.i312 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %81, i64 0, i32 12
  %82 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i312, align 8
  tail call void %82(%struct.bus_dma_tag* %79, %struct.bus_dmamap* nonnull %80) #7
  br label %if.end100

if.end100:                                        ; preds = %if.then.i313, %if.then99, %if.end97
  %mfi_tb_init = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 33
  %83 = load %union.mfi_frame*, %union.mfi_frame** %mfi_tb_init, align 8
  %cmp101 = icmp eq %union.mfi_frame* %83, null
  %.pre339 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 29
  br i1 %cmp101, label %if.end106, label %if.then102

if.then102:                                       ; preds = %if.end100
  %84 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre339, align 8
  %85 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %83, i64 0, i32 0, i32 0, i32 0
  %mfi_tb_init_dmamap105 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 30
  %86 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_init_dmamap105, align 8
  %impl.i315 = bitcast %struct.bus_dma_tag* %84 to %struct.bus_dma_impl**
  %87 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i315, align 8
  %mem_free.i316 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %87, i64 0, i32 6
  %88 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i316, align 8
  tail call void %88(%struct.bus_dma_tag* %84, i8* nonnull %85, %struct.bus_dmamap* %86) #7
  br label %if.end106

if.end106:                                        ; preds = %if.end100, %if.then102
  %89 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre339, align 8
  %cmp108 = icmp eq %struct.bus_dma_tag* %89, null
  br i1 %cmp108, label %if.end112, label %if.then109

if.then109:                                       ; preds = %if.end106
  %call111 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %89) #7
  br label %if.end112

if.end112:                                        ; preds = %if.end106, %if.then109
  %mfi_tb_ioc_init_busaddr = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 32
  %90 = load i64, i64* %mfi_tb_ioc_init_busaddr, align 8
  %cmp113 = icmp eq i64 %90, 0
  br i1 %cmp113, label %if.end115, label %if.then114

if.then114:                                       ; preds = %if.end112
  %mfi_tb_ioc_init_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 105
  %91 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_tb_ioc_init_dmat, align 8
  %mfi_tb_ioc_init_dmamap = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 106
  %92 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_ioc_init_dmamap, align 8
  %cmp.i317 = icmp eq %struct.bus_dmamap* %92, null
  br i1 %cmp.i317, label %if.end115, label %if.then.i320

if.then.i320:                                     ; preds = %if.then114
  %impl.i318 = bitcast %struct.bus_dma_tag* %91 to %struct.bus_dma_impl**
  %93 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i318, align 8
  %map_unload.i319 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %93, i64 0, i32 12
  %94 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i319, align 8
  tail call void %94(%struct.bus_dma_tag* %91, %struct.bus_dmamap* nonnull %92) #7
  br label %if.end115

if.end115:                                        ; preds = %if.then.i320, %if.then114, %if.end112
  %mfi_tb_ioc_init_desc = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 107
  %95 = load i8*, i8** %mfi_tb_ioc_init_desc, align 8
  %cmp116 = icmp eq i8* %95, null
  %.pre340 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 105
  br i1 %cmp116, label %if.end121, label %if.then117

if.then117:                                       ; preds = %if.end115
  %96 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre340, align 8
  %mfi_tb_ioc_init_dmamap120 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 106
  %97 = load %struct.bus_dmamap*, %struct.bus_dmamap** %mfi_tb_ioc_init_dmamap120, align 8
  %impl.i322 = bitcast %struct.bus_dma_tag* %96 to %struct.bus_dma_impl**
  %98 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i322, align 8
  %mem_free.i323 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %98, i64 0, i32 6
  %99 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i323, align 8
  tail call void %99(%struct.bus_dma_tag* %96, i8* nonnull %95, %struct.bus_dmamap* %97) #7
  br label %if.end121

if.end121:                                        ; preds = %if.end115, %if.then117
  %100 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %.pre340, align 8
  %cmp123 = icmp eq %struct.bus_dma_tag* %100, null
  br i1 %cmp123, label %if.end127, label %if.then124

if.then124:                                       ; preds = %if.end121
  %call126 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %100) #7
  br label %if.end127

if.end127:                                        ; preds = %if.end121, %if.then124
  %mfi_cmd_pool_tbolt = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 108
  %101 = load %struct.mfi_cmd_tbolt**, %struct.mfi_cmd_tbolt*** %mfi_cmd_pool_tbolt, align 8
  %cmp128 = icmp eq %struct.mfi_cmd_tbolt** %101, null
  br i1 %cmp128, label %if.end152, label %for.cond131.preheader

for.cond131.preheader:                            ; preds = %if.end127
  %102 = bitcast %struct.mfi_cmd_tbolt** %101 to i8*
  %mfi_max_fw_cmds132 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 66
  %103 = load i32, i32* %mfi_max_fw_cmds132, align 8
  %cmp133324 = icmp sgt i32 %103, 0
  br i1 %cmp133324, label %for.body134, label %for.cond.cleanup

for.cond.cleanup.loopexit:                        ; preds = %for.inc147
  %.phi.trans.insert = bitcast %struct.mfi_cmd_tbolt*** %mfi_cmd_pool_tbolt to i8**
  %.pre332 = load i8*, i8** %.phi.trans.insert, align 8
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond131.preheader, %for.cond.cleanup.loopexit
  %104 = phi i8* [ %.pre332, %for.cond.cleanup.loopexit ], [ %102, %for.cond131.preheader ]
  tail call void @free(i8* %104, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  store %struct.mfi_cmd_tbolt** null, %struct.mfi_cmd_tbolt*** %mfi_cmd_pool_tbolt, align 8
  br label %if.end152

for.body134:                                      ; preds = %for.cond131.preheader, %for.inc147.for.body134_crit_edge
  %105 = phi i32 [ %110, %for.inc147.for.body134_crit_edge ], [ %103, %for.cond131.preheader ]
  %106 = phi %struct.mfi_cmd_tbolt** [ %.pre, %for.inc147.for.body134_crit_edge ], [ %101, %for.cond131.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc147.for.body134_crit_edge ], [ 0, %for.cond131.preheader ]
  %arrayidx137 = getelementptr %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** %106, i64 %indvars.iv
  %107 = load %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** %arrayidx137, align 8
  %cmp138 = icmp eq %struct.mfi_cmd_tbolt* %107, null
  br i1 %cmp138, label %for.inc147, label %if.then139

if.then139:                                       ; preds = %for.body134
  %108 = bitcast %struct.mfi_cmd_tbolt* %107 to i8*
  tail call void @free(i8* %108, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  %109 = load %struct.mfi_cmd_tbolt**, %struct.mfi_cmd_tbolt*** %mfi_cmd_pool_tbolt, align 8
  %arrayidx145 = getelementptr %struct.mfi_cmd_tbolt*, %struct.mfi_cmd_tbolt** %109, i64 %indvars.iv
  store %struct.mfi_cmd_tbolt* null, %struct.mfi_cmd_tbolt** %arrayidx145, align 8
  %.pre331 = load i32, i32* %mfi_max_fw_cmds132, align 8
  br label %for.inc147

for.inc147:                                       ; preds = %for.body134, %if.then139
  %110 = phi i32 [ %105, %for.body134 ], [ %.pre331, %if.then139 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %111 = sext i32 %110 to i64
  %cmp133 = icmp slt i64 %indvars.iv.next, %111
  br i1 %cmp133, label %for.inc147.for.body134_crit_edge, label %for.cond.cleanup.loopexit

for.inc147.for.body134_crit_edge:                 ; preds = %for.inc147
  %.pre = load %struct.mfi_cmd_tbolt**, %struct.mfi_cmd_tbolt*** %mfi_cmd_pool_tbolt, align 8
  br label %for.body134

if.end152:                                        ; preds = %if.end127, %for.cond.cleanup
  %request_desc_pool = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 101
  %112 = load i8*, i8** %request_desc_pool, align 8
  %cmp153 = icmp eq i8* %112, null
  br i1 %cmp153, label %if.end158, label %if.then154

if.then154:                                       ; preds = %if.end152
  tail call void @free(i8* nonnull %112, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  store i8* null, i8** %request_desc_pool, align 8
  br label %if.end158

if.end158:                                        ; preds = %if.end152, %if.end65, %if.then154
  %mfi_buffer_dmat159 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %113 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat159, align 8
  %cmp160 = icmp eq %struct.bus_dma_tag* %113, null
  br i1 %cmp160, label %if.end164, label %if.then161

if.then161:                                       ; preds = %if.end158
  %call163 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %113) #7
  br label %if.end164

if.end164:                                        ; preds = %if.end158, %if.then161
  %mfi_parent_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 20
  %114 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat, align 8
  %cmp165 = icmp eq %struct.bus_dma_tag* %114, null
  br i1 %cmp165, label %if.end169, label %if.then166

if.then166:                                       ; preds = %if.end164
  %call168 = tail call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %114) #7
  br label %if.end169

if.end169:                                        ; preds = %if.end164, %if.then166
  %lo_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 0, i32 1
  %115 = load i32, i32* %lo_flags, align 8
  %and170 = and i32 %115, 65536
  %tobool171 = icmp eq i32 %and170, 0
  br i1 %tobool171, label %if.end174, label %if.then172

if.then172:                                       ; preds = %if.end169
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @_mtx_destroy(i64* nonnull %mtx_lock) #7
  %mfi_config_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 82
  tail call void @sx_destroy(%struct.sx* nonnull %mfi_config_lock) #7
  br label %if.end174

if.end174:                                        ; preds = %if.end169, %if.then172
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @_callout_stop_safe(%struct.callout*, i32, void (i8*)*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @destroy_dev(%struct.cdev*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_teardown_intr(%struct.device*, %struct.resource*, i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_release_resource(%struct.device*, i32, i32, %struct.resource*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_dma_tag_destroy(%struct.bus_dma_tag*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @_mtx_destroy(i64*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @sx_destroy(%struct.sx*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc void @mfi_abort(%struct.mfi_softc* %sc, %struct.mfi_command** %cm_abort) unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2559) #7
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %0 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %0, null
  br i1 %cmp.i, label %if.then, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 14
  %1 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %1, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %0, i32 %1, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 0
  %2 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %2, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %3 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %3, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 1
  %4 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %5 = load %struct.mfi_command*, %struct.mfi_command** %4, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %5, %0
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %4, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %6 = bitcast %struct.mfi_command* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %9 = load i64*, i64** %8, align 8
  store i64 %7, i64* %9, align 8
  %10 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %10, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %11 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %11, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 3
  %12 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %context3 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %12, i64 0, i32 0, i32 0, i32 8
  %13 = load i32, i32* %context3, align 1
  %14 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 72, i1 false)
  %15 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %16 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %15, align 8
  %context7 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %16, i64 0, i32 8
  store i32 %13, i32* %context7, align 1
  %17 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_abort_frame**
  %18 = load %struct.mfi_abort_frame*, %struct.mfi_abort_frame** %17, align 8
  %cmd = getelementptr inbounds %struct.mfi_abort_frame, %struct.mfi_abort_frame* %18, i64 0, i32 0, i32 0
  store i8 6, i8* %cmd, align 1
  %flags = getelementptr inbounds %struct.mfi_abort_frame, %struct.mfi_abort_frame* %18, i64 0, i32 0, i32 10
  store i16 0, i16* %flags, align 1
  %scsi_status = getelementptr inbounds %struct.mfi_abort_frame, %struct.mfi_abort_frame* %18, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status, align 1
  %19 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cm_frame13 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %19, i64 0, i32 3
  %20 = bitcast %union.mfi_frame** %cm_frame13 to %struct.mfi_frame_header**
  %21 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %20, align 8
  %context15 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %21, i64 0, i32 8
  %22 = load i32, i32* %context15, align 1
  %abort_context = getelementptr inbounds %struct.mfi_abort_frame, %struct.mfi_abort_frame* %18, i64 0, i32 1
  store i32 %22, i32* %abort_context, align 1
  %23 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cm_frame_busaddr = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 4
  %24 = load i64, i64* %cm_frame_busaddr, align 8
  %conv = trunc i64 %24 to i32
  %abort_mfi_addr_lo = getelementptr inbounds %struct.mfi_abort_frame, %struct.mfi_abort_frame* %18, i64 0, i32 3
  store i32 %conv, i32* %abort_mfi_addr_lo, align 1
  %25 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cm_frame_busaddr16 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %25, i64 0, i32 4
  %26 = load i64, i64* %cm_frame_busaddr16, align 8
  %shr = lshr i64 %26, 32
  %conv17 = trunc i64 %shr to i32
  %abort_mfi_addr_hi = getelementptr inbounds %struct.mfi_abort_frame, %struct.mfi_abort_frame* %18, i64 0, i32 4
  store i32 %conv17, i32* %abort_mfi_addr_hi, align 1
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 9
  store i8* null, i8** %cm_data, align 8
  store i32 16, i32* %cm_flags.i, align 8
  %call18 = tail call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %0) #9
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.end23, label %if.then21

if.then:                                          ; preds = %entry
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2561) #7
  br label %cleanup

if.then21:                                        ; preds = %do.end21.i
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %27 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call22 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %27, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.116, i64 0, i64 0)) #7
  br label %if.end23

if.end23:                                         ; preds = %do.end21.i, %if.then21
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %0) #9
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2585) #7
  %28 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cmp283 = icmp eq %struct.mfi_command* %28, null
  %29 = bitcast %struct.mfi_command** %cm_abort to i8*
  br i1 %cmp283, label %cleanup, label %while.body

while.body:                                       ; preds = %if.end23
  %30 = load i64, i64* @tick_sbt, align 8
  %31 = load i32, i32* @hz, align 4
  %mul = mul i32 %31, 5
  %conv30 = sext i32 %mul to i64
  %mul31 = mul i64 %30, %conv30
  %call32 = tail call i32 @_sleep(i8* %29, %struct.lock_object* null, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), i64 %mul31, i64 0, i32 256) #7
  %32 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cmp28 = icmp eq %struct.mfi_command* %32, null
  br i1 %cmp28, label %cleanup, label %while.body.1

if.then35:                                        ; preds = %while.body.4
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2593) #7
  %33 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cm_complete = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %33, i64 0, i32 16
  %34 = load void (%struct.mfi_command*)*, void (%struct.mfi_command*)** %cm_complete, align 8
  tail call void %34(%struct.mfi_command* %33) #7
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2595) #7
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %while.body, %while.body.1, %while.body.2, %while.body.3, %if.then35, %while.body.4, %if.then
  ret void

while.body.1:                                     ; preds = %while.body
  %35 = load i64, i64* @tick_sbt, align 8
  %36 = load i32, i32* @hz, align 4
  %mul.1 = mul i32 %36, 5
  %conv30.1 = sext i32 %mul.1 to i64
  %mul31.1 = mul i64 %35, %conv30.1
  %call32.1 = tail call i32 @_sleep(i8* nonnull %29, %struct.lock_object* null, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), i64 %mul31.1, i64 0, i32 256) #7
  %37 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cmp28.1 = icmp eq %struct.mfi_command* %37, null
  br i1 %cmp28.1, label %cleanup, label %while.body.2

while.body.2:                                     ; preds = %while.body.1
  %38 = load i64, i64* @tick_sbt, align 8
  %39 = load i32, i32* @hz, align 4
  %mul.2 = mul i32 %39, 5
  %conv30.2 = sext i32 %mul.2 to i64
  %mul31.2 = mul i64 %38, %conv30.2
  %call32.2 = tail call i32 @_sleep(i8* nonnull %29, %struct.lock_object* null, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), i64 %mul31.2, i64 0, i32 256) #7
  %40 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cmp28.2 = icmp eq %struct.mfi_command* %40, null
  br i1 %cmp28.2, label %cleanup, label %while.body.3

while.body.3:                                     ; preds = %while.body.2
  %41 = load i64, i64* @tick_sbt, align 8
  %42 = load i32, i32* @hz, align 4
  %mul.3 = mul i32 %42, 5
  %conv30.3 = sext i32 %mul.3 to i64
  %mul31.3 = mul i64 %41, %conv30.3
  %call32.3 = tail call i32 @_sleep(i8* nonnull %29, %struct.lock_object* null, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), i64 %mul31.3, i64 0, i32 256) #7
  %43 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cmp28.3 = icmp eq %struct.mfi_command* %43, null
  br i1 %cmp28.3, label %cleanup, label %while.body.4

while.body.4:                                     ; preds = %while.body.3
  %44 = load i64, i64* @tick_sbt, align 8
  %45 = load i32, i32* @hz, align 4
  %mul.4 = mul i32 %45, 5
  %conv30.4 = sext i32 %mul.4 to i64
  %mul31.4 = mul i64 %44, %conv30.4
  %call32.4 = tail call i32 @_sleep(i8* nonnull %29, %struct.lock_object* null, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), i64 %mul31.4, i64 0, i32 256) #7
  %46 = load %struct.mfi_command*, %struct.mfi_command** %cm_abort, align 8
  %cmp28.4 = icmp eq %struct.mfi_command* %46, null
  br i1 %cmp28.4, label %cleanup, label %if.then35
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_mapcmd(%struct.mfi_softc* %sc, %struct.mfi_command* %cm) local_unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2309) #7
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 9
  %0 = load i8*, i8** %cm_data, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.else26, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %1 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %2 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %1, align 8
  %cmd = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %2, i64 0, i32 0
  %3 = load i8, i8* %cmd, align 1
  %cmp1 = icmp eq i8 %3, 8
  br i1 %cmp1, label %if.else26, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 14
  %4 = load i32, i32* %cm_flags, align 8
  %and = lshr i32 %4, 4
  %and.lobit = and i32 %and, 1
  %and4 = and i32 %4, 64
  %tobool5 = icmp eq i32 %and4, 0
  br i1 %tobool5, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %5 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 7
  %6 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %7 = bitcast i8* %0 to %union.ccb*
  %8 = bitcast %struct.mfi_command* %cm to i8*
  %call = tail call i32 @bus_dmamap_load_ccb(%struct.bus_dma_tag* %5, %struct.bus_dmamap* %6, %union.ccb* %7, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_data_cb, i8* %8, i32 %and.lobit) #7
  br label %if.end21

if.else:                                          ; preds = %if.then
  %9 = trunc i32 %4 to i8
  %tobool10 = icmp slt i8 %9, 0
  %mfi_buffer_dmat12 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %10 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat12, align 8
  %cm_dmamap13 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 7
  %11 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap13, align 8
  br i1 %tobool10, label %if.then11, label %if.else15

if.then11:                                        ; preds = %if.else
  %cm_private = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 17
  %12 = bitcast i8** %cm_private to %struct.bio**
  %13 = load %struct.bio*, %struct.bio** %12, align 8
  %14 = bitcast %struct.mfi_command* %cm to i8*
  %call14 = tail call i32 @bus_dmamap_load_bio(%struct.bus_dma_tag* %10, %struct.bus_dmamap* %11, %struct.bio* %13, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_data_cb, i8* %14, i32 %and.lobit) #7
  br label %if.end21

if.else15:                                        ; preds = %if.else
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 10
  %15 = load i32, i32* %cm_len, align 8
  %conv19 = sext i32 %15 to i64
  %16 = bitcast %struct.mfi_command* %cm to i8*
  %call20 = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %10, %struct.bus_dmamap* %11, i8* nonnull %0, i64 %conv19, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_data_cb, i8* %16, i32 %and.lobit) #7
  br label %if.end21

if.end21:                                         ; preds = %if.then11, %if.else15, %if.then6
  %error.0 = phi i32 [ %call, %if.then6 ], [ %call14, %if.then11 ], [ %call20, %if.else15 ]
  %cmp22 = icmp eq i32 %error.0, 36
  br i1 %cmp22, label %if.then24, label %cleanup

if.then24:                                        ; preds = %if.end21
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 1
  %17 = load i32, i32* %mfi_flags, align 8
  %or = or i32 %17, 2
  store i32 %or, i32* %mfi_flags, align 8
  br label %cleanup

if.else26:                                        ; preds = %land.lhs.true, %entry
  %call27 = tail call fastcc i32 @mfi_send_frame(%struct.mfi_softc* %sc, %struct.mfi_command* nonnull %cm) #9
  br label %cleanup

cleanup:                                          ; preds = %if.else26, %if.end21, %if.then24
  %retval.0 = phi i32 [ 0, %if.then24 ], [ %error.0, %if.end21 ], [ %call27, %if.else26 ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat norecurse noredzone nounwind ssp
define dso_local i32 @mfi_build_cdb(i32 %readop, i8 zeroext %byte2, i64 %lba, i32 %block_count, i8* %cdb) local_unnamed_addr #3 {
entry:
  %0 = icmp ult i64 %lba, 2097152
  %1 = icmp ult i32 %block_count, 256
  %or.cond = and i1 %0, %1
  %cmp4 = icmp eq i8 %byte2, 0
  %or.cond116 = and i1 %cmp4, %or.cond
  br i1 %or.cond116, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tobool = icmp eq i32 %readop, 0
  %cond = select i1 %tobool, i8 10, i8 8
  store i8 %cond, i8* %cdb, align 1
  %conv7 = trunc i64 %lba to i32
  %addr = getelementptr inbounds i8, i8* %cdb, i64 1
  %shr.i = lshr i32 %conv7, 16
  %conv.i = trunc i32 %shr.i to i8
  store i8 %conv.i, i8* %addr, align 1
  %shr1.i = lshr i32 %conv7, 8
  %conv3.i = trunc i32 %shr1.i to i8
  %arrayidx4.i = getelementptr i8, i8* %cdb, i64 2
  store i8 %conv3.i, i8* %arrayidx4.i, align 1
  %conv6.i = trunc i64 %lba to i8
  %arrayidx7.i = getelementptr i8, i8* %cdb, i64 3
  store i8 %conv6.i, i8* %arrayidx7.i, align 1
  br label %if.end65

if.else:                                          ; preds = %entry
  %2 = icmp ult i32 %block_count, 65536
  %3 = icmp ult i64 %lba, 4294967296
  %or.cond117 = and i1 %3, %2
  %tobool19 = icmp eq i32 %readop, 0
  br i1 %or.cond117, label %if.then17, label %land.lhs.true33

if.then17:                                        ; preds = %if.else
  %cond20 = select i1 %tobool19, i8 42, i8 40
  store i8 %cond20, i8* %cdb, align 1
  %4 = getelementptr inbounds i8, i8* %cdb, i64 1
  store i8 %byte2, i8* %4, align 1
  %conv24 = trunc i64 %lba to i32
  %addr25 = getelementptr inbounds i8, i8* %cdb, i64 2
  %shr.i153 = lshr i32 %conv24, 24
  %conv.i154 = trunc i32 %shr.i153 to i8
  store i8 %conv.i154, i8* %addr25, align 1
  %shr1.i155 = lshr i32 %conv24, 16
  %conv3.i156 = trunc i32 %shr1.i155 to i8
  %arrayidx4.i157 = getelementptr i8, i8* %cdb, i64 3
  store i8 %conv3.i156, i8* %arrayidx4.i157, align 1
  %shr5.i158 = lshr i32 %conv24, 8
  %conv7.i159 = trunc i32 %shr5.i158 to i8
  %arrayidx8.i160 = getelementptr i8, i8* %cdb, i64 4
  store i8 %conv7.i159, i8* %arrayidx8.i160, align 1
  %conv10.i161 = trunc i64 %lba to i8
  %arrayidx11.i162 = getelementptr i8, i8* %cdb, i64 5
  store i8 %conv10.i161, i8* %arrayidx11.i162, align 1
  %5 = getelementptr inbounds i8, i8* %cdb, i64 6
  store i8 0, i8* %5, align 1
  %length27 = getelementptr inbounds i8, i8* %cdb, i64 7
  %shr.i151 = lshr i32 %block_count, 8
  %conv.i152 = trunc i32 %shr.i151 to i8
  store i8 %conv.i152, i8* %length27, align 1
  br label %if.end65

land.lhs.true33:                                  ; preds = %if.else
  br i1 %3, label %if.then37, label %if.else51

if.then37:                                        ; preds = %land.lhs.true33
  %cond40 = select i1 %tobool19, i8 -86, i8 -88
  store i8 %cond40, i8* %cdb, align 1
  %6 = getelementptr inbounds i8, i8* %cdb, i64 1
  store i8 %byte2, i8* %6, align 1
  %conv44 = trunc i64 %lba to i32
  %addr45 = getelementptr inbounds i8, i8* %cdb, i64 2
  %shr.i141 = lshr i32 %conv44, 24
  %conv.i142 = trunc i32 %shr.i141 to i8
  store i8 %conv.i142, i8* %addr45, align 1
  %shr1.i143 = lshr i32 %conv44, 16
  %conv3.i144 = trunc i32 %shr1.i143 to i8
  %arrayidx4.i145 = getelementptr i8, i8* %cdb, i64 3
  store i8 %conv3.i144, i8* %arrayidx4.i145, align 1
  %shr5.i146 = lshr i32 %conv44, 8
  %conv7.i147 = trunc i32 %shr5.i146 to i8
  %arrayidx8.i148 = getelementptr i8, i8* %cdb, i64 4
  store i8 %conv7.i147, i8* %arrayidx8.i148, align 1
  %conv10.i149 = trunc i64 %lba to i8
  %arrayidx11.i150 = getelementptr i8, i8* %cdb, i64 5
  store i8 %conv10.i149, i8* %arrayidx11.i150, align 1
  %7 = getelementptr inbounds i8, i8* %cdb, i64 10
  store i8 0, i8* %7, align 1
  %length48 = getelementptr inbounds i8, i8* %cdb, i64 6
  %shr.i131 = lshr i32 %block_count, 24
  %conv.i132 = trunc i32 %shr.i131 to i8
  store i8 %conv.i132, i8* %length48, align 1
  %shr1.i133 = lshr i32 %block_count, 16
  %conv3.i134 = trunc i32 %shr1.i133 to i8
  %arrayidx4.i135 = getelementptr i8, i8* %cdb, i64 7
  store i8 %conv3.i134, i8* %arrayidx4.i135, align 1
  %shr5.i136 = lshr i32 %block_count, 8
  %conv7.i137 = trunc i32 %shr5.i136 to i8
  %arrayidx8.i138 = getelementptr i8, i8* %cdb, i64 8
  store i8 %conv7.i137, i8* %arrayidx8.i138, align 1
  br label %if.end65

if.else51:                                        ; preds = %land.lhs.true33
  %cond54 = select i1 %tobool19, i8 -118, i8 -120
  store i8 %cond54, i8* %cdb, align 1
  %8 = getelementptr inbounds i8, i8* %cdb, i64 1
  store i8 %byte2, i8* %8, align 1
  %addr58 = getelementptr inbounds i8, i8* %cdb, i64 2
  %shr.i123 = lshr i64 %lba, 56
  %conv.i124 = trunc i64 %shr.i123 to i8
  store i8 %conv.i124, i8* %addr58, align 1
  %shr1.i125 = lshr i64 %lba, 48
  %conv3.i126 = trunc i64 %shr1.i125 to i8
  %arrayidx4.i127 = getelementptr i8, i8* %cdb, i64 3
  store i8 %conv3.i126, i8* %arrayidx4.i127, align 1
  %shr5.i128 = lshr i64 %lba, 40
  %conv7.i129 = trunc i64 %shr5.i128 to i8
  %arrayidx8.i130 = getelementptr i8, i8* %cdb, i64 4
  store i8 %conv7.i129, i8* %arrayidx8.i130, align 1
  %shr9.i = lshr i64 %lba, 32
  %conv11.i = trunc i64 %shr9.i to i8
  %arrayidx12.i = getelementptr i8, i8* %cdb, i64 5
  store i8 %conv11.i, i8* %arrayidx12.i, align 1
  %shr13.i = lshr i64 %lba, 24
  %conv15.i = trunc i64 %shr13.i to i8
  %arrayidx16.i = getelementptr i8, i8* %cdb, i64 6
  store i8 %conv15.i, i8* %arrayidx16.i, align 1
  %shr17.i = lshr i64 %lba, 16
  %conv19.i = trunc i64 %shr17.i to i8
  %arrayidx20.i = getelementptr i8, i8* %cdb, i64 7
  store i8 %conv19.i, i8* %arrayidx20.i, align 1
  %shr21.i = lshr i64 %lba, 8
  %conv23.i = trunc i64 %shr21.i to i8
  %arrayidx24.i = getelementptr i8, i8* %cdb, i64 8
  store i8 %conv23.i, i8* %arrayidx24.i, align 1
  %conv26.i = trunc i64 %lba to i8
  %arrayidx27.i = getelementptr i8, i8* %cdb, i64 9
  store i8 %conv26.i, i8* %arrayidx27.i, align 1
  %9 = getelementptr inbounds i8, i8* %cdb, i64 14
  store i8 0, i8* %9, align 1
  %length61 = getelementptr inbounds i8, i8* %cdb, i64 10
  %shr.i118 = lshr i32 %block_count, 24
  %conv.i119 = trunc i32 %shr.i118 to i8
  store i8 %conv.i119, i8* %length61, align 1
  %shr1.i120 = lshr i32 %block_count, 16
  %conv3.i121 = trunc i32 %shr1.i120 to i8
  %arrayidx4.i122 = getelementptr i8, i8* %cdb, i64 11
  store i8 %conv3.i121, i8* %arrayidx4.i122, align 1
  %shr5.i = lshr i32 %block_count, 8
  %conv7.i = trunc i32 %shr5.i to i8
  %arrayidx8.i = getelementptr i8, i8* %cdb, i64 12
  store i8 %conv7.i, i8* %arrayidx8.i, align 1
  br label %if.end65

if.end65:                                         ; preds = %if.then17, %if.else51, %if.then37, %if.then
  %.sink = phi i64 [ 8, %if.then17 ], [ 13, %if.else51 ], [ 9, %if.then37 ], [ 4, %if.then ]
  %.sink163 = phi i64 [ 9, %if.then17 ], [ 15, %if.else51 ], [ 11, %if.then37 ], [ 5, %if.then ]
  %cdb_len.0 = phi i32 [ 10, %if.then17 ], [ 16, %if.else51 ], [ 12, %if.then37 ], [ 6, %if.then ]
  %conv2.i = trunc i32 %block_count to i8
  %arrayidx3.i = getelementptr i8, i8* %cdb, i64 %.sink
  store i8 %conv2.i, i8* %arrayidx3.i, align 1
  %10 = getelementptr inbounds i8, i8* %cdb, i64 %.sink163
  store i8 0, i8* %10, align 1
  ret i32 %cdb_len.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_dmamap_load_ccb(%struct.bus_dma_tag*, %struct.bus_dmamap*, %union.ccb*, void (i8*, %struct.bus_dma_segment*, i32, i32)*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_data_cb(i8* %arg, %struct.bus_dma_segment* nocapture readonly %segs, i32 %nsegs, i32 %error) #0 {
entry:
  %0 = bitcast i8* %arg to %struct.mfi_command*
  %cm_sc = getelementptr inbounds i8, i8* %arg, i64 24
  %1 = bitcast i8* %cm_sc to %struct.mfi_softc**
  %2 = load %struct.mfi_softc*, %struct.mfi_softc** %1, align 8
  %cm_frame = getelementptr inbounds i8, i8* %arg, i64 32
  %3 = bitcast i8* %cm_frame to %struct.mfi_frame_header**
  %4 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %3, align 8
  %cm_sg = getelementptr inbounds i8, i8* %arg, i64 72
  %5 = bitcast i8* %cm_sg to %union.mfi_sgl**
  %6 = load %union.mfi_sgl*, %union.mfi_sgl** %5, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %2, i64 0, i32 81, i32 1
  %7 = load volatile i64, i64* %mtx_lock, align 8
  %and = and i64 %7, -8
  %8 = inttoptr i64 %and to %struct.thread*
  %9 = tail call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #12, !srcloc !5
  %cmp = icmp ne %struct.thread* %9, %8
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2359) #7
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool = icmp eq i32 %error, 0
  br i1 %tobool, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end
  %call6 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i64 0, i64 0), i32 %error) #7
  %cm_error = getelementptr inbounds i8, i8* %arg, i64 132
  %10 = bitcast i8* %cm_error to i32*
  store i32 %error, i32* %10, align 4
  tail call void @mfi_complete(%struct.mfi_softc* %2, %struct.mfi_command* %0) #9
  br label %out

if.end7:                                          ; preds = %if.end
  %11 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %3, align 8
  %cmd = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %11, i64 0, i32 0
  %12 = load i8, i8* %cmd, align 1
  switch i8 %12, label %if.end7.if.end81_crit_edge [
    i8 4, label %land.lhs.true
    i8 1, label %land.lhs.true
    i8 2, label %land.lhs.true
    i8 8, label %if.then51
  ]

if.end7.if.end81_crit_edge:                       ; preds = %if.end7
  %.pre310 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %2, i64 0, i32 1
  br label %if.end81

land.lhs.true:                                    ; preds = %if.end7, %if.end7, %if.end7
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %2, i64 0, i32 1
  %13 = load i32, i32* %mfi_flags, align 8
  %14 = trunc i32 %13 to i8
  %tobool27 = icmp slt i8 %14, 0
  br i1 %tobool27, label %for.cond.preheader, label %if.end81

for.cond.preheader:                               ; preds = %land.lhs.true
  %cmp29296 = icmp sgt i32 %nsegs, 0
  br i1 %cmp29296, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader
  %wide.trip.count308 = zext i32 %nsegs to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv306 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next307, %for.body ]
  %ds_addr = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 %indvars.iv306, i32 0
  %15 = load i64, i64* %ds_addr, align 8
  %addr = getelementptr %union.mfi_sgl, %union.mfi_sgl* %6, i64 0, i32 0, i64 %indvars.iv306, i32 0
  store i64 %15, i64* %addr, align 1
  %ds_len = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 %indvars.iv306, i32 1
  %16 = load i64, i64* %ds_len, align 8
  %conv35 = trunc i64 %16 to i32
  %len = getelementptr %union.mfi_sgl, %union.mfi_sgl* %6, i64 0, i32 0, i64 %indvars.iv306, i32 1
  store i32 %conv35, i32* %len, align 1
  %flag = getelementptr %union.mfi_sgl, %union.mfi_sgl* %6, i64 0, i32 0, i64 %indvars.iv306, i32 2
  store i32 0, i32* %flag, align 1
  %indvars.iv.next307 = add nuw nsw i64 %indvars.iv306, 1
  %exitcond309 = icmp eq i64 %indvars.iv.next307, %wide.trip.count308
  br i1 %exitcond309, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %flags = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %4, i64 0, i32 10
  %17 = load i16, i16* %flags, align 1
  %18 = or i16 %17, 34
  store i16 %18, i16* %flags, align 1
  br label %if.end148

if.then51:                                        ; preds = %if.end7
  %cm_stp_len = getelementptr inbounds i8, i8* %arg, i64 92
  %19 = bitcast i8* %cm_stp_len to i32*
  %20 = load i32, i32* %19, align 4
  %mfi_flags52 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %2, i64 0, i32 1
  %21 = load i32, i32* %mfi_flags52, align 8
  %and53 = and i32 %21, 1
  %cmp54 = icmp eq i32 %and53, 0
  %ds_addr58 = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 0, i32 0
  %22 = load i64, i64* %ds_addr58, align 8
  br i1 %cmp54, label %if.then56, label %if.else68

if.then56:                                        ; preds = %if.then51
  %conv59 = trunc i64 %22 to i32
  %arrayidx61 = bitcast %union.mfi_sgl* %6 to %struct.mfi_sg32*
  %addr62 = bitcast %union.mfi_sgl* %6 to i32*
  store i32 %conv59, i32* %addr62, align 1
  %len67 = getelementptr inbounds %struct.mfi_sg32, %struct.mfi_sg32* %arrayidx61, i64 0, i32 1
  store i32 %20, i32* %len67, align 1
  br label %if.end81

if.else68:                                        ; preds = %if.then51
  %addr73 = getelementptr inbounds %union.mfi_sgl, %union.mfi_sgl* %6, i64 0, i32 0, i64 0, i32 0
  store i64 %22, i64* %addr73, align 1
  %23 = getelementptr inbounds %union.mfi_sgl, %union.mfi_sgl* %6, i64 0, i32 0, i64 0, i32 1
  store i32 %20, i32* %23, align 1
  br label %if.end81

if.end81:                                         ; preds = %if.end7.if.end81_crit_edge, %land.lhs.true, %if.then56, %if.else68
  %mfi_flags82.pre-phi = phi i32* [ %.pre310, %if.end7.if.end81_crit_edge ], [ %mfi_flags, %land.lhs.true ], [ %mfi_flags52, %if.then56 ], [ %mfi_flags52, %if.else68 ]
  %j.0 = phi i32 [ 0, %if.end7.if.end81_crit_edge ], [ 0, %land.lhs.true ], [ 1, %if.then56 ], [ 1, %if.else68 ]
  %first.0 = phi i32 [ 0, %if.end7.if.end81_crit_edge ], [ 0, %land.lhs.true ], [ %20, %if.then56 ], [ %20, %if.else68 ]
  %24 = load i32, i32* %mfi_flags82.pre-phi, align 8
  %and83 = and i32 %24, 1
  %cmp84 = icmp eq i32 %and83, 0
  %cmp88287 = icmp sgt i32 %nsegs, 0
  br i1 %cmp84, label %for.cond87.preheader, label %for.cond114.preheader

for.cond114.preheader:                            ; preds = %if.end81
  br i1 %cmp88287, label %for.body117.lr.ph, label %for.end140

for.body117.lr.ph:                                ; preds = %for.cond114.preheader
  %sg64123 = bitcast %union.mfi_sgl* %6 to [1 x %struct.mfi_sg64]*
  %25 = zext i32 %j.0 to i64
  %wide.trip.count304 = zext i32 %nsegs to i64
  %ds_addr120.peel = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 0, i32 0
  %26 = load i64, i64* %ds_addr120.peel, align 8
  %conv121.peel = sext i32 %first.0 to i64
  %add122.peel = add i64 %26, %conv121.peel
  %addr126.peel = getelementptr [1 x %struct.mfi_sg64], [1 x %struct.mfi_sg64]* %sg64123, i64 0, i64 %25, i32 0
  store i64 %add122.peel, i64* %addr126.peel, align 1
  %ds_len129.peel = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 0, i32 1
  %27 = load i64, i64* %ds_len129.peel, align 8
  %28 = trunc i64 %27 to i32
  %conv132.peel = sub i32 %28, %first.0
  %len137.peel = getelementptr [1 x %struct.mfi_sg64], [1 x %struct.mfi_sg64]* %sg64123, i64 0, i64 %25, i32 1
  store i32 %conv132.peel, i32* %len137.peel, align 1
  %exitcond305.peel = icmp eq i32 %nsegs, 1
  br i1 %exitcond305.peel, label %for.end140.loopexit, label %for.body117

for.cond87.preheader:                             ; preds = %if.end81
  br i1 %cmp88287, label %for.body90.lr.ph, label %if.end148

for.body90.lr.ph:                                 ; preds = %for.cond87.preheader
  %sg3296 = bitcast %union.mfi_sgl* %6 to [1 x %struct.mfi_sg32]*
  %29 = zext i32 %j.0 to i64
  %wide.trip.count = zext i32 %nsegs to i64
  %ds_addr93.peel = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 0, i32 0
  %30 = load i64, i64* %ds_addr93.peel, align 8
  %31 = trunc i64 %30 to i32
  %conv95.peel = add i32 %first.0, %31
  %addr99.peel = getelementptr [1 x %struct.mfi_sg32], [1 x %struct.mfi_sg32]* %sg3296, i64 0, i64 %29, i32 0
  store i32 %conv95.peel, i32* %addr99.peel, align 1
  %ds_len102.peel = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 0, i32 1
  %32 = load i64, i64* %ds_len102.peel, align 8
  %33 = trunc i64 %32 to i32
  %conv104.peel = sub i32 %33, %first.0
  %len109.peel = getelementptr [1 x %struct.mfi_sg32], [1 x %struct.mfi_sg32]* %sg3296, i64 0, i64 %29, i32 1
  store i32 %conv104.peel, i32* %len109.peel, align 1
  %exitcond.peel = icmp eq i32 %nsegs, 1
  br i1 %exitcond.peel, label %if.end145.loopexit, label %for.body90

for.body90:                                       ; preds = %for.body90.lr.ph, %for.body90
  %indvars.iv298 = phi i64 [ %indvars.iv.next299, %for.body90 ], [ 1, %for.body90.lr.ph ]
  %indvars.iv.in = phi i64 [ %indvars.iv, %for.body90 ], [ %29, %for.body90.lr.ph ]
  %indvars.iv = add nuw nsw i64 %indvars.iv.in, 1
  %ds_addr93 = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 %indvars.iv298, i32 0
  %34 = load i64, i64* %ds_addr93, align 8
  %35 = trunc i64 %34 to i32
  %addr99 = getelementptr [1 x %struct.mfi_sg32], [1 x %struct.mfi_sg32]* %sg3296, i64 0, i64 %indvars.iv, i32 0
  store i32 %35, i32* %addr99, align 1
  %ds_len102 = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 %indvars.iv298, i32 1
  %36 = load i64, i64* %ds_len102, align 8
  %37 = trunc i64 %36 to i32
  %len109 = getelementptr [1 x %struct.mfi_sg32], [1 x %struct.mfi_sg32]* %sg3296, i64 0, i64 %indvars.iv, i32 1
  store i32 %37, i32* %len109, align 1
  %indvars.iv.next299 = add nuw nsw i64 %indvars.iv298, 1
  %exitcond = icmp eq i64 %indvars.iv.next299, %wide.trip.count
  br i1 %exitcond, label %if.end145.loopexit, label %for.body90, !llvm.loop !6

for.body117:                                      ; preds = %for.body117.lr.ph, %for.body117
  %indvars.iv302 = phi i64 [ %indvars.iv.next303, %for.body117 ], [ 1, %for.body117.lr.ph ]
  %indvars.iv300.in = phi i64 [ %indvars.iv300, %for.body117 ], [ %25, %for.body117.lr.ph ]
  %indvars.iv300 = add nuw nsw i64 %indvars.iv300.in, 1
  %ds_addr120 = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 %indvars.iv302, i32 0
  %38 = load i64, i64* %ds_addr120, align 8
  %addr126 = getelementptr [1 x %struct.mfi_sg64], [1 x %struct.mfi_sg64]* %sg64123, i64 0, i64 %indvars.iv300, i32 0
  store i64 %38, i64* %addr126, align 1
  %ds_len129 = getelementptr inbounds %struct.bus_dma_segment, %struct.bus_dma_segment* %segs, i64 %indvars.iv302, i32 1
  %39 = load i64, i64* %ds_len129, align 8
  %40 = trunc i64 %39 to i32
  %len137 = getelementptr [1 x %struct.mfi_sg64], [1 x %struct.mfi_sg64]* %sg64123, i64 0, i64 %indvars.iv300, i32 1
  store i32 %40, i32* %len137, align 1
  %indvars.iv.next303 = add nuw nsw i64 %indvars.iv302, 1
  %exitcond305 = icmp eq i64 %indvars.iv.next303, %wide.trip.count304
  br i1 %exitcond305, label %for.end140.loopexit, label %for.body117, !llvm.loop !8

for.end140.loopexit:                              ; preds = %for.body117, %for.body117.lr.ph
  %41 = add i32 %j.0, %nsegs
  br label %for.end140

for.end140:                                       ; preds = %for.end140.loopexit, %for.cond114.preheader
  %j.2.lcssa = phi i32 [ %j.0, %for.cond114.preheader ], [ %41, %for.end140.loopexit ]
  %flags141 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %4, i64 0, i32 10
  %42 = load i16, i16* %flags141, align 1
  %43 = or i16 %42, 2
  store i16 %43, i16* %flags141, align 1
  br label %if.end148

if.end145.loopexit:                               ; preds = %for.body90, %for.body90.lr.ph
  %44 = add i32 %j.0, %nsegs
  br label %if.end148

if.end148:                                        ; preds = %for.end140, %for.cond87.preheader, %if.end145.loopexit, %for.end
  %j.3.sink = phi i32 [ %nsegs, %for.end ], [ %j.2.lcssa, %for.end140 ], [ %j.0, %for.cond87.preheader ], [ %44, %if.end145.loopexit ]
  %conv146 = trunc i32 %j.3.sink to i8
  %sg_count147 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %4, i64 0, i32 7
  store i8 %conv146, i8* %sg_count147, align 1
  %cm_flags = getelementptr inbounds i8, i8* %arg, i64 104
  %45 = bitcast i8* %cm_flags to i32*
  %46 = load i32, i32* %45, align 8
  %and149 = and i32 %46, 2
  %tobool150 = icmp eq i32 %and149, 0
  br i1 %tobool150, label %if.end157, label %if.then151

if.then151:                                       ; preds = %if.end148
  %flags153 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %4, i64 0, i32 10
  %47 = load i16, i16* %flags153, align 1
  %48 = or i16 %47, 16
  store i16 %48, i16* %flags153, align 1
  %.pre = load i32, i32* %45, align 8
  br label %if.end157

if.end157:                                        ; preds = %if.end148, %if.then151
  %49 = phi i32 [ %.pre, %if.then151 ], [ %46, %if.end148 ]
  %dir.0 = phi i32 [ 1, %if.then151 ], [ 0, %if.end148 ]
  %and159 = and i32 %49, 4
  %tobool160 = icmp eq i32 %and159, 0
  br i1 %tobool160, label %if.end167, label %if.then161

if.then161:                                       ; preds = %if.end157
  %or162 = or i32 %dir.0, 4
  %flags163 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %4, i64 0, i32 10
  %50 = load i16, i16* %flags163, align 1
  %51 = or i16 %50, 8
  store i16 %51, i16* %flags163, align 1
  br label %if.end167

if.end167:                                        ; preds = %if.end157, %if.then161
  %dir.1 = phi i32 [ %or162, %if.then161 ], [ %dir.0, %if.end157 ]
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %2, i64 0, i32 21
  %52 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds i8, i8* %arg, i64 64
  %53 = bitcast i8* %cm_dmamap to %struct.bus_dmamap**
  %54 = load %struct.bus_dmamap*, %struct.bus_dmamap** %53, align 8
  %cmp.i = icmp eq %struct.bus_dmamap* %54, null
  br i1 %cmp.i, label %bus_dmamap_sync.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end167
  %impl.i = bitcast %struct.bus_dma_tag* %52 to %struct.bus_dma_impl**
  %55 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_sync.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %55, i64 0, i32 13
  %56 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i, align 8
  tail call void %56(%struct.bus_dma_tag* %52, %struct.bus_dmamap* nonnull %54, i32 %dir.1) #7
  br label %bus_dmamap_sync.exit

bus_dmamap_sync.exit:                             ; preds = %if.end167, %if.then.i
  %57 = load i32, i32* %45, align 8
  %or169 = or i32 %57, 1
  store i32 %or169, i32* %45, align 8
  %mfi_sge_size170 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %2, i64 0, i32 69
  %58 = load i32, i32* %mfi_sge_size170, align 4
  %mul = mul i32 %58, %nsegs
  %cm_total_frame_size = getelementptr inbounds i8, i8* %arg, i64 96
  %59 = bitcast i8* %cm_total_frame_size to i32*
  %60 = load i32, i32* %59, align 8
  %add171 = add i32 %60, %mul
  store i32 %add171, i32* %59, align 8
  %sub173 = add i32 %add171, -1
  %div = sdiv i32 %sub173, 64
  %cm_extra_frames = getelementptr inbounds i8, i8* %arg, i64 100
  %61 = bitcast i8* %cm_extra_frames to i32*
  store i32 %div, i32* %61, align 4
  %call174 = tail call fastcc i32 @mfi_send_frame(%struct.mfi_softc* nonnull %2, %struct.mfi_command* nonnull %0) #9
  %cmp175 = icmp eq i32 %call174, 0
  br i1 %cmp175, label %out, label %if.then177

if.then177:                                       ; preds = %bus_dmamap_sync.exit
  %call178 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.114, i64 0, i64 0), i32 %call174) #7
  %cm_error179 = getelementptr inbounds i8, i8* %arg, i64 132
  %62 = bitcast i8* %cm_error179 to i32*
  store i32 %call174, i32* %62, align 4
  tail call void @mfi_complete(%struct.mfi_softc* nonnull %2, %struct.mfi_command* nonnull %0) #9
  br label %out

out:                                              ; preds = %bus_dmamap_sync.exit, %if.then177, %if.then5
  br i1 %cmp, label %if.then183, label %if.end186

if.then183:                                       ; preds = %out
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2447) #7
  br label %if.end186

if.end186:                                        ; preds = %if.then183, %out
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @bus_dmamap_load_bio(%struct.bus_dma_tag*, %struct.bus_dmamap*, %struct.bio*, void (i8*, %struct.bus_dma_segment*, i32, i32)*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @mfi_send_frame(%struct.mfi_softc* %sc, %struct.mfi_command* %cm) unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2457) #7
  %MFA_enabled = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 92
  %0 = load i32, i32* %MFA_enabled, align 4
  %tobool = icmp eq i32 %0, 0
  br i1 %tobool, label %if.else, label %if.end

if.else:                                          ; preds = %entry
  %1 = load i32, i32* @mfi_polled_cmd_timeout, align 4
  %mul.i = mul i32 %1, 1000
  %cm_frame.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %2 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_frame_header**
  %3 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %2, align 8
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 14
  %4 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %4, 16
  %cmp.i = icmp eq i32 %and.i, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.else
  %5 = load volatile i64, i64* @time_uptime, align 8
  %cm_timestamp.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 1
  store i64 %5, i64* %cm_timestamp.i, align 8
  %and.i.i = and i32 %4, 3584
  %cmp.i.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i.i, label %do.body2.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.80, i64 0, i64 0), %struct.mfi_command* nonnull %cm, i32 %4) #11
  unreachable

do.body2.i.i:                                     ; preds = %if.then.i
  %cm_sc.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  %6 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i.i, align 8
  %tqh_last.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %6, i64 0, i32 13, i32 1
  %7 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i.i, align 8
  %8 = load %struct.mfi_command*, %struct.mfi_command** %7, align 8
  %cmp3.i.i = icmp eq %struct.mfi_command* %8, null
  br i1 %cmp3.i.i, label %do.end.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %do.body2.i.i
  %mfi_busy.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %6, i64 0, i32 13
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.BUSYQ* nonnull %mfi_busy.i.i) #11
  unreachable

do.end.i.i:                                       ; preds = %do.body2.i.i
  %tqe_next.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 0
  store %struct.mfi_command* null, %struct.mfi_command** %tqe_next.i.i, align 8
  %9 = bitcast %struct.mfi_command*** %tqh_last.i.i to i64*
  %10 = load i64, i64* %9, align 8
  %tqe_prev.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 1
  %11 = bitcast %struct.mfi_command*** %tqe_prev.i.i to i64*
  store i64 %10, i64* %11, align 8
  %12 = load %struct.mfi_command**, %struct.mfi_command*** %tqh_last.i.i, align 8
  store %struct.mfi_command* %cm, %struct.mfi_command** %12, align 8
  %13 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i.i, align 8
  %tqh_last19.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %13, i64 0, i32 13, i32 1
  store %struct.mfi_command** %tqe_next.i.i, %struct.mfi_command*** %tqh_last19.i.i, align 8
  %14 = load i32, i32* %cm_flags.i, align 8
  %or.i.i = or i32 %14, 2048
  store i32 %or.i.i, i32* %cm_flags.i, align 8
  %15 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i.i, align 8
  %q_length.i.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %15, i64 0, i32 15, i64 3, i32 0
  %16 = load i32, i32* %q_length.i.i, align 4
  %inc.i.i = add i32 %16, 1
  store i32 %inc.i.i, i32* %q_length.i.i, align 4
  %q_max.i.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %15, i64 0, i32 15, i64 3, i32 1
  %17 = load i32, i32* %q_max.i.i, align 4
  %cmp25.i.i = icmp ugt i32 %inc.i.i, %17
  br i1 %cmp25.i.i, label %if.then26.i.i, label %if.end.i

if.then26.i.i:                                    ; preds = %do.end.i.i
  store i32 %inc.i.i, i32* %q_max.i.i, align 4
  br label %if.end.i

if.else.i:                                        ; preds = %if.else
  %cmd_status.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %3, i64 0, i32 2
  store i8 -1, i8* %cmd_status.i, align 1
  %flags.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %3, i64 0, i32 10
  %18 = load i16, i16* %flags.i, align 1
  %19 = or i16 %18, 1
  store i16 %19, i16* %flags.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then26.i.i, %do.end.i.i
  %cm_extra_frames.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 13
  %20 = load i32, i32* %cm_extra_frames.i, align 4
  %cmp2.i = icmp sgt i32 %20, 7
  br i1 %cmp2.i, label %if.then4.i, label %if.end6.i

if.then4.i:                                       ; preds = %if.end.i
  store i32 7, i32* %cm_extra_frames.i, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %if.end.i
  %21 = phi i32 [ 7, %if.then4.i ], [ %20, %if.end.i ]
  %mfi_issue_cmd.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 87
  %22 = load void (%struct.mfi_softc*, i64, i32)*, void (%struct.mfi_softc*, i64, i32)** %mfi_issue_cmd.i, align 8
  %cm_frame_busaddr.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 4
  %23 = load i64, i64* %cm_frame_busaddr.i, align 8
  tail call void %22(%struct.mfi_softc* nonnull %sc, i64 %23, i32 %21) #7
  %24 = load i32, i32* %cm_flags.i, align 8
  %and9.i = and i32 %24, 16
  %cmp10.i = icmp eq i32 %and9.i, 0
  br i1 %cmp10.i, label %if.end4, label %while.cond.preheader.i

while.cond.preheader.i:                           ; preds = %if.end6.i
  %cmd_status14.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %3, i64 0, i32 2
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %while.cond.preheader.i
  %tm.0.i = phi i32 [ %sub.i, %while.body.i ], [ %mul.i, %while.cond.preheader.i ]
  %25 = load i8, i8* %cmd_status14.i, align 1
  %cmp16.i = icmp eq i8 %25, -1
  br i1 %cmp16.i, label %while.body.i, label %if.end4

while.body.i:                                     ; preds = %while.cond.i
  tail call void @DELAY(i32 1000) #7
  %sub.i = add i32 %tm.0.i, -1
  %cmp18.i = icmp slt i32 %sub.i, 1
  br i1 %cmp18.i, label %while.end.i, label %while.cond.i

while.end.i:                                      ; preds = %while.body.i
  %.pr.i = load i8, i8* %cmd_status14.i, align 1
  %cmp24.i = icmp eq i8 %.pr.i, -1
  br i1 %cmp24.i, label %if.end.thread18, label %if.end4

if.end.thread18:                                  ; preds = %while.end.i
  %mfi_dev.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %26 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %27 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_dcmd_frame**
  %28 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %27, align 8
  %opcode.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %28, i64 0, i32 1
  %29 = load i32, i32* %opcode.i, align 1
  %call.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %26, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.115, i64 0, i64 0), %struct.mfi_frame_header* nonnull %3, i32 %29) #7
  br label %land.lhs.true

if.end:                                           ; preds = %entry
  %call = tail call i32 @mfi_tbolt_send_frame(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* %cm) #7
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end4, label %if.end.land.lhs.true_crit_edge

if.end.land.lhs.true_crit_edge:                   ; preds = %if.end
  %.pre = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 14
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end.land.lhs.true_crit_edge, %if.end.thread18
  %cm_flags.pre-phi = phi i32* [ %.pre, %if.end.land.lhs.true_crit_edge ], [ %cm_flags.i, %if.end.thread18 ]
  %error.020 = phi i32 [ %call, %if.end.land.lhs.true_crit_edge ], [ 60, %if.end.thread18 ]
  %30 = load i32, i32* %cm_flags.pre-phi, align 8
  %and = and i32 %30, 2048
  %cmp2 = icmp eq i32 %and, 0
  br i1 %cmp2, label %if.end4, label %do.body2.i

do.body2.i:                                       ; preds = %land.lhs.true
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 0
  %31 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp3.i = icmp eq %struct.mfi_command* %31, null
  br i1 %cmp3.i, label %do.body12.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body2.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %31, i64 0, i32 0, i32 1
  %32 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp9.i = icmp eq %struct.mfi_command** %32, %tqe_next.i
  br i1 %cmp9.i, label %do.body12.i, label %if.then10.i

if.then10.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %cm) #11
  unreachable

do.body12.i:                                      ; preds = %land.lhs.true.i, %do.body2.i
  %tqe_prev14.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 0, i32 1
  %33 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev14.i, align 8
  %34 = load %struct.mfi_command*, %struct.mfi_command** %33, align 8
  %cmp15.i = icmp eq %struct.mfi_command* %34, %cm
  br i1 %cmp15.i, label %do.end18.i, label %if.then16.i

if.then16.i:                                      ; preds = %do.body12.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %cm) #11
  unreachable

do.end18.i:                                       ; preds = %do.body12.i
  br i1 %cmp3.i, label %if.else.i15, label %if.then22.i

if.then22.i:                                      ; preds = %do.end18.i
  %tqe_prev28.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %31, i64 0, i32 0, i32 1
  store %struct.mfi_command** %33, %struct.mfi_command*** %tqe_prev28.i, align 8
  %.pre.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  br label %mfi_remove_busy.exit

if.else.i15:                                      ; preds = %do.end18.i
  %cm_sc.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  %35 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i, align 8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 13, i32 1
  store %struct.mfi_command** %33, %struct.mfi_command*** %tqh_last.i, align 8
  br label %mfi_remove_busy.exit

mfi_remove_busy.exit:                             ; preds = %if.then22.i, %if.else.i15
  %cm_sc39.pre-phi.i = phi %struct.mfi_softc** [ %cm_sc.i, %if.else.i15 ], [ %.pre.i, %if.then22.i ]
  %36 = bitcast %struct.mfi_command* %cm to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %struct.mfi_command*** %tqe_prev14.i to i64**
  %39 = load i64*, i64** %38, align 8
  store i64 %37, i64* %39, align 8
  %40 = load i32, i32* %cm_flags.pre-phi, align 8
  %and38.i = and i32 %40, -2049
  store i32 %and38.i, i32* %cm_flags.pre-phi, align 8
  %41 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc39.pre-phi.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %41, i64 0, i32 15, i64 3, i32 0
  %42 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %42, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  br label %if.end4

if.end4:                                          ; preds = %while.cond.i, %while.end.i, %if.end6.i, %land.lhs.true, %if.end, %mfi_remove_busy.exit
  %error.017 = phi i32 [ %error.020, %land.lhs.true ], [ 0, %if.end ], [ %error.020, %mfi_remove_busy.exit ], [ 0, %if.end6.i ], [ 0, %while.end.i ], [ 0, %while.cond.i ]
  ret i32 %error.017
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local void @mfi_complete(%struct.mfi_softc* %sc, %struct.mfi_command* %cm) local_unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2528) #7
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 14
  %0 = load i32, i32* %cm_flags, align 8
  %and = and i32 %0, 1
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.end16, label %if.then

if.then:                                          ; preds = %entry
  %and2 = and i32 %0, 2
  %tobool = icmp eq i32 %and2, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then5

lor.lhs.false:                                    ; preds = %if.then
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %1 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %2 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %1, align 8
  %cmd = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %2, i64 0, i32 0
  %3 = load i8, i8* %cmd, align 1
  %cmp3 = icmp eq i8 %3, 8
  br i1 %cmp3, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then, %lor.lhs.false
  br label %if.end

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  %dir.0 = phi i32 [ 2, %if.then5 ], [ 0, %lor.lhs.false ]
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %4 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 7
  %5 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %cmp.i = icmp eq %struct.bus_dmamap* %5, null
  br i1 %cmp.i, label %bus_dmamap_unload.exit, label %bus_dmamap_sync.exit

bus_dmamap_sync.exit:                             ; preds = %if.end
  %and7 = shl i32 %0, 1
  %6 = and i32 %and7, 8
  %7 = or i32 %dir.0, %6
  %impl.i = bitcast %struct.bus_dma_tag* %4 to %struct.bus_dma_impl**
  %8 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_sync.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %8, i64 0, i32 13
  %9 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i, align 8
  tail call void %9(%struct.bus_dma_tag* %4, %struct.bus_dmamap* nonnull %5, i32 %7) #7
  %.pr = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %10 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cmp.i39 = icmp eq %struct.bus_dmamap* %.pr, null
  br i1 %cmp.i39, label %bus_dmamap_unload.exit, label %if.then.i41

if.then.i41:                                      ; preds = %bus_dmamap_sync.exit
  %impl.i40 = bitcast %struct.bus_dma_tag* %10 to %struct.bus_dma_impl**
  %11 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i40, align 8
  %map_unload.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %11, i64 0, i32 12
  %12 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i, align 8
  tail call void %12(%struct.bus_dma_tag* %10, %struct.bus_dmamap* nonnull %.pr) #7
  br label %bus_dmamap_unload.exit

bus_dmamap_unload.exit:                           ; preds = %if.end, %bus_dmamap_sync.exit, %if.then.i41
  %13 = load i32, i32* %cm_flags, align 8
  %and15 = and i32 %13, -2
  store i32 %and15, i32* %cm_flags, align 8
  br label %if.end16

if.end16:                                         ; preds = %entry, %bus_dmamap_unload.exit
  %14 = phi i32 [ %0, %entry ], [ %and15, %bus_dmamap_unload.exit ]
  %or18 = or i32 %14, 8
  store i32 %or18, i32* %cm_flags, align 8
  %cm_complete = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 16
  %15 = load void (%struct.mfi_command*)*, void (%struct.mfi_command*)** %cm_complete, align 8
  %cmp19 = icmp eq void (%struct.mfi_command*)* %15, null
  br i1 %cmp19, label %if.else, label %if.then21

if.then21:                                        ; preds = %if.end16
  tail call void %15(%struct.mfi_command* nonnull %cm) #7
  br label %if.end23

if.else:                                          ; preds = %if.end16
  %16 = bitcast %struct.mfi_command* %cm to i8*
  tail call void @wakeup(i8* %16) #7
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then21
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @wakeup(i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_dump_blocks(%struct.mfi_softc* %sc, i32 %id, i64 %lba, i8* %virt, i32 %len) local_unnamed_addr #0 {
entry:
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %0 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %0, null
  br i1 %cmp.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 14
  %1 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %1, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %0, i32 %1, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 0
  %2 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %2, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %3 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %3, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 1
  %4 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %5 = load %struct.mfi_command*, %struct.mfi_command** %4, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %5, %0
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %4, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %6 = bitcast %struct.mfi_command* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %9 = load i64*, i64** %8, align 8
  store i64 %7, i64* %9, align 8
  %10 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %10, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %11 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %11, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 3
  %12 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %context1 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %12, i64 0, i32 0, i32 0, i32 8
  %13 = load i32, i32* %context1, align 1
  %14 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 72, i1 false)
  %15 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %16 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %15, align 8
  %context5 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %16, i64 0, i32 8
  store i32 %13, i32* %context5, align 1
  %17 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_io_frame**
  %18 = load %struct.mfi_io_frame*, %struct.mfi_io_frame** %17, align 8
  %cmd = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 0
  store i8 2, i8* %cmd, align 1
  %conv = trunc i32 %id to i8
  %target_id = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 4
  store i8 %conv, i8* %target_id, align 1
  %timeout = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 11
  store i16 0, i16* %timeout, align 1
  %flags = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 10
  store i16 0, i16* %flags, align 1
  %scsi_status = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status, align 1
  %sense_len = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 1
  store i8 -128, i8* %sense_len, align 1
  %add = add i32 %len, 511
  %div = sdiv i32 %add, 512
  %data_len = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 0, i32 12
  store i32 %div, i32* %data_len, align 1
  %cm_sense_busaddr = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 6
  %19 = load i64, i64* %cm_sense_busaddr, align 8
  %conv15 = trunc i64 %19 to i32
  %sense_addr_lo = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 1
  store i32 %conv15, i32* %sense_addr_lo, align 1
  %20 = load i64, i64* %cm_sense_busaddr, align 8
  %shr = lshr i64 %20, 32
  %conv17 = trunc i64 %shr to i32
  %sense_addr_hi = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 2
  store i32 %conv17, i32* %sense_addr_hi, align 1
  %shr18 = lshr i64 %lba, 32
  %conv19 = trunc i64 %shr18 to i32
  %lba_hi = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 4
  store i32 %conv19, i32* %lba_hi, align 1
  %conv21 = trunc i64 %lba to i32
  %lba_lo = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 3
  store i32 %conv21, i32* %lba_lo, align 1
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 9
  store i8* %virt, i8** %cm_data, align 8
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 10
  store i32 %len, i32* %cm_len, align 8
  %sgl = getelementptr inbounds %struct.mfi_io_frame, %struct.mfi_io_frame* %18, i64 0, i32 5
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 8
  store %union.mfi_sgl* %sgl, %union.mfi_sgl** %cm_sg, align 8
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 12
  store i32 40, i32* %cm_total_frame_size, align 8
  store i32 20, i32* %cm_flags.i, align 8
  %call22 = tail call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %0) #9
  %cmp23 = icmp eq i32 %call22, 0
  br i1 %cmp23, label %if.end27, label %if.then25

if.then25:                                        ; preds = %do.end21.i
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %21 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call26 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0)) #7
  br label %if.end27

if.end27:                                         ; preds = %do.end21.i, %if.then25
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %22 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 7
  %23 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %cmp.i68 = icmp eq %struct.bus_dmamap* %23, null
  br i1 %cmp.i68, label %bus_dmamap_unload.exit, label %bus_dmamap_sync.exit

bus_dmamap_sync.exit:                             ; preds = %if.end27
  %impl.i = bitcast %struct.bus_dma_tag* %22 to %struct.bus_dma_impl**
  %24 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_sync.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %24, i64 0, i32 13
  %25 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i, align 8
  tail call void %25(%struct.bus_dma_tag* %22, %struct.bus_dmamap* nonnull %23, i32 8) #7
  %.pr = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %26 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cmp.i70 = icmp eq %struct.bus_dmamap* %.pr, null
  br i1 %cmp.i70, label %bus_dmamap_unload.exit, label %if.then.i72

if.then.i72:                                      ; preds = %bus_dmamap_sync.exit
  %impl.i71 = bitcast %struct.bus_dma_tag* %26 to %struct.bus_dma_impl**
  %27 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i71, align 8
  %map_unload.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %27, i64 0, i32 12
  %28 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i, align 8
  tail call void %28(%struct.bus_dma_tag* %26, %struct.bus_dmamap* nonnull %.pr) #7
  br label %bus_dmamap_unload.exit

bus_dmamap_unload.exit:                           ; preds = %if.end27, %bus_dmamap_sync.exit, %if.then.i72
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %0) #9
  br label %cleanup

cleanup:                                          ; preds = %entry, %bus_dmamap_unload.exit
  %retval.0 = phi i32 [ %call22, %bus_dmamap_unload.exit ], [ 16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define dso_local i32 @mfi_dump_syspd_blocks(%struct.mfi_softc* %sc, i32 %id, i64 %lba, i8* %virt, i32 %len) local_unnamed_addr #0 {
entry:
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %0 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %0, null
  br i1 %cmp.i, label %cleanup, label %if.then.i

if.then.i:                                        ; preds = %entry
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 14
  %1 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %1, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %0, i32 %1, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 0
  %2 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %2, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %3 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %3, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 0, i32 1
  %4 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %5 = load %struct.mfi_command*, %struct.mfi_command** %4, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %5, %0
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %0) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %2, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %4, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %6 = bitcast %struct.mfi_command* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %9 = load i64*, i64** %8, align 8
  store i64 %7, i64* %9, align 8
  %10 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %10, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %11 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %11, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 3
  %12 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_pass_frame**
  %13 = load %struct.mfi_pass_frame*, %struct.mfi_pass_frame** %12, align 8
  %arraydecay = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 3, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %arraydecay, i8 0, i64 16, i1 false)
  %cmd = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 0
  store i8 4, i8* %cmd, align 1
  %add = add i32 %len, 511
  %div = sdiv i32 %add, 512
  %call4 = tail call i32 @mfi_build_cdb(i32 0, i8 zeroext 0, i64 %lba, i32 %div, i8* nonnull %arraydecay) #9
  %conv = trunc i32 %id to i8
  %target_id = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 4
  store i8 %conv, i8* %target_id, align 1
  %timeout = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 11
  store i16 0, i16* %timeout, align 1
  %flags = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 10
  store i16 0, i16* %flags, align 1
  %scsi_status = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status, align 1
  %sense_len = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 1
  store i8 -128, i8* %sense_len, align 1
  %data_len = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 12
  store i32 %len, i32* %data_len, align 1
  %conv11 = trunc i32 %call4 to i8
  %cdb_len13 = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 0, i32 6
  store i8 %conv11, i8* %cdb_len13, align 1
  %cm_sense_busaddr = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 6
  %14 = load i64, i64* %cm_sense_busaddr, align 8
  %conv14 = trunc i64 %14 to i32
  %sense_addr_lo = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 1
  store i32 %conv14, i32* %sense_addr_lo, align 1
  %15 = load i64, i64* %cm_sense_busaddr, align 8
  %shr = lshr i64 %15, 32
  %conv16 = trunc i64 %shr to i32
  %sense_addr_hi = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 2
  store i32 %conv16, i32* %sense_addr_hi, align 1
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 9
  store i8* %virt, i8** %cm_data, align 8
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 10
  store i32 %len, i32* %cm_len, align 8
  %sgl = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %13, i64 0, i32 4
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 8
  store %union.mfi_sgl* %sgl, %union.mfi_sgl** %cm_sg, align 8
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 12
  store i32 48, i32* %cm_total_frame_size, align 8
  store i32 52, i32* %cm_flags.i, align 8
  %call17 = tail call i32 @mfi_mapcmd(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %0) #9
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.end22, label %if.then20

if.then20:                                        ; preds = %do.end21.i
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %16 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call21 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.44, i64 0, i64 0)) #7
  br label %if.end22

if.end22:                                         ; preds = %do.end21.i, %if.then20
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %17 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %0, i64 0, i32 7
  %18 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %cmp.i65 = icmp eq %struct.bus_dmamap* %18, null
  br i1 %cmp.i65, label %bus_dmamap_unload.exit, label %bus_dmamap_sync.exit

bus_dmamap_sync.exit:                             ; preds = %if.end22
  %impl.i = bitcast %struct.bus_dma_tag* %17 to %struct.bus_dma_impl**
  %19 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_sync.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %19, i64 0, i32 13
  %20 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i, align 8
  tail call void %20(%struct.bus_dma_tag* %17, %struct.bus_dmamap* nonnull %18, i32 8) #7
  %.pr = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %21 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cmp.i67 = icmp eq %struct.bus_dmamap* %.pr, null
  br i1 %cmp.i67, label %bus_dmamap_unload.exit, label %if.then.i69

if.then.i69:                                      ; preds = %bus_dmamap_sync.exit
  %impl.i68 = bitcast %struct.bus_dma_tag* %21 to %struct.bus_dma_impl**
  %22 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i68, align 8
  %map_unload.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %22, i64 0, i32 12
  %23 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i, align 8
  tail call void %23(%struct.bus_dma_tag* %21, %struct.bus_dmamap* nonnull %.pr) #7
  br label %bus_dmamap_unload.exit

bus_dmamap_unload.exit:                           ; preds = %if.end22, %bus_dmamap_sync.exit, %if.then.i69
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %0) #9
  br label %cleanup

cleanup:                                          ; preds = %entry, %bus_dmamap_unload.exit
  %retval.0 = phi i32 [ %call17, %bus_dmamap_unload.exit ], [ 16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint noimplicitfloat noredzone nounwind ssp
define internal void @sysinit_tslog_shim(i8* nocapture readonly %data) #6 {
entry:
  %0 = tail call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #12, !srcloc !5
  %1 = bitcast %struct.thread* %0 to i8*
  %name = getelementptr inbounds i8, i8* %data, i64 16
  %2 = bitcast i8* %name to i8**
  %3 = load i8*, i8** %2, align 8
  tail call void @tslog(i8* %1, i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i8* %3) #7
  %func = bitcast i8* %data to void (i8*)**
  %4 = load void (i8*)*, void (i8*)** %func, align 8
  %data1 = getelementptr inbounds i8, i8* %data, i64 8
  %5 = bitcast i8* %data1 to i8**
  %6 = load i8*, i8** %5, align 8
  tail call void %4(i8* %6) #7
  %7 = load i8*, i8** %2, align 8
  tail call void @tslog(i8* %1, i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i8* %7) #7
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @tslog(i8*, i32, i8*, i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @malloc_init(i8*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @malloc_uninit(i8*) #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @bioq_init(%struct.bio_queue_head*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_open(%struct.cdev* nocapture readonly %dev, i32 %flags, i32 %fmt, %struct.thread* nocapture readnone %td) #0 {
entry:
  %si_drv1 = getelementptr inbounds %struct.cdev, %struct.cdev* %dev, i64 0, i32 17
  %0 = bitcast i8** %si_drv1 to %struct.mfi_softc**
  %1 = load %struct.mfi_softc*, %struct.mfi_softc** %0, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2698) #7
  %mfi_detaching = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 49
  %2 = load i32, i32* %mfi_detaching, align 8
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %if.else, label %if.end

if.else:                                          ; preds = %entry
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 1
  %3 = load i32, i32* %mfi_flags, align 8
  %or = or i32 %3, 4
  store i32 %or, i32* %mfi_flags, align 8
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %error.0 = phi i32 [ 0, %if.else ], [ 6, %entry ]
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2705) #7
  ret i32 %error.0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_close(%struct.cdev* nocapture readonly %dev, i32 %flags, i32 %fmt, %struct.thread* nocapture readnone %td) #0 {
entry:
  %si_drv1 = getelementptr inbounds %struct.cdev, %struct.cdev* %dev, i64 0, i32 17
  %0 = bitcast i8** %si_drv1 to %struct.mfi_softc**
  %1 = load %struct.mfi_softc*, %struct.mfi_softc** %0, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2718) #7
  %mfi_flags = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 1
  %2 = load i32, i32* %mfi_flags, align 8
  %and = and i32 %2, -5
  store i32 %and, i32* %mfi_flags, align 8
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 37, i32 0
  %3 = load %struct.mfi_aen*, %struct.mfi_aen** %tqh_first, align 8
  %tobool66 = icmp eq %struct.mfi_aen* %3, null
  br i1 %tobool66, label %for.end, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %entry
  %4 = tail call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #12, !srcloc !5
  %td_proc = getelementptr inbounds %struct.thread, %struct.thread* %4, i64 0, i32 1
  %tqh_last = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 37, i32 1
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %for.inc
  %mfi_aen_entry.067 = phi %struct.mfi_aen* [ %3, %land.rhs.lr.ph ], [ %5, %for.inc ]
  %tqe_next = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %mfi_aen_entry.067, i64 0, i32 0, i32 0
  %5 = load %struct.mfi_aen*, %struct.mfi_aen** %tqe_next, align 8
  %p = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %mfi_aen_entry.067, i64 0, i32 1
  %6 = load %struct.proc*, %struct.proc** %p, align 8
  %7 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %cmp = icmp eq %struct.proc* %6, %7
  br i1 %cmp, label %do.body1, label %for.inc

do.body1:                                         ; preds = %land.rhs
  %cmp4 = icmp eq %struct.mfi_aen* %5, null
  br i1 %cmp4, label %do.body12, label %land.lhs.true

land.lhs.true:                                    ; preds = %do.body1
  %tqe_prev = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %5, i64 0, i32 0, i32 1
  %8 = load %struct.mfi_aen**, %struct.mfi_aen*** %tqe_prev, align 8
  %cmp10 = icmp eq %struct.mfi_aen** %8, %tqe_next
  br i1 %cmp10, label %do.body12, label %if.then11

if.then11:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_aen* nonnull %mfi_aen_entry.067) #11
  unreachable

do.body12:                                        ; preds = %land.lhs.true, %do.body1
  %tqe_prev14 = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %mfi_aen_entry.067, i64 0, i32 0, i32 1
  %9 = load %struct.mfi_aen**, %struct.mfi_aen*** %tqe_prev14, align 8
  %10 = load %struct.mfi_aen*, %struct.mfi_aen** %9, align 8
  %cmp15 = icmp eq %struct.mfi_aen* %10, %mfi_aen_entry.067
  br i1 %cmp15, label %do.end19, label %if.then16

if.then16:                                        ; preds = %do.body12
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_aen* nonnull %mfi_aen_entry.067) #11
  unreachable

do.end19:                                         ; preds = %do.body12
  %tqe_prev29 = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %5, i64 0, i32 0, i32 1
  %tqh_last.sink = select i1 %cmp4, %struct.mfi_aen*** %tqh_last, %struct.mfi_aen*** %tqe_prev29
  store %struct.mfi_aen** %9, %struct.mfi_aen*** %tqh_last.sink, align 8
  %11 = bitcast %struct.mfi_aen* %mfi_aen_entry.067 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.mfi_aen*** %tqe_prev14 to i64**
  %14 = load i64*, i64** %13, align 8
  store i64 %12, i64* %14, align 8
  %15 = bitcast %struct.mfi_aen* %mfi_aen_entry.067 to i8*
  tail call void @free(i8* %15, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %for.inc

for.inc:                                          ; preds = %land.rhs, %do.end19
  %tobool = icmp eq %struct.mfi_aen* %5, null
  br i1 %tobool, label %for.end, label %land.rhs

for.end:                                          ; preds = %for.inc, %entry
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2728) #7
  ret i32 0
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_ioctl(%struct.cdev* nocapture readonly %dev, i64 %cmd, i8* %arg, i32 %flag, %struct.thread* nocapture readnone %td) #0 {
entry:
  %ld_cm.i = alloca %struct.mfi_command*, align 8
  %ld_info.i = alloca %struct.mfi_ld_info*, align 8
  %iop_swab = alloca %struct.mfi_ioc_passthru, align 1
  %l_ioc = alloca %struct.mfi_linux_ioc_packet, align 2
  %l_aen = alloca %struct.mfi_linux_ioc_aen, align 2
  %0 = bitcast i8* %arg to %struct.mfi_ioc_passthru*
  %1 = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %iop_swab, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %1) #8
  %si_drv1 = getelementptr inbounds %struct.cdev, %struct.cdev* %dev, i64 0, i32 17
  %2 = bitcast i8** %si_drv1 to %struct.mfi_softc**
  %3 = load %struct.mfi_softc*, %struct.mfi_softc** %2, align 8
  %adpreset = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 59
  %4 = load i8, i8* %adpreset, align 8
  %tobool = icmp eq i8 %4, 0
  br i1 %tobool, label %if.end, label %cleanup480

if.end:                                           ; preds = %entry
  %hw_crit_error = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 64
  %5 = load volatile i32, i32* %hw_crit_error, align 4
  %tobool1 = icmp eq i32 %5, 0
  br i1 %tobool1, label %if.end3, label %cleanup480

if.end3:                                          ; preds = %if.end
  %issuepend_done = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 60
  %6 = load i8, i8* %issuepend_done, align 1
  %cmp = icmp eq i8 %6, 0
  br i1 %cmp, label %cleanup480, label %if.end6

if.end6:                                          ; preds = %if.end3
  switch i64 %cmd, label %sw.default476 [
    i64 3221770597, label %sw.bb
    i64 3238285670, label %sw.bb9
    i64 3247721729, label %sw.bb31
    i64 3239333121, label %sw.bb31
    i64 2148289795, label %sw.bb407
    i64 3239333122, label %sw.bb413
    i64 1074547972, label %sw.bb435
    i64 3225437030, label %sw.bb458
    i64 3225699174, label %sw.bb468
  ]

sw.bb:                                            ; preds = %if.end6
  %ms_item = bitcast i8* %arg to i32*
  %7 = load i32, i32* %ms_item, align 4
  %switch = icmp ult i32 %7, 4
  br i1 %switch, label %sw.bb7, label %cleanup480

sw.bb7:                                           ; preds = %sw.bb
  %idxprom = zext i32 %7 to i64
  %arrayidx = getelementptr %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 15, i64 %idxprom
  %8 = bitcast %struct.mfi_qstat* %arrayidx to i64*
  %9 = bitcast i8* %arg to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 4
  br label %cleanup480

sw.bb9:                                           ; preds = %if.end6
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3147) #7
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 71, i32 0
  %ld.0771 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first, align 8
  %tobool10772 = icmp eq %struct.mfi_disk* %ld.0771, null
  br i1 %tobool10772, label %if.then18, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.bb9
  %11 = load i8, i8* %arg, align 1
  %conv11 = zext i8 %11 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %ld.0773 = phi %struct.mfi_disk* [ %ld.0771, %for.body.lr.ph ], [ %ld.0, %for.inc ]
  %ld_id = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0773, i64 0, i32 2
  %12 = load i32, i32* %ld_id, align 8
  %cmp12 = icmp eq i32 %12, %conv11
  br i1 %cmp12, label %if.end21, label %for.inc

for.inc:                                          ; preds = %for.body
  %tqe_next = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0773, i64 0, i32 0, i32 0
  %ld.0 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next, align 8
  %tobool10 = icmp eq %struct.mfi_disk* %ld.0, null
  br i1 %tobool10, label %if.then18, label %for.body

if.then18:                                        ; preds = %for.inc, %sw.bb9
  %13 = getelementptr inbounds i8, i8* %arg, i64 1
  store i8 0, i8* %13, align 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3154) #7
  br label %cleanup480

if.end21:                                         ; preds = %for.body
  %14 = getelementptr inbounds i8, i8* %arg, i64 1
  store i8 1, i8* %14, align 1
  %ld_flags = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0773, i64 0, i32 7
  %15 = load i32, i32* %ld_flags, align 8
  %and = and i32 %15, 1
  %tobool23 = icmp eq i32 %and, 0
  br i1 %tobool23, label %if.end25, label %if.then24

if.then24:                                        ; preds = %if.end21
  %16 = getelementptr inbounds i8, i8* %arg, i64 2
  store i8 1, i8* %16, align 1
  br label %if.end25

if.end25:                                         ; preds = %if.end21, %if.then24
  %devname = getelementptr inbounds i8, i8* %arg, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %devname, i8 0, i64 256, i1 false)
  %ld_unit = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0773, i64 0, i32 3
  %17 = load i32, i32* %ld_unit, align 4
  %call = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %devname, i64 255, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i32 %17) #7
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3162) #7
  br label %cleanup480

sw.bb31:                                          ; preds = %if.end6, %if.end6
  %mfi_adapter_no = bitcast i8* %arg to i16*
  %18 = load i16, i16* %mfi_adapter_no, align 1
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %19 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call33 = tail call i32 @device_get_unit(%struct.device* %19) #7
  %cmp34 = icmp eq i32 %call33, 0
  %cmp36 = icmp ne i16 %18, 0
  %or.cond = and i1 %cmp36, %cmp34
  br i1 %or.cond, label %if.then38, label %if.end41

if.then38:                                        ; preds = %sw.bb31
  %conv32 = zext i16 %18 to i32
  %call39 = tail call %struct.devclass* @devclass_find(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #7
  %call40 = tail call i8* @devclass_get_softc(%struct.devclass* %call39, i32 %conv32) #7
  %20 = bitcast i8* %call40 to %struct.mfi_softc*
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %sw.bb31
  %sc.0 = phi %struct.mfi_softc* [ %20, %if.then38 ], [ %3, %sw.bb31 ]
  %mtx_lock43 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3179) #7
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 11, i32 0
  %21 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %21, null
  br i1 %cmp.i, label %cleanup404, label %if.then.i

if.then.i:                                        ; preds = %if.end41
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 14
  %22 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %22, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %21, i32 %22, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 0, i32 0
  %23 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %23, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 0, i32 1
  %24 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %24, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %21) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 0, i32 1
  %25 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %26 = load %struct.mfi_command*, %struct.mfi_command** %25, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %26, %21
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %21) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %23, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %25, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %27 = bitcast %struct.mfi_command* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %30 = load i64*, i64** %29, align 8
  store i64 %28, i64* %30, align 8
  %31 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %31, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 15, i64 0, i32 0
  %32 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %32, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3184) #7
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 3
  %33 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %34 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %context53 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %34, i64 0, i32 8
  %35 = load i32, i32* %context53, align 1
  %cm_index = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 18
  %36 = load i32, i32* %cm_index, align 8
  store i32 %36, i32* %context53, align 1
  %37 = bitcast %union.mfi_frame** %cm_frame to i8**
  %38 = load i8*, i8** %37, align 8
  %mfi_frame = getelementptr inbounds i8, i8* %arg, i64 20
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %38, i8* nonnull align 1 %mfi_frame, i64 128, i1 false)
  %mfi_sge_count = getelementptr inbounds i8, i8* %arg, i64 8
  %39 = bitcast i8* %mfi_sge_count to i32*
  %40 = load i32, i32* %39, align 1
  %mul = shl i32 %40, 4
  %mfi_sgl_off = getelementptr inbounds i8, i8* %arg, i64 4
  %41 = bitcast i8* %mfi_sgl_off to i32*
  %42 = load i32, i32* %41, align 1
  %add = add i32 %mul, %42
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 12
  store i32 %add, i32* %cm_total_frame_size, align 8
  %43 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %scsi_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %43, i64 0, i32 3
  store i8 0, i8* %scsi_status, align 1
  %44 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %pad0 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %44, i64 0, i32 9
  store i32 0, i32* %pad0, align 1
  %45 = load i32, i32* %39, align 1
  %tobool67 = icmp eq i32 %45, 0
  br i1 %tobool67, label %if.end50.if.end73_crit_edge, label %if.then68

if.end50.if.end73_crit_edge:                      ; preds = %do.end21.i
  %.pre = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  br label %if.end73

if.then68:                                        ; preds = %do.end21.i
  %46 = bitcast %union.mfi_frame** %cm_frame to [64 x i8]**
  %47 = load [64 x i8]*, [64 x i8]** %46, align 8
  %48 = load i32, i32* %41, align 1
  %idxprom71 = zext i32 %48 to i64
  %arrayidx72 = getelementptr [64 x i8], [64 x i8]* %47, i64 0, i64 %idxprom71
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 8
  %49 = bitcast %union.mfi_sgl** %cm_sg to i8**
  store i8* %arrayidx72, i8** %49, align 8
  %50 = bitcast [64 x i8]* %47 to %struct.mfi_frame_header*
  br label %if.end73

if.end73:                                         ; preds = %if.end50.if.end73_crit_edge, %if.then68
  %51 = phi %struct.mfi_frame_header* [ %.pre, %if.end50.if.end73_crit_edge ], [ %50, %if.then68 ]
  store i32 0, i32* %cm_flags.i, align 8
  %flags = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %51, i64 0, i32 10
  %52 = load i16, i16* %flags, align 1
  %53 = lshr i16 %52, 3
  %54 = and i16 %53, 2
  %55 = zext i16 %54 to i32
  store i32 %55, i32* %cm_flags.i, align 8
  %56 = load i16, i16* %flags, align 1
  %57 = and i16 %56, 8
  %tobool88 = icmp eq i16 %57, 0
  br i1 %tobool88, label %if.end92, label %if.end92.thread

if.end92.thread:                                  ; preds = %if.end73
  %or91 = or i32 %55, 4
  br label %if.end99.sink.split

if.end92:                                         ; preds = %if.end73
  %cmp94 = icmp eq i16 %54, 0
  br i1 %cmp94, label %if.end99.sink.split, label %if.end99

if.end99.sink.split:                              ; preds = %if.end92, %if.end92.thread
  %or91.sink = phi i32 [ %or91, %if.end92.thread ], [ 6, %if.end92 ]
  store i32 %or91.sink, i32* %cm_flags.i, align 8
  br label %if.end99

if.end99:                                         ; preds = %if.end99.sink.split, %if.end92
  %58 = phi i32 [ %55, %if.end92 ], [ %or91.sink, %if.end99.sink.split ]
  %data_len = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %51, i64 0, i32 12
  %59 = load i32, i32* %data_len, align 1
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 10
  store i32 %59, i32* %cm_len, align 8
  %cmd104 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %51, i64 0, i32 0
  %60 = load i8, i8* %cmd104, align 1
  %cmp106 = icmp eq i8 %60, 8
  br i1 %cmp106, label %if.then108, label %if.end122

if.then108:                                       ; preds = %if.end99
  %cmp109 = icmp eq i64 %cmd, 3247721729
  br i1 %cmp109, label %if.then111, label %if.else

if.then111:                                       ; preds = %if.then108
  %iov_len = getelementptr inbounds i8, i8* %arg, i64 156
  %61 = bitcast i8* %iov_len to i64*
  %62 = load i64, i64* %61, align 1
  %conv113 = trunc i64 %62 to i32
  br label %if.end118

if.else:                                          ; preds = %if.then108
  %iov_len116 = getelementptr inbounds i8, i8* %arg, i64 152
  %63 = bitcast i8* %iov_len116 to i32*
  %64 = load i32, i32* %63, align 1
  br label %if.end118

if.end118:                                        ; preds = %if.else, %if.then111
  %conv113.sink = phi i32 [ %64, %if.else ], [ %conv113, %if.then111 ]
  %65 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 11
  store i32 %conv113.sink, i32* %65, align 4
  %add121 = add i32 %conv113.sink, %59
  store i32 %add121, i32* %cm_len, align 8
  br label %if.end122

if.end122:                                        ; preds = %if.end118, %if.end99
  %66 = phi i32 [ %add121, %if.end118 ], [ %59, %if.end99 ]
  %tobool124 = icmp eq i32 %66, 0
  %and127 = and i32 %58, 6
  %tobool128 = icmp eq i32 %and127, 0
  %or.cond802 = or i1 %tobool124, %tobool128
  br i1 %or.cond802, label %if.else133, label %if.then129

if.then129:                                       ; preds = %if.end122
  %conv131 = sext i32 %66 to i64
  %call132 = tail call noalias i8* @malloc(i64 %conv131, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 258) #10
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 9
  store i8* %call132, i8** %cm_data, align 8
  %.pre786 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  br label %if.end135

if.else133:                                       ; preds = %if.end122
  %cm_data134 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 9
  store i8* null, i8** %cm_data134, align 8
  br label %if.end135

if.end135:                                        ; preds = %if.else133, %if.then129
  %67 = phi %struct.mfi_frame_header* [ %.pre786, %if.then129 ], [ %51, %if.else133 ]
  %data.0 = phi i8* [ %call132, %if.then129 ], [ null, %if.else133 ]
  %context138 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %67, i64 0, i32 8
  store i32 %35, i32* %context138, align 1
  %68 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %cmd141 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %68, i64 0, i32 0
  %69 = load i8, i8* %cmd141, align 1
  %cmp143 = icmp eq i8 %69, 8
  br i1 %cmp143, label %if.then145, label %if.else151

if.then145:                                       ; preds = %if.end135
  %kbuff_arr.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 6
  %70 = bitcast [16 x i8*]* %kbuff_arr.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 128, i1 false) #8
  %71 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %72 = ptrtoint %union.mfi_frame* %71 to i64
  %73 = load i32, i32* %41, align 1
  %conv.i = zext i32 %73 to i64
  %add.i = add i64 %conv.i, %72
  %74 = inttoptr i64 %add.i to %struct.megasas_sge*
  %75 = load i32, i32* %39, align 1
  %conv1.i = trunc i32 %75 to i8
  %sg_count.i = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %71, i64 0, i32 0, i32 0, i32 7
  store i8 %conv1.i, i8* %sg_count.i, align 1
  %76 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %flags.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %76, i64 0, i32 10
  %77 = load i16, i16* %flags.i, align 1
  %78 = or i16 %77, 2
  store i16 %78, i16* %flags.i, align 1
  %cm_extra_frames.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 13
  store i32 2, i32* %cm_extra_frames.i, align 4
  %79 = load i32, i32* %39, align 1
  %mul.i = mul i32 %79, 12
  %80 = load i32, i32* %cm_total_frame_size, align 8
  %add8.i = add i32 %80, %mul.i
  store i32 %add8.i, i32* %cm_total_frame_size, align 8
  %81 = load i32, i32* %39, align 1
  %cmp169.i = icmp eq i32 %81, 0
  br i1 %cmp169.i, label %mfi_stp_cmd.exit, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %if.then145
  %mfi_parent_dmat.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 20
  %mfi_sgl.i = getelementptr inbounds i8, i8* %arg, i64 148
  %82 = bitcast i8* %mfi_sgl.i to [16 x %struct.iovec]*
  %83 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_stp_frame**
  br label %for.body.i

for.cond.i:                                       ; preds = %if.end56.i
  %conv9.i = zext i8 %inc.i to i32
  %84 = load i32, i32* %39, align 1
  %cmp.i738 = icmp ugt i32 %84, %conv9.i
  br i1 %cmp.i738, label %for.body.i, label %mfi_stp_cmd.exit

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %i.0170.i = phi i8 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.cond.i ]
  %85 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_parent_dmat.i, align 8
  %idxprom.i = zext i8 %i.0170.i to i64
  %iov_len.i = getelementptr [16 x %struct.iovec], [16 x %struct.iovec]* %82, i64 0, i64 %idxprom.i, i32 1
  %86 = load i64, i64* %iov_len.i, align 1
  %arrayidx17.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 %idxprom.i
  %call.i = tail call i32 @bus_dma_tag_create(%struct.bus_dma_tag* %85, i64 1, i64 0, i64 4294967295, i64 -1, i32 (i8*, i64)* null, i8* null, i64 %86, i32 2, i64 %86, i32 2, void (i8*, i32)* null, i8* null, %struct.bus_dma_tag** %arrayidx17.i) #7
  %tobool.i = icmp eq i32 %call.i, 0
  br i1 %tobool.i, label %if.end.i, label %if.then.i739

if.then.i739:                                     ; preds = %for.body.i
  %mfi_dev.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %87 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call18.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %87, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.60, i64 0, i64 0)) #7
  br label %mfi_config_unlock.exit

if.end.i:                                         ; preds = %for.body.i
  %88 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx17.i, align 8
  %arrayidx24.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 6, i64 %idxprom.i
  %arrayidx26.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 8, i64 %idxprom.i
  %impl.i.i = bitcast %struct.bus_dma_tag* %88 to %struct.bus_dma_impl**
  %89 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.i, align 8
  %mem_alloc.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %89, i64 0, i32 5
  %90 = load i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)*, i32 (%struct.bus_dma_tag*, i8**, i32, %struct.bus_dmamap**)** %mem_alloc.i.i, align 8
  %call.i.i = tail call i32 %90(%struct.bus_dma_tag* %88, i8** %arrayidx24.i, i32 1, %struct.bus_dmamap** %arrayidx26.i) #7
  %tobool28.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool28.i, label %if.end32.i, label %if.then29.i

if.then29.i:                                      ; preds = %if.end.i
  %mfi_dev30.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %91 = load %struct.device*, %struct.device** %mfi_dev30.i, align 8
  %call31.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %91, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.61, i64 0, i64 0)) #7
  br label %mfi_config_unlock.exit

if.end32.i:                                       ; preds = %if.end.i
  %92 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx17.i, align 8
  %93 = load %struct.bus_dmamap*, %struct.bus_dmamap** %arrayidx26.i, align 8
  %94 = load i8*, i8** %arrayidx24.i, align 8
  %95 = load i64, i64* %iov_len.i, align 1
  %arrayidx47.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 9, i64 %idxprom.i
  %96 = bitcast i64* %arrayidx47.i to i8*
  %call48.i = tail call i32 @bus_dmamap_load(%struct.bus_dma_tag* %92, %struct.bus_dmamap* %93, i8* %94, i64 %95, void (i8*, %struct.bus_dma_segment*, i32, i32)* nonnull @mfi_addr_cb, i8* %96, i32 0) #7
  %97 = load i8*, i8** %arrayidx24.i, align 8
  %tobool52.i = icmp eq i8* %97, null
  br i1 %tobool52.i, label %if.then53.i, label %if.end56.i

if.then53.i:                                      ; preds = %if.end32.i
  %mfi_dev54.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %98 = load %struct.device*, %struct.device** %mfi_dev54.i, align 8
  %call55.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %98, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.62, i64 0, i64 0)) #7
  br label %mfi_config_unlock.exit

if.end56.i:                                       ; preds = %if.end32.i
  %99 = load i64, i64* %arrayidx47.i, align 8
  %phys_addr.i = getelementptr inbounds %struct.megasas_sge, %struct.megasas_sge* %74, i64 %idxprom.i, i32 0
  store i64 %99, i64* %phys_addr.i, align 8
  %100 = load i64, i64* %iov_len.i, align 1
  %conv66.i = trunc i64 %100 to i32
  %length.i = getelementptr inbounds %struct.megasas_sge, %struct.megasas_sge* %74, i64 %idxprom.i, i32 1
  store i32 %conv66.i, i32* %length.i, align 8
  %101 = load %struct.mfi_stp_frame*, %struct.mfi_stp_frame** %83, align 8
  %sgl.i = getelementptr inbounds %struct.mfi_stp_frame, %struct.mfi_stp_frame* %101, i64 0, i32 3
  %sg64.i = bitcast %union.anon.43* %sgl.i to [2 x %struct.mfi_sg64]*
  %addr.i = getelementptr [2 x %struct.mfi_sg64], [2 x %struct.mfi_sg64]* %sg64.i, i64 0, i64 %idxprom.i, i32 0
  store i64 %99, i64* %addr.i, align 1
  %102 = load i64, i64* %iov_len.i, align 1
  %conv79.i = trunc i64 %102 to i32
  %103 = load %struct.mfi_stp_frame*, %struct.mfi_stp_frame** %83, align 8
  %sgl82.i = getelementptr inbounds %struct.mfi_stp_frame, %struct.mfi_stp_frame* %103, i64 0, i32 3
  %sg6483.i = bitcast %union.anon.43* %sgl82.i to [2 x %struct.mfi_sg64]*
  %len.i = getelementptr [2 x %struct.mfi_sg64], [2 x %struct.mfi_sg64]* %sg6483.i, i64 0, i64 %idxprom.i, i32 1
  store i32 %conv79.i, i32* %len.i, align 1
  %iov_base.i = getelementptr [16 x %struct.iovec], [16 x %struct.iovec]* %82, i64 0, i64 %idxprom.i, i32 0
  %104 = load i8*, i8** %iov_base.i, align 1
  %105 = load i8*, i8** %arrayidx24.i, align 8
  %106 = load i64, i64* %iov_len.i, align 1
  %call96.i = tail call i32 @copyin(i8* %104, i8* %105, i64 %106) #7
  %cmp97.i = icmp eq i32 %call96.i, 0
  %inc.i = add i8 %i.0170.i, 1
  br i1 %cmp97.i, label %for.cond.i, label %if.then99.i

if.then99.i:                                      ; preds = %if.end56.i
  %mfi_dev100.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %107 = load %struct.device*, %struct.device** %mfi_dev100.i, align 8
  %call101.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %107, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0)) #7
  br label %mfi_config_unlock.exit

mfi_stp_cmd.exit:                                 ; preds = %for.cond.i, %if.then145
  %108 = load i32, i32* %cm_flags.i, align 8
  %or103.i = or i32 %108, 1
  store i32 %or103.i, i32* %cm_flags.i, align 8
  br label %if.end200

if.else151:                                       ; preds = %if.end135
  %109 = load i32, i32* %cm_flags.i, align 8
  %and153 = and i32 %109, 4
  %tobool154 = icmp eq i32 %and153, 0
  br i1 %tobool154, label %if.end200, label %for.cond162.preheader

for.cond162.preheader:                            ; preds = %if.else151
  %110 = load i32, i32* %39, align 1
  %cmp164779 = icmp eq i32 %110, 0
  br i1 %cmp164779, label %if.end200, label %for.body166.lr.ph

for.body166.lr.ph:                                ; preds = %for.cond162.preheader
  %cmp167 = icmp eq i64 %cmd, 3247721729
  %mfi_sgl170 = getelementptr inbounds i8, i8* %arg, i64 148
  %111 = bitcast i8* %mfi_sgl170 to [16 x %struct.iovec]*
  %112 = bitcast i8* %mfi_sgl170 to [16 x %struct.iovec32]*
  br label %for.body166

for.body166:                                      ; preds = %for.body166.lr.ph, %if.end195
  %temp.0782 = phi i8* [ %data.0, %for.body166.lr.ph ], [ %arrayidx196, %if.end195 ]
  %i.0780 = phi i32 [ 0, %for.body166.lr.ph ], [ %inc, %if.end195 ]
  %idxprom171 = sext i32 %i.0780 to i64
  br i1 %cmp167, label %if.then169, label %if.else177

if.then169:                                       ; preds = %for.body166
  %iov_base = getelementptr [16 x %struct.iovec], [16 x %struct.iovec]* %111, i64 0, i64 %idxprom171, i32 0
  %113 = load i8*, i8** %iov_base, align 1
  %iov_len176 = getelementptr [16 x %struct.iovec], [16 x %struct.iovec]* %111, i64 0, i64 %idxprom171, i32 1
  %114 = load i64, i64* %iov_len176, align 1
  br label %if.end188

if.else177:                                       ; preds = %for.body166
  %iov_base181 = getelementptr [16 x %struct.iovec32], [16 x %struct.iovec32]* %112, i64 0, i64 %idxprom171, i32 0
  %115 = load i32, i32* %iov_base181, align 1
  %conv182 = zext i32 %115 to i64
  %116 = inttoptr i64 %conv182 to i8*
  %iov_len186 = getelementptr [16 x %struct.iovec32], [16 x %struct.iovec32]* %112, i64 0, i64 %idxprom171, i32 1
  %117 = load i32, i32* %iov_len186, align 1
  %conv187 = sext i32 %117 to i64
  br label %if.end188

if.end188:                                        ; preds = %if.else177, %if.then169
  %len.0 = phi i64 [ %114, %if.then169 ], [ %conv187, %if.else177 ]
  %addr.0 = phi i8* [ %113, %if.then169 ], [ %116, %if.else177 ]
  %call189 = tail call i32 @copyin(i8* %addr.0, i8* %temp.0782, i64 %len.0) #7
  %cmp190 = icmp eq i32 %call189, 0
  br i1 %cmp190, label %if.end195, label %if.then192

if.then192:                                       ; preds = %if.end188
  %mfi_dev193 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %118 = load %struct.device*, %struct.device** %mfi_dev193, align 8
  %call194 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0)) #7
  br label %mfi_config_unlock.exit

if.end195:                                        ; preds = %if.end188
  %arrayidx196 = getelementptr i8, i8* %temp.0782, i64 %len.0
  %inc = add nuw i32 %i.0780, 1
  %119 = load i32, i32* %39, align 1
  %cmp164 = icmp ult i32 %inc, %119
  br i1 %cmp164, label %for.body166, label %if.end200

if.end200:                                        ; preds = %if.end195, %for.cond162.preheader, %mfi_stp_cmd.exit, %if.else151
  %120 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %cmd203 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %120, i64 0, i32 0, i32 0, i32 0
  %121 = load i8, i8* %cmd203, align 1
  %cmp205 = icmp eq i8 %121, 5
  br i1 %cmp205, label %if.then207, label %if.end210

if.then207:                                       ; preds = %if.end200
  %122 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %120, i64 0, i32 0, i32 1
  %123 = load i32, i32* %122, align 1
  switch i32 %123, label %if.end224 [
    i32 50921472, label %sw.bb.i
    i32 67239936, label %sw.bb.i
    i32 67305472, label %sw.bb.i
    i32 67503104, label %sw.bb.i
  ]

sw.bb.i:                                          ; preds = %if.then207, %if.then207, %if.then207, %if.then207
  %mfi_config_lock.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 82
  %call.i741 = tail call i32 @_sx_xlock(%struct.sx* nonnull %mfi_config_lock.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2741) #7
  %.pre787 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %cmd213.phi.trans.insert = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %.pre787, i64 0, i32 0, i32 0, i32 0
  %.pre788 = load i8, i8* %cmd213.phi.trans.insert, align 1
  br label %if.end210

if.end210:                                        ; preds = %sw.bb.i, %if.end200
  %124 = phi i8 [ %121, %if.end200 ], [ %.pre788, %sw.bb.i ]
  %125 = phi %union.mfi_frame* [ %120, %if.end200 ], [ %.pre787, %sw.bb.i ]
  %locked.0 = phi i32 [ 0, %if.end200 ], [ 1, %sw.bb.i ]
  %cmp215 = icmp eq i8 %124, 4
  br i1 %cmp215, label %if.then217, label %if.end224

if.then217:                                       ; preds = %if.end210
  %cm_sense_busaddr = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 6
  %126 = load i64, i64* %cm_sense_busaddr, align 8
  %conv218 = trunc i64 %126 to i32
  %sense_addr_lo = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %125, i64 0, i32 0, i32 1
  store i32 %conv218, i32* %sense_addr_lo, align 1
  %127 = load i64, i64* %cm_sense_busaddr, align 8
  %shr = lshr i64 %127, 32
  %conv221 = trunc i64 %shr to i32
  %128 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_pass_frame**
  %129 = load %struct.mfi_pass_frame*, %struct.mfi_pass_frame** %128, align 8
  %sense_addr_hi = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %129, i64 0, i32 2
  store i32 %conv221, i32* %sense_addr_hi, align 1
  br label %if.end224

if.end224:                                        ; preds = %if.then207, %if.then217, %if.end210
  %locked.0794 = phi i32 [ %locked.0, %if.then217 ], [ %locked.0, %if.end210 ], [ 0, %if.then207 ]
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3284) #7
  %130 = bitcast %struct.mfi_command** %ld_cm.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #8
  store %struct.mfi_command* null, %struct.mfi_command** %ld_cm.i, align 8
  %131 = bitcast %struct.mfi_ld_info** %ld_info.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #8
  store %struct.mfi_ld_info* null, %struct.mfi_ld_info** %ld_info.i, align 8
  %cm_data.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 9
  %132 = bitcast i8** %cm_data.i to %struct.mfi_config_data**
  %133 = load %struct.mfi_config_data*, %struct.mfi_config_data** %132, align 8
  %134 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_dcmd_frame**
  %135 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %134, align 8
  %opcode.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %135, i64 0, i32 1
  %136 = load i32, i32* %opcode.i, align 1
  switch i32 %136, label %mfi_check_for_sscd.exit.thread [
    i32 67239936, label %mfi_check_for_sscd.exit
    i32 50921472, label %if.then11.i
  ]

if.then11.i:                                      ; preds = %if.end224
  %137 = bitcast %struct.mfi_ld_info** %ld_info.i to i8**
  %call.i748 = call i32 @mfi_dcmd_command(%struct.mfi_softc* %sc.0, %struct.mfi_command** nonnull %ld_cm.i, i32 50462720, i8** nonnull %137, i64 384) #7
  %tobool.i749 = icmp eq i32 %call.i748, 0
  br i1 %tobool.i749, label %if.end17.i, label %if.then12.i751

if.then12.i751:                                   ; preds = %if.then11.i
  %mfi_dev.i750 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %138 = load %struct.device*, %struct.device** %mfi_dev.i750, align 8
  %call13.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %138, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.63, i64 0, i64 0), i32 %call.i748) #7
  %139 = load %struct.mfi_ld_info*, %struct.mfi_ld_info** %ld_info.i, align 8
  %tobool14.i = icmp eq %struct.mfi_ld_info* %139, null
  br i1 %tobool14.i, label %mfi_check_for_sscd.exit.thread, label %if.then15.i

if.then15.i:                                      ; preds = %if.then12.i751
  %140 = bitcast %struct.mfi_ld_info* %139 to i8*
  call void @free(i8* %140, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %mfi_check_for_sscd.exit.thread

if.end17.i:                                       ; preds = %if.then11.i
  %141 = load %struct.mfi_command*, %struct.mfi_command** %ld_cm.i, align 8
  %cm_flags.i752 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %141, i64 0, i32 14
  store i32 2, i32* %cm_flags.i752, align 8
  %142 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %134, align 8
  %arrayidx.i = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %142, i64 0, i32 2, i64 0
  %143 = load i8, i8* %arrayidx.i, align 1
  %cm_frame20.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %141, i64 0, i32 3
  %144 = bitcast %union.mfi_frame** %cm_frame20.i to %struct.mfi_dcmd_frame**
  %145 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %144, align 8
  %arrayidx23.i = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %145, i64 0, i32 2, i64 0
  store i8 %143, i8* %arrayidx23.i, align 1
  %146 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %134, align 8
  %arrayidx27.i = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %146, i64 0, i32 2, i64 0
  %147 = load i8, i8* %arrayidx27.i, align 1
  %148 = bitcast %union.mfi_frame** %cm_frame20.i to %struct.mfi_frame_header**
  %149 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %148, align 8
  %target_id.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %149, i64 0, i32 4
  store i8 %147, i8* %target_id.i, align 1
  %call29.i = call i32 @mfi_wait_command(%struct.mfi_softc* %sc.0, %struct.mfi_command* %141) #7
  %cmp30.i = icmp eq i32 %call29.i, 0
  br i1 %cmp30.i, label %if.end35.i753, label %if.then32.i

if.then32.i:                                      ; preds = %if.end17.i
  %mfi_dev33.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %150 = load %struct.device*, %struct.device** %mfi_dev33.i, align 8
  %call34.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %150, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0)) #7
  call void @mfi_release_command(%struct.mfi_command* %141) #7
  %151 = load i8*, i8** %137, align 8
  call void @free(i8* %151, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %mfi_check_for_sscd.exit.thread

if.end35.i753:                                    ; preds = %if.end17.i
  %152 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %148, align 8
  %cmd_status.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %152, i64 0, i32 2
  %153 = load i8, i8* %cmd_status.i, align 1
  %cmp39.i = icmp eq i8 %153, 0
  br i1 %cmp39.i, label %if.else42.i, label %if.then41.i

if.then41.i:                                      ; preds = %if.end35.i753
  %154 = load i8*, i8** %137, align 8
  call void @free(i8* %154, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %141) #7
  br label %mfi_check_for_sscd.exit.thread

if.else42.i:                                      ; preds = %if.end35.i753
  %cm_private.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %141, i64 0, i32 17
  %155 = bitcast i8** %cm_private.i to %struct.mfi_ld_info**
  %156 = load %struct.mfi_ld_info*, %struct.mfi_ld_info** %155, align 8
  store %struct.mfi_ld_info* %156, %struct.mfi_ld_info** %ld_info.i, align 8
  %isSSCD45.i = getelementptr inbounds %struct.mfi_ld_info, %struct.mfi_ld_info* %156, i64 0, i32 0, i32 1, i32 10
  %157 = load i8, i8* %isSSCD45.i, align 1
  %cmp47.i = icmp eq i8 %157, 1
  call void @mfi_release_command(%struct.mfi_command* nonnull %141) #7
  %158 = load i8*, i8** %137, align 8
  call void @free(i8* %158, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #8
  br i1 %cmp47.i, label %if.end237, label %if.then230

mfi_check_for_sscd.exit.thread:                   ; preds = %if.then32.i, %if.then41.i, %if.then12.i751, %if.then15.i, %if.end224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #8
  br label %if.then230

mfi_check_for_sscd.exit:                          ; preds = %if.end224
  %arraydecay.i = getelementptr inbounds %struct.mfi_config_data, %struct.mfi_config_data* %133, i64 0, i32 8, i64 0
  %159 = bitcast %struct.mfi_array* %arraydecay.i to i8*
  %array_size.i = getelementptr inbounds %struct.mfi_config_data, %struct.mfi_config_data* %133, i64 0, i32 2
  %160 = load i16, i16* %array_size.i, align 1
  %conv.i744 = zext i16 %160 to i64
  %array_count.i = getelementptr inbounds %struct.mfi_config_data, %struct.mfi_config_data* %133, i64 0, i32 1
  %161 = load i16, i16* %array_count.i, align 1
  %conv1.i745 = zext i16 %161 to i64
  %mul.i746 = shl nuw nsw i64 %conv.i744, 32
  %sext.i = mul nuw i64 %mul.i746, %conv1.i745
  %idx.ext.i = ashr exact i64 %sext.i, 32
  %add.ptr.i = getelementptr i8, i8* %159, i64 %idx.ext.i
  %params.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %162 = getelementptr inbounds i8, i8* %params.i, i64 15
  %163 = load i8, i8* %162, align 1
  %cmp3.i = icmp eq i8 %163, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #8
  br i1 %cmp3.i, label %if.end237, label %if.then230

if.then230:                                       ; preds = %if.else42.i, %mfi_check_for_sscd.exit.thread, %mfi_check_for_sscd.exit
  %call231 = call fastcc i32 @mfi_check_command_pre(%struct.mfi_softc* %sc.0, %struct.mfi_command* nonnull %21) #9
  %tobool232 = icmp eq i32 %call231, 0
  br i1 %tobool232, label %if.end237, label %if.then233

if.then233:                                       ; preds = %if.then230
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3289) #7
  br label %out

if.end237:                                        ; preds = %if.else42.i, %if.then230, %mfi_check_for_sscd.exit
  %retval.0.shrunk.i796 = phi i1 [ false, %if.then230 ], [ true, %mfi_check_for_sscd.exit ], [ true, %if.else42.i ]
  %call238 = call i32 @mfi_wait_command(%struct.mfi_softc* %sc.0, %struct.mfi_command* nonnull %21) #9
  %cmp239 = icmp eq i32 %call238, 0
  br i1 %cmp239, label %if.end246, label %if.then241

if.then241:                                       ; preds = %if.end237
  %mfi_dev242 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %164 = load %struct.device*, %struct.device** %mfi_dev242, align 8
  %call243 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %164, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0)) #7
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3296) #7
  br label %out

if.end246:                                        ; preds = %if.end237
  br i1 %retval.0.shrunk.i796, label %if.end249, label %if.then248

if.then248:                                       ; preds = %if.end246
  call fastcc void @mfi_check_command_post(%struct.mfi_softc* %sc.0, %struct.mfi_command* nonnull %21) #9
  br label %if.end249

if.end249:                                        ; preds = %if.then248, %if.end246
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3302) #7
  %165 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %cmd254 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %165, i64 0, i32 0
  %166 = load i8, i8* %cmd254, align 1
  %cmp256 = icmp eq i8 %166, 8
  br i1 %cmp256, label %if.end310, label %if.then258

if.then258:                                       ; preds = %if.end249
  %167 = load i32, i32* %cm_flags.i, align 8
  %and260 = and i32 %167, 2
  %tobool261 = icmp eq i32 %and260, 0
  br i1 %tobool261, label %if.end310, label %for.cond270.preheader

for.cond270.preheader:                            ; preds = %if.then258
  %168 = load i32, i32* %39, align 1
  %cmp272775 = icmp eq i32 %168, 0
  br i1 %cmp272775, label %if.end310, label %for.body274.lr.ph

for.body274.lr.ph:                                ; preds = %for.cond270.preheader
  %cmp275 = icmp eq i64 %cmd, 3247721729
  %mfi_sgl278 = getelementptr inbounds i8, i8* %arg, i64 148
  %169 = bitcast i8* %mfi_sgl278 to [16 x %struct.iovec]*
  %170 = bitcast i8* %mfi_sgl278 to [16 x %struct.iovec32]*
  br label %for.body274

for.body274:                                      ; preds = %for.body274.lr.ph, %if.end304
  %temp.1778 = phi i8* [ %data.0, %for.body274.lr.ph ], [ %arrayidx305, %if.end304 ]
  %i.1776 = phi i32 [ 0, %for.body274.lr.ph ], [ %inc307, %if.end304 ]
  %idxprom279 = sext i32 %i.1776 to i64
  br i1 %cmp275, label %if.then277, label %if.else286

if.then277:                                       ; preds = %for.body274
  %iov_base281 = getelementptr [16 x %struct.iovec], [16 x %struct.iovec]* %169, i64 0, i64 %idxprom279, i32 0
  %171 = load i8*, i8** %iov_base281, align 1
  %iov_len285 = getelementptr [16 x %struct.iovec], [16 x %struct.iovec]* %169, i64 0, i64 %idxprom279, i32 1
  %172 = load i64, i64* %iov_len285, align 1
  br label %if.end297

if.else286:                                       ; preds = %for.body274
  %iov_base290 = getelementptr [16 x %struct.iovec32], [16 x %struct.iovec32]* %170, i64 0, i64 %idxprom279, i32 0
  %173 = load i32, i32* %iov_base290, align 1
  %conv291 = zext i32 %173 to i64
  %174 = inttoptr i64 %conv291 to i8*
  %iov_len295 = getelementptr [16 x %struct.iovec32], [16 x %struct.iovec32]* %170, i64 0, i64 %idxprom279, i32 1
  %175 = load i32, i32* %iov_len295, align 1
  %conv296 = sext i32 %175 to i64
  br label %if.end297

if.end297:                                        ; preds = %if.else286, %if.then277
  %len.1 = phi i64 [ %172, %if.then277 ], [ %conv296, %if.else286 ]
  %addr.1 = phi i8* [ %171, %if.then277 ], [ %174, %if.else286 ]
  %call298 = call i32 @copyout(i8* %temp.1778, i8* %addr.1, i64 %len.1) #7
  %cmp299 = icmp eq i32 %call298, 0
  br i1 %cmp299, label %if.end304, label %if.then301

if.then301:                                       ; preds = %if.end297
  %mfi_dev302 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %176 = load %struct.device*, %struct.device** %mfi_dev302, align 8
  %call303 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %176, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0)) #7
  br label %out

if.end304:                                        ; preds = %if.end297
  %arrayidx305 = getelementptr i8, i8* %temp.1778, i64 %len.1
  %inc307 = add nuw i32 %i.1776, 1
  %177 = load i32, i32* %39, align 1
  %cmp272 = icmp ult i32 %inc307, %177
  br i1 %cmp272, label %for.body274, label %if.end310

if.end310:                                        ; preds = %if.end304, %for.cond270.preheader, %if.then258, %if.end249
  %mfi_sense_len = getelementptr inbounds i8, i8* %arg, i64 16
  %178 = bitcast i8* %mfi_sense_len to i32*
  %179 = load i32, i32* %178, align 1
  %tobool311 = icmp eq i32 %179, 0
  br i1 %tobool311, label %if.end332, label %if.then312

if.then312:                                       ; preds = %if.end310
  %mfi_sense_off = getelementptr inbounds i8, i8* %arg, i64 12
  %180 = bitcast i8* %mfi_sense_off to i32*
  %181 = load i32, i32* %180, align 1
  %idxprom316 = zext i32 %181 to i64
  %arrayidx317 = getelementptr i8, i8* %mfi_frame, i64 %idxprom316
  %sense_ptr.sroa.0.0.arrayidx317.sroa_cast = bitcast i8* %arrayidx317 to i8**
  %sense_ptr.sroa.0.0.copyload = load i8*, i8** %sense_ptr.sroa.0.0.arrayidx317.sroa_cast, align 1
  %cmp318 = icmp eq i64 %cmd, 3247721729
  %182 = ptrtoint i8* %sense_ptr.sroa.0.0.copyload to i64
  %sense_ptr.sroa.0.4.insert.mask = and i64 %182, 4294967295
  %183 = inttoptr i64 %sense_ptr.sroa.0.4.insert.mask to i8*
  %sense_ptr.sroa.0.0 = select i1 %cmp318, i8* %sense_ptr.sroa.0.0.copyload, i8* %183
  %cm_sense = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %21, i64 0, i32 5
  %184 = bitcast %struct.mfi_sense** %cm_sense to i8**
  %185 = load i8*, i8** %184, align 8
  %conv324 = zext i32 %179 to i64
  %call325 = call i32 @copyout(i8* %185, i8* %sense_ptr.sroa.0.0, i64 %conv324) #7
  %cmp326 = icmp eq i32 %call325, 0
  br i1 %cmp326, label %if.end332, label %if.then328

if.then328:                                       ; preds = %if.then312
  %mfi_dev329 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 0
  %186 = load %struct.device*, %struct.device** %mfi_dev329, align 8
  %call330 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %186, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0)) #7
  br label %out

if.end332:                                        ; preds = %if.then312, %if.end310
  %187 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %187, i64 0, i32 2
  %188 = load i8, i8* %cmd_status, align 1
  %189 = getelementptr inbounds i8, i8* %arg, i64 22
  store i8 %188, i8* %189, align 1
  br label %out

out:                                              ; preds = %if.end332, %if.then328, %if.then301, %if.then241, %if.then233
  %error.3 = phi i32 [ %call238, %if.then241 ], [ %call298, %if.then301 ], [ %call325, %if.then328 ], [ 0, %if.end332 ], [ %call231, %if.then233 ]
  %tobool.i755 = icmp eq i32 %locked.0794, 0
  br i1 %tobool.i755, label %mfi_config_unlock.exit, label %if.then.i757

if.then.i757:                                     ; preds = %out
  %mfi_config_lock.i756 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 82
  call void @_sx_xunlock(%struct.sx* nonnull %mfi_config_lock.i756, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2753) #7
  br label %mfi_config_unlock.exit

mfi_config_unlock.exit:                           ; preds = %if.then53.i, %if.then99.i, %if.then29.i, %if.then.i739, %if.then192, %out, %if.then.i757
  %error.3766 = phi i32 [ %error.3, %out ], [ %error.3, %if.then.i757 ], [ %call189, %if.then192 ], [ 0, %if.then.i739 ], [ 0, %if.then29.i ], [ 0, %if.then99.i ], [ 0, %if.then53.i ]
  %tobool337 = icmp eq i8* %data.0, null
  br i1 %tobool337, label %if.end339, label %if.then338

if.then338:                                       ; preds = %mfi_config_unlock.exit
  call void @free(i8* nonnull %data.0, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %if.end339

if.end339:                                        ; preds = %mfi_config_unlock.exit, %if.then338
  %190 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %33, align 8
  %cmd342 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %190, i64 0, i32 0
  %191 = load i8, i8* %cmd342, align 1
  %cmp344 = icmp eq i8 %191, 8
  br i1 %cmp344, label %for.body350.preheader, label %cleanup404.thread

for.body350.preheader:                            ; preds = %if.end339
  %arrayidx352 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 6, i64 0
  %192 = load i8*, i8** %arrayidx352, align 8
  %tobool353 = icmp eq i8* %192, null
  br i1 %tobool353, label %for.inc393, label %if.then354

if.then354:                                       ; preds = %for.body350.preheader
  %arrayidx356 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 9, i64 0
  %193 = load i64, i64* %arrayidx356, align 8
  %cmp357 = icmp eq i64 %193, 0
  br i1 %cmp357, label %if.then370, label %if.then359

if.then359:                                       ; preds = %if.then354
  %arrayidx361 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 0
  %194 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx361, align 8
  %arrayidx363 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 8, i64 0
  %195 = load %struct.bus_dmamap*, %struct.bus_dmamap** %arrayidx363, align 8
  %cmp.i759 = icmp eq %struct.bus_dmamap* %195, null
  br i1 %cmp.i759, label %if.then370, label %if.end364

if.end364:                                        ; preds = %if.then359
  %impl.i = bitcast %struct.bus_dma_tag* %194 to %struct.bus_dma_impl**
  %196 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_unload.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %196, i64 0, i32 12
  %197 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i, align 8
  call void %197(%struct.bus_dma_tag* %194, %struct.bus_dmamap* nonnull %195) #7
  %.pre789 = load i8*, i8** %arrayidx352, align 8
  %cmp368 = icmp eq i8* %.pre789, null
  br i1 %cmp368, label %if.end364.if.end380_crit_edge, label %if.then370

if.end364.if.end380_crit_edge:                    ; preds = %if.end364
  %.pre792 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 0
  br label %if.end380

if.then370:                                       ; preds = %if.then354, %if.then359, %if.end364
  %198 = phi i8* [ %.pre789, %if.end364 ], [ %192, %if.then359 ], [ %192, %if.then354 ]
  %arrayidx373 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 0
  %199 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx373, align 8
  %arrayidx379 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 8, i64 0
  %200 = load %struct.bus_dmamap*, %struct.bus_dmamap** %arrayidx379, align 8
  %impl.i762 = bitcast %struct.bus_dma_tag* %199 to %struct.bus_dma_impl**
  %201 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i762, align 8
  %mem_free.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %201, i64 0, i32 6
  %202 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i, align 8
  call void %202(%struct.bus_dma_tag* %199, i8* nonnull %198, %struct.bus_dmamap* %200) #7
  br label %if.end380

if.end380:                                        ; preds = %if.end364.if.end380_crit_edge, %if.then370
  %arrayidx383.pre-phi = phi %struct.bus_dma_tag** [ %.pre792, %if.end364.if.end380_crit_edge ], [ %arrayidx373, %if.then370 ]
  %203 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx383.pre-phi, align 8
  %cmp384 = icmp eq %struct.bus_dma_tag* %203, null
  br i1 %cmp384, label %for.inc393, label %if.then386

if.then386:                                       ; preds = %if.end380
  %call390 = call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %203) #7
  br label %for.inc393

for.inc393:                                       ; preds = %if.end380, %for.body350.preheader, %if.then386
  %arrayidx352.1 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 6, i64 1
  %204 = load i8*, i8** %arrayidx352.1, align 8
  %tobool353.1 = icmp eq i8* %204, null
  br i1 %tobool353.1, label %cleanup404.thread, label %if.then354.1

cleanup404.thread:                                ; preds = %for.inc393, %if.end380.1, %if.then386.1, %if.end339
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3382) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %21) #9
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3384) #7
  br label %cleanup480

cleanup404:                                       ; preds = %if.end41
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock43, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3181) #7
  br label %cleanup480

sw.bb407:                                         ; preds = %if.end6
  %mtx_lock409 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock409, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3391) #7
  %aen_seq_num = getelementptr inbounds i8, i8* %arg, i64 4
  %205 = bitcast i8* %aen_seq_num to i32*
  %206 = load i32, i32* %205, align 1
  %aen_class_locale = getelementptr inbounds i8, i8* %arg, i64 8
  %207 = bitcast i8* %aen_class_locale to i32*
  %208 = load i32, i32* %207, align 1
  %call410 = tail call fastcc i32 @mfi_aen_register(%struct.mfi_softc* nonnull %3, i32 %206, i32 %208) #9
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock409, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3394) #7
  br label %cleanup480

sw.bb413:                                         ; preds = %if.end6
  %209 = bitcast %struct.mfi_linux_ioc_packet* %l_ioc to i8*
  call void @llvm.lifetime.start.p0i8(i64 276, i8* nonnull %209) #8
  %call416 = tail call %struct.devclass* @devclass_find(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #7
  %cmp417 = icmp eq %struct.devclass* %call416, null
  br i1 %cmp417, label %cleanup432, label %if.end420

if.end420:                                        ; preds = %sw.bb413
  %call421 = call i32 @copyin(i8* %arg, i8* nonnull %209, i64 276) #7
  %tobool422 = icmp eq i32 %call421, 0
  br i1 %tobool422, label %if.end424, label %cleanup432

if.end424:                                        ; preds = %if.end420
  %lioc_adapter_no = getelementptr inbounds %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 0
  %210 = load i16, i16* %lioc_adapter_no, align 2
  %conv425 = zext i16 %210 to i32
  %call426 = call i8* @devclass_get_softc(%struct.devclass* nonnull %call416, i32 %conv425) #7
  %cmp427 = icmp eq i8* %call426, null
  br i1 %cmp427, label %cleanup432, label %if.end430

if.end430:                                        ; preds = %if.end424
  %mfi_cdev = getelementptr inbounds i8, i8* %call426, i64 952
  %211 = bitcast i8* %mfi_cdev to %struct.cdev**
  %212 = load %struct.cdev*, %struct.cdev** %211, align 8
  %call431 = call fastcc i32 @mfi_linux_ioctl_int(%struct.cdev* %212, i64 3239333122, i8* %arg) #9
  br label %cleanup432

cleanup432:                                       ; preds = %if.end424, %if.end420, %sw.bb413, %if.end430
  %retval.2 = phi i32 [ %call431, %if.end430 ], [ 2, %sw.bb413 ], [ %call421, %if.end420 ], [ 2, %if.end424 ]
  call void @llvm.lifetime.end.p0i8(i64 276, i8* nonnull %209) #8
  br label %cleanup480

sw.bb435:                                         ; preds = %if.end6
  %213 = bitcast %struct.mfi_linux_ioc_aen* %l_aen to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %213) #8
  %call438 = tail call %struct.devclass* @devclass_find(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #7
  %cmp439 = icmp eq %struct.devclass* %call438, null
  br i1 %cmp439, label %cleanup455, label %if.end442

if.end442:                                        ; preds = %sw.bb435
  %call443 = call i32 @copyin(i8* %arg, i8* nonnull %213, i64 12) #7
  %tobool444 = icmp eq i32 %call443, 0
  br i1 %tobool444, label %if.end446, label %cleanup455

if.end446:                                        ; preds = %if.end442
  %laen_adapter_no = getelementptr inbounds %struct.mfi_linux_ioc_aen, %struct.mfi_linux_ioc_aen* %l_aen, i64 0, i32 0
  %214 = load i16, i16* %laen_adapter_no, align 2
  %conv447 = zext i16 %214 to i32
  %call448 = call i8* @devclass_get_softc(%struct.devclass* nonnull %call438, i32 %conv447) #7
  %cmp449 = icmp eq i8* %call448, null
  br i1 %cmp449, label %cleanup455, label %if.end452

if.end452:                                        ; preds = %if.end446
  %mfi_cdev453 = getelementptr inbounds i8, i8* %call448, i64 952
  %215 = bitcast i8* %mfi_cdev453 to %struct.cdev**
  %216 = load %struct.cdev*, %struct.cdev** %215, align 8
  %call454 = call fastcc i32 @mfi_linux_ioctl_int(%struct.cdev* %216, i64 1074547972, i8* %arg) #9
  br label %cleanup455

cleanup455:                                       ; preds = %if.end446, %if.end442, %sw.bb435, %if.end452
  %retval.3 = phi i32 [ %call454, %if.end452 ], [ 2, %sw.bb435 ], [ %call443, %if.end442 ], [ 2, %if.end446 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %213) #8
  br label %cleanup480

sw.bb458:                                         ; preds = %if.end6
  %217 = tail call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #12, !srcloc !5
  %td_proc = getelementptr inbounds %struct.thread, %struct.thread* %217, i64 0, i32 1
  %218 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %p_sysent = getelementptr inbounds %struct.proc, %struct.proc* %218, i64 0, i32 69
  %219 = load %struct.sysentvec*, %struct.sysentvec** %p_sysent, align 8
  %sv_flags = getelementptr inbounds %struct.sysentvec, %struct.sysentvec* %219, i64 0, i32 23
  %220 = load i32, i32* %sv_flags, align 8
  %and460 = and i32 %220, 256
  %tobool461 = icmp eq i32 %and460, 0
  br i1 %tobool461, label %cleanup480, label %if.then472

sw.bb468:                                         ; preds = %if.end6
  %call469 = tail call i32 @mfi_user_command(%struct.mfi_softc* nonnull %3, %struct.mfi_ioc_passthru* %0) #9
  br label %cleanup480

if.then472:                                       ; preds = %sw.bb458
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1, i8* align 1 %arg, i64 56, i1 false)
  %buf_size = getelementptr inbounds i8, i8* %arg, i64 56
  %221 = bitcast i8* %buf_size to i32*
  %222 = load i32, i32* %221, align 1
  %buf_size465 = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %iop_swab, i64 0, i32 1
  store i32 %222, i32* %buf_size465, align 1
  %buf = getelementptr inbounds i8, i8* %arg, i64 60
  %223 = bitcast i8* %buf to i32*
  %224 = load i32, i32* %223, align 1
  %conv466 = zext i32 %224 to i64
  %225 = inttoptr i64 %conv466 to i8*
  %buf467 = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %iop_swab, i64 0, i32 2
  store i8* %225, i8** %buf467, align 1
  %call469767 = call i32 @mfi_user_command(%struct.mfi_softc* nonnull %3, %struct.mfi_ioc_passthru* nonnull %iop_swab) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arg, i8* nonnull align 1 %1, i64 56, i1 false)
  br label %cleanup480

sw.default476:                                    ; preds = %if.end6
  %mfi_dev477 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %226 = load %struct.device*, %struct.device** %mfi_dev477, align 8
  %call478 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %226, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i64 0, i64 0), i64 %cmd) #7
  br label %cleanup480

cleanup480:                                       ; preds = %sw.bb407, %sw.default476, %sw.bb7, %if.then472, %sw.bb, %if.end25, %sw.bb458, %cleanup404.thread, %sw.bb468, %cleanup404, %if.then18, %if.end3, %if.end, %entry, %cleanup455, %cleanup432
  %retval.4 = phi i32 [ %retval.3, %cleanup455 ], [ %retval.2, %cleanup432 ], [ 16, %cleanup404 ], [ 16, %entry ], [ 16, %if.end ], [ 16, %if.end3 ], [ 0, %if.then18 ], [ 25, %sw.default476 ], [ %call469767, %if.then472 ], [ %call469, %sw.bb468 ], [ %call410, %sw.bb407 ], [ 0, %if.end25 ], [ 0, %sw.bb7 ], [ -3, %sw.bb ], [ 25, %sw.bb458 ], [ %error.3766, %cleanup404.thread ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %1) #8
  ret i32 %retval.4

if.then354.1:                                     ; preds = %for.inc393
  %arrayidx356.1 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 9, i64 1
  %227 = load i64, i64* %arrayidx356.1, align 8
  %cmp357.1 = icmp eq i64 %227, 0
  br i1 %cmp357.1, label %if.then370.1, label %if.then359.1

if.then359.1:                                     ; preds = %if.then354.1
  %arrayidx361.1 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 1
  %228 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx361.1, align 8
  %arrayidx363.1 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 8, i64 1
  %229 = load %struct.bus_dmamap*, %struct.bus_dmamap** %arrayidx363.1, align 8
  %cmp.i759.1 = icmp eq %struct.bus_dmamap* %229, null
  br i1 %cmp.i759.1, label %if.then370.1, label %if.end364.1

if.end364.1:                                      ; preds = %if.then359.1
  %impl.i.1 = bitcast %struct.bus_dma_tag* %228 to %struct.bus_dma_impl**
  %230 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.1, align 8
  %map_unload.i.1 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %230, i64 0, i32 12
  %231 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i.1, align 8
  call void %231(%struct.bus_dma_tag* %228, %struct.bus_dmamap* nonnull %229) #7
  %.pre790 = load i8*, i8** %arrayidx352.1, align 8
  %cmp368.1 = icmp eq i8* %.pre790, null
  br i1 %cmp368.1, label %if.end364.1.if.end380.1_crit_edge, label %if.then370.1

if.end364.1.if.end380.1_crit_edge:                ; preds = %if.end364.1
  %.pre791 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 1
  br label %if.end380.1

if.then370.1:                                     ; preds = %if.then354.1, %if.then359.1, %if.end364.1
  %232 = phi i8* [ %.pre790, %if.end364.1 ], [ %204, %if.then359.1 ], [ %204, %if.then354.1 ]
  %arrayidx373.1 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 7, i64 1
  %233 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx373.1, align 8
  %arrayidx379.1 = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc.0, i64 0, i32 8, i64 1
  %234 = load %struct.bus_dmamap*, %struct.bus_dmamap** %arrayidx379.1, align 8
  %impl.i762.1 = bitcast %struct.bus_dma_tag* %233 to %struct.bus_dma_impl**
  %235 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i762.1, align 8
  %mem_free.i.1 = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %235, i64 0, i32 6
  %236 = load void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, i8*, %struct.bus_dmamap*)** %mem_free.i.1, align 8
  call void %236(%struct.bus_dma_tag* %233, i8* nonnull %232, %struct.bus_dmamap* %234) #7
  br label %if.end380.1

if.end380.1:                                      ; preds = %if.end364.1.if.end380.1_crit_edge, %if.then370.1
  %arrayidx383.1.pre-phi = phi %struct.bus_dma_tag** [ %.pre791, %if.end364.1.if.end380.1_crit_edge ], [ %arrayidx373.1, %if.then370.1 ]
  %237 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %arrayidx383.1.pre-phi, align 8
  %cmp384.1 = icmp eq %struct.bus_dma_tag* %237, null
  br i1 %cmp384.1, label %cleanup404.thread, label %if.then386.1

if.then386.1:                                     ; preds = %if.end380.1
  %call390.1 = call i32 @bus_dma_tag_destroy(%struct.bus_dma_tag* nonnull %237) #7
  br label %cleanup404.thread
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_poll(%struct.cdev* nocapture readonly %dev, i32 %poll_events, %struct.thread* %td) #0 {
entry:
  %si_drv1 = getelementptr inbounds %struct.cdev, %struct.cdev* %dev, i64 0, i32 17
  %0 = bitcast i8** %si_drv1 to %struct.mfi_softc**
  %1 = load %struct.mfi_softc*, %struct.mfi_softc** %0, align 8
  %and = and i32 %poll_events, 65
  %tobool = icmp eq i32 %and, 0
  br i1 %tobool, label %if.end17, label %if.then

if.then:                                          ; preds = %entry
  %mfi_aen_triggered = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 43
  %2 = load i32, i32* %mfi_aen_triggered, align 8
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.end10, label %if.then1

if.then1:                                         ; preds = %if.then
  store i32 0, i32* %mfi_aen_triggered, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then, %if.then1
  %revents.0 = phi i32 [ %and, %if.then1 ], [ 0, %if.then ]
  %mfi_aen_cm = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 38
  %3 = load %struct.mfi_command*, %struct.mfi_command** %mfi_aen_cm, align 8
  %cmp6 = icmp eq %struct.mfi_command* %3, null
  %or8 = or i32 %revents.0, 8
  %spec.select = select i1 %cmp6, i32 %or8, i32 %revents.0
  %cmp11 = icmp eq i32 %spec.select, 0
  br i1 %cmp11, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end10
  %mfi_poll_waiting = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 44
  store i32 1, i32* %mfi_poll_waiting, align 4
  %mfi_select = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %1, i64 0, i32 46
  tail call void @selrecord(%struct.thread* %td, %struct.selinfo* nonnull %mfi_select) #7
  br label %if.end17

if.end17:                                         ; preds = %if.end10, %entry, %if.then15
  %revents.134 = phi i32 [ %spec.select, %if.end10 ], [ 0, %if.then15 ], [ 0, %entry ]
  ret i32 %revents.134
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1) #1

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.devclass* @devclass_find(i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i8* @devclass_get_softc(%struct.devclass*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @copyin(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @mfi_check_command_pre(%struct.mfi_softc* %sc, %struct.mfi_command* nocapture readonly %cm) unnamed_addr #0 {
entry:
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2769) #7
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %0 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_dcmd_frame**
  %1 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %0, align 8
  %opcode = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %1, i64 0, i32 1
  %2 = load i32, i32* %opcode, align 1
  switch i32 %2, label %sw.epilog [
    i32 50921472, label %sw.bb
    i32 67305472, label %sw.bb9
    i32 33751296, label %sw.bb39
  ]

sw.bb:                                            ; preds = %entry
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  %ld.0104 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first, align 8
  %cond105 = icmp eq %struct.mfi_disk* %ld.0104, null
  br i1 %cond105, label %sw.epilog, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.bb
  %arrayidx = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %1, i64 0, i32 2, i64 0
  %3 = load i8, i8* %arrayidx, align 1
  %conv = zext i8 %3 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %ld.0106 = phi %struct.mfi_disk* [ %ld.0104, %for.body.lr.ph ], [ %ld.0, %for.inc ]
  %ld_id = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0106, i64 0, i32 2
  %4 = load i32, i32* %ld_id, align 8
  %cmp = icmp eq i32 %4, %conv
  br i1 %cmp, label %if.else, label %for.inc

for.inc:                                          ; preds = %for.body
  %tqe_next = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0106, i64 0, i32 0, i32 0
  %ld.0 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next, align 8
  %cond = icmp eq %struct.mfi_disk* %ld.0, null
  br i1 %cond, label %sw.epilog, label %for.body

if.else:                                          ; preds = %for.body
  %call = tail call i32 @mfi_disk_disable(%struct.mfi_disk* nonnull %ld.0106) #7
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %tqh_first11 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  %ld.1112 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first11, align 8
  %tobool13113 = icmp eq %struct.mfi_disk* %ld.1112, null
  br i1 %tobool13113, label %sw.epilog, label %for.body14

for.body14:                                       ; preds = %sw.bb9, %for.inc19
  %ld.1114 = phi %struct.mfi_disk* [ %ld.1, %for.inc19 ], [ %ld.1112, %sw.bb9 ]
  %call15 = tail call i32 @mfi_disk_disable(%struct.mfi_disk* nonnull %ld.1114) #7
  %tobool16 = icmp eq i32 %call15, 0
  br i1 %tobool16, label %for.inc19, label %for.cond27.preheader

for.cond27.preheader:                             ; preds = %for.body14
  %ld2.0107 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first11, align 8
  %tobool28108 = icmp eq %struct.mfi_disk* %ld2.0107, null
  %cmp30109 = icmp eq %struct.mfi_disk* %ld2.0107, %ld.1114
  %or.cond110 = or i1 %tobool28108, %cmp30109
  br i1 %or.cond110, label %sw.epilog, label %if.end33

for.inc19:                                        ; preds = %for.body14
  %tqe_next21 = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.1114, i64 0, i32 0, i32 0
  %ld.1 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next21, align 8
  %tobool13 = icmp eq %struct.mfi_disk* %ld.1, null
  br i1 %tobool13, label %sw.epilog, label %for.body14

if.end33:                                         ; preds = %for.cond27.preheader, %if.end33
  %ld2.0111 = phi %struct.mfi_disk* [ %ld2.0, %if.end33 ], [ %ld2.0107, %for.cond27.preheader ]
  tail call void @mfi_disk_enable(%struct.mfi_disk* nonnull %ld2.0111) #7
  %tqe_next36 = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld2.0111, i64 0, i32 0, i32 0
  %ld2.0 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next36, align 8
  %tobool28 = icmp eq %struct.mfi_disk* %ld2.0, null
  %cmp30 = icmp eq %struct.mfi_disk* %ld2.0, %ld.1114
  %or.cond = or i1 %tobool28, %cmp30
  br i1 %or.cond, label %sw.epilog, label %if.end33

sw.bb39:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %1, i64 0, i32 2, i64 0
  %5 = bitcast i8* %arraydecay to i16*
  %6 = load i16, i16* %5, align 2
  %arrayidx44 = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %1, i64 0, i32 2, i64 4
  %7 = bitcast i8* %arrayidx44 to i16*
  %8 = load i16, i16* %7, align 2
  %cmp46 = icmp eq i16 %8, 0
  br i1 %cmp46, label %if.then48, label %sw.epilog

if.then48:                                        ; preds = %sw.bb39
  %tqh_first49 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 72, i32 0
  %syspd.0115 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqh_first49, align 8
  %tobool51116 = icmp eq %struct.mfi_system_pd* %syspd.0115, null
  br i1 %tobool51116, label %sw.epilog, label %for.body52.lr.ph

for.body52.lr.ph:                                 ; preds = %if.then48
  %conv53 = zext i16 %6 to i32
  br label %for.body52

for.body52:                                       ; preds = %for.body52.lr.ph, %for.inc58
  %syspd.0117 = phi %struct.mfi_system_pd* [ %syspd.0115, %for.body52.lr.ph ], [ %syspd.0, %for.inc58 ]
  %pd_id = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0117, i64 0, i32 2
  %9 = load i32, i32* %pd_id, align 8
  %cmp54 = icmp eq i32 %9, %conv53
  br i1 %cmp54, label %if.then64, label %for.inc58

for.inc58:                                        ; preds = %for.body52
  %tqe_next59 = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0117, i64 0, i32 0, i32 0
  %syspd.0 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqe_next59, align 8
  %tobool51 = icmp eq %struct.mfi_system_pd* %syspd.0, null
  br i1 %tobool51, label %sw.epilog, label %for.body52

if.then64:                                        ; preds = %for.body52
  %call65 = tail call i32 @mfi_syspd_disable(%struct.mfi_system_pd* nonnull %syspd.0117) #7
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.inc58, %for.inc19, %if.end33, %for.inc, %if.then48, %sw.bb9, %for.cond27.preheader, %sw.bb, %entry, %if.then64, %sw.bb39, %if.else
  %error.2 = phi i32 [ 0, %entry ], [ %call65, %if.then64 ], [ 0, %sw.bb39 ], [ %call, %if.else ], [ 2, %sw.bb ], [ %call15, %for.cond27.preheader ], [ 0, %sw.bb9 ], [ 0, %if.then48 ], [ 2, %for.inc ], [ %call15, %if.end33 ], [ 0, %for.inc19 ], [ 0, %for.inc58 ]
  ret i32 %error.2
}

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc void @mfi_check_command_post(%struct.mfi_softc* %sc, %struct.mfi_command* nocapture readonly %cm) unnamed_addr #0 {
entry:
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %0 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %1 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 1
  %2 = load i32, i32* %1, align 1
  %3 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 0
  switch i32 %2, label %sw.epilog [
    i32 50921472, label %sw.bb
    i32 67305472, label %sw.bb19
    i32 67239936, label %sw.bb54
    i32 67503104, label %sw.bb55
    i32 33751296, label %sw.bb56
  ]

sw.bb:                                            ; preds = %entry
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  %ld.0130 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first, align 8
  %tobool131 = icmp eq %struct.mfi_disk* %ld.0130, null
  br i1 %tobool131, label %if.then9, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %sw.bb
  %arrayidx = getelementptr %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 2
  %4 = bitcast i32* %arrayidx to i8*
  %5 = load i8, i8* %4, align 1
  %conv = zext i8 %5 to i32
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %ld.0132 = phi %struct.mfi_disk* [ %ld.0130, %for.body.lr.ph ], [ %ld.0, %for.inc ]
  %ld_id = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0132, i64 0, i32 2
  %6 = load i32, i32* %ld_id, align 8
  %cmp = icmp eq i32 %6, %conv
  br i1 %cmp, label %do.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %tqe_next = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0132, i64 0, i32 0, i32 0
  %ld.0 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next, align 8
  %tobool = icmp eq %struct.mfi_disk* %ld.0, null
  br i1 %tobool, label %if.then9, label %for.body

if.then9:                                         ; preds = %for.inc, %sw.bb
  tail call void (i8*, ...) @kassert_panic(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0)) #7
  %.phi.trans.insert = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %.pre = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %.phi.trans.insert, align 8
  br label %do.end

do.end:                                           ; preds = %for.body, %if.then9
  %7 = phi %struct.mfi_frame_header* [ %.pre, %if.then9 ], [ %3, %for.body ]
  %ld.0128 = phi %struct.mfi_disk* [ null, %if.then9 ], [ %ld.0132, %for.body ]
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %7, i64 0, i32 2
  %8 = load i8, i8* %cmd_status, align 1
  %cmp13 = icmp eq i8 %8, 0
  br i1 %cmp13, label %if.then15, label %if.else

if.then15:                                        ; preds = %do.end
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2833) #7
  tail call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2834) #7
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %9 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %ld_dev = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.0128, i64 0, i32 1
  %10 = load %struct.device*, %struct.device** %ld_dev, align 8
  %call = tail call i32 @device_delete_child(%struct.device* %9, %struct.device* %10) #7
  tail call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2836) #7
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2837) #7
  br label %sw.epilog

if.else:                                          ; preds = %do.end
  tail call void @mfi_disk_enable(%struct.mfi_disk* %ld.0128) #7
  br label %sw.epilog

sw.bb19:                                          ; preds = %entry
  %cmd_status22 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load i8, i8* %cmd_status22, align 1
  %cmp24 = icmp eq i8 %11, 0
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %sw.bb19
  %mtx_lock28 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock28, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2843) #7
  tail call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2844) #7
  %tqh_first30 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  %12 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first30, align 8
  %tobool32133 = icmp eq %struct.mfi_disk* %12, null
  br i1 %tobool32133, label %for.end40, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %if.then26
  %mfi_dev36 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %land.rhs
  %ld.1134 = phi %struct.mfi_disk* [ %12, %land.rhs.lr.ph ], [ %13, %land.rhs ]
  %tqe_next34 = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.1134, i64 0, i32 0, i32 0
  %13 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next34, align 8
  %14 = load %struct.device*, %struct.device** %mfi_dev36, align 8
  %ld_dev37 = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.1134, i64 0, i32 1
  %15 = load %struct.device*, %struct.device** %ld_dev37, align 8
  %call38 = tail call i32 @device_delete_child(%struct.device* %14, %struct.device* %15) #7
  %tobool32 = icmp eq %struct.mfi_disk* %13, null
  br i1 %tobool32, label %for.end40, label %land.rhs

for.end40:                                        ; preds = %land.rhs, %if.then26
  tail call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2848) #7
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock28, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2849) #7
  br label %sw.epilog

if.else43:                                        ; preds = %sw.bb19
  %tqh_first45 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  %ld.2135 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first45, align 8
  %tobool47136 = icmp eq %struct.mfi_disk* %ld.2135, null
  br i1 %tobool47136, label %sw.epilog, label %for.body48

for.body48:                                       ; preds = %if.else43, %for.body48
  %ld.2137 = phi %struct.mfi_disk* [ %ld.2, %for.body48 ], [ %ld.2135, %if.else43 ]
  tail call void @mfi_disk_enable(%struct.mfi_disk* nonnull %ld.2137) #7
  %tqe_next51 = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.2137, i64 0, i32 0, i32 0
  %ld.2 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next51, align 8
  %tobool47 = icmp eq %struct.mfi_disk* %ld.2, null
  br i1 %tobool47, label %sw.epilog, label %for.body48

sw.bb54:                                          ; preds = %entry
  tail call fastcc void @mfi_ldprobe(%struct.mfi_softc* %sc) #9
  br label %sw.epilog

sw.bb55:                                          ; preds = %entry
  tail call fastcc void @mfi_ldprobe(%struct.mfi_softc* %sc) #9
  br label %sw.epilog

sw.bb56:                                          ; preds = %entry
  %mbox59 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 2
  %16 = bitcast i32* %mbox59 to i16*
  %17 = load i16, i16* %16, align 2
  %arrayidx61125 = getelementptr i32, i32* %mbox59, i64 1
  %arrayidx61 = bitcast i32* %arrayidx61125 to i16*
  %18 = load i16, i16* %arrayidx61, align 2
  %cmp63 = icmp eq i16 %18, 0
  br i1 %cmp63, label %if.then65, label %sw.epilog

if.then65:                                        ; preds = %sw.bb56
  %tqh_first66 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 72, i32 0
  %syspd.0138 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqh_first66, align 8
  %tobool68139 = icmp eq %struct.mfi_system_pd* %syspd.0138, null
  br i1 %tobool68139, label %sw.epilog, label %for.body69.lr.ph

for.body69.lr.ph:                                 ; preds = %if.then65
  %conv70 = zext i16 %17 to i32
  br label %for.body69

for.body69:                                       ; preds = %for.body69.lr.ph, %for.inc75
  %syspd.0140 = phi %struct.mfi_system_pd* [ %syspd.0138, %for.body69.lr.ph ], [ %syspd.0, %for.inc75 ]
  %pd_id = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0140, i64 0, i32 2
  %19 = load i32, i32* %pd_id, align 8
  %cmp71 = icmp eq i32 %19, %conv70
  br i1 %cmp71, label %land.lhs.true, label %for.inc75

for.inc75:                                        ; preds = %for.body69
  %tqe_next76 = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0140, i64 0, i32 0, i32 0
  %syspd.0 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqe_next76, align 8
  %tobool68 = icmp eq %struct.mfi_system_pd* %syspd.0, null
  br i1 %tobool68, label %sw.epilog, label %for.body69

land.lhs.true:                                    ; preds = %for.body69
  %cmd_status83 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %0, i64 0, i32 0, i32 0, i32 2
  %20 = load i8, i8* %cmd_status83, align 1
  %cmp85 = icmp eq i8 %20, 0
  br i1 %cmp85, label %sw.epilog, label %if.then87

if.then87:                                        ; preds = %land.lhs.true
  tail call void @mfi_syspd_enable(%struct.mfi_system_pd* nonnull %syspd.0140) #7
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.inc75, %for.body48, %if.then65, %if.else43, %land.lhs.true, %if.then87, %sw.bb56, %for.end40, %if.then15, %if.else, %entry, %sw.bb55, %sw.bb54
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @copyout(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc i32 @mfi_linux_ioctl_int(%struct.cdev* nocapture readonly %dev, i64 %cmd, i8* %arg) unnamed_addr #0 {
entry:
  %l_ioc = alloca %struct.mfi_linux_ioc_packet, align 1
  %l_aen = alloca %struct.mfi_linux_ioc_aen, align 1
  %0 = bitcast %struct.mfi_linux_ioc_packet* %l_ioc to i8*
  call void @llvm.lifetime.start.p0i8(i64 276, i8* nonnull %0) #8
  %1 = bitcast %struct.mfi_linux_ioc_aen* %l_aen to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1) #8
  %si_drv1 = getelementptr inbounds %struct.cdev, %struct.cdev* %dev, i64 0, i32 17
  %2 = bitcast i8** %si_drv1 to %struct.mfi_softc**
  %3 = load %struct.mfi_softc*, %struct.mfi_softc** %2, align 8
  switch i64 %cmd, label %sw.default [
    i64 3239333122, label %sw.bb
    i64 1074547972, label %sw.bb203
  ]

sw.bb:                                            ; preds = %entry
  %call = call i32 @copyin(i8* %arg, i8* nonnull %0, i64 276) #7
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.end, label %cleanup

if.end:                                           ; preds = %sw.bb
  %lioc_sge_count = getelementptr inbounds %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 3
  %4 = load i32, i32* %lioc_sge_count, align 1
  %cmp1 = icmp ugt i32 %4, 16
  br i1 %cmp1, label %cleanup, label %if.end3

if.end3:                                          ; preds = %if.end
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 81, i32 1
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3493) #7
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 11, i32 0
  %5 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %5, null
  br i1 %cmp.i, label %if.then6, label %if.then.i

if.then.i:                                        ; preds = %if.end3
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 14
  %6 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %6, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %5, i32 %6, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 0, i32 0
  %7 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %7, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %7, i64 0, i32 0, i32 1
  %8 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %8, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %5) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 0, i32 1
  %9 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %10 = load %struct.mfi_command*, %struct.mfi_command** %9, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %10, %5
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %5) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %7, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %9, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %11 = bitcast %struct.mfi_command* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %14 = load i64*, i64** %13, align 8
  store i64 %12, i64* %14, align 8
  %15 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %15, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 15, i64 0, i32 0
  %16 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %16, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3498) #7
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 3
  %17 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %context12 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %17, i64 0, i32 0, i32 0, i32 8
  %18 = load i32, i32* %context12, align 1
  %19 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %17, i64 0, i32 0, i32 0, i32 0
  %arraydecay = getelementptr inbounds %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 6, i32 0, i32 0
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %19, i8* nonnull align 1 %arraydecay, i64 80, i1 false)
  %20 = load i32, i32* %lioc_sge_count, align 1
  %mul = shl i32 %20, 4
  %lioc_sgl_off = getelementptr inbounds %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 2
  %21 = load i32, i32* %lioc_sgl_off, align 1
  %add = add i32 %mul, %21
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 12
  store i32 %add, i32* %cm_total_frame_size, align 8
  %22 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %23 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %22, align 8
  %scsi_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %23, i64 0, i32 3
  store i8 0, i8* %scsi_status, align 1
  %24 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %22, align 8
  %pad0 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %24, i64 0, i32 9
  store i32 0, i32* %pad0, align 1
  %25 = load i32, i32* %lioc_sge_count, align 1
  %tobool = icmp eq i32 %25, 0
  br i1 %tobool, label %if.end9.if.end25_crit_edge, label %if.then22

if.then6:                                         ; preds = %if.end3
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3495) #7
  br label %cleanup

if.end9.if.end25_crit_edge:                       ; preds = %do.end21.i
  %.pre = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %22, align 8
  br label %if.end25

if.then22:                                        ; preds = %do.end21.i
  %26 = bitcast %union.mfi_frame** %cm_frame to [64 x i8]**
  %27 = load [64 x i8]*, [64 x i8]** %26, align 8
  %28 = load i32, i32* %lioc_sgl_off, align 1
  %idxprom = zext i32 %28 to i64
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %27, i64 0, i64 %idxprom
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 8
  %29 = bitcast %union.mfi_sgl** %cm_sg to i8**
  store i8* %arrayidx, i8** %29, align 8
  %30 = bitcast [64 x i8]* %27 to %struct.mfi_frame_header*
  br label %if.end25

if.end25:                                         ; preds = %if.end9.if.end25_crit_edge, %if.then22
  %31 = phi %struct.mfi_frame_header* [ %.pre, %if.end9.if.end25_crit_edge ], [ %30, %if.then22 ]
  store i32 0, i32* %cm_flags.i, align 8
  %flags = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %31, i64 0, i32 10
  %32 = load i16, i16* %flags, align 1
  %33 = lshr i16 %32, 3
  %34 = and i16 %33, 2
  %35 = zext i16 %34 to i32
  store i32 %35, i32* %cm_flags.i, align 8
  %36 = load i16, i16* %flags, align 1
  %37 = and i16 %36, 8
  %tobool38 = icmp eq i16 %37, 0
  br i1 %tobool38, label %if.end42, label %if.then39

if.then39:                                        ; preds = %if.end25
  %or41 = or i32 %35, 4
  store i32 %or41, i32* %cm_flags.i, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.end25, %if.then39
  %38 = phi i32 [ %35, %if.end25 ], [ %or41, %if.then39 ]
  %data_len = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %31, i64 0, i32 12
  %39 = load i32, i32* %data_len, align 1
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 10
  store i32 %39, i32* %cm_len, align 8
  %tobool46 = icmp eq i32 %39, 0
  %and48 = and i32 %38, 6
  %tobool49 = icmp eq i32 %and48, 0
  %or.cond22 = or i1 %tobool46, %tobool49
  br i1 %or.cond22, label %if.else, label %if.then50

if.then50:                                        ; preds = %if.end42
  %conv52 = sext i32 %39 to i64
  %call53 = call noalias i8* @malloc(i64 %conv52, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 258) #10
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 9
  store i8* %call53, i8** %cm_data, align 8
  %.pre15 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %22, align 8
  br label %if.end55

if.else:                                          ; preds = %if.end42
  %cm_data54 = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 9
  store i8* null, i8** %cm_data54, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then50
  %40 = phi %struct.mfi_frame_header* [ %.pre15, %if.then50 ], [ %31, %if.else ]
  %data.0 = phi i8* [ %call53, %if.then50 ], [ null, %if.else ]
  %context58 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %40, i64 0, i32 8
  store i32 %18, i32* %context58, align 1
  %41 = load i32, i32* %cm_flags.i, align 8
  %and60 = and i32 %41, 4
  %tobool61 = icmp ne i32 %and60, 0
  %42 = load i32, i32* %lioc_sge_count, align 1
  %cmp649 = icmp ne i32 %42, 0
  %or.cond = and i1 %tobool61, %cmp649
  br i1 %or.cond, label %for.body, label %if.end85

for.body:                                         ; preds = %if.end55, %if.end78
  %temp.011 = phi i8* [ %arrayidx84, %if.end78 ], [ %data.0, %if.end55 ]
  %i.010 = phi i32 [ %inc, %if.end78 ], [ 0, %if.end55 ]
  %idxprom66 = sext i32 %i.010 to i64
  %iov_base = getelementptr %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 7, i64 %idxprom66, i32 0
  %43 = load i32, i32* %iov_base, align 1
  %conv68 = zext i32 %43 to i64
  %44 = inttoptr i64 %conv68 to i8*
  %iov_len = getelementptr %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 7, i64 %idxprom66, i32 1
  %45 = load i32, i32* %iov_len, align 1
  %conv72 = sext i32 %45 to i64
  %call73 = call i32 @copyin(i8* %44, i8* %temp.011, i64 %conv72) #7
  %cmp74 = icmp eq i32 %call73, 0
  br i1 %cmp74, label %if.end78, label %out.thread

out.thread:                                       ; preds = %for.body
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %46 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call77 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %46, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0)) #7
  br label %mfi_config_unlock.exit

if.end78:                                         ; preds = %for.body
  %47 = load i32, i32* %iov_len, align 1
  %idxprom83 = sext i32 %47 to i64
  %arrayidx84 = getelementptr i8, i8* %temp.011, i64 %idxprom83
  %inc = add nuw i32 %i.010, 1
  %48 = load i32, i32* %lioc_sge_count, align 1
  %cmp64 = icmp ult i32 %inc, %48
  br i1 %cmp64, label %for.body, label %if.end85

if.end85:                                         ; preds = %if.end78, %if.end55
  %49 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %cmd88 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %49, i64 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %cmd88, align 1
  %cmp90 = icmp eq i8 %50, 5
  br i1 %cmp90, label %if.then92, label %if.end95

if.then92:                                        ; preds = %if.end85
  %51 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %49, i64 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 1
  switch i32 %52, label %if.end109 [
    i32 50921472, label %sw.bb.i
    i32 67239936, label %sw.bb.i
    i32 67305472, label %sw.bb.i
    i32 67503104, label %sw.bb.i
  ]

sw.bb.i:                                          ; preds = %if.then92, %if.then92, %if.then92, %if.then92
  %mfi_config_lock.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 82
  %call.i = call i32 @_sx_xlock(%struct.sx* nonnull %mfi_config_lock.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2741) #7
  %.pre16 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %cmd98.phi.trans.insert = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %.pre16, i64 0, i32 0, i32 0, i32 0
  %.pre17 = load i8, i8* %cmd98.phi.trans.insert, align 1
  br label %if.end95

if.end95:                                         ; preds = %sw.bb.i, %if.end85
  %53 = phi i8 [ %50, %if.end85 ], [ %.pre17, %sw.bb.i ]
  %54 = phi %union.mfi_frame* [ %49, %if.end85 ], [ %.pre16, %sw.bb.i ]
  %locked.0 = phi i32 [ 0, %if.end85 ], [ 1, %sw.bb.i ]
  %cmp100 = icmp eq i8 %53, 4
  br i1 %cmp100, label %if.then102, label %if.end109

if.then102:                                       ; preds = %if.end95
  %cm_sense_busaddr = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 6
  %55 = load i64, i64* %cm_sense_busaddr, align 8
  %conv103 = trunc i64 %55 to i32
  %sense_addr_lo = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %54, i64 0, i32 0, i32 1
  store i32 %conv103, i32* %sense_addr_lo, align 1
  %56 = load i64, i64* %cm_sense_busaddr, align 8
  %shr = lshr i64 %56, 32
  %conv106 = trunc i64 %shr to i32
  %57 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_pass_frame**
  %58 = load %struct.mfi_pass_frame*, %struct.mfi_pass_frame** %57, align 8
  %sense_addr_hi = getelementptr inbounds %struct.mfi_pass_frame, %struct.mfi_pass_frame* %58, i64 0, i32 2
  store i32 %conv106, i32* %sense_addr_hi, align 1
  br label %if.end109

if.end109:                                        ; preds = %if.then92, %if.then102, %if.end95
  %locked.019 = phi i32 [ %locked.0, %if.then102 ], [ %locked.0, %if.end95 ], [ 0, %if.then92 ]
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3558) #7
  %call112 = call fastcc i32 @mfi_check_command_pre(%struct.mfi_softc* %3, %struct.mfi_command* nonnull %5) #9
  %tobool113 = icmp eq i32 %call112, 0
  br i1 %tobool113, label %if.end117, label %if.then114

if.then114:                                       ; preds = %if.end109
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3561) #7
  br label %out

if.end117:                                        ; preds = %if.end109
  %call118 = call i32 @mfi_wait_command(%struct.mfi_softc* %3, %struct.mfi_command* nonnull %5) #9
  %cmp119 = icmp eq i32 %call118, 0
  br i1 %cmp119, label %if.end126, label %if.then121

if.then121:                                       ; preds = %if.end117
  %mfi_dev122 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %59 = load %struct.device*, %struct.device** %mfi_dev122, align 8
  %call123 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %59, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0)) #7
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3568) #7
  br label %out

if.end126:                                        ; preds = %if.end117
  call fastcc void @mfi_check_command_post(%struct.mfi_softc* %3, %struct.mfi_command* nonnull %5) #9
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3573) #7
  %60 = load i32, i32* %cm_flags.i, align 8
  %and130 = and i32 %60, 2
  %tobool131 = icmp ne i32 %and130, 0
  %61 = load i32, i32* %lioc_sge_count, align 1
  %cmp1356 = icmp ne i32 %61, 0
  %or.cond12 = and i1 %tobool131, %cmp1356
  br i1 %or.cond12, label %for.body137, label %if.end164

for.body137:                                      ; preds = %if.end126, %if.end154
  %temp.18 = phi i8* [ %arrayidx160, %if.end154 ], [ %data.0, %if.end126 ]
  %i.17 = phi i32 [ %inc162, %if.end154 ], [ 0, %if.end126 ]
  %idxprom139 = sext i32 %i.17 to i64
  %iov_base141 = getelementptr %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 7, i64 %idxprom139, i32 0
  %62 = load i32, i32* %iov_base141, align 1
  %conv142 = zext i32 %62 to i64
  %63 = inttoptr i64 %conv142 to i8*
  %iov_len146 = getelementptr %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 7, i64 %idxprom139, i32 1
  %64 = load i32, i32* %iov_len146, align 1
  %conv147 = sext i32 %64 to i64
  %call148 = call i32 @copyout(i8* %temp.18, i8* %63, i64 %conv147) #7
  %cmp149 = icmp eq i32 %call148, 0
  br i1 %cmp149, label %if.end154, label %if.then151

if.then151:                                       ; preds = %for.body137
  %mfi_dev152 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %65 = load %struct.device*, %struct.device** %mfi_dev152, align 8
  %call153 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %65, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0)) #7
  br label %out

if.end154:                                        ; preds = %for.body137
  %66 = load i32, i32* %iov_len146, align 1
  %idxprom159 = sext i32 %66 to i64
  %arrayidx160 = getelementptr i8, i8* %temp.18, i64 %idxprom159
  %inc162 = add nuw i32 %i.17, 1
  %67 = load i32, i32* %lioc_sge_count, align 1
  %cmp135 = icmp ult i32 %inc162, %67
  br i1 %cmp135, label %for.body137, label %if.end164

if.end164:                                        ; preds = %if.end154, %if.end126
  %lioc_sense_len = getelementptr inbounds %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 5
  %68 = load i32, i32* %lioc_sense_len, align 1
  %tobool165 = icmp eq i32 %68, 0
  br i1 %tobool165, label %if.end181, label %if.then166

if.then166:                                       ; preds = %if.end164
  %lioc_frame168 = getelementptr inbounds i8, i8* %arg, i64 20
  %lioc_sense_off = getelementptr inbounds %struct.mfi_linux_ioc_packet, %struct.mfi_linux_ioc_packet* %l_ioc, i64 0, i32 4
  %69 = load i32, i32* %lioc_sense_off, align 1
  %idxprom170 = zext i32 %69 to i64
  %arrayidx171 = getelementptr i8, i8* %lioc_frame168, i64 %idxprom170
  %70 = bitcast i8* %arrayidx171 to i64*
  %sense_ptr.sroa.0.0.copyload1 = load i64, i64* %70, align 1
  %sense_ptr.sroa.0.4.insert.mask = and i64 %sense_ptr.sroa.0.0.copyload1, 4294967295
  %71 = inttoptr i64 %sense_ptr.sroa.0.4.insert.mask to i8*
  %cm_sense = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %5, i64 0, i32 5
  %72 = bitcast %struct.mfi_sense** %cm_sense to i8**
  %73 = load i8*, i8** %72, align 8
  %conv173 = zext i32 %68 to i64
  %call174 = call i32 @copyout(i8* %73, i8* %71, i64 %conv173) #7
  %cmp175 = icmp eq i32 %call174, 0
  br i1 %cmp175, label %if.end181, label %if.then177

if.then177:                                       ; preds = %if.then166
  %mfi_dev178 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %74 = load %struct.device*, %struct.device** %mfi_dev178, align 8
  %call179 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %74, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0)) #7
  br label %out

if.end181:                                        ; preds = %if.then166, %if.end164
  %75 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %22, align 8
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %75, i64 0, i32 2
  %76 = getelementptr inbounds i8, i8* %arg, i64 22
  %call186 = call i32 @copyout(i8* nonnull %cmd_status, i8* nonnull %76, i64 1) #7
  %cmp187 = icmp eq i32 %call186, 0
  br i1 %cmp187, label %out, label %if.then189

if.then189:                                       ; preds = %if.end181
  %mfi_dev190 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %77 = load %struct.device*, %struct.device** %mfi_dev190, align 8
  %call191 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %77, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0)) #7
  br label %out

out:                                              ; preds = %if.end181, %if.then189, %if.then177, %if.then151, %if.then121, %if.then114
  %error.0 = phi i32 [ %call112, %if.then114 ], [ %call118, %if.then121 ], [ %call148, %if.then151 ], [ %call174, %if.then177 ], [ %call186, %if.then189 ], [ 0, %if.end181 ]
  %tobool.i = icmp eq i32 %locked.019, 0
  br i1 %tobool.i, label %mfi_config_unlock.exit, label %if.then.i3

if.then.i3:                                       ; preds = %out
  %mfi_config_lock.i2 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 82
  call void @_sx_xunlock(%struct.sx* nonnull %mfi_config_lock.i2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2753) #7
  br label %mfi_config_unlock.exit

mfi_config_unlock.exit:                           ; preds = %out.thread, %out, %if.then.i3
  %error.05 = phi i32 [ %call73, %out.thread ], [ %error.0, %out ], [ %error.0, %if.then.i3 ]
  %tobool193 = icmp eq i8* %data.0, null
  br i1 %tobool193, label %if.then197, label %if.then194

if.then194:                                       ; preds = %mfi_config_unlock.exit
  call void @free(i8* nonnull %data.0, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %if.then197

if.then197:                                       ; preds = %if.then194, %mfi_config_unlock.exit
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3627) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %5) #9
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3629) #7
  br label %cleanup

sw.bb203:                                         ; preds = %entry
  %call204 = call i32 @copyin(i8* %arg, i8* nonnull %1, i64 12) #7
  %cmp205 = icmp eq i32 %call204, 0
  br i1 %cmp205, label %if.end208, label %cleanup

if.end208:                                        ; preds = %sw.bb203
  %78 = call %struct.thread* asm "movq %gs:${1:P},$0", "=r,n,~{dirflag},~{fpsr},~{flags}"(i32 0) #12, !srcloc !5
  %td_proc = getelementptr inbounds %struct.thread, %struct.thread* %78, i64 0, i32 1
  %79 = load %struct.proc*, %struct.proc** %td_proc, align 8
  %p_pid = getelementptr inbounds %struct.proc, %struct.proc* %79, i64 0, i32 13
  %80 = load i32, i32* %p_pid, align 4
  %call210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.74, i64 0, i64 0), i32 %80) #7
  %call213 = call noalias i8* @malloc(i64 24, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 2) #10
  %81 = bitcast i8* %call213 to %struct.mfi_aen*
  %mtx_lock216 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 81, i32 1
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock216, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3640) #7
  %cmp217 = icmp eq i8* %call213, null
  br i1 %cmp217, label %if.end239, label %if.then219

if.then219:                                       ; preds = %if.end208
  %82 = bitcast %struct.proc** %td_proc to i64*
  %83 = load i64, i64* %82, align 8
  %p = getelementptr inbounds i8, i8* %call213, i64 16
  %84 = bitcast i8* %p to i64*
  store i64 %83, i64* %84, align 8
  %tqh_last = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 37, i32 1
  %85 = load %struct.mfi_aen**, %struct.mfi_aen*** %tqh_last, align 8
  %86 = load %struct.mfi_aen*, %struct.mfi_aen** %85, align 8
  %cmp223 = icmp eq %struct.mfi_aen* %86, null
  br i1 %cmp223, label %do.end, label %if.then225

if.then225:                                       ; preds = %if.then219
  %mfi_aen_pids = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 37
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.75* nonnull %mfi_aen_pids) #11
  unreachable

do.end:                                           ; preds = %if.then219
  %tqe_next = bitcast i8* %call213 to %struct.mfi_aen**
  store %struct.mfi_aen* null, %struct.mfi_aen** %tqe_next, align 8
  %87 = bitcast %struct.mfi_aen*** %tqh_last to i64*
  %88 = load i64, i64* %87, align 8
  %tqe_prev = getelementptr inbounds i8, i8* %call213, i64 8
  %89 = bitcast i8* %tqe_prev to i64*
  store i64 %88, i64* %89, align 8
  %90 = bitcast %struct.mfi_aen*** %tqh_last to i8***
  %91 = load i8**, i8*** %90, align 8
  store i8* %call213, i8** %91, align 8
  %92 = bitcast %struct.mfi_aen*** %tqh_last to i8**
  store i8* %call213, i8** %92, align 8
  br label %if.end239

if.end239:                                        ; preds = %if.end208, %do.end
  %laen_seq_num = getelementptr inbounds %struct.mfi_linux_ioc_aen, %struct.mfi_linux_ioc_aen* %l_aen, i64 0, i32 2
  %93 = load i32, i32* %laen_seq_num, align 1
  %laen_class_locale = getelementptr inbounds %struct.mfi_linux_ioc_aen, %struct.mfi_linux_ioc_aen* %l_aen, i64 0, i32 3
  %94 = load i32, i32* %laen_class_locale, align 1
  %call240 = call fastcc i32 @mfi_aen_register(%struct.mfi_softc* %3, i32 %93, i32 %94) #9
  %cmp241 = icmp eq i32 %call240, 0
  br i1 %cmp241, label %if.end295, label %do.body245

do.body245:                                       ; preds = %if.end239
  %tqe_next247 = bitcast i8* %call213 to %struct.mfi_aen**
  %95 = load %struct.mfi_aen*, %struct.mfi_aen** %tqe_next247, align 8
  %cmp248 = icmp eq %struct.mfi_aen* %95, null
  br i1 %cmp248, label %do.body263, label %land.lhs.true250

land.lhs.true250:                                 ; preds = %do.body245
  %tqe_prev254 = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %95, i64 0, i32 0, i32 1
  %96 = load %struct.mfi_aen**, %struct.mfi_aen*** %tqe_prev254, align 8
  %cmp257 = icmp eq %struct.mfi_aen** %96, %tqe_next247
  br i1 %cmp257, label %do.body263, label %if.then259

if.then259:                                       ; preds = %land.lhs.true250
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), i8* nonnull %call213) #11
  unreachable

do.body263:                                       ; preds = %land.lhs.true250, %do.body245
  %tqe_prev265 = getelementptr inbounds i8, i8* %call213, i64 8
  %97 = bitcast i8* %tqe_prev265 to %struct.mfi_aen***
  %98 = load %struct.mfi_aen**, %struct.mfi_aen*** %97, align 8
  %99 = load %struct.mfi_aen*, %struct.mfi_aen** %98, align 8
  %cmp266 = icmp eq %struct.mfi_aen* %99, %81
  br i1 %cmp266, label %do.end271, label %if.then268

if.then268:                                       ; preds = %do.body263
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), i8* nonnull %call213) #11
  unreachable

do.end271:                                        ; preds = %do.body263
  %tqh_last287 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 37, i32 1
  %tqe_prev282 = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %95, i64 0, i32 0, i32 1
  %tqh_last287.sink = select i1 %cmp248, %struct.mfi_aen*** %tqh_last287, %struct.mfi_aen*** %tqe_prev282
  store %struct.mfi_aen** %98, %struct.mfi_aen*** %tqh_last287.sink, align 8
  %100 = bitcast i8* %call213 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast i8* %tqe_prev265 to i64**
  %103 = load i64*, i64** %102, align 8
  store i64 %101, i64* %103, align 8
  call void @free(i8* nonnull %call213, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %if.end295

if.end295:                                        ; preds = %if.end239, %do.end271
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock216, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3654) #7
  br label %cleanup

sw.default:                                       ; preds = %entry
  %mfi_dev298 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %3, i64 0, i32 0
  %104 = load %struct.device*, %struct.device** %mfi_dev298, align 8
  %call299 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %104, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i64 0, i64 0), i64 %cmd) #7
  br label %cleanup

cleanup:                                          ; preds = %sw.bb203, %if.end, %sw.bb, %sw.default, %if.end295, %if.then197, %if.then6
  %retval.0 = phi i32 [ 2, %sw.default ], [ %call240, %if.end295 ], [ 16, %if.then6 ], [ %error.05, %if.then197 ], [ %call, %sw.bb ], [ 22, %if.end ], [ %call204, %sw.bb203 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 276, i8* nonnull %0) #8
  ret i32 %retval.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #1

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal i32 @mfi_user_command(%struct.mfi_softc* %sc, %struct.mfi_ioc_passthru* nocapture %ioc) #0 {
entry:
  %buf_size = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %ioc, i64 0, i32 1
  %0 = load i32, i32* %buf_size, align 1
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.end11, label %if.then

if.then:                                          ; preds = %entry
  %cmp2 = icmp ugt i32 %0, 1048576
  br i1 %cmp2, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %conv = zext i32 %0 to i64
  %call = tail call noalias i8* @malloc(i64 %conv, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 2) #10
  %buf = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %ioc, i64 0, i32 2
  %1 = load i8*, i8** %buf, align 1
  %2 = load i32, i32* %buf_size, align 1
  %conv6 = zext i32 %2 to i64
  %call7 = tail call i32 @copyin(i8* %1, i8* %call, i64 %conv6) #7
  %tobool = icmp eq i32 %call7, 0
  br i1 %tobool, label %if.end11, label %if.then8

if.then8:                                         ; preds = %if.end
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %3 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call9 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75, i64 0, i64 0)) #7
  tail call void @free(i8* %call, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %cleanup

if.end11:                                         ; preds = %if.end, %entry
  %ioc_buf.0 = phi i8* [ %call, %if.end ], [ null, %entry ]
  %opcode = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %ioc, i64 0, i32 0, i32 1
  %4 = load i32, i32* %opcode, align 1
  switch i32 %4, label %mfi_config_lock.exit [
    i32 50921472, label %sw.bb.i
    i32 67239936, label %sw.bb.i
    i32 67305472, label %sw.bb.i
    i32 67503104, label %sw.bb.i
  ]

sw.bb.i:                                          ; preds = %if.end11, %if.end11, %if.end11, %if.end11
  %mfi_config_lock.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 82
  %call.i = tail call i32 @_sx_xlock(%struct.sx* nonnull %mfi_config_lock.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2741) #7
  br label %mfi_config_lock.exit

mfi_config_lock.exit:                             ; preds = %if.end11, %sw.bb.i
  %retval.0.i = phi i32 [ 1, %sw.bb.i ], [ 0, %if.end11 ]
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3045) #7
  %tqh_first.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 0
  %5 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i111 = icmp eq %struct.mfi_command* %5, null
  br i1 %cmp.i111, label %while.body.lr.ph, label %if.then.i

while.body.lr.ph:                                 ; preds = %mfi_config_lock.exit
  %lock_object = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 0
  br label %while.body

if.then.i:                                        ; preds = %while.body, %mfi_config_lock.exit
  %.lcssa = phi %struct.mfi_command* [ %5, %mfi_config_lock.exit ], [ %27, %while.body ]
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 14
  %6 = load i32, i32* %cm_flags.i, align 8
  %and.i = and i32 %6, 512
  %cmp1.i = icmp eq i32 %and.i, 0
  br i1 %cmp1.i, label %if.then2.i, label %do.body4.i

if.then2.i:                                       ; preds = %if.then.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i64 0, i64 0), %struct.mfi_command* nonnull %.lcssa, i32 %6, i32 512) #11
  unreachable

do.body4.i:                                       ; preds = %if.then.i
  %tqe_next.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 0, i32 0
  %7 = load %struct.mfi_command*, %struct.mfi_command** %tqe_next.i, align 8
  %cmp5.i = icmp eq %struct.mfi_command* %7, null
  br i1 %cmp5.i, label %do.body14.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body4.i
  %tqe_prev.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %7, i64 0, i32 0, i32 1
  %8 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev.i, align 8
  %cmp11.i = icmp eq %struct.mfi_command** %8, %tqe_next.i
  br i1 %cmp11.i, label %do.body14.i, label %if.then12.i

if.then12.i:                                      ; preds = %land.lhs.true.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_command* nonnull %.lcssa) #11
  unreachable

do.body14.i:                                      ; preds = %land.lhs.true.i, %do.body4.i
  %tqe_prev16.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 0, i32 1
  %9 = load %struct.mfi_command**, %struct.mfi_command*** %tqe_prev16.i, align 8
  %10 = load %struct.mfi_command*, %struct.mfi_command** %9, align 8
  %cmp17.i = icmp eq %struct.mfi_command* %10, %.lcssa
  br i1 %cmp17.i, label %do.end21.i, label %if.then18.i

if.then18.i:                                      ; preds = %do.body14.i
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_command* nonnull %.lcssa) #11
  unreachable

do.end21.i:                                       ; preds = %do.body14.i
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 11, i32 1
  %tqe_prev31.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %7, i64 0, i32 0, i32 1
  %tqh_last.i.sink = select i1 %cmp5.i, %struct.mfi_command*** %tqh_last.i, %struct.mfi_command*** %tqe_prev31.i
  store %struct.mfi_command** %9, %struct.mfi_command*** %tqh_last.i.sink, align 8
  %11 = bitcast %struct.mfi_command* %.lcssa to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %struct.mfi_command*** %tqe_prev16.i to i64**
  %14 = load i64*, i64** %13, align 8
  store i64 %12, i64* %14, align 8
  %15 = load i32, i32* %cm_flags.i, align 8
  %and43.i = and i32 %15, -513
  store i32 %and43.i, i32* %cm_flags.i, align 8
  %q_length.i = getelementptr %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 15, i64 0, i32 0
  %16 = load i32, i32* %q_length.i, align 8
  %dec.i = add i32 %16, -1
  store i32 %dec.i, i32* %q_length.i, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 3
  %17 = load %union.mfi_frame*, %union.mfi_frame** %cm_frame, align 8
  %context19 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %17, i64 0, i32 0, i32 0, i32 8
  %18 = load i32, i32* %context19, align 1
  %19 = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %17, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %ioc, i64 0, i32 0, i32 0, i32 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %20, i64 56, i1 false)
  %sgl = getelementptr inbounds %union.mfi_frame, %union.mfi_frame* %17, i64 0, i32 0, i32 3, i64 8
  %cm_sg = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 8
  %21 = bitcast %union.mfi_sgl** %cm_sg to i8**
  store i8* %sgl, i8** %21, align 8
  %cm_total_frame_size = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 12
  store i32 40, i32* %cm_total_frame_size, align 8
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 9
  store i8* %ioc_buf.0, i8** %cm_data, align 8
  %22 = load i32, i32* %buf_size, align 1
  %cm_len = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %.lcssa, i64 0, i32 10
  store i32 %22, i32* %cm_len, align 8
  %23 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %24 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %23, align 8
  %context26 = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %24, i64 0, i32 8
  store i32 %18, i32* %context26, align 1
  store i32 6, i32* %cm_flags.i, align 8
  %call27 = tail call fastcc i32 @mfi_check_command_pre(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %.lcssa) #9
  %tobool28 = icmp eq i32 %call27, 0
  br i1 %tobool28, label %if.end30, label %out

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %25 = load i64, i64* @tick_sbt, align 8
  %26 = load i32, i32* @hz, align 4
  %conv17 = sext i32 %26 to i64
  %mul = mul i64 %25, %conv17
  %call18 = tail call i32 @_sleep(i8* bitcast (i32 (%struct.mfi_softc*, %struct.mfi_ioc_passthru*)* @mfi_user_command to i8*), %struct.lock_object* nonnull %lock_object, i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i64 %mul, i64 0, i32 256) #7
  %27 = load %struct.mfi_command*, %struct.mfi_command** %tqh_first.i, align 8
  %cmp.i = icmp eq %struct.mfi_command* %27, null
  br i1 %cmp.i, label %while.body, label %if.then.i

if.end30:                                         ; preds = %do.end21.i
  %call31 = tail call i32 @mfi_wait_command(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %.lcssa) #9
  %tobool32 = icmp eq i32 %call31, 0
  br i1 %tobool32, label %if.end36, label %if.then33

if.then33:                                        ; preds = %if.end30
  %mfi_dev34 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %28 = load %struct.device*, %struct.device** %mfi_dev34, align 8
  %call35 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0), i32 %call31) #7
  br label %out

if.end36:                                         ; preds = %if.end30
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %19, i64 56, i1 false)
  tail call fastcc void @mfi_check_command_post(%struct.mfi_softc* nonnull %sc, %struct.mfi_command* nonnull %.lcssa) #9
  br label %out

out:                                              ; preds = %do.end21.i, %if.end36, %if.then33
  %error.0 = phi i32 [ %call27, %do.end21.i ], [ %call31, %if.then33 ], [ 0, %if.end36 ]
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %.lcssa) #9
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 3079) #7
  %tobool.i = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.i, label %mfi_config_unlock.exit, label %if.then.i110

if.then.i110:                                     ; preds = %out
  %mfi_config_lock.i109 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 82
  tail call void @_sx_xunlock(%struct.sx* nonnull %mfi_config_lock.i109, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2753) #7
  br label %mfi_config_unlock.exit

mfi_config_unlock.exit:                           ; preds = %out, %if.then.i110
  %29 = load i32, i32* %buf_size, align 1
  %cmp41 = icmp eq i32 %29, 0
  br i1 %cmp41, label %if.end48, label %if.then43

if.then43:                                        ; preds = %mfi_config_unlock.exit
  %buf44 = getelementptr inbounds %struct.mfi_ioc_passthru, %struct.mfi_ioc_passthru* %ioc, i64 0, i32 2
  %30 = load i8*, i8** %buf44, align 1
  %conv46 = zext i32 %29 to i64
  %call47 = tail call i32 @copyout(i8* %ioc_buf.0, i8* %30, i64 %conv46) #7
  br label %if.end48

if.end48:                                         ; preds = %mfi_config_unlock.exit, %if.then43
  %error.1 = phi i32 [ %call47, %if.then43 ], [ %error.0, %mfi_config_unlock.exit ]
  %tobool49 = icmp eq i8* %ioc_buf.0, null
  br i1 %tobool49, label %cleanup, label %if.then50

if.then50:                                        ; preds = %if.end48
  tail call void @free(i8* nonnull %ioc_buf.0, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %cleanup

cleanup:                                          ; preds = %if.then50, %if.end48, %if.then, %if.then8
  %retval.0 = phi i32 [ %call7, %if.then8 ], [ 12, %if.then ], [ %error.1, %if.end48 ], [ %error.1, %if.then50 ]
  ret i32 %retval.0
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @_sx_xlock(%struct.sx*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_disk_disable(%struct.mfi_disk*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_disk_enable(%struct.mfi_disk*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_syspd_disable(%struct.mfi_system_pd*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @kassert_panic(i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @device_delete_child(%struct.device*, %struct.device*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc void @mfi_ldprobe(%struct.mfi_softc* %sc) unnamed_addr #0 {
entry:
  %cm.i = alloca %struct.mfi_command*, align 8
  %ld_info.i = alloca %struct.mfi_ld_info*, align 8
  %cm = alloca %struct.mfi_command*, align 8
  %list = alloca %struct.mfi_ld_list*, align 8
  %0 = bitcast %struct.mfi_command** %cm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  store %struct.mfi_command* null, %struct.mfi_command** %cm, align 8
  %1 = bitcast %struct.mfi_ld_list** %list to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8
  store %struct.mfi_ld_list* null, %struct.mfi_ld_list** %list, align 8
  %mfi_config_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 82
  tail call void @_sx_assert(%struct.sx* nonnull %mfi_config_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1455) #7
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1456) #7
  %2 = bitcast %struct.mfi_ld_list** %list to i8**
  %call = call i32 @mfi_dcmd_command(%struct.mfi_softc* %sc, %struct.mfi_command** nonnull %cm, i32 50397184, i8** nonnull %2, i64 1032) #9
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %outthread-pre-split

if.end:                                           ; preds = %entry
  %3 = load %struct.mfi_command*, %struct.mfi_command** %cm, align 8
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 14
  store i32 2, i32* %cm_flags, align 8
  %call1 = call i32 @mfi_wait_command(%struct.mfi_softc* %sc, %struct.mfi_command* %3) #9
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %4 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call3 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66, i64 0, i64 0)) #7
  br label %outthread-pre-split

if.end4:                                          ; preds = %if.end
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %3, i64 0, i32 3
  %5 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %6 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %5, align 8
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %6, i64 0, i32 2
  %7 = load i8, i8* %cmd_status, align 1
  %cmp5 = icmp eq i8 %7, 0
  br i1 %cmp5, label %for.cond.preheader, label %if.then7

for.cond.preheader:                               ; preds = %if.end4
  %8 = load %struct.mfi_ld_list*, %struct.mfi_ld_list** %list, align 8
  %ld_count90 = getelementptr inbounds %struct.mfi_ld_list, %struct.mfi_ld_list* %8, i64 0, i32 0
  %9 = load i32, i32* %ld_count90, align 1
  %cmp1391 = icmp eq i32 %9, 0
  br i1 %cmp1391, label %out, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 71, i32 0
  %tqh_first24 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 73, i32 0
  %10 = bitcast %struct.mfi_command** %cm.i to i8*
  %11 = bitcast %struct.mfi_ld_info** %ld_info.i to i8*
  %12 = bitcast %struct.mfi_ld_info** %ld_info.i to i8**
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 73, i32 1
  %mfi_dev.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %13 = bitcast %struct.mfi_disk_pending*** %tqh_last.i to i8**
  br label %for.body

if.then7:                                         ; preds = %if.end4
  %conv = zext i8 %7 to i32
  %mfi_dev8 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %14 = load %struct.device*, %struct.device** %mfi_dev8, align 8
  %call11 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.67, i64 0, i64 0), i32 %conv) #7
  br label %outthread-pre-split

for.body:                                         ; preds = %for.body.lr.ph, %for.inc52
  %15 = phi %struct.mfi_ld_list* [ %8, %for.body.lr.ph ], [ %48, %for.inc52 ]
  %i.092 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc52 ]
  %ld.084 = load %struct.mfi_disk*, %struct.mfi_disk** %tqh_first, align 8
  %tobool1685 = icmp eq %struct.mfi_disk* %ld.084, null
  br i1 %tobool1685, label %for.end, label %for.body17.lr.ph

for.body17.lr.ph:                                 ; preds = %for.body
  %idxprom = sext i32 %i.092 to i64
  %ld18 = getelementptr %struct.mfi_ld_list, %struct.mfi_ld_list* %15, i64 0, i32 2, i64 %idxprom, i32 0
  %target_id = bitcast %union.mfi_ld_ref* %ld18 to i8*
  %16 = load i8, i8* %target_id, align 1
  %conv19 = zext i8 %16 to i32
  br label %for.body17

for.cond15:                                       ; preds = %for.body17
  %tqe_next = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.086, i64 0, i32 0, i32 0
  %ld.0 = load %struct.mfi_disk*, %struct.mfi_disk** %tqe_next, align 8
  %tobool16 = icmp eq %struct.mfi_disk* %ld.0, null
  br i1 %tobool16, label %for.end, label %for.body17

for.body17:                                       ; preds = %for.body17.lr.ph, %for.cond15
  %ld.086 = phi %struct.mfi_disk* [ %ld.084, %for.body17.lr.ph ], [ %ld.0, %for.cond15 ]
  %ld_id = getelementptr inbounds %struct.mfi_disk, %struct.mfi_disk* %ld.086, i64 0, i32 2
  %17 = load i32, i32* %ld_id, align 8
  %cmp20 = icmp eq i32 %17, %conv19
  br i1 %cmp20, label %for.inc52, label %for.cond15

for.end:                                          ; preds = %for.cond15, %for.body
  %ld_pend.087 = load %struct.mfi_disk_pending*, %struct.mfi_disk_pending** %tqh_first24, align 8
  %tobool2688 = icmp eq %struct.mfi_disk_pending* %ld_pend.087, null
  %idxprom45.phi.trans.insert = sext i32 %i.092 to i64
  %ld47.phi.trans.insert = getelementptr %struct.mfi_ld_list, %struct.mfi_ld_list* %15, i64 0, i32 2, i64 %idxprom45.phi.trans.insert, i32 0
  %target_id49.phi.trans.insert = bitcast %union.mfi_ld_ref* %ld47.phi.trans.insert to i8*
  %.pre = load i8, i8* %target_id49.phi.trans.insert, align 1
  %.pre96 = zext i8 %.pre to i32
  br i1 %tobool2688, label %for.end43, label %for.body27

for.cond25:                                       ; preds = %for.body27
  %tqe_next42 = getelementptr inbounds %struct.mfi_disk_pending, %struct.mfi_disk_pending* %ld_pend.089, i64 0, i32 0, i32 0
  %ld_pend.0 = load %struct.mfi_disk_pending*, %struct.mfi_disk_pending** %tqe_next42, align 8
  %tobool26 = icmp eq %struct.mfi_disk_pending* %ld_pend.0, null
  br i1 %tobool26, label %for.end43, label %for.body27

for.body27:                                       ; preds = %for.end, %for.cond25
  %ld_pend.089 = phi %struct.mfi_disk_pending* [ %ld_pend.0, %for.cond25 ], [ %ld_pend.087, %for.end ]
  %ld_id28 = getelementptr inbounds %struct.mfi_disk_pending, %struct.mfi_disk_pending* %ld_pend.089, i64 0, i32 1
  %18 = load i32, i32* %ld_id28, align 8
  %cmp36 = icmp eq i32 %18, %.pre96
  br i1 %cmp36, label %for.inc52, label %for.cond25

for.end43:                                        ; preds = %for.cond25, %for.end
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  store %struct.mfi_ld_info* null, %struct.mfi_ld_info** %ld_info.i, align 8
  call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1870) #7
  %call.i = call noalias i8* @malloc(i64 24, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 1) #10
  %cond.i = icmp eq i8* %call.i, null
  br i1 %cond.i, label %if.end22.i, label %if.then.i, !prof !4

if.then.i:                                        ; preds = %for.end43
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %call.i, i8 0, i64 24, i1 false) #8
  %ld_id.i = getelementptr inbounds i8, i8* %call.i, i64 16
  %19 = bitcast i8* %ld_id.i to i32*
  store i32 %.pre96, i32* %19, align 8
  %20 = load %struct.mfi_disk_pending**, %struct.mfi_disk_pending*** %tqh_last.i, align 8
  %21 = load %struct.mfi_disk_pending*, %struct.mfi_disk_pending** %20, align 8
  %cmp6.i = icmp eq %struct.mfi_disk_pending* %21, null
  br i1 %cmp6.i, label %do.end.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.then.i
  %mfi_ld_pend_tqh.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 73
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.90* nonnull %mfi_ld_pend_tqh.i) #11
  unreachable

do.end.i:                                         ; preds = %if.then.i
  %22 = ptrtoint %struct.mfi_disk_pending** %20 to i64
  %tqe_next.i = bitcast i8* %call.i to %struct.mfi_disk_pending**
  store %struct.mfi_disk_pending* null, %struct.mfi_disk_pending** %tqe_next.i, align 8
  %tqe_prev.i = getelementptr inbounds i8, i8* %call.i, i64 8
  %23 = bitcast i8* %tqe_prev.i to i64*
  store i64 %22, i64* %23, align 8
  %24 = bitcast %struct.mfi_disk_pending** %20 to i8**
  store i8* %call.i, i8** %24, align 8
  store i8* %call.i, i8** %13, align 8
  br label %if.end22.i

if.end22.i:                                       ; preds = %do.end.i, %for.end43
  %call23.i = call i32 @mfi_dcmd_command(%struct.mfi_softc* %sc, %struct.mfi_command** nonnull %cm.i, i32 50462720, i8** nonnull %12, i64 384) #7
  %tobool24.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.i, label %if.end30.i, label %if.then25.i

if.then25.i:                                      ; preds = %if.end22.i
  %25 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call26.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %25, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.69, i64 0, i64 0), i32 %call23.i) #7
  %26 = load %struct.mfi_ld_info*, %struct.mfi_ld_info** %ld_info.i, align 8
  %tobool27.i = icmp eq %struct.mfi_ld_info* %26, null
  br i1 %tobool27.i, label %mfi_add_ld.exit, label %if.then28.i

if.then28.i:                                      ; preds = %if.then25.i
  %27 = bitcast %struct.mfi_ld_info* %26 to i8*
  call void @free(i8* %27, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %mfi_add_ld.exit

if.end30.i:                                       ; preds = %if.end22.i
  %28 = load %struct.mfi_command*, %struct.mfi_command** %cm.i, align 8
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %28, i64 0, i32 14
  store i32 2, i32* %cm_flags.i, align 8
  %cm_frame.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %28, i64 0, i32 3
  %29 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_dcmd_frame**
  %30 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %29, align 8
  %arrayidx.i = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %30, i64 0, i32 2, i64 0
  store i8 %.pre, i8* %arrayidx.i, align 1
  %call33.i = call i32 @mfi_wait_command(%struct.mfi_softc* %sc, %struct.mfi_command* %28) #7
  %cmp34.i = icmp eq i32 %call33.i, 0
  br i1 %cmp34.i, label %if.end39.i, label %if.then36.i

if.then36.i:                                      ; preds = %if.end30.i
  %31 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call38.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %31, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.70, i64 0, i64 0), i32 %.pre96) #7
  %32 = load i8*, i8** %12, align 8
  call void @free(i8* %32, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %mfi_add_ld.exit

if.end39.i:                                       ; preds = %if.end30.i
  %33 = load %struct.mfi_ld_info*, %struct.mfi_ld_info** %ld_info.i, align 8
  %isSSCD.i = getelementptr inbounds %struct.mfi_ld_info, %struct.mfi_ld_info* %33, i64 0, i32 0, i32 1, i32 10
  %34 = load i8, i8* %isSSCD.i, align 1
  %cmp41.i = icmp eq i8 %34, 1
  br i1 %cmp41.i, label %if.else.i, label %if.then43.i

if.then43.i:                                      ; preds = %if.end39.i
  %cm_sc.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %28, i64 0, i32 2
  %35 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i.i, align 8
  %cm_private.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %28, i64 0, i32 17
  %36 = load i8*, i8** %cm_private.i.i, align 8
  %cm_map_abort.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 42
  %37 = load i32, i32* %cm_map_abort.i.i, align 4
  %tobool.i.i = icmp eq i32 %37, 0
  br i1 %tobool.i.i, label %lor.lhs.false.i.i, label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then43.i
  %38 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_frame_header**
  %39 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %38, align 8
  %cmd_status.i.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %39, i64 0, i32 2
  %40 = load i8, i8* %cmd_status.i.i, align 1
  %cmp.i.i = icmp eq i8 %40, 0
  br i1 %cmp.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i, %if.then43.i
  call void @free(i8* %36, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  %mfi_map_sync_cm.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 40
  %41 = bitcast %struct.mfi_command** %mfi_map_sync_cm.i.i to i8*
  call void @wakeup(i8* nonnull %41) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %28) #7
  br label %mfi_add_ld.exit

if.end.i.i:                                       ; preds = %lor.lhs.false.i.i
  %mfi_map_sync_cm2.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 40
  %42 = bitcast %struct.mfi_command** %mfi_map_sync_cm2.i.i to i8*
  call void @wakeup(i8* nonnull %42) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %28) #7
  %mtx_lock.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 81, i32 1
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock.i.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1927) #7
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1928) #7
  %mfi_dev.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %35, i64 0, i32 0
  %43 = load %struct.device*, %struct.device** %mfi_dev.i.i, align 8
  %call.i.i = call %struct.device* @device_add_child(%struct.device* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i64 0, i64 0), i32 -1) #7
  %cmp3.i.i = icmp eq %struct.device* %call.i.i, null
  br i1 %cmp3.i.i, label %if.then5.i.i, label %if.end10.i.i

if.then5.i.i:                                     ; preds = %if.end.i.i
  %44 = load %struct.device*, %struct.device** %mfi_dev.i.i, align 8
  %call7.i.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %44, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.72, i64 0, i64 0)) #7
  call void @free(i8* %36, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1932) #7
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1933) #7
  br label %mfi_add_ld.exit

if.end10.i.i:                                     ; preds = %if.end.i.i
  call void @device_set_ivars(%struct.device* nonnull %call.i.i, i8* %36) #7
  call void @device_set_desc(%struct.device* nonnull %call.i.i, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0)) #7
  %45 = load %struct.device*, %struct.device** %mfi_dev.i.i, align 8
  %call12.i.i = call i32 @bus_generic_attach(%struct.device* %45) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1940) #7
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1941) #7
  br label %mfi_add_ld.exit

if.else.i:                                        ; preds = %if.end39.i
  call void @mfi_release_command(%struct.mfi_command* %28) #7
  %46 = load %struct.mfi_ld_info*, %struct.mfi_ld_info** %ld_info.i, align 8
  %tobool44.i = icmp eq %struct.mfi_ld_info* %46, null
  br i1 %tobool44.i, label %mfi_add_ld.exit, label %if.then45.i

if.then45.i:                                      ; preds = %if.else.i
  %47 = bitcast %struct.mfi_ld_info* %46 to i8*
  call void @free(i8* %47, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %mfi_add_ld.exit

mfi_add_ld.exit:                                  ; preds = %if.then25.i, %if.then28.i, %if.then36.i, %if.then.i.i, %if.then5.i.i, %if.end10.i.i, %if.else.i, %if.then45.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %.pre95 = load %struct.mfi_ld_list*, %struct.mfi_ld_list** %list, align 8
  br label %for.inc52

for.inc52:                                        ; preds = %for.body17, %for.body27, %mfi_add_ld.exit
  %48 = phi %struct.mfi_ld_list* [ %.pre95, %mfi_add_ld.exit ], [ %15, %for.body27 ], [ %15, %for.body17 ]
  %inc = add nuw i32 %i.092, 1
  %ld_count = getelementptr inbounds %struct.mfi_ld_list, %struct.mfi_ld_list* %48, i64 0, i32 0
  %49 = load i32, i32* %ld_count, align 1
  %cmp13 = icmp ult i32 %inc, %49
  br i1 %cmp13, label %for.body, label %out

outthread-pre-split:                              ; preds = %if.then2, %if.then7, %entry
  %.pr = load %struct.mfi_ld_list*, %struct.mfi_ld_list** %list, align 8
  br label %out

out:                                              ; preds = %for.inc52, %for.cond.preheader, %outthread-pre-split
  %50 = phi %struct.mfi_ld_list* [ %.pr, %outthread-pre-split ], [ %8, %for.cond.preheader ], [ %48, %for.inc52 ]
  %tobool54 = icmp eq %struct.mfi_ld_list* %50, null
  br i1 %tobool54, label %if.end56, label %if.then55

if.then55:                                        ; preds = %out
  %51 = bitcast %struct.mfi_ld_list* %50 to i8*
  call void @free(i8* %51, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %if.end56

if.end56:                                         ; preds = %out, %if.then55
  %52 = load %struct.mfi_command*, %struct.mfi_command** %cm, align 8
  %tobool57 = icmp eq %struct.mfi_command* %52, null
  br i1 %tobool57, label %if.end59, label %if.then58

if.then58:                                        ; preds = %if.end56
  call void @mfi_release_command(%struct.mfi_command* nonnull %52) #9
  br label %if.end59

if.end59:                                         ; preds = %if.end56, %if.then58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_syspd_enable(%struct.mfi_system_pd*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @_sx_assert(%struct.sx*, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @device_set_ivars(%struct.device*, i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @device_set_desc(%struct.device*, i8*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @_sx_xunlock(%struct.sx*, i8*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @printf(i8*, ...) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @selrecord(%struct.thread*, %struct.selinfo*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal fastcc void @mfi_syspdprobe(%struct.mfi_softc* %sc) unnamed_addr #0 {
entry:
  %cm.i = alloca %struct.mfi_command*, align 8
  %pd_info.i = alloca %struct.mfi_pd_info*, align 8
  %cm = alloca %struct.mfi_command*, align 8
  %pdlist = alloca %struct.mfi_pd_list*, align 8
  %0 = bitcast %struct.mfi_command** %cm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8
  store %struct.mfi_command* null, %struct.mfi_command** %cm, align 8
  %1 = bitcast %struct.mfi_pd_list** %pdlist to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8
  store %struct.mfi_pd_list* null, %struct.mfi_pd_list** %pdlist, align 8
  %mfi_config_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 82
  tail call void @_sx_assert(%struct.sx* nonnull %mfi_config_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1373) #7
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1374) #7
  %2 = bitcast %struct.mfi_pd_list** %pdlist to i8**
  %call = call i32 @mfi_dcmd_command(%struct.mfi_softc* %sc, %struct.mfi_command** nonnull %cm, i32 33620224, i8** nonnull %2, i64 5768) #9
  %tobool = icmp eq i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %3 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %call1 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.84, i64 0, i64 0)) #7
  br label %out

if.end:                                           ; preds = %entry
  %4 = load %struct.mfi_command*, %struct.mfi_command** %cm, align 8
  %cm_flags = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %4, i64 0, i32 14
  store i32 18, i32* %cm_flags, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %4, i64 0, i32 3
  %5 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_dcmd_frame**
  %6 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %5, align 8
  %arrayidx = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %6, i64 0, i32 2, i64 0
  store i8 5, i8* %arrayidx, align 1
  %7 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %5, align 8
  %arrayidx5 = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %7, i64 0, i32 2, i64 1
  store i8 0, i8* %arrayidx5, align 1
  %call6 = call i32 @mfi_mapcmd(%struct.mfi_softc* %sc, %struct.mfi_command* %4) #9
  %cmp = icmp eq i32 %call6, 0
  br i1 %cmp, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end
  %mfi_dev8 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %8 = load %struct.device*, %struct.device** %mfi_dev8, align 8
  %call9 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.85, i64 0, i64 0)) #7
  br label %out

if.end10:                                         ; preds = %if.end
  %mfi_buffer_dmat = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 21
  %9 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %4, i64 0, i32 7
  %10 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %cmp.i = icmp eq %struct.bus_dmamap* %10, null
  br i1 %cmp.i, label %bus_dmamap_unload.exit, label %bus_dmamap_sync.exit

bus_dmamap_sync.exit:                             ; preds = %if.end10
  %impl.i = bitcast %struct.bus_dma_tag* %9 to %struct.bus_dma_impl**
  %11 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i, align 8
  %map_sync.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %11, i64 0, i32 13
  %12 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i, align 8
  call void %12(%struct.bus_dma_tag* %9, %struct.bus_dmamap* nonnull %10, i32 2) #7
  %.pr = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap, align 8
  %13 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cmp.i161 = icmp eq %struct.bus_dmamap* %.pr, null
  br i1 %cmp.i161, label %bus_dmamap_unload.exit, label %if.then.i163

if.then.i163:                                     ; preds = %bus_dmamap_sync.exit
  %impl.i162 = bitcast %struct.bus_dma_tag* %13 to %struct.bus_dma_impl**
  %14 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i162, align 8
  %map_unload.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %14, i64 0, i32 12
  %15 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i, align 8
  call void %15(%struct.bus_dma_tag* %13, %struct.bus_dmamap* nonnull %.pr) #7
  br label %bus_dmamap_unload.exit

bus_dmamap_unload.exit:                           ; preds = %if.end10, %bus_dmamap_sync.exit, %if.then.i163
  %16 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %17 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %16, align 8
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %17, i64 0, i32 2
  %18 = load i8, i8* %cmd_status, align 1
  %cmp14 = icmp eq i8 %18, 0
  br i1 %cmp14, label %for.cond.preheader, label %if.then16

for.cond.preheader:                               ; preds = %bus_dmamap_unload.exit
  %19 = load %struct.mfi_pd_list*, %struct.mfi_pd_list** %pdlist, align 8
  %count180 = getelementptr inbounds %struct.mfi_pd_list, %struct.mfi_pd_list* %19, i64 0, i32 1
  %20 = load i32, i32* %count180, align 1
  %cmp22181 = icmp eq i32 %20, 0
  %.pre184 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 72, i32 0
  br i1 %cmp22181, label %for.end75, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tqh_first46 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 74, i32 0
  %21 = bitcast %struct.mfi_command** %cm.i to i8*
  %22 = bitcast %struct.mfi_pd_info** %pd_info.i to i8*
  %23 = bitcast %struct.mfi_pd_info** %pd_info.i to i8**
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 74, i32 1
  %mfi_dev.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %24 = bitcast %struct.mfi_system_pending*** %tqh_last.i to i8**
  br label %for.body

if.then16:                                        ; preds = %bus_dmamap_unload.exit
  %conv = zext i8 %18 to i32
  %mfi_dev17 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  %25 = load %struct.device*, %struct.device** %mfi_dev17, align 8
  %call20 = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %25, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.86, i64 0, i64 0), i32 %conv) #7
  br label %out

for.body:                                         ; preds = %for.body.lr.ph, %for.inc74
  %26 = phi %struct.mfi_pd_list* [ %19, %for.body.lr.ph ], [ %64, %for.inc74 ]
  %i.0182 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc74 ]
  %idxprom = sext i32 %i.0182 to i64
  %device_id = getelementptr %struct.mfi_pd_list, %struct.mfi_pd_list* %26, i64 0, i32 2, i64 %idxprom, i32 0
  %27 = load i16, i16* %device_id, align 1
  %encl_device_id = getelementptr %struct.mfi_pd_list, %struct.mfi_pd_list* %26, i64 0, i32 2, i64 %idxprom, i32 1
  %28 = load i16, i16* %encl_device_id, align 1
  %cmp30 = icmp eq i16 %27, %28
  br i1 %cmp30, label %for.inc74, label %if.end33

if.end33:                                         ; preds = %for.body
  %syspd.0171 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %.pre184, align 8
  %tobool35172 = icmp eq %struct.mfi_system_pd* %syspd.0171, null
  br i1 %tobool35172, label %for.end, label %for.body36.lr.ph

for.body36.lr.ph:                                 ; preds = %if.end33
  %conv41 = zext i16 %27 to i32
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %syspd.0174 = phi %struct.mfi_system_pd* [ %syspd.0171, %for.body36.lr.ph ], [ %syspd.0, %for.body36 ]
  %found.0173 = phi i32 [ 0, %for.body36.lr.ph ], [ %spec.select, %for.body36 ]
  %pd_id = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0174, i64 0, i32 2
  %29 = load i32, i32* %pd_id, align 8
  %cmp42 = icmp eq i32 %29, %conv41
  %spec.select = select i1 %cmp42, i32 1, i32 %found.0173
  %tqe_next = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.0174, i64 0, i32 0, i32 0
  %syspd.0 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqe_next, align 8
  %tobool35 = icmp eq %struct.mfi_system_pd* %syspd.0, null
  br i1 %tobool35, label %for.end, label %for.body36

for.end:                                          ; preds = %for.body36, %if.end33
  %found.0.lcssa = phi i32 [ 0, %if.end33 ], [ %spec.select, %for.body36 ]
  %syspd_pend.0175 = load %struct.mfi_system_pending*, %struct.mfi_system_pending** %tqh_first46, align 8
  %tobool48176 = icmp eq %struct.mfi_system_pending* %syspd_pend.0175, null
  br i1 %tobool48176, label %for.end63, label %for.body49.lr.ph

for.body49.lr.ph:                                 ; preds = %for.end
  %conv55 = zext i16 %27 to i32
  br label %for.body49

for.body49:                                       ; preds = %for.body49.lr.ph, %for.body49
  %syspd_pend.0178 = phi %struct.mfi_system_pending* [ %syspd_pend.0175, %for.body49.lr.ph ], [ %syspd_pend.0, %for.body49 ]
  %found.2177 = phi i32 [ %found.0.lcssa, %for.body49.lr.ph ], [ %spec.select160, %for.body49 ]
  %pd_id50 = getelementptr inbounds %struct.mfi_system_pending, %struct.mfi_system_pending* %syspd_pend.0178, i64 0, i32 1
  %30 = load i32, i32* %pd_id50, align 8
  %cmp56 = icmp eq i32 %30, %conv55
  %spec.select160 = select i1 %cmp56, i32 1, i32 %found.2177
  %tqe_next62 = getelementptr inbounds %struct.mfi_system_pending, %struct.mfi_system_pending* %syspd_pend.0178, i64 0, i32 0, i32 0
  %syspd_pend.0 = load %struct.mfi_system_pending*, %struct.mfi_system_pending** %tqe_next62, align 8
  %tobool48 = icmp eq %struct.mfi_system_pending* %syspd_pend.0, null
  br i1 %tobool48, label %for.end63, label %for.body49

for.end63:                                        ; preds = %for.body49, %for.end
  %found.2.lcssa = phi i32 [ %found.0.lcssa, %for.end ], [ %spec.select160, %for.body49 ]
  %cmp64 = icmp eq i32 %found.2.lcssa, 0
  br i1 %cmp64, label %if.then66, label %for.inc74

if.then66:                                        ; preds = %for.end63
  %conv71 = zext i16 %27 to i32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store %struct.mfi_pd_info* null, %struct.mfi_pd_info** %pd_info.i, align 8
  call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1952) #7
  %call.i = call noalias i8* @malloc(i64 24, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 1) #10
  %cond.i = icmp eq i8* %call.i, null
  br i1 %cond.i, label %if.end22.i, label %if.then.i164, !prof !4

if.then.i164:                                     ; preds = %if.then66
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %call.i, i8 0, i64 24, i1 false) #8
  %pd_id.i = getelementptr inbounds i8, i8* %call.i, i64 16
  %31 = bitcast i8* %pd_id.i to i32*
  store i32 %conv71, i32* %31, align 8
  %32 = load %struct.mfi_system_pending**, %struct.mfi_system_pending*** %tqh_last.i, align 8
  %33 = load %struct.mfi_system_pending*, %struct.mfi_system_pending** %32, align 8
  %cmp6.i = icmp eq %struct.mfi_system_pending* %33, null
  br i1 %cmp6.i, label %do.end.i, label %if.then8.i

if.then8.i:                                       ; preds = %if.then.i164
  %mfi_syspd_pend_tqh.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 74
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.92* nonnull %mfi_syspd_pend_tqh.i) #11
  unreachable

do.end.i:                                         ; preds = %if.then.i164
  %34 = ptrtoint %struct.mfi_system_pending** %32 to i64
  %tqe_next.i = bitcast i8* %call.i to %struct.mfi_system_pending**
  store %struct.mfi_system_pending* null, %struct.mfi_system_pending** %tqe_next.i, align 8
  %tqe_prev.i = getelementptr inbounds i8, i8* %call.i, i64 8
  %35 = bitcast i8* %tqe_prev.i to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %struct.mfi_system_pending** %32 to i8**
  store i8* %call.i, i8** %36, align 8
  store i8* %call.i, i8** %24, align 8
  br label %if.end22.i

if.end22.i:                                       ; preds = %do.end.i, %if.then66
  %call23.i = call i32 @mfi_dcmd_command(%struct.mfi_softc* %sc, %struct.mfi_command** nonnull %cm.i, i32 33685504, i8** nonnull %23, i64 512) #7
  %tobool24.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.i, label %if.end30.i, label %if.then25.i

if.then25.i:                                      ; preds = %if.end22.i
  %37 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call26.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %37, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.88, i64 0, i64 0), i32 %call23.i) #7
  %38 = load %struct.mfi_pd_info*, %struct.mfi_pd_info** %pd_info.i, align 8
  %tobool27.i = icmp eq %struct.mfi_pd_info* %38, null
  br i1 %tobool27.i, label %mfi_add_sys_pd.exit, label %if.then28.i

if.then28.i:                                      ; preds = %if.then25.i
  %39 = bitcast %struct.mfi_pd_info* %38 to i8*
  call void @free(i8* %39, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %mfi_add_sys_pd.exit

if.end30.i:                                       ; preds = %if.end22.i
  %40 = load %struct.mfi_command*, %struct.mfi_command** %cm.i, align 8
  %cm_flags.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %40, i64 0, i32 14
  store i32 18, i32* %cm_flags.i, align 8
  %cm_frame.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %40, i64 0, i32 3
  %41 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_dcmd_frame**
  %42 = load %struct.mfi_dcmd_frame*, %struct.mfi_dcmd_frame** %41, align 8
  %conv32.i = trunc i16 %27 to i8
  %arrayidx.i = getelementptr %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %42, i64 0, i32 2, i64 0
  store i8 %conv32.i, i8* %arrayidx.i, align 1
  %scsi_status.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %42, i64 0, i32 0, i32 3
  store i8 0, i8* %scsi_status.i, align 1
  %pad0.i = getelementptr inbounds %struct.mfi_dcmd_frame, %struct.mfi_dcmd_frame* %42, i64 0, i32 0, i32 9
  store i32 0, i32* %pad0.i, align 1
  %call34.i = call i32 @mfi_mapcmd(%struct.mfi_softc* %sc, %struct.mfi_command* %40) #7
  %cmp35.i = icmp eq i32 %call34.i, 0
  br i1 %cmp35.i, label %if.end40.i, label %if.then37.i

if.then37.i:                                      ; preds = %if.end30.i
  %43 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call39.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %43, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.89, i64 0, i64 0), i32 %conv71) #7
  %44 = load i8*, i8** %23, align 8
  call void @free(i8* %44, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @mfi_release_command(%struct.mfi_command* %40) #7
  br label %mfi_add_sys_pd.exit

if.end40.i:                                       ; preds = %if.end30.i
  %45 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cm_dmamap.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %40, i64 0, i32 7
  %46 = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i, align 8
  %cmp.i.i = icmp eq %struct.bus_dmamap* %46, null
  br i1 %cmp.i.i, label %bus_dmamap_unload.exit.i, label %bus_dmamap_sync.exit.i

bus_dmamap_sync.exit.i:                           ; preds = %if.end40.i
  %impl.i.i = bitcast %struct.bus_dma_tag* %45 to %struct.bus_dma_impl**
  %47 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i.i, align 8
  %map_sync.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %47, i64 0, i32 13
  %48 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*, i32)** %map_sync.i.i, align 8
  call void %48(%struct.bus_dma_tag* %45, %struct.bus_dmamap* nonnull %46, i32 2) #7
  %.pr.i = load %struct.bus_dmamap*, %struct.bus_dmamap** %cm_dmamap.i, align 8
  %49 = load %struct.bus_dma_tag*, %struct.bus_dma_tag** %mfi_buffer_dmat, align 8
  %cmp.i1.i = icmp eq %struct.bus_dmamap* %.pr.i, null
  br i1 %cmp.i1.i, label %bus_dmamap_unload.exit.i, label %if.then.i3.i

if.then.i3.i:                                     ; preds = %bus_dmamap_sync.exit.i
  %impl.i2.i = bitcast %struct.bus_dma_tag* %49 to %struct.bus_dma_impl**
  %50 = load %struct.bus_dma_impl*, %struct.bus_dma_impl** %impl.i2.i, align 8
  %map_unload.i.i = getelementptr inbounds %struct.bus_dma_impl, %struct.bus_dma_impl* %50, i64 0, i32 12
  %51 = load void (%struct.bus_dma_tag*, %struct.bus_dmamap*)*, void (%struct.bus_dma_tag*, %struct.bus_dmamap*)** %map_unload.i.i, align 8
  call void %51(%struct.bus_dma_tag* %49, %struct.bus_dmamap* nonnull %.pr.i) #7
  br label %bus_dmamap_unload.exit.i

bus_dmamap_unload.exit.i:                         ; preds = %if.then.i3.i, %bus_dmamap_sync.exit.i, %if.end40.i
  %cm_sc.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %40, i64 0, i32 2
  %52 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc.i.i, align 8
  %53 = bitcast %union.mfi_frame** %cm_frame.i to %struct.mfi_frame_header**
  %54 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %53, align 8
  %cm_private.i.i = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %40, i64 0, i32 17
  %55 = load i8*, i8** %cm_private.i.i, align 8
  %cmd_status.i.i = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %54, i64 0, i32 2
  %56 = load i8, i8* %cmd_status.i.i, align 1
  %cmp.i4.i = icmp eq i8 %56, 0
  br i1 %cmp.i4.i, label %if.end.i.i, label %if.then.i5.i

if.then.i5.i:                                     ; preds = %bus_dmamap_unload.exit.i
  call void @free(i8* %55, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %40) #7
  br label %mfi_add_sys_pd.exit

if.end.i.i:                                       ; preds = %bus_dmamap_unload.exit.i
  %fw_state.i.i = getelementptr inbounds i8, i8* %55, i64 184
  %57 = bitcast i8* %fw_state.i.i to i16*
  %58 = load i16, i16* %57, align 1
  %cmp3.i.i = icmp eq i16 %58, 64
  br i1 %cmp3.i.i, label %if.end7.i.i, label %if.then5.i.i

if.then5.i.i:                                     ; preds = %if.end.i.i
  %mfi_dev.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %52, i64 0, i32 0
  %59 = load %struct.device*, %struct.device** %mfi_dev.i.i, align 8
  %device_id.i.i = bitcast i8* %55 to i16*
  %60 = load i16, i16* %device_id.i.i, align 1
  %conv6.i.i = zext i16 %60 to i32
  %call.i.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %59, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.90, i64 0, i64 0), i32 %conv6.i.i) #7
  call void @free(i8* nonnull %55, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @mfi_release_command(%struct.mfi_command* nonnull %40) #7
  br label %mfi_add_sys_pd.exit

if.end7.i.i:                                      ; preds = %if.end.i.i
  call void @mfi_release_command(%struct.mfi_command* nonnull %40) #7
  %mtx_lock.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %52, i64 0, i32 81, i32 1
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock.i.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2015) #7
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2016) #7
  %mfi_dev8.i.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %52, i64 0, i32 0
  %61 = load %struct.device*, %struct.device** %mfi_dev8.i.i, align 8
  %call9.i.i = call %struct.device* @device_add_child(%struct.device* %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0), i32 -1) #7
  %cmp10.i.i = icmp eq %struct.device* %call9.i.i, null
  br i1 %cmp10.i.i, label %if.then12.i.i, label %if.end17.i.i

if.then12.i.i:                                    ; preds = %if.end7.i.i
  %62 = load %struct.device*, %struct.device** %mfi_dev8.i.i, align 8
  %call14.i.i = call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %62, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0)) #7
  call void @free(i8* nonnull %55, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2020) #7
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2021) #7
  br label %mfi_add_sys_pd.exit

if.end17.i.i:                                     ; preds = %if.end7.i.i
  call void @device_set_ivars(%struct.device* nonnull %call9.i.i, i8* nonnull %55) #7
  call void @device_set_desc(%struct.device* nonnull %call9.i.i, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.93, i64 0, i64 0)) #7
  %63 = load %struct.device*, %struct.device** %mfi_dev8.i.i, align 8
  %call19.i.i = call i32 @bus_generic_attach(%struct.device* %63) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2028) #7
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock.i.i, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 2029) #7
  br label %mfi_add_sys_pd.exit

mfi_add_sys_pd.exit:                              ; preds = %if.then25.i, %if.then28.i, %if.then37.i, %if.then.i5.i, %if.then5.i.i, %if.then12.i.i, %if.end17.i.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  %.pre = load %struct.mfi_pd_list*, %struct.mfi_pd_list** %pdlist, align 8
  br label %for.inc74

for.inc74:                                        ; preds = %for.end63, %mfi_add_sys_pd.exit, %for.body
  %64 = phi %struct.mfi_pd_list* [ %26, %for.end63 ], [ %.pre, %mfi_add_sys_pd.exit ], [ %26, %for.body ]
  %inc = add nuw i32 %i.0182, 1
  %count = getelementptr inbounds %struct.mfi_pd_list, %struct.mfi_pd_list* %64, i64 0, i32 1
  %65 = load i32, i32* %count, align 1
  %cmp22 = icmp ult i32 %inc, %65
  br i1 %cmp22, label %for.body, label %for.end75

for.end75:                                        ; preds = %for.inc74, %for.cond.preheader
  %66 = phi %struct.mfi_pd_list* [ %19, %for.cond.preheader ], [ %64, %for.inc74 ]
  %67 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %.pre184, align 8
  %tobool79169 = icmp eq %struct.mfi_system_pd* %67, null
  br i1 %tobool79169, label %out, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %for.end75
  %mfi_dev107 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %sc, i64 0, i32 0
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc112.land.rhs_crit_edge, %land.rhs.lr.ph
  %68 = phi %struct.mfi_pd_list* [ %66, %land.rhs.lr.ph ], [ %.pre183, %for.inc112.land.rhs_crit_edge ]
  %syspd.1170 = phi %struct.mfi_system_pd* [ %67, %land.rhs.lr.ph ], [ %69, %for.inc112.land.rhs_crit_edge ]
  %tqe_next81 = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.1170, i64 0, i32 0, i32 0
  %69 = load %struct.mfi_system_pd*, %struct.mfi_system_pd** %tqe_next81, align 8
  %count84166 = getelementptr inbounds %struct.mfi_pd_list, %struct.mfi_pd_list* %68, i64 0, i32 1
  %70 = load i32, i32* %count84166, align 1
  %cmp85167 = icmp eq i32 %70, 0
  br i1 %cmp85167, label %if.then103.critedge, label %for.body87.lr.ph

for.body87.lr.ph:                                 ; preds = %land.rhs
  %pd_id88 = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.1170, i64 0, i32 2
  %71 = load i32, i32* %pd_id88, align 8
  br label %for.body87

for.cond83:                                       ; preds = %for.body87
  %cmp85 = icmp ult i32 %inc99, %70
  br i1 %cmp85, label %for.body87, label %if.then103.critedge

for.body87:                                       ; preds = %for.body87.lr.ph, %for.cond83
  %i.1168 = phi i32 [ 0, %for.body87.lr.ph ], [ %inc99, %for.cond83 ]
  %idxprom90 = sext i32 %i.1168 to i64
  %device_id92 = getelementptr %struct.mfi_pd_list, %struct.mfi_pd_list* %68, i64 0, i32 2, i64 %idxprom90, i32 0
  %72 = load i16, i16* %device_id92, align 1
  %conv93 = zext i16 %72 to i32
  %cmp94 = icmp eq i32 %71, %conv93
  %inc99 = add nuw i32 %i.1168, 1
  br i1 %cmp94, label %for.inc112, label %for.cond83

if.then103.critedge:                              ; preds = %for.cond83, %land.rhs
  %call104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0)) #7
  call void @__mtx_unlock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1429) #7
  call void @__mtx_lock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1430) #7
  %73 = load %struct.device*, %struct.device** %mfi_dev107, align 8
  %pd_dev = getelementptr inbounds %struct.mfi_system_pd, %struct.mfi_system_pd* %syspd.1170, i64 0, i32 1
  %74 = load %struct.device*, %struct.device** %pd_dev, align 8
  %call108 = call i32 @device_delete_child(%struct.device* %73, %struct.device* %74) #7
  call void @__mtx_unlock_flags(i64* getelementptr inbounds (%struct.mtx, %struct.mtx* @Giant, i64 0, i32 1), i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1432) #7
  call void @__mtx_lock_flags(i64* nonnull %mtx_lock, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1433) #7
  br label %for.inc112

for.inc112:                                       ; preds = %for.body87, %if.then103.critedge
  %tobool79 = icmp eq %struct.mfi_system_pd* %69, null
  br i1 %tobool79, label %out, label %for.inc112.land.rhs_crit_edge

for.inc112.land.rhs_crit_edge:                    ; preds = %for.inc112
  %.pre183 = load %struct.mfi_pd_list*, %struct.mfi_pd_list** %pdlist, align 8
  br label %land.rhs

out:                                              ; preds = %for.inc112, %for.end75, %if.then16, %if.then7, %if.then
  %75 = load %struct.mfi_pd_list*, %struct.mfi_pd_list** %pdlist, align 8
  %tobool114 = icmp eq %struct.mfi_pd_list* %75, null
  br i1 %tobool114, label %if.end116, label %if.then115

if.then115:                                       ; preds = %out
  %76 = bitcast %struct.mfi_pd_list* %75 to i8*
  call void @free(i8* %76, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br label %if.end116

if.end116:                                        ; preds = %out, %if.then115
  %77 = load %struct.mfi_command*, %struct.mfi_command** %cm, align 8
  %tobool117 = icmp eq %struct.mfi_command* %77, null
  br i1 %tobool117, label %if.end119, label %if.then118

if.then118:                                       ; preds = %if.end116
  call void @mfi_release_command(%struct.mfi_command* nonnull %77) #9
  br label %if.end119

if.end119:                                        ; preds = %if.end116, %if.then118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @config_intrhook_disestablish(%struct.intr_config_hook*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_aen_complete(%struct.mfi_command* %cm) #0 {
entry:
  %cm_sc = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  %0 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %mtx_lock = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 81, i32 1
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1729) #7
  %mfi_aen_cm = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 38
  %1 = load %struct.mfi_command*, %struct.mfi_command** %mfi_aen_cm, align 8
  %cmp = icmp eq %struct.mfi_command* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cm_aen_abort = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 41
  %2 = load i32, i32* %cm_aen_abort, align 8
  %tobool = icmp eq i32 %2, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then3

lor.lhs.false:                                    ; preds = %if.end
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %3 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %4 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %3, align 8
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %4, i64 0, i32 2
  %5 = load i8, i8* %cmd_status, align 1
  %cmp1 = icmp eq i8 %5, -1
  br i1 %cmp1, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end, %lor.lhs.false
  store i32 0, i32* %cm_aen_abort, align 8
  %.pre = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 9
  br label %if.end61

if.else:                                          ; preds = %lor.lhs.false
  %mfi_aen_triggered = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 43
  store i32 1, i32* %mfi_aen_triggered, align 8
  %mfi_poll_waiting = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 44
  %6 = load i32, i32* %mfi_poll_waiting, align 4
  %tobool5 = icmp eq i32 %6, 0
  br i1 %tobool5, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.else
  store i32 0, i32* %mfi_poll_waiting, align 4
  %mfi_select = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 46
  tail call void @selwakeup(%struct.selinfo* nonnull %mfi_select) #7
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  %cm_data = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 9
  %7 = bitcast i8** %cm_data to %struct.mfi_evt_detail**
  %8 = load %struct.mfi_evt_detail*, %struct.mfi_evt_detail** %7, align 8
  tail call void @__mtx_assert(i64* nonnull %mtx_lock, i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1641) #7
  %call.i = tail call noalias i8* @malloc(i64 272, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0), i32 1) #10
  %cond.i = icmp eq i8* %call.i, null
  br i1 %cond.i, label %mfi_queue_evt.exit, label %if.then.i, !prof !4

if.then.i:                                        ; preds = %if.end8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %call.i, i8 0, i64 16, i1 false) #8
  %detail6.i = getelementptr inbounds i8, i8* %call.i, i64 16
  %9 = bitcast %struct.mfi_evt_detail* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %detail6.i, i8* align 1 %9, i64 256, i1 false) #8
  %tqh_last.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 34, i32 1
  %10 = load %struct.mfi_evt_queue_elm**, %struct.mfi_evt_queue_elm*** %tqh_last.i, align 8
  %11 = load %struct.mfi_evt_queue_elm*, %struct.mfi_evt_queue_elm** %10, align 8
  %cmp8.i = icmp eq %struct.mfi_evt_queue_elm* %11, null
  br i1 %cmp8.i, label %do.end.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.then.i
  %mfi_evt_queue.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 34
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.68, i64 0, i64 0), %struct.anon.54* nonnull %mfi_evt_queue.i) #11
  unreachable

do.end.i:                                         ; preds = %if.then.i
  %12 = ptrtoint %struct.mfi_evt_queue_elm** %10 to i64
  %tqe_next.i = bitcast i8* %call.i to %struct.mfi_evt_queue_elm**
  store %struct.mfi_evt_queue_elm* null, %struct.mfi_evt_queue_elm** %tqe_next.i, align 8
  %tqe_prev.i = getelementptr inbounds i8, i8* %call.i, i64 8
  %13 = bitcast i8* %tqe_prev.i to i64*
  store i64 %12, i64* %13, align 8
  %14 = bitcast %struct.mfi_evt_queue_elm** %10 to i8**
  store i8* %call.i, i8** %14, align 8
  %15 = bitcast %struct.mfi_evt_queue_elm*** %tqh_last.i to i8**
  store i8* %call.i, i8** %15, align 8
  %16 = load %struct.taskqueue*, %struct.taskqueue** @taskqueue_swi, align 8
  %mfi_evt_task.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 35
  %call24.i = tail call i32 @taskqueue_enqueue(%struct.taskqueue* %16, %struct.task* nonnull %mfi_evt_task.i) #7
  br label %mfi_queue_evt.exit

mfi_queue_evt.exit:                               ; preds = %if.end8, %do.end.i
  %seq9 = getelementptr inbounds %struct.mfi_evt_detail, %struct.mfi_evt_detail* %8, i64 0, i32 0
  %17 = load i32, i32* %seq9, align 1
  %add = add i32 %17, 1
  %tqh_first = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 37, i32 0
  %18 = load %struct.mfi_aen*, %struct.mfi_aen** %tqh_first, align 8
  %tobool10117 = icmp eq %struct.mfi_aen* %18, null
  br i1 %tobool10117, label %if.end61, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %mfi_queue_evt.exit
  %tqh_last = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %0, i64 0, i32 37, i32 1
  br label %land.rhs

land.rhs:                                         ; preds = %land.rhs.lr.ph, %do.end33
  %mfi_aen_entry.0118 = phi %struct.mfi_aen* [ %18, %land.rhs.lr.ph ], [ %19, %do.end33 ]
  %tqe_next = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %mfi_aen_entry.0118, i64 0, i32 0, i32 0
  %19 = load %struct.mfi_aen*, %struct.mfi_aen** %tqe_next, align 8
  %cmp14 = icmp eq %struct.mfi_aen* %19, null
  br i1 %cmp14, label %do.body25, label %land.lhs.true

land.lhs.true:                                    ; preds = %land.rhs
  %tqe_prev = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %19, i64 0, i32 0, i32 1
  %20 = load %struct.mfi_aen**, %struct.mfi_aen*** %tqe_prev, align 8
  %cmp21 = icmp eq %struct.mfi_aen** %20, %tqe_next
  br i1 %cmp21, label %do.body25, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0), %struct.mfi_aen* nonnull %mfi_aen_entry.0118) #11
  unreachable

do.body25:                                        ; preds = %land.lhs.true, %land.rhs
  %tqe_prev27 = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %mfi_aen_entry.0118, i64 0, i32 0, i32 1
  %21 = load %struct.mfi_aen**, %struct.mfi_aen*** %tqe_prev27, align 8
  %22 = load %struct.mfi_aen*, %struct.mfi_aen** %21, align 8
  %cmp28 = icmp eq %struct.mfi_aen* %22, %mfi_aen_entry.0118
  br i1 %cmp28, label %do.end33, label %if.then30

if.then30:                                        ; preds = %do.body25
  tail call void (i8*, ...) @panic(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.54, i64 0, i64 0), %struct.mfi_aen* nonnull %mfi_aen_entry.0118) #11
  unreachable

do.end33:                                         ; preds = %do.body25
  %tqe_prev44 = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %19, i64 0, i32 0, i32 1
  %tqh_last.sink = select i1 %cmp14, %struct.mfi_aen*** %tqh_last, %struct.mfi_aen*** %tqe_prev44
  store %struct.mfi_aen** %21, %struct.mfi_aen*** %tqh_last.sink, align 8
  %23 = bitcast %struct.mfi_aen* %mfi_aen_entry.0118 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %struct.mfi_aen*** %tqe_prev27 to i64**
  %26 = load i64*, i64** %25, align 8
  store i64 %24, i64* %26, align 8
  %p = getelementptr inbounds %struct.mfi_aen, %struct.mfi_aen* %mfi_aen_entry.0118, i64 0, i32 1
  %27 = load %struct.proc*, %struct.proc** %p, align 8
  %mtx_lock56 = getelementptr inbounds %struct.proc, %struct.proc* %27, i64 0, i32 22, i32 1
  tail call void @__mtx_lock_flags(i64* nonnull %mtx_lock56, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1753) #7
  %28 = load %struct.proc*, %struct.proc** %p, align 8
  tail call void @kern_psignal(%struct.proc* %28, i32 23) #7
  %29 = load %struct.proc*, %struct.proc** %p, align 8
  %mtx_lock60 = getelementptr inbounds %struct.proc, %struct.proc* %29, i64 0, i32 22, i32 1
  tail call void @__mtx_unlock_flags(i64* nonnull %mtx_lock60, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i32 1755) #7
  %30 = bitcast %struct.mfi_aen* %mfi_aen_entry.0118 to i8*
  tail call void @free(i8* %30, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  br i1 %cmp14, label %if.end61, label %land.rhs

if.end61:                                         ; preds = %do.end33, %mfi_queue_evt.exit, %if.then3
  %cm_data62.pre-phi = phi i8** [ %cm_data, %mfi_queue_evt.exit ], [ %.pre, %if.then3 ], [ %cm_data, %do.end33 ]
  %seq.0 = phi i32 [ %add, %mfi_queue_evt.exit ], [ 0, %if.then3 ], [ %add, %do.end33 ]
  %aborted.0 = phi i1 [ false, %mfi_queue_evt.exit ], [ true, %if.then3 ], [ false, %do.end33 ]
  %31 = load i8*, i8** %cm_data62.pre-phi, align 8
  tail call void @free(i8* %31, %struct.malloc_type* getelementptr inbounds ([1 x %struct.malloc_type], [1 x %struct.malloc_type]* @M_MFIBUF, i64 0, i64 0)) #7
  %32 = bitcast %struct.mfi_command** %mfi_aen_cm to i8*
  tail call void @wakeup(i8* nonnull %32) #7
  store %struct.mfi_command* null, %struct.mfi_command** %mfi_aen_cm, align 8
  tail call void @mfi_release_command(%struct.mfi_command* %cm) #9
  br i1 %aborted.0, label %cleanup, label %if.then66

if.then66:                                        ; preds = %if.end61
  %call = tail call i32 @mfi_aen_setup(%struct.mfi_softc* nonnull %0, i32 %seq.0) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end61, %if.then66, %entry
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @selwakeup(%struct.selinfo*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @kern_psignal(%struct.proc*, i32) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @taskqueue_enqueue(%struct.taskqueue*, %struct.task*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local %struct.bio* @bioq_first(%struct.bio_queue_head*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @bioq_remove(%struct.bio_queue_head*, %struct.bio*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone nounwind ssp
define internal void @mfi_bio_complete(%struct.mfi_command* %cm) #0 {
entry:
  %cm_private = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 17
  %0 = bitcast i8** %cm_private to %struct.bio**
  %1 = load %struct.bio*, %struct.bio** %0, align 8
  %cm_frame = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 3
  %2 = bitcast %union.mfi_frame** %cm_frame to %struct.mfi_frame_header**
  %3 = load %struct.mfi_frame_header*, %struct.mfi_frame_header** %2, align 8
  %cm_sc = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 2
  %4 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %cmd_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %3, i64 0, i32 2
  %5 = load i8, i8* %cmd_status, align 1
  %cmp = icmp eq i8 %5, 0
  %scsi_status = getelementptr inbounds %struct.mfi_frame_header, %struct.mfi_frame_header* %3, i64 0, i32 3
  br i1 %cmp, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %6 = load i8, i8* %scsi_status, align 1
  %cmp3 = icmp eq i8 %6, 0
  br i1 %cmp3, label %if.else, label %if.then

if.then:                                          ; preds = %entry, %lor.lhs.false
  %bio_flags = getelementptr inbounds %struct.bio, %struct.bio* %1, i64 0, i32 1
  %7 = load i16, i16* %bio_flags, align 2
  %8 = or i16 %7, 1
  store i16 %8, i16* %bio_flags, align 2
  %bio_error = getelementptr inbounds %struct.bio, %struct.bio* %1, i64 0, i32 12
  store i32 5, i32* %bio_error, align 8
  %mfi_dev = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %4, i64 0, i32 0
  %9 = load %struct.device*, %struct.device** %mfi_dev, align 8
  %10 = load i8, i8* %cmd_status, align 1
  %conv8 = zext i8 %10 to i32
  %11 = load i8, i8* %scsi_status, align 1
  %conv10 = zext i8 %11 to i32
  %call = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i64 0, i64 0), %struct.mfi_command* nonnull %cm, i32 %conv8, i32 %conv10) #7
  %12 = load %struct.mfi_softc*, %struct.mfi_softc** %cm_sc, align 8
  %cm_sense = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 5
  %13 = bitcast %struct.mfi_sense** %cm_sense to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 127
  %and.i.i = zext i8 %16 to i32
  %17 = getelementptr inbounds i8, i8* %14, i64 2
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, 15
  %and3.i.i = zext i8 %19 to i32
  %20 = getelementptr inbounds i8, i8* %14, i64 7
  %21 = load i8, i8* %20, align 1
  %cmp.i.i = icmp ugt i8 %21, 4
  br i1 %cmp.i.i, label %cond.end.i.i, label %mfi_print_sense.exit

cond.end.i.i:                                     ; preds = %if.then
  %22 = getelementptr inbounds i8, i8* %14, i64 12
  %23 = load i8, i8* %22, align 1
  %conv6.i.i = zext i8 %23 to i32
  %cmp9.i.i = icmp eq i8 %21, 5
  br i1 %cmp9.i.i, label %mfi_print_sense.exit, label %cond.true11.i.i

cond.true11.i.i:                                  ; preds = %cond.end.i.i
  %24 = getelementptr inbounds i8, i8* %14, i64 13
  %25 = load i8, i8* %24, align 1
  %conv12.i.i = zext i8 %25 to i32
  br label %mfi_print_sense.exit

mfi_print_sense.exit:                             ; preds = %if.then, %cond.end.i.i, %cond.true11.i.i
  %cond.i6.i = phi i32 [ %conv6.i.i, %cond.true11.i.i ], [ %conv6.i.i, %cond.end.i.i ], [ 0, %if.then ]
  %cond15.i.i = phi i32 [ %conv12.i.i, %cond.true11.i.i ], [ 0, %cond.end.i.i ], [ 0, %if.then ]
  %mfi_dev.i = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %12, i64 0, i32 0
  %26 = load %struct.device*, %struct.device** %mfi_dev.i, align 8
  %call.i = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %26, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.111, i64 0, i64 0), i32 %and.i.i, i32 %and3.i.i, i32 %cond.i6.i, i32 %cond15.i.i) #7
  br label %if.end24

if.else:                                          ; preds = %lor.lhs.false
  %cm_error = getelementptr inbounds %struct.mfi_command, %struct.mfi_command* %cm, i64 0, i32 19
  %27 = load i32, i32* %cm_error, align 4
  %cmp12 = icmp eq i32 %27, 0
  br i1 %cmp12, label %if.end24, label %if.then14

if.then14:                                        ; preds = %if.else
  %bio_flags15 = getelementptr inbounds %struct.bio, %struct.bio* %1, i64 0, i32 1
  %28 = load i16, i16* %bio_flags15, align 2
  %29 = or i16 %28, 1
  store i16 %29, i16* %bio_flags15, align 2
  %30 = load i32, i32* %cm_error, align 4
  %bio_error20 = getelementptr inbounds %struct.bio, %struct.bio* %1, i64 0, i32 12
  store i32 %30, i32* %bio_error20, align 8
  %mfi_dev21 = getelementptr inbounds %struct.mfi_softc, %struct.mfi_softc* %4, i64 0, i32 0
  %31 = load %struct.device*, %struct.device** %mfi_dev21, align 8
  %32 = load i32, i32* %cm_error, align 4
  %call23 = tail call i32 (%struct.device*, i8*, ...) @device_printf(%struct.device* %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i64 0, i64 0), %struct.mfi_command* nonnull %cm, i32 %32) #7
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then14, %mfi_print_sense.exit
  tail call void @mfi_release_command(%struct.mfi_command* nonnull %cm) #9
  tail call void @mfi_disk_complete(%struct.bio* %1) #7
  ret void
}

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_disk_complete(%struct.bio*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @bioq_insert_tail(%struct.bio_queue_head*, %struct.bio*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_send_frame(%struct.mfi_softc*, %struct.mfi_command*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local i32 @mfi_tbolt_reset(%struct.mfi_softc*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_print_cmd(%struct.mfi_command*) local_unnamed_addr #2

; Function Attrs: noimplicitfloat noredzone
declare dso_local void @mfi_validate_sg(%struct.mfi_softc*, %struct.mfi_command*, i8*, i32) local_unnamed_addr #2

attributes #0 = { noimplicitfloat noredzone nounwind ssp "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"=".mcount" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noimplicitfloat noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noimplicitfloat norecurse noredzone nounwind ssp "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"=".mcount" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noimplicitfloat noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noimplicitfloat noredzone allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noimplicitfloat noredzone nounwind ssp "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"=".mcount" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+x87,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin noimplicitfloat noredzone nounwind }
attributes #8 = { nounwind }
attributes #9 = { nobuiltin noimplicitfloat noredzone }
attributes #10 = { nobuiltin noimplicitfloat noredzone nounwind allocsize(0) }
attributes #11 = { nobuiltin noimplicitfloat noredzone noreturn nounwind }
attributes #12 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 7.0.1 (tags/RELEASE_701/final)"}
!2 = !{i32 328428}
!3 = !{i32 327463}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i32 428602}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = distinct !{!8, !7}
